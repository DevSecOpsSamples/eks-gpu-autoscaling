{
  "version": 3,
  "sources": ["dms-canned-metrics.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nexport class DMSMetrics {\n  public static cdcLatencyTargetSum(dimensions: { ReplicationInstanceIdentifier: string }) {\n    return {\n      namespace: 'AWS/DMS',\n      metricName: 'CDCLatencyTarget',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static cdcLatencySourceSum(dimensions: { ReplicationInstanceIdentifier: string }) {\n    return {\n      namespace: 'AWS/DMS',\n      metricName: 'CDCLatencySource',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static availableMemoryAverage(dimensions: { ReplicationInstanceIdentifier: string }) {\n    return {\n      namespace: 'AWS/DMS',\n      metricName: 'AvailableMemory',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static cdcChangesDiskTargetSum(dimensions: { ReplicationInstanceIdentifier: string }) {\n    return {\n      namespace: 'AWS/DMS',\n      metricName: 'CDCChangesDiskTarget',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static cdcChangesMemorySourceSum(dimensions: { ReplicationInstanceIdentifier: string }) {\n    return {\n      namespace: 'AWS/DMS',\n      metricName: 'CDCChangesMemorySource',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static cdcChangesMemoryTargetSum(dimensions: { ReplicationInstanceIdentifier: string }) {\n    return {\n      namespace: 'AWS/DMS',\n      metricName: 'CDCChangesMemoryTarget',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static cdcIncomingChangesSum(dimensions: { ReplicationInstanceIdentifier: string }) {\n    return {\n      namespace: 'AWS/DMS',\n      metricName: 'CDCIncomingChanges',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static cdcThroughputBandwidthSourceSum(dimensions: { ReplicationInstanceIdentifier: string }) {\n    return {\n      namespace: 'AWS/DMS',\n      metricName: 'CDCThroughputBandwidthSource',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static cdcThroughputBandwidthTargetSum(dimensions: { ReplicationInstanceIdentifier: string }) {\n    return {\n      namespace: 'AWS/DMS',\n      metricName: 'CDCThroughputBandwidthTarget',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static cdcThroughputRowsSourceSum(dimensions: { ReplicationInstanceIdentifier: string }) {\n    return {\n      namespace: 'AWS/DMS',\n      metricName: 'CDCThroughputRowsSource',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static cdcThroughputRowsTargetSum(dimensions: { ReplicationInstanceIdentifier: string }) {\n    return {\n      namespace: 'AWS/DMS',\n      metricName: 'CDCThroughputRowsTarget',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static cpuAllocatedSum(dimensions: { ReplicationInstanceIdentifier: string }) {\n    return {\n      namespace: 'AWS/DMS',\n      metricName: 'CPUAllocated',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static cpuUtilizationAverage(dimensions: { ReplicationInstanceIdentifier: string }) {\n    return {\n      namespace: 'AWS/DMS',\n      metricName: 'CPUUtilization',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static freeMemoryAverage(dimensions: { ReplicationInstanceIdentifier: string }) {\n    return {\n      namespace: 'AWS/DMS',\n      metricName: 'FreeMemory',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static fullLoadThroughputBandwidthSourceSum(dimensions: { ReplicationInstanceIdentifier: string }) {\n    return {\n      namespace: 'AWS/DMS',\n      metricName: 'FullLoadThroughputBandwidthSource',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static fullLoadThroughputBandwidthTargetSum(dimensions: { ReplicationInstanceIdentifier: string }) {\n    return {\n      namespace: 'AWS/DMS',\n      metricName: 'FullLoadThroughputBandwidthTarget',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static fullLoadThroughputRowsSourceSum(dimensions: { ReplicationInstanceIdentifier: string }) {\n    return {\n      namespace: 'AWS/DMS',\n      metricName: 'FullLoadThroughputRowsSource',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static fullLoadThroughputRowsTargetSum(dimensions: { ReplicationInstanceIdentifier: string }) {\n    return {\n      namespace: 'AWS/DMS',\n      metricName: 'FullLoadThroughputRowsTarget',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static memoryAllocatedAverage(dimensions: { ReplicationInstanceIdentifier: string }) {\n    return {\n      namespace: 'AWS/DMS',\n      metricName: 'MemoryAllocated',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static memoryUsageAverage(dimensions: { ReplicationInstanceIdentifier: string }) {\n    return {\n      namespace: 'AWS/DMS',\n      metricName: 'MemoryUsage',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static swapUsageAverage(dimensions: { ReplicationInstanceIdentifier: string }) {\n    return {\n      namespace: 'AWS/DMS',\n      metricName: 'SwapUsage',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n}\n"],
  "mappings": "8FAIA,MAAa,UAAU,OACP,qBAAoB,WAAqD,CACrF,MAAO,CACL,UAAW,UACX,WAAY,mBACZ,cAAe,WACf,UAAW,aAGD,qBAAoB,WAAqD,CACrF,MAAO,CACL,UAAW,UACX,WAAY,mBACZ,cAAe,WACf,UAAW,aAGD,wBAAuB,WAAqD,CACxF,MAAO,CACL,UAAW,UACX,WAAY,kBACZ,cAAe,WACf,UAAW,iBAGD,yBAAwB,WAAqD,CACzF,MAAO,CACL,UAAW,UACX,WAAY,uBACZ,cAAe,WACf,UAAW,aAGD,2BAA0B,WAAqD,CAC3F,MAAO,CACL,UAAW,UACX,WAAY,yBACZ,cAAe,WACf,UAAW,aAGD,2BAA0B,WAAqD,CAC3F,MAAO,CACL,UAAW,UACX,WAAY,yBACZ,cAAe,WACf,UAAW,aAGD,uBAAsB,WAAqD,CACvF,MAAO,CACL,UAAW,UACX,WAAY,qBACZ,cAAe,WACf,UAAW,aAGD,iCAAgC,WAAqD,CACjG,MAAO,CACL,UAAW,UACX,WAAY,+BACZ,cAAe,WACf,UAAW,aAGD,iCAAgC,WAAqD,CACjG,MAAO,CACL,UAAW,UACX,WAAY,+BACZ,cAAe,WACf,UAAW,aAGD,4BAA2B,WAAqD,CAC5F,MAAO,CACL,UAAW,UACX,WAAY,0BACZ,cAAe,WACf,UAAW,aAGD,4BAA2B,WAAqD,CAC5F,MAAO,CACL,UAAW,UACX,WAAY,0BACZ,cAAe,WACf,UAAW,aAGD,iBAAgB,WAAqD,CACjF,MAAO,CACL,UAAW,UACX,WAAY,eACZ,cAAe,WACf,UAAW,aAGD,uBAAsB,WAAqD,CACvF,MAAO,CACL,UAAW,UACX,WAAY,iBACZ,cAAe,WACf,UAAW,iBAGD,mBAAkB,WAAqD,CACnF,MAAO,CACL,UAAW,UACX,WAAY,aACZ,cAAe,WACf,UAAW,iBAGD,sCAAqC,WAAqD,CACtG,MAAO,CACL,UAAW,UACX,WAAY,oCACZ,cAAe,WACf,UAAW,aAGD,sCAAqC,WAAqD,CACtG,MAAO,CACL,UAAW,UACX,WAAY,oCACZ,cAAe,WACf,UAAW,aAGD,iCAAgC,WAAqD,CACjG,MAAO,CACL,UAAW,UACX,WAAY,+BACZ,cAAe,WACf,UAAW,aAGD,iCAAgC,WAAqD,CACjG,MAAO,CACL,UAAW,UACX,WAAY,+BACZ,cAAe,WACf,UAAW,aAGD,wBAAuB,WAAqD,CACxF,MAAO,CACL,UAAW,UACX,WAAY,kBACZ,cAAe,WACf,UAAW,iBAGD,oBAAmB,WAAqD,CACpF,MAAO,CACL,UAAW,UACX,WAAY,cACZ,cAAe,WACf,UAAW,iBAGD,kBAAiB,WAAqD,CAClF,MAAO,CACL,UAAW,UACX,WAAY,YACZ,cAAe,WACf,UAAW,YAtKjB,QAAA,WAAA",
  "names": []
}
