"use strict";var _a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.ConfirmPermissionsBroadening=void 0;const jsiiDeprecationWarnings=require("../../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cpa=require("../../../aws-codepipeline-actions"),constructs_1=require("constructs"),blueprint_1=require("../blueprint"),application_security_check_1=require("../private/application-security-check");class ConfirmPermissionsBroadening extends blueprint_1.Step{constructor(id,props){super(id);this.props=props,jsiiDeprecationWarnings.aws_cdk_lib_pipelines_PermissionsBroadeningCheckProps(props)}produceAction(stage,options){var _b;jsiiDeprecationWarnings.aws_cdk_lib_aws_codepipeline_IStage(stage),jsiiDeprecationWarnings.aws_cdk_lib_pipelines_ProduceActionOptions(options);const sec=this.getOrCreateSecCheck(options.pipeline);(_b=this.props.notificationTopic)===null||_b===void 0||_b.grantPublish(sec.cdkDiffProject);const variablesNamespace=constructs_1.Node.of(this.props.stage).addr,approveActionName=`${options.actionName}.Confirm`;return stage.addAction(new cpa.CodeBuildAction({runOrder:options.runOrder,actionName:`${options.actionName}.Check`,input:options.artifacts.toCodePipeline(options.pipeline.cloudAssemblyFileSet),project:sec.cdkDiffProject,variablesNamespace,environmentVariables:{STAGE_PATH:{value:constructs_1.Node.of(this.props.stage).path},STAGE_NAME:{value:stage.stageName},ACTION_NAME:{value:approveActionName},...this.props.notificationTopic?{NOTIFICATION_ARN:{value:this.props.notificationTopic.topicArn},NOTIFICATION_SUBJECT:{value:`Confirm permission broadening in ${this.props.stage.stageName}`}}:{}}})),stage.addAction(new cpa.ManualApprovalAction({actionName:approveActionName,runOrder:options.runOrder+1,additionalInformation:`#{${variablesNamespace}.MESSAGE}`,externalEntityLink:`#{${variablesNamespace}.LINK}`})),{runOrdersConsumed:2}}getOrCreateSecCheck(pipeline){const id="PipelinesSecurityCheck",existing=constructs_1.Node.of(pipeline).tryFindChild(id);if(existing){if(!(existing instanceof application_security_check_1.ApplicationSecurityCheck))throw new Error(`Expected '${constructs_1.Node.of(existing).path}' to be 'ApplicationSecurityCheck' but was '${existing}'`);return existing}return new application_security_check_1.ApplicationSecurityCheck(pipeline,id,{codePipeline:pipeline.pipeline})}}exports.ConfirmPermissionsBroadening=ConfirmPermissionsBroadening,_a=JSII_RTTI_SYMBOL_1,ConfirmPermissionsBroadening[_a]={fqn:"aws-cdk-lib.pipelines.ConfirmPermissionsBroadening",version:"2.20.0"};
//# sourceMappingURL=confirm-permissions-broadening.js.map
