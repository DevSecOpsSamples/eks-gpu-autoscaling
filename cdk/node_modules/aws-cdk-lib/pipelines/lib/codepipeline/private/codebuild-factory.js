"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.mergeCodeBuildOptions=exports.CodeBuildFactory=void 0;const fs=require("fs"),path=require("path"),codebuild=require("../../../../aws-codebuild"),codepipeline_actions=require("../../../../aws-codepipeline-actions"),ec2=require("../../../../aws-ec2"),core_1=require("../../../../core"),constructs_1=require("constructs"),pipeline_queries_1=require("../../helpers-internal/pipeline-queries"),step_output_1=require("../../helpers-internal/step-output"),construct_internals_1=require("../../private/construct-internals"),identifiers_1=require("../../private/identifiers"),javascript_1=require("../../private/javascript"),buildspecs_1=require("./buildspecs");class CodeBuildFactory{constructor(constructId,props){var _a;this.constructId=constructId,this.props=props,this.stepId=(_a=props.stepId)!==null&&_a!==void 0?_a:constructId}static fromShellStep(constructId,shellStep,additional){return new CodeBuildFactory(constructId,{commands:shellStep.commands,env:shellStep.env,envFromCfnOutputs:shellStep.envFromCfnOutputs,inputs:shellStep.inputs,outputs:shellStep.outputs,stepId:shellStep.id,installCommands:shellStep.installCommands,producedStepOutputs:step_output_1.StepOutput.producedStepOutputs(shellStep),...additional})}static fromCodeBuildStep(constructId,step,additional){const factory=CodeBuildFactory.fromShellStep(constructId,step,{projectName:step.projectName,role:step.role,...additional,projectOptions:mergeCodeBuildOptions(additional==null?void 0:additional.projectOptions,{buildEnvironment:step.buildEnvironment,rolePolicy:step.rolePolicyStatements,securityGroups:step.securityGroups,partialBuildSpec:step.partialBuildSpec,vpc:step.vpc,subnetSelection:step.subnetSelection,timeout:step.timeout})});return{produceAction:(stage,options)=>{const result=factory.produceAction(stage,options);return result.project&&step._setProject(result.project),result}}}get project(){if(!this._project)throw new Error("Project becomes available after produce() has been called");return this._project}produceAction(stage,options){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l;const projectOptions=mergeCodeBuildOptions(options.codeBuildDefaults,this.props.projectOptions),inputs=(_a=this.props.inputs)!==null&&_a!==void 0?_a:[],outputs=(_b=this.props.outputs)!==null&&_b!==void 0?_b:[],mainInput=inputs.find(x=>x.directory==="."),extraInputs=inputs.filter(x=>x.directory!=="."),inputArtifact=mainInput?options.artifacts.toCodePipeline(mainInput.fileSet):options.fallbackArtifact,extraInputArtifacts=extraInputs.map(x=>options.artifacts.toCodePipeline(x.fileSet)),outputArtifacts=outputs.map(x=>options.artifacts.toCodePipeline(x.fileSet));if(!inputArtifact)throw new Error(`CodeBuild action '${this.stepId}' requires an input (and the pipeline doesn't have a Source to fall back to). Add an input or a pipeline source.`);const installCommands=[...generateInputArtifactLinkCommands(options.artifacts,extraInputs),...(_c=this.props.installCommands)!==null&&_c!==void 0?_c:[]],buildSpecHere=codebuild.BuildSpec.fromObject({version:"0.2",phases:{install:((_d=installCommands.length)!==null&&_d!==void 0?_d:0)>0?{commands:installCommands}:void 0,build:this.props.commands.length>0?{commands:this.props.commands}:void 0},artifacts:javascript_1.noEmptyObject(renderArtifactsBuildSpec(options.artifacts,(_e=this.props.outputs)!==null&&_e!==void 0?_e:[]))}),env=javascript_1.noUndefined((_f=this.props.env)!==null&&_f!==void 0?_f:{}),[actionEnvs,projectEnvs]=javascript_1.partition(Object.entries(env!=null?env:{}),([,v])=>containsPipelineVariable(v)),environment=mergeBuildEnvironments((_g=projectOptions==null?void 0:projectOptions.buildEnvironment)!==null&&_g!==void 0?_g:{},{environmentVariables:javascript_1.noEmptyObject(javascript_1.mapValues(javascript_1.mkdict(projectEnvs),value=>({value})))}),fullBuildSpec=projectOptions!=null&&projectOptions.partialBuildSpec?codebuild.mergeBuildSpecs(projectOptions.partialBuildSpec,buildSpecHere):buildSpecHere,osFromEnvironment=environment.buildImage&&environment.buildImage instanceof codebuild.WindowsBuildImage?ec2.OperatingSystemType.WINDOWS:ec2.OperatingSystemType.LINUX,actualBuildSpec=filterBuildSpecCommands(fullBuildSpec,osFromEnvironment),scope=(_h=this.props.scope)!==null&&_h!==void 0?_h:options.scope;let projectBuildSpec;if(this.props.passBuildSpecViaCloudAssembly){const relativeSpecFile=`buildspec-${constructs_1.Node.of(scope).addr}-${this.constructId}.yaml`,absSpecFile=path.join(construct_internals_1.cloudAssemblyBuildSpecDir(scope),relativeSpecFile),fileContents=core_1.Stack.of(scope).resolve(actualBuildSpec.toBuildSpec());if(typeof fileContents!="string")throw new Error(`This BuildSpec contains CloudFormation references and is supported by publishInParallel=false: ${JSON.stringify(fileContents,void 0,2)}`);fs.writeFileSync(absSpecFile,fileContents,{encoding:"utf-8"}),projectBuildSpec=codebuild.BuildSpec.fromSourceFilename(relativeSpecFile)}else projectBuildSpec=actualBuildSpec;const projectConfigHash=identifiers_1.hash(core_1.Stack.of(scope).resolve({environment:serializeBuildEnvironment(environment),buildSpecString:actualBuildSpec.toBuildSpec()})),actionName=(_j=options.actionName)!==null&&_j!==void 0?_j:this.stepId;let projectScope=scope;(!((_k=this.props.additionalConstructLevel)!==null&&_k!==void 0)||_k)&&(projectScope=construct_internals_1.obtainScope(scope,actionName));const safePipelineName=core_1.Token.isUnresolved(options.pipeline.pipeline.pipelineName)?`${core_1.Stack.of(options.pipeline).stackName}/${constructs_1.Node.of(options.pipeline.pipeline).id}`:options.pipeline.pipeline.pipelineName,project=new codebuild.PipelineProject(projectScope,this.constructId,{projectName:this.props.projectName,description:`Pipeline step ${safePipelineName}/${stage.stageName}/${actionName}`.substring(0,255),environment,vpc:projectOptions.vpc,subnetSelection:projectOptions.subnetSelection,securityGroups:projectOptions.securityGroups,buildSpec:projectBuildSpec,role:this.props.role,timeout:projectOptions.timeout});this.props.additionalDependable&&project.node.addDependency(this.props.additionalDependable),projectOptions.rolePolicy!==void 0&&projectOptions.rolePolicy.forEach(policyStatement=>{project.addToRolePolicy(policyStatement)});const queries=new pipeline_queries_1.PipelineQueries(options.pipeline),stackOutputEnv=javascript_1.mapValues((_l=this.props.envFromCfnOutputs)!==null&&_l!==void 0?_l:{},outputRef=>`#{${identifiers_1.stackVariableNamespace(queries.producingStack(outputRef))}.${outputRef.outputName}}`),configHashEnv=options.beforeSelfMutation?{_PROJECT_CONFIG_HASH:projectConfigHash}:{};return stage.addAction(new codepipeline_actions.CodeBuildAction({actionName,input:inputArtifact,extraInputs:extraInputArtifacts,outputs:outputArtifacts,project,runOrder:options.runOrder,variablesNamespace:options.variablesNamespace,environmentVariables:javascript_1.noEmptyObject(cbEnv({...javascript_1.mkdict(actionEnvs),...configHashEnv,...stackOutputEnv}))})),this._project=project,{runOrdersConsumed:1,project}}}exports.CodeBuildFactory=CodeBuildFactory;function generateInputArtifactLinkCommands(artifacts,inputs){return inputs.map(input=>{const fragments=[];fragments.push(`[ ! -d "${input.directory}" ] || { echo 'additionalInputs: "${input.directory}" must not exist yet. If you want to merge multiple artifacts, use a "cp" command.'; exit 1; }`);const parentDirectory=path.dirname(input.directory);[".",".."].includes(parentDirectory)||fragments.push(`mkdir -p -- "${parentDirectory}"`);const artifact=artifacts.toCodePipeline(input.fileSet);return fragments.push(`ln -s -- "$CODEBUILD_SRC_DIR_${artifact.artifactName}" "${input.directory}"`),fragments.join(" && ")})}function renderArtifactsBuildSpec(artifactMap,outputs){if(outputs.length===0)return{};if(outputs.length===1)return{"base-directory":outputs[0].directory,files:"**/*"};const secondary={};for(const output of outputs){const art=artifactMap.toCodePipeline(output.fileSet);if(!art.artifactName)throw new Error("You must give the output artifact a name");secondary[art.artifactName]={"base-directory":output.directory,files:"**/*"}}return{"secondary-artifacts":secondary}}function mergeCodeBuildOptions(...opts){const xs=[{},...opts.filter(isDefined)];for(;xs.length>1;){const[a,b]=xs.splice(xs.length-2,2);xs.push(merge2(a,b))}return xs[0];function merge2(a,b){var _a,_b,_c,_d,_e,_f,_g;return{buildEnvironment:mergeBuildEnvironments(a.buildEnvironment,b.buildEnvironment),rolePolicy:definedArray([...(_a=a.rolePolicy)!==null&&_a!==void 0?_a:[],...(_b=b.rolePolicy)!==null&&_b!==void 0?_b:[]]),securityGroups:definedArray([...(_c=a.securityGroups)!==null&&_c!==void 0?_c:[],...(_d=b.securityGroups)!==null&&_d!==void 0?_d:[]]),partialBuildSpec:buildspecs_1.mergeBuildSpecs(a.partialBuildSpec,b.partialBuildSpec),vpc:(_e=b.vpc)!==null&&_e!==void 0?_e:a.vpc,subnetSelection:(_f=b.subnetSelection)!==null&&_f!==void 0?_f:a.subnetSelection,timeout:(_g=b.timeout)!==null&&_g!==void 0?_g:a.timeout}}}exports.mergeCodeBuildOptions=mergeCodeBuildOptions;function mergeBuildEnvironments(a,b){var _a,_b,_c;return!a||!b?a!=null?a:b:{buildImage:(_a=b.buildImage)!==null&&_a!==void 0?_a:a.buildImage,computeType:(_b=b.computeType)!==null&&_b!==void 0?_b:a.computeType,environmentVariables:{...a.environmentVariables,...b.environmentVariables},privileged:(_c=b.privileged)!==null&&_c!==void 0?_c:a.privileged}}function isDefined(x){return x!==void 0}function serializeBuildEnvironment(env){var _a,_b,_c,_d,_e;return{privileged:env.privileged,environmentVariables:env.environmentVariables,type:(_a=env.buildImage)===null||_a===void 0?void 0:_a.type,imageId:(_b=env.buildImage)===null||_b===void 0?void 0:_b.imageId,computeType:env.computeType,imagePullPrincipalType:(_c=env.buildImage)===null||_c===void 0?void 0:_c.imagePullPrincipalType,secretsManagerArn:(_e=(_d=env.buildImage)===null||_d===void 0?void 0:_d.secretsManagerCredentials)===null||_e===void 0?void 0:_e.secretArn}}function containsPipelineVariable(s){return!!s.match(/#\{[^}]+\}/)||step_output_1.StepOutput.findAll(s).length>0}function cbEnv(xs){return javascript_1.mkdict(Object.entries(xs).filter(([,v])=>v!==void 0).map(([k,v])=>[k,{value:v}]))}function definedArray(xs){return xs.length>0?xs:void 0}function filterBuildSpecCommands(buildSpec,osType){if(!buildSpec.isImmediate)return buildSpec;const spec=buildSpec.spec,winTag="!WINDOWS!",linuxTag="!LINUX!",expectedTag=osType===ec2.OperatingSystemType.WINDOWS?winTag:linuxTag;return codebuild.BuildSpec.fromObject(recurse(spec));function recurse(x){if(Array.isArray(x)){const ret=[];for(const el of x){const[tag,payload]=extractTag(el);(tag===void 0||tag===expectedTag)&&ret.push(payload)}return ret}return x&&typeof x=="object"?javascript_1.mapValues(x,recurse):x}function extractTag(x){if(typeof x!="string")return[void 0,x];for(const tag of[winTag,linuxTag])if(x.startsWith(tag))return[tag,x.slice(tag.length)];return[void 0,x]}}
//# sourceMappingURL=codebuild-factory.js.map
