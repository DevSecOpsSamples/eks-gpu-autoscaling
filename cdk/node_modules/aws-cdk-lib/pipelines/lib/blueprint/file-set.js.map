{
  "version": 3,
  "sources": ["file-set.ts"],
  "sourcesContent": ["import { Step } from './step';\n\n/**\n * A set of files traveling through the deployment pipeline\n *\n * Individual steps in the pipeline produce or consume\n * `FileSet`s.\n */\nexport class FileSet implements IFileSetProducer {\n  /**\n   * The primary output of a file set producer\n   *\n   * The primary output of a FileSet is itself.\n   */\n  public readonly primaryOutput?: FileSet = this;\n  private _producer?: Step;\n\n  constructor(\n    /** Human-readable descriptor for this file set (does not need to be unique) */\n    public readonly id: string, producer?: Step) {\n    this._producer = producer;\n  }\n\n  /**\n   * The Step that produces this FileSet\n   */\n  public get producer() {\n    if (!this._producer) {\n      throw new Error(`FileSet '${this.id}' doesn\\'t have a producer; call 'fileSet.producedBy()'`);\n    }\n    return this._producer;\n  }\n\n  /**\n   * Mark the given Step as the producer for this FileSet\n   *\n   * This method can only be called once.\n   */\n  public producedBy(producer?: Step) {\n    if (this._producer) {\n      throw new Error(`FileSet '${this.id}' already has a producer (${this._producer}) while setting producer: ${producer}`);\n    }\n    this._producer = producer;\n  }\n\n  /**\n   * Return a string representation of this FileSet\n   */\n  public toString() {\n    return `FileSet(${this.id})`;\n  }\n}\n\n/**\n * Any class that produces, or is itself, a `FileSet`\n *\n * Steps implicitly produce a primary FileSet as an output.\n */\nexport interface IFileSetProducer {\n  /**\n   * The `FileSet` produced by this file set producer\n   *\n   * @default - This producer doesn't produce any file set\n   */\n  readonly primaryOutput?: FileSet;\n}"],
  "mappings": "iNAQA,MAAa,OAAO,CASlB,YAEkB,GAAY,SAAe,CAA3B,KAAA,GAAA,GALF,KAAA,cAA0B,kEAMxC,KAAK,UAAY,YAMR,WAAQ,CACjB,GAAI,CAAC,KAAK,UACR,KAAM,IAAI,OAAM,YAAY,KAAK,0DAA2D,EAE9F,MAAO,MAAK,UAQP,WAAW,SAAe,CAC/B,gEAAI,KAAK,UACP,KAAM,IAAI,OAAM,YAAY,KAAK,+BAA+B,KAAK,sCAAsC,UAAU,EAEvH,KAAK,UAAY,SAMZ,UAAQ,CACb,MAAO,WAAW,KAAK,OAzC3B,QAAA,QAAA",
  "names": []
}
