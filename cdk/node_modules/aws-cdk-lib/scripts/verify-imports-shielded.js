"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.withTemporaryDirectory=void 0;const os=require("os"),path=require("path"),fs=require("fs-extra");async function main(){await withTemporaryDirectory(async tmpDir=>{await fs.mkdirp(path.join(tmpDir,"node_modules")),await fs.symlink(path.resolve(__dirname,".."),path.join(tmpDir,"node_modules","aws-cdk-lib")),assertImportSucceeds("aws-cdk-lib"),assertImportFails("aws-cdk-lib/LICENSE","ERR_PACKAGE_PATH_NOT_EXPORTED"),assertImportFails("aws-cdk-lib/aws-s3/lib/bucket","ERR_PACKAGE_PATH_NOT_EXPORTED"),assertImportSucceeds("aws-cdk-lib/aws-s3");function assertImportSucceeds(name){require.resolve(name,{paths:[tmpDir]})}function assertImportFails(name,code){try{require.resolve(name,{paths:[tmpDir]}),console.error(`Import of '${name}' should have produced an error, but didn't.`),process.exitCode=1}catch(e){e.code!==code&&(console.error(`Import of '${name}' should have produced error ${code}, but got ${e.code}.`),process.exitCode=1)}}})}async function withTemporaryDirectory(callback){const tmpdir=await fs.mkdtemp(path.join(os.tmpdir(),path.basename(__filename)));try{return await callback(tmpdir)}finally{await fs.remove(tmpdir)}}exports.withTemporaryDirectory=withTemporaryDirectory,main().catch(e=>{console.error(e),process.exitCode=1});
//# sourceMappingURL=verify-imports-shielded.js.map
