{
  "version": 3,
  "sources": ["instance.ts"],
  "sourcesContent": ["import * as ec2 from '../../aws-ec2';\nimport * as ga from '../../aws-globalaccelerator';\nimport { validateWeight } from './_util';\n\n/**\n * Properties for a NetworkLoadBalancerEndpoint\n */\nexport interface InstanceEndpointProps {\n  /**\n   * Endpoint weight across all endpoints in the group\n   *\n   * Must be a value between 0 and 255.\n   *\n   * @default 128\n   */\n  readonly weight?: number;\n\n  /**\n   * Forward the client IP address\n   *\n   * GlobalAccelerator will create Network Interfaces in your VPC in order\n   * to preserve the client IP address.\n   *\n   * Client IP address preservation is supported only in specific AWS Regions.\n   * See the GlobalAccelerator Developer Guide for a list.\n   *\n   * @default true if available\n   */\n  readonly preserveClientIp?: boolean;\n}\n\n/**\n * Use an EC2 Instance as a Global Accelerator Endpoint\n */\nexport class InstanceEndpoint implements ga.IEndpoint {\n  public readonly region?: string;\n\n  constructor(private readonly instance: ec2.IInstance, private readonly options: InstanceEndpointProps = {}) {\n    validateWeight(options.weight);\n\n    this.region = instance.env.region;\n  }\n\n  public renderEndpointConfiguration(): any {\n    return {\n      endpointId: this.instance.instanceId,\n      weight: this.options.weight,\n      clientIpPreservationEnabled: this.options.preserveClientIp,\n    } as ga.CfnEndpointGroup.EndpointConfigurationProperty;\n  }\n}"],
  "mappings": "uNAEA,QAAA,QAAA,SAAA,EAgCA,MAAa,gBAAgB,CAG3B,YAA6B,SAA0C,QAAiC,CAAA,EAAE,CAA7E,KAAA,SAAA,SAA0C,KAAA,QAAA,2KACrE,QAAA,eAAe,QAAQ,MAAM,EAE7B,KAAK,OAAS,SAAS,IAAI,OAGtB,6BAA2B,CAChC,MAAO,CACL,WAAY,KAAK,SAAS,WAC1B,OAAQ,KAAK,QAAQ,OACrB,4BAA6B,KAAK,QAAQ,mBAbhD,QAAA,iBAAA",
  "names": []
}
