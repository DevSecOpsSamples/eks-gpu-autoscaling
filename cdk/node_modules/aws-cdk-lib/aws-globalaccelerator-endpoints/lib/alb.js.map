{
  "version": 3,
  "sources": ["alb.ts"],
  "sourcesContent": ["import * as elbv2 from '../../aws-elasticloadbalancingv2';\nimport * as ga from '../../aws-globalaccelerator';\nimport { validateWeight } from './_util';\n\n/**\n * Properties for a ApplicationLoadBalancerEndpoint\n */\nexport interface ApplicationLoadBalancerEndpointOptions {\n  /**\n   * Endpoint weight across all endpoints in the group\n   *\n   * Must be a value between 0 and 255.\n   *\n   * @default 128\n   */\n  readonly weight?: number;\n\n  /**\n   * Forward the client IP address in an `X-Forwarded-For` header\n   *\n   * GlobalAccelerator will create Network Interfaces in your VPC in order\n   * to preserve the client IP address.\n   *\n   * Client IP address preservation is supported only in specific AWS Regions.\n   * See the GlobalAccelerator Developer Guide for a list.\n   *\n   * @default true if available\n   */\n  readonly preserveClientIp?: boolean;\n}\n\n/**\n * Use an Application Load Balancer as a Global Accelerator Endpoint\n */\nexport class ApplicationLoadBalancerEndpoint implements ga.IEndpoint {\n  public readonly region?: string;\n\n  constructor(private readonly loadBalancer: elbv2.IApplicationLoadBalancer, private readonly options: ApplicationLoadBalancerEndpointOptions = {}) {\n    validateWeight(options.weight);\n    this.region = loadBalancer.env.region;\n  }\n\n  public renderEndpointConfiguration(): any {\n    return {\n      endpointId: this.loadBalancer.loadBalancerArn,\n      weight: this.options.weight,\n      clientIpPreservationEnabled: this.options.preserveClientIp,\n    } as ga.CfnEndpointGroup.EndpointConfigurationProperty;\n  }\n}"],
  "mappings": "sOAEA,QAAA,QAAA,SAAA,EAgCA,MAAa,+BAA+B,CAG1C,YAA6B,aAA+D,QAAkD,CAAA,EAAE,CAAnH,KAAA,aAAA,aAA+D,KAAA,QAAA,kOAC1F,QAAA,eAAe,QAAQ,MAAM,EAC7B,KAAK,OAAS,aAAa,IAAI,OAG1B,6BAA2B,CAChC,MAAO,CACL,WAAY,KAAK,aAAa,gBAC9B,OAAQ,KAAK,QAAQ,OACrB,4BAA6B,KAAK,QAAQ,mBAZhD,QAAA,gCAAA",
  "names": []
}
