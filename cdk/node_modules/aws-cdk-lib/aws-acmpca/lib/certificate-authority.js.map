{
  "version": 3,
  "sources": ["certificate-authority.ts"],
  "sourcesContent": ["import * as cdk from '../../core';\nimport { Construct } from 'constructs';\n\n/**\n * Interface which all CertificateAuthority based class must implement\n */\nexport interface ICertificateAuthority extends cdk.IResource {\n  /**\n   * The Amazon Resource Name of the Certificate\n   *\n   * @attribute\n   */\n  readonly certificateAuthorityArn: string;\n}\n\n/**\n * Defines a Certificate for ACMPCA\n *\n * @resource AWS::ACMPCA::CertificateAuthority\n */\nexport class CertificateAuthority {\n  /**\n   * Import an existing Certificate given an ARN\n   */\n  public static fromCertificateAuthorityArn(scope: Construct, id: string, certificateAuthorityArn: string): ICertificateAuthority {\n    return new class extends cdk.Resource implements ICertificateAuthority {\n      readonly certificateAuthorityArn = certificateAuthorityArn;\n    }(scope, id);\n  }\n\n  private constructor() {\n  }\n}\n"],
  "mappings": "gKAAA,IAAA,QAAA,YAAA,EAoBA,MAAa,oBAAoB,CAU/B,aAAA,QANc,6BAA4B,MAAkB,GAAY,wBAA+B,CACrG,MAAO,IAAI,cAAc,KAAI,QAAQ,CAA1B,aAAA,qBACA,KAAA,wBAA0B,uBACrC,GAAE,MAAO,EAAE,GAPf,QAAA,qBAAA",
  "names": []
}
