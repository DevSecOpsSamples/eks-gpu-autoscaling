{
  "version": 3,
  "sources": ["assume-role-policy.ts"],
  "sourcesContent": ["import { PolicyDocument } from '../policy-document';\nimport { PolicyStatement } from '../policy-statement';\nimport { IPrincipal, IAssumeRolePrincipal } from '../principals';\n\n/**\n * Add a principal to an AssumeRolePolicyDocument in the right way\n *\n * Delegate to the principal if it can do the job itself, do a default job if it can't.\n */\nexport function defaultAddPrincipalToAssumeRole(principal: IPrincipal, doc: PolicyDocument) {\n  if (isAssumeRolePrincipal(principal)) {\n    // Principal knows how to add itself\n    principal.addToAssumeRolePolicy(doc);\n  } else {\n    // Principal can't add itself, we do it for them\n    doc.addStatements(new PolicyStatement({\n      actions: [principal.assumeRoleAction],\n      principals: [principal],\n    }));\n  }\n}\n\nfunction isAssumeRolePrincipal(principal: IPrincipal): principal is IAssumeRolePrincipal {\n  return !!(principal as IAssumeRolePrincipal).addToAssumeRolePolicy;\n}\n"],
  "mappings": "mHACA,KAAA,oBAAA,QAAA,qBAAA,EAQA,yCAAgD,UAAuB,IAAmB,CACxF,AAAI,sBAAsB,SAAS,EAEjC,UAAU,sBAAsB,GAAG,EAGnC,IAAI,cAAc,GAAI,oBAAA,gBAAgB,CACpC,QAAS,CAAC,UAAU,gBAAgB,EACpC,WAAY,CAAC,SAAS,EACvB,CAAC,CAEN,CAXA,QAAA,gCAAA,gCAaA,+BAA+B,UAAqB,CAClD,MAAO,CAAC,CAAE,UAAmC,qBAC/C",
  "names": []
}
