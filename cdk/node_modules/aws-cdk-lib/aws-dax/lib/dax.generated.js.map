{
  "version": 3,
  "sources": ["dax.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-04-07T10:53:54.539Z\",\"fingerprint\":\"qXw5Eg9lpYSv7fuyfFMzzTH0jqRjgbjci53jgcZQhRE=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n/**\n * Properties for defining a `CfnCluster`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html\n */\nexport interface CfnClusterProps {\n\n    /**\n     * A valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX will assume this role and use the role's permissions to access DynamoDB on your behalf.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-iamrolearn\n     */\n    readonly iamRoleArn: string;\n\n    /**\n     * The node type for the nodes in the cluster. (All nodes in a DAX cluster are of the same type.)\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-nodetype\n     */\n    readonly nodeType: string;\n\n    /**\n     * The number of nodes in the DAX cluster. A replication factor of 1 will create a single-node cluster, without any read replicas. For additional fault tolerance, you can create a multiple node cluster with one or more read replicas. To do this, set `ReplicationFactor` to a number between 3 (one primary and two read replicas) and 10 (one primary and nine read replicas). `If the AvailabilityZones` parameter is provided, its length must equal the `ReplicationFactor` .\n     *\n     * > AWS recommends that you have at least two read replicas per cluster.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-replicationfactor\n     */\n    readonly replicationFactor: number;\n\n    /**\n     * The Availability Zones (AZs) in which the cluster nodes will reside after the cluster has been created or updated. If provided, the length of this list must equal the `ReplicationFactor` parameter. If you omit this parameter, DAX will spread the nodes across Availability Zones for the highest availability.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-availabilityzones\n     */\n    readonly availabilityZones?: string[];\n\n    /**\n     * The encryption type of the cluster's endpoint. Available values are:\n     *\n     * - `NONE` - The cluster's endpoint will be unencrypted.\n     * - `TLS` - The cluster's endpoint will be encrypted with Transport Layer Security, and will provide an x509 certificate for authentication.\n     *\n     * The default value is `NONE` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-clusterendpointencryptiontype\n     */\n    readonly clusterEndpointEncryptionType?: string;\n\n    /**\n     * The name of the DAX cluster.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-clustername\n     */\n    readonly clusterName?: string;\n\n    /**\n     * The description of the cluster.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-description\n     */\n    readonly description?: string;\n\n    /**\n     * The Amazon Resource Name (ARN) of the Amazon SNS topic to which notifications will be sent.\n     *\n     * > The Amazon SNS topic owner must be same as the DAX cluster owner.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-notificationtopicarn\n     */\n    readonly notificationTopicArn?: string;\n\n    /**\n     * The parameter group to be associated with the DAX cluster.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-parametergroupname\n     */\n    readonly parameterGroupName?: string;\n\n    /**\n     * A range of time when maintenance of DAX cluster software will be performed. For example: `sun:01:00-sun:09:00` . Cluster maintenance normally takes less than 30 minutes, and is performed automatically within the maintenance window.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-preferredmaintenancewindow\n     */\n    readonly preferredMaintenanceWindow?: string;\n\n    /**\n     * A list of security group IDs to be assigned to each node in the DAX cluster. (Each of the security group ID is system-generated.)\n     *\n     * If this parameter is not specified, DAX assigns the default VPC security group to each node.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-securitygroupids\n     */\n    readonly securityGroupIds?: string[];\n\n    /**\n     * Represents the settings used to enable server-side encryption on the cluster.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-ssespecification\n     */\n    readonly sseSpecification?: CfnCluster.SSESpecificationProperty | cdk.IResolvable;\n\n    /**\n     * The name of the subnet group to be used for the replication group.\n     *\n     * > DAX clusters can only run in an Amazon VPC environment. All of the subnets that you specify in a subnet group must exist in the same VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-subnetgroupname\n     */\n    readonly subnetGroupName?: string;\n\n    /**\n     * A set of tags to associate with the DAX cluster.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-tags\n     */\n    readonly tags?: any;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnClusterProps`\n *\n * @param properties - the TypeScript properties of a `CfnClusterProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnClusterPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('availabilityZones', cdk.listValidator(cdk.validateString))(properties.availabilityZones));\n    errors.collect(cdk.propertyValidator('clusterEndpointEncryptionType', cdk.validateString)(properties.clusterEndpointEncryptionType));\n    errors.collect(cdk.propertyValidator('clusterName', cdk.validateString)(properties.clusterName));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('iamRoleArn', cdk.requiredValidator)(properties.iamRoleArn));\n    errors.collect(cdk.propertyValidator('iamRoleArn', cdk.validateString)(properties.iamRoleArn));\n    errors.collect(cdk.propertyValidator('nodeType', cdk.requiredValidator)(properties.nodeType));\n    errors.collect(cdk.propertyValidator('nodeType', cdk.validateString)(properties.nodeType));\n    errors.collect(cdk.propertyValidator('notificationTopicArn', cdk.validateString)(properties.notificationTopicArn));\n    errors.collect(cdk.propertyValidator('parameterGroupName', cdk.validateString)(properties.parameterGroupName));\n    errors.collect(cdk.propertyValidator('preferredMaintenanceWindow', cdk.validateString)(properties.preferredMaintenanceWindow));\n    errors.collect(cdk.propertyValidator('replicationFactor', cdk.requiredValidator)(properties.replicationFactor));\n    errors.collect(cdk.propertyValidator('replicationFactor', cdk.validateNumber)(properties.replicationFactor));\n    errors.collect(cdk.propertyValidator('sseSpecification', CfnCluster_SSESpecificationPropertyValidator)(properties.sseSpecification));\n    errors.collect(cdk.propertyValidator('securityGroupIds', cdk.listValidator(cdk.validateString))(properties.securityGroupIds));\n    errors.collect(cdk.propertyValidator('subnetGroupName', cdk.validateString)(properties.subnetGroupName));\n    errors.collect(cdk.propertyValidator('tags', cdk.validateObject)(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnClusterProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::DAX::Cluster` resource\n *\n * @param properties - the TypeScript properties of a `CfnClusterProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::DAX::Cluster` resource.\n */\n// @ts-ignore TS6133\nfunction cfnClusterPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnClusterPropsValidator(properties).assertSuccess();\n    return {\n        IAMRoleARN: cdk.stringToCloudFormation(properties.iamRoleArn),\n        NodeType: cdk.stringToCloudFormation(properties.nodeType),\n        ReplicationFactor: cdk.numberToCloudFormation(properties.replicationFactor),\n        AvailabilityZones: cdk.listMapper(cdk.stringToCloudFormation)(properties.availabilityZones),\n        ClusterEndpointEncryptionType: cdk.stringToCloudFormation(properties.clusterEndpointEncryptionType),\n        ClusterName: cdk.stringToCloudFormation(properties.clusterName),\n        Description: cdk.stringToCloudFormation(properties.description),\n        NotificationTopicARN: cdk.stringToCloudFormation(properties.notificationTopicArn),\n        ParameterGroupName: cdk.stringToCloudFormation(properties.parameterGroupName),\n        PreferredMaintenanceWindow: cdk.stringToCloudFormation(properties.preferredMaintenanceWindow),\n        SecurityGroupIds: cdk.listMapper(cdk.stringToCloudFormation)(properties.securityGroupIds),\n        SSESpecification: cfnClusterSSESpecificationPropertyToCloudFormation(properties.sseSpecification),\n        SubnetGroupName: cdk.stringToCloudFormation(properties.subnetGroupName),\n        Tags: cdk.objectToCloudFormation(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnClusterPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnClusterProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnClusterProps>();\n    ret.addPropertyResult('iamRoleArn', 'IAMRoleARN', cfn_parse.FromCloudFormation.getString(properties.IAMRoleARN));\n    ret.addPropertyResult('nodeType', 'NodeType', cfn_parse.FromCloudFormation.getString(properties.NodeType));\n    ret.addPropertyResult('replicationFactor', 'ReplicationFactor', cfn_parse.FromCloudFormation.getNumber(properties.ReplicationFactor));\n    ret.addPropertyResult('availabilityZones', 'AvailabilityZones', properties.AvailabilityZones != null ? cfn_parse.FromCloudFormation.getStringArray(properties.AvailabilityZones) : undefined);\n    ret.addPropertyResult('clusterEndpointEncryptionType', 'ClusterEndpointEncryptionType', properties.ClusterEndpointEncryptionType != null ? cfn_parse.FromCloudFormation.getString(properties.ClusterEndpointEncryptionType) : undefined);\n    ret.addPropertyResult('clusterName', 'ClusterName', properties.ClusterName != null ? cfn_parse.FromCloudFormation.getString(properties.ClusterName) : undefined);\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('notificationTopicArn', 'NotificationTopicARN', properties.NotificationTopicARN != null ? cfn_parse.FromCloudFormation.getString(properties.NotificationTopicARN) : undefined);\n    ret.addPropertyResult('parameterGroupName', 'ParameterGroupName', properties.ParameterGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.ParameterGroupName) : undefined);\n    ret.addPropertyResult('preferredMaintenanceWindow', 'PreferredMaintenanceWindow', properties.PreferredMaintenanceWindow != null ? cfn_parse.FromCloudFormation.getString(properties.PreferredMaintenanceWindow) : undefined);\n    ret.addPropertyResult('securityGroupIds', 'SecurityGroupIds', properties.SecurityGroupIds != null ? cfn_parse.FromCloudFormation.getStringArray(properties.SecurityGroupIds) : undefined);\n    ret.addPropertyResult('sseSpecification', 'SSESpecification', properties.SSESpecification != null ? CfnClusterSSESpecificationPropertyFromCloudFormation(properties.SSESpecification) : undefined);\n    ret.addPropertyResult('subnetGroupName', 'SubnetGroupName', properties.SubnetGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.SubnetGroupName) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getAny(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::DAX::Cluster`\n *\n * Creates a DAX cluster. All nodes in the cluster run the same DAX caching software.\n *\n * @cloudformationResource AWS::DAX::Cluster\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html\n */\nexport class CfnCluster extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::DAX::Cluster\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnCluster {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnClusterPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnCluster(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * Returns the ARN of the DAX cluster. For example:\n     *\n     * `{ \"Fn::GetAtt\": [\" MyDAXCluster \", \"Arn\"] }`\n     *\n     * Returns a value similar to the following:\n     *\n     * `arn:aws:dax:us-east-1:111122223333:cache/MyDAXCluster`\n     * @cloudformationAttribute Arn\n     */\n    public readonly attrArn: string;\n\n    /**\n     * Returns the endpoint of the DAX cluster. For example:\n     *\n     * `{ \"Fn::GetAtt\": [\" MyDAXCluster \", \"ClusterDiscoveryEndpoint\"] }`\n     *\n     * Returns a value similar to the following:\n     *\n     * `mydaxcluster.0h3d6x.clustercfg.dax.use1.cache.amazonaws.com:8111`\n     * @cloudformationAttribute ClusterDiscoveryEndpoint\n     */\n    public readonly attrClusterDiscoveryEndpoint: string;\n\n    /**\n     * Returns the endpoint URL of the DAX cluster.\n     * @cloudformationAttribute ClusterDiscoveryEndpointURL\n     */\n    public readonly attrClusterDiscoveryEndpointUrl: string;\n\n    /**\n     * A valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX will assume this role and use the role's permissions to access DynamoDB on your behalf.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-iamrolearn\n     */\n    public iamRoleArn: string;\n\n    /**\n     * The node type for the nodes in the cluster. (All nodes in a DAX cluster are of the same type.)\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-nodetype\n     */\n    public nodeType: string;\n\n    /**\n     * The number of nodes in the DAX cluster. A replication factor of 1 will create a single-node cluster, without any read replicas. For additional fault tolerance, you can create a multiple node cluster with one or more read replicas. To do this, set `ReplicationFactor` to a number between 3 (one primary and two read replicas) and 10 (one primary and nine read replicas). `If the AvailabilityZones` parameter is provided, its length must equal the `ReplicationFactor` .\n     *\n     * > AWS recommends that you have at least two read replicas per cluster.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-replicationfactor\n     */\n    public replicationFactor: number;\n\n    /**\n     * The Availability Zones (AZs) in which the cluster nodes will reside after the cluster has been created or updated. If provided, the length of this list must equal the `ReplicationFactor` parameter. If you omit this parameter, DAX will spread the nodes across Availability Zones for the highest availability.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-availabilityzones\n     */\n    public availabilityZones: string[] | undefined;\n\n    /**\n     * The encryption type of the cluster's endpoint. Available values are:\n     *\n     * - `NONE` - The cluster's endpoint will be unencrypted.\n     * - `TLS` - The cluster's endpoint will be encrypted with Transport Layer Security, and will provide an x509 certificate for authentication.\n     *\n     * The default value is `NONE` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-clusterendpointencryptiontype\n     */\n    public clusterEndpointEncryptionType: string | undefined;\n\n    /**\n     * The name of the DAX cluster.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-clustername\n     */\n    public clusterName: string | undefined;\n\n    /**\n     * The description of the cluster.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-description\n     */\n    public description: string | undefined;\n\n    /**\n     * The Amazon Resource Name (ARN) of the Amazon SNS topic to which notifications will be sent.\n     *\n     * > The Amazon SNS topic owner must be same as the DAX cluster owner.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-notificationtopicarn\n     */\n    public notificationTopicArn: string | undefined;\n\n    /**\n     * The parameter group to be associated with the DAX cluster.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-parametergroupname\n     */\n    public parameterGroupName: string | undefined;\n\n    /**\n     * A range of time when maintenance of DAX cluster software will be performed. For example: `sun:01:00-sun:09:00` . Cluster maintenance normally takes less than 30 minutes, and is performed automatically within the maintenance window.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-preferredmaintenancewindow\n     */\n    public preferredMaintenanceWindow: string | undefined;\n\n    /**\n     * A list of security group IDs to be assigned to each node in the DAX cluster. (Each of the security group ID is system-generated.)\n     *\n     * If this parameter is not specified, DAX assigns the default VPC security group to each node.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-securitygroupids\n     */\n    public securityGroupIds: string[] | undefined;\n\n    /**\n     * Represents the settings used to enable server-side encryption on the cluster.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-ssespecification\n     */\n    public sseSpecification: CfnCluster.SSESpecificationProperty | cdk.IResolvable | undefined;\n\n    /**\n     * The name of the subnet group to be used for the replication group.\n     *\n     * > DAX clusters can only run in an Amazon VPC environment. All of the subnets that you specify in a subnet group must exist in the same VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-subnetgroupname\n     */\n    public subnetGroupName: string | undefined;\n\n    /**\n     * A set of tags to associate with the DAX cluster.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::DAX::Cluster`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnClusterProps) {\n        super(scope, id, { type: CfnCluster.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'iamRoleArn', this);\n        cdk.requireProperty(props, 'nodeType', this);\n        cdk.requireProperty(props, 'replicationFactor', this);\n        this.attrArn = cdk.Token.asString(this.getAtt('Arn'));\n        this.attrClusterDiscoveryEndpoint = cdk.Token.asString(this.getAtt('ClusterDiscoveryEndpoint'));\n        this.attrClusterDiscoveryEndpointUrl = cdk.Token.asString(this.getAtt('ClusterDiscoveryEndpointURL'));\n\n        this.iamRoleArn = props.iamRoleArn;\n        this.nodeType = props.nodeType;\n        this.replicationFactor = props.replicationFactor;\n        this.availabilityZones = props.availabilityZones;\n        this.clusterEndpointEncryptionType = props.clusterEndpointEncryptionType;\n        this.clusterName = props.clusterName;\n        this.description = props.description;\n        this.notificationTopicArn = props.notificationTopicArn;\n        this.parameterGroupName = props.parameterGroupName;\n        this.preferredMaintenanceWindow = props.preferredMaintenanceWindow;\n        this.securityGroupIds = props.securityGroupIds;\n        this.sseSpecification = props.sseSpecification;\n        this.subnetGroupName = props.subnetGroupName;\n        this.tags = new cdk.TagManager(cdk.TagType.MAP, \"AWS::DAX::Cluster\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnCluster.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            iamRoleArn: this.iamRoleArn,\n            nodeType: this.nodeType,\n            replicationFactor: this.replicationFactor,\n            availabilityZones: this.availabilityZones,\n            clusterEndpointEncryptionType: this.clusterEndpointEncryptionType,\n            clusterName: this.clusterName,\n            description: this.description,\n            notificationTopicArn: this.notificationTopicArn,\n            parameterGroupName: this.parameterGroupName,\n            preferredMaintenanceWindow: this.preferredMaintenanceWindow,\n            securityGroupIds: this.securityGroupIds,\n            sseSpecification: this.sseSpecification,\n            subnetGroupName: this.subnetGroupName,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnClusterPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnCluster {\n    /**\n     * Represents the settings used to enable server-side encryption.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dax-cluster-ssespecification.html\n     */\n    export interface SSESpecificationProperty {\n        /**\n         * Indicates whether server-side encryption is enabled (true) or disabled (false) on the cluster.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dax-cluster-ssespecification.html#cfn-dax-cluster-ssespecification-sseenabled\n         */\n        readonly sseEnabled?: boolean | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `SSESpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `SSESpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnCluster_SSESpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('sseEnabled', cdk.validateBoolean)(properties.sseEnabled));\n    return errors.wrap('supplied properties not correct for \"SSESpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::DAX::Cluster.SSESpecification` resource\n *\n * @param properties - the TypeScript properties of a `SSESpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::DAX::Cluster.SSESpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnClusterSSESpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnCluster_SSESpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        SSEEnabled: cdk.booleanToCloudFormation(properties.sseEnabled),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnClusterSSESpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnCluster.SSESpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnCluster.SSESpecificationProperty>();\n    ret.addPropertyResult('sseEnabled', 'SSEEnabled', properties.SSEEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.SSEEnabled) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnParameterGroup`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-parametergroup.html\n */\nexport interface CfnParameterGroupProps {\n\n    /**\n     * A description of the parameter group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-parametergroup.html#cfn-dax-parametergroup-description\n     */\n    readonly description?: string;\n\n    /**\n     * The name of the parameter group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-parametergroup.html#cfn-dax-parametergroup-parametergroupname\n     */\n    readonly parameterGroupName?: string;\n\n    /**\n     * An array of name-value pairs for the parameters in the group. Each element in the array represents a single parameter.\n     *\n     * > `record-ttl-millis` and `query-ttl-millis` are the only supported parameter names. For more details, see [Configuring TTL Settings](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DAX.cluster-management.html#DAX.cluster-management.custom-settings.ttl) .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-parametergroup.html#cfn-dax-parametergroup-parameternamevalues\n     */\n    readonly parameterNameValues?: any | cdk.IResolvable;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnParameterGroupProps`\n *\n * @param properties - the TypeScript properties of a `CfnParameterGroupProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnParameterGroupPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('parameterGroupName', cdk.validateString)(properties.parameterGroupName));\n    errors.collect(cdk.propertyValidator('parameterNameValues', cdk.validateObject)(properties.parameterNameValues));\n    return errors.wrap('supplied properties not correct for \"CfnParameterGroupProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::DAX::ParameterGroup` resource\n *\n * @param properties - the TypeScript properties of a `CfnParameterGroupProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::DAX::ParameterGroup` resource.\n */\n// @ts-ignore TS6133\nfunction cfnParameterGroupPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnParameterGroupPropsValidator(properties).assertSuccess();\n    return {\n        Description: cdk.stringToCloudFormation(properties.description),\n        ParameterGroupName: cdk.stringToCloudFormation(properties.parameterGroupName),\n        ParameterNameValues: cdk.objectToCloudFormation(properties.parameterNameValues),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnParameterGroupPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnParameterGroupProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnParameterGroupProps>();\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('parameterGroupName', 'ParameterGroupName', properties.ParameterGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.ParameterGroupName) : undefined);\n    ret.addPropertyResult('parameterNameValues', 'ParameterNameValues', properties.ParameterNameValues != null ? cfn_parse.FromCloudFormation.getAny(properties.ParameterNameValues) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::DAX::ParameterGroup`\n *\n * A named set of parameters that are applied to all of the nodes in a DAX cluster.\n *\n * @cloudformationResource AWS::DAX::ParameterGroup\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-parametergroup.html\n */\nexport class CfnParameterGroup extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::DAX::ParameterGroup\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnParameterGroup {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnParameterGroupPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnParameterGroup(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * A description of the parameter group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-parametergroup.html#cfn-dax-parametergroup-description\n     */\n    public description: string | undefined;\n\n    /**\n     * The name of the parameter group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-parametergroup.html#cfn-dax-parametergroup-parametergroupname\n     */\n    public parameterGroupName: string | undefined;\n\n    /**\n     * An array of name-value pairs for the parameters in the group. Each element in the array represents a single parameter.\n     *\n     * > `record-ttl-millis` and `query-ttl-millis` are the only supported parameter names. For more details, see [Configuring TTL Settings](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DAX.cluster-management.html#DAX.cluster-management.custom-settings.ttl) .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-parametergroup.html#cfn-dax-parametergroup-parameternamevalues\n     */\n    public parameterNameValues: any | cdk.IResolvable | undefined;\n\n    /**\n     * Create a new `AWS::DAX::ParameterGroup`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnParameterGroupProps = {}) {\n        super(scope, id, { type: CfnParameterGroup.CFN_RESOURCE_TYPE_NAME, properties: props });\n\n        this.description = props.description;\n        this.parameterGroupName = props.parameterGroupName;\n        this.parameterNameValues = props.parameterNameValues;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnParameterGroup.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            description: this.description,\n            parameterGroupName: this.parameterGroupName,\n            parameterNameValues: this.parameterNameValues,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnParameterGroupPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnSubnetGroup`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-subnetgroup.html\n */\nexport interface CfnSubnetGroupProps {\n\n    /**\n     * A list of VPC subnet IDs for the subnet group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-subnetgroup.html#cfn-dax-subnetgroup-subnetids\n     */\n    readonly subnetIds: string[];\n\n    /**\n     * The description of the subnet group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-subnetgroup.html#cfn-dax-subnetgroup-description\n     */\n    readonly description?: string;\n\n    /**\n     * The name of the subnet group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-subnetgroup.html#cfn-dax-subnetgroup-subnetgroupname\n     */\n    readonly subnetGroupName?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnSubnetGroupProps`\n *\n * @param properties - the TypeScript properties of a `CfnSubnetGroupProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnSubnetGroupPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('subnetGroupName', cdk.validateString)(properties.subnetGroupName));\n    errors.collect(cdk.propertyValidator('subnetIds', cdk.requiredValidator)(properties.subnetIds));\n    errors.collect(cdk.propertyValidator('subnetIds', cdk.listValidator(cdk.validateString))(properties.subnetIds));\n    return errors.wrap('supplied properties not correct for \"CfnSubnetGroupProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::DAX::SubnetGroup` resource\n *\n * @param properties - the TypeScript properties of a `CfnSubnetGroupProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::DAX::SubnetGroup` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSubnetGroupPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSubnetGroupPropsValidator(properties).assertSuccess();\n    return {\n        SubnetIds: cdk.listMapper(cdk.stringToCloudFormation)(properties.subnetIds),\n        Description: cdk.stringToCloudFormation(properties.description),\n        SubnetGroupName: cdk.stringToCloudFormation(properties.subnetGroupName),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSubnetGroupPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSubnetGroupProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSubnetGroupProps>();\n    ret.addPropertyResult('subnetIds', 'SubnetIds', cfn_parse.FromCloudFormation.getStringArray(properties.SubnetIds));\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('subnetGroupName', 'SubnetGroupName', properties.SubnetGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.SubnetGroupName) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::DAX::SubnetGroup`\n *\n * Creates a new subnet group.\n *\n * @cloudformationResource AWS::DAX::SubnetGroup\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-subnetgroup.html\n */\nexport class CfnSubnetGroup extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::DAX::SubnetGroup\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnSubnetGroup {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnSubnetGroupPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnSubnetGroup(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * A list of VPC subnet IDs for the subnet group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-subnetgroup.html#cfn-dax-subnetgroup-subnetids\n     */\n    public subnetIds: string[];\n\n    /**\n     * The description of the subnet group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-subnetgroup.html#cfn-dax-subnetgroup-description\n     */\n    public description: string | undefined;\n\n    /**\n     * The name of the subnet group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-subnetgroup.html#cfn-dax-subnetgroup-subnetgroupname\n     */\n    public subnetGroupName: string | undefined;\n\n    /**\n     * Create a new `AWS::DAX::SubnetGroup`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnSubnetGroupProps) {\n        super(scope, id, { type: CfnSubnetGroup.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'subnetIds', this);\n\n        this.subnetIds = props.subnetIds;\n        this.description = props.description;\n        this.subnetGroupName = props.subnetGroupName;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnSubnetGroup.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            subnetIds: this.subnetIds,\n            description: this.description,\n            subnetGroupName: this.subnetGroupName,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnSubnetGroupPropsToCloudFormation(props);\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
