{
  "version": 3,
  "sources": ["stream.ts"],
  "sourcesContent": ["import * as lambda from '../../aws-lambda';\nimport { Duration } from '../../core';\n\n/**\n * The set of properties for event sources that follow the streaming model,\n * such as, Dynamo, Kinesis and Kafka.\n */\nexport interface BaseStreamEventSourceProps{\n  /**\n   * The largest number of records that AWS Lambda will retrieve from your event\n   * source at the time of invoking your function. Your function receives an\n   * event with all the retrieved records.\n   *\n   * Valid Range:\n   * * Minimum value of 1\n   * * Maximum value of:\n   *   * 1000 for {@link DynamoEventSource}\n   *   * 10000 for {@link KinesisEventSource}, {@link ManagedKafkaEventSource} and {@link SelfManagedKafkaEventSource}\n   *\n   * @default 100\n   */\n  readonly batchSize?: number;\n\n  /**\n   * An Amazon SQS queue or Amazon SNS topic destination for discarded records.\n   *\n   * @default discarded records are ignored\n   */\n  readonly onFailure?: lambda.IEventSourceDlq;\n\n  /**\n   * Where to begin consuming the stream.\n   */\n  readonly startingPosition: lambda.StartingPosition;\n\n  /**\n   * The maximum amount of time to gather records before invoking the function.\n   * Maximum of Duration.minutes(5)\n   *\n   * @default Duration.seconds(0)\n   */\n  readonly maxBatchingWindow?: Duration;\n\n  /**\n   * If the stream event source mapping should be enabled.\n   *\n   * @default true\n   */\n  readonly enabled?: boolean;\n}\n\n/**\n * The set of properties for event sources that follow the streaming model,\n * such as, Dynamo, Kinesis.\n */\nexport interface StreamEventSourceProps extends BaseStreamEventSourceProps {\n  /**\n   * If the function returns an error, split the batch in two and retry.\n   *\n   * @default false\n   */\n  readonly bisectBatchOnError?: boolean;\n\n  /**\n   * The maximum age of a record that Lambda sends to a function for processing.\n   * Valid Range:\n   * * Minimum value of 60 seconds\n   * * Maximum value of 7 days\n   *\n   * @default - the retention period configured on the stream\n   */\n  readonly maxRecordAge?: Duration;\n\n  /**\n   * Maximum number of retry attempts\n   * Valid Range:\n   * * Minimum value of 0\n   * * Maximum value of 10000\n   *\n   * @default - retry until the record expires\n   */\n  readonly retryAttempts?: number;\n\n  /**\n   * The number of batches to process from each shard concurrently.\n   * Valid Range:\n   * * Minimum value of 1\n   * * Maximum value of 10\n   *\n   * @default 1\n   */\n  readonly parallelizationFactor?: number;\n\n  /**\n   * Allow functions to return partially successful responses for a batch of records.\n   *\n   * @see https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html#services-ddb-batchfailurereporting\n   *\n   * @default false\n   */\n  readonly reportBatchItemFailures?: boolean;\n\n  /**\n   * The size of the tumbling windows to group records sent to DynamoDB or Kinesis\n   * Valid Range: 0 - 15 minutes\n   *\n   * @default - None\n   */\n  readonly tumblingWindow?: Duration;\n}\n\n/**\n * Use an stream as an event source for AWS Lambda.\n */\nexport abstract class StreamEventSource implements lambda.IEventSource {\n  protected constructor(protected readonly props: StreamEventSourceProps) {\n  }\n\n  public abstract bind(_target: lambda.IFunction): void;\n\n  protected enrichMappingOptions(options: lambda.EventSourceMappingOptions): lambda.EventSourceMappingOptions {\n    return {\n      ...options,\n      batchSize: this.props.batchSize || 100,\n      bisectBatchOnError: this.props.bisectBatchOnError,\n      startingPosition: this.props.startingPosition,\n      reportBatchItemFailures: this.props.reportBatchItemFailures,\n      maxBatchingWindow: this.props.maxBatchingWindow,\n      maxRecordAge: this.props.maxRecordAge,\n      retryAttempts: this.props.retryAttempts,\n      parallelizationFactor: this.props.parallelizationFactor,\n      onFailure: this.props.onFailure,\n      tumblingWindow: this.props.tumblingWindow,\n      enabled: this.props.enabled,\n    };\n  }\n}\n"],
  "mappings": "wNAkHA,MAAsB,iBAAiB,CACrC,YAAyC,MAA6B,CAA7B,KAAA,MAAA,iGAK/B,qBAAqB,QAAyC,0FAC/D,IACF,QACH,UAAW,KAAK,MAAM,WAAa,IACnC,mBAAoB,KAAK,MAAM,mBAC/B,iBAAkB,KAAK,MAAM,iBAC7B,wBAAyB,KAAK,MAAM,wBACpC,kBAAmB,KAAK,MAAM,kBAC9B,aAAc,KAAK,MAAM,aACzB,cAAe,KAAK,MAAM,cAC1B,sBAAuB,KAAK,MAAM,sBAClC,UAAW,KAAK,MAAM,UACtB,eAAgB,KAAK,MAAM,eAC3B,QAAS,KAAK,MAAM,UAnB1B,QAAA,kBAAA",
  "names": []
}
