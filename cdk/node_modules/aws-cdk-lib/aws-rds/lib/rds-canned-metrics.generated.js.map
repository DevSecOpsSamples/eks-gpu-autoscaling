{
  "version": 3,
  "sources": ["rds-canned-metrics.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nexport class RDSMetrics {\n  public static cpuUtilizationAverage(dimensions: { DBInstanceIdentifier: string }): MetricWithDims<{ DBInstanceIdentifier: string }>;\n  public static cpuUtilizationAverage(dimensions: { DBClusterIdentifier: string }): MetricWithDims<{ DBClusterIdentifier: string }>;\n  public static cpuUtilizationAverage(dimensions: any) {\n    return {\n      namespace: 'AWS/RDS',\n      metricName: 'CPUUtilization',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static readLatencyAverage(dimensions: { DBInstanceIdentifier: string }): MetricWithDims<{ DBInstanceIdentifier: string }>;\n  public static readLatencyAverage(dimensions: { DBClusterIdentifier: string }): MetricWithDims<{ DBClusterIdentifier: string }>;\n  public static readLatencyAverage(dimensions: any) {\n    return {\n      namespace: 'AWS/RDS',\n      metricName: 'ReadLatency',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static databaseConnectionsSum(dimensions: { DBInstanceIdentifier: string }): MetricWithDims<{ DBInstanceIdentifier: string }>;\n  public static databaseConnectionsSum(dimensions: { DBClusterIdentifier: string }): MetricWithDims<{ DBClusterIdentifier: string }>;\n  public static databaseConnectionsSum(dimensions: any) {\n    return {\n      namespace: 'AWS/RDS',\n      metricName: 'DatabaseConnections',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static freeStorageSpaceAverage(dimensions: { DBInstanceIdentifier: string }): MetricWithDims<{ DBInstanceIdentifier: string }>;\n  public static freeStorageSpaceAverage(dimensions: { DBClusterIdentifier: string }): MetricWithDims<{ DBClusterIdentifier: string }>;\n  public static freeStorageSpaceAverage(dimensions: any) {\n    return {\n      namespace: 'AWS/RDS',\n      metricName: 'FreeStorageSpace',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static freeableMemoryAverage(dimensions: { DBInstanceIdentifier: string }): MetricWithDims<{ DBInstanceIdentifier: string }>;\n  public static freeableMemoryAverage(dimensions: { DBClusterIdentifier: string }): MetricWithDims<{ DBClusterIdentifier: string }>;\n  public static freeableMemoryAverage(dimensions: any) {\n    return {\n      namespace: 'AWS/RDS',\n      metricName: 'FreeableMemory',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static readThroughputAverage(dimensions: { DBInstanceIdentifier: string }): MetricWithDims<{ DBInstanceIdentifier: string }>;\n  public static readThroughputAverage(dimensions: { DBClusterIdentifier: string }): MetricWithDims<{ DBClusterIdentifier: string }>;\n  public static readThroughputAverage(dimensions: any) {\n    return {\n      namespace: 'AWS/RDS',\n      metricName: 'ReadThroughput',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static readIopsAverage(dimensions: { DBInstanceIdentifier: string }): MetricWithDims<{ DBInstanceIdentifier: string }>;\n  public static readIopsAverage(dimensions: { DBClusterIdentifier: string }): MetricWithDims<{ DBClusterIdentifier: string }>;\n  public static readIopsAverage(dimensions: any) {\n    return {\n      namespace: 'AWS/RDS',\n      metricName: 'ReadIOPS',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static writeLatencyAverage(dimensions: { DBInstanceIdentifier: string }): MetricWithDims<{ DBInstanceIdentifier: string }>;\n  public static writeLatencyAverage(dimensions: { DBClusterIdentifier: string }): MetricWithDims<{ DBClusterIdentifier: string }>;\n  public static writeLatencyAverage(dimensions: any) {\n    return {\n      namespace: 'AWS/RDS',\n      metricName: 'WriteLatency',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static writeThroughputAverage(dimensions: { DBInstanceIdentifier: string }): MetricWithDims<{ DBInstanceIdentifier: string }>;\n  public static writeThroughputAverage(dimensions: { DBClusterIdentifier: string }): MetricWithDims<{ DBClusterIdentifier: string }>;\n  public static writeThroughputAverage(dimensions: any) {\n    return {\n      namespace: 'AWS/RDS',\n      metricName: 'WriteThroughput',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static writeIopsAverage(dimensions: { DBInstanceIdentifier: string }): MetricWithDims<{ DBInstanceIdentifier: string }>;\n  public static writeIopsAverage(dimensions: { DBClusterIdentifier: string }): MetricWithDims<{ DBClusterIdentifier: string }>;\n  public static writeIopsAverage(dimensions: any) {\n    return {\n      namespace: 'AWS/RDS',\n      metricName: 'WriteIOPS',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n}\ntype MetricWithDims<D> = { namespace: string, metricName: string, statistic: string, dimensionsMap: D };\n"],
  "mappings": "8FAIA,MAAa,UAAU,OAGP,uBAAsB,WAAe,CACjD,MAAO,CACL,UAAW,UACX,WAAY,iBACZ,cAAe,WACf,UAAW,iBAKD,oBAAmB,WAAe,CAC9C,MAAO,CACL,UAAW,UACX,WAAY,cACZ,cAAe,WACf,UAAW,iBAKD,wBAAuB,WAAe,CAClD,MAAO,CACL,UAAW,UACX,WAAY,sBACZ,cAAe,WACf,UAAW,aAKD,yBAAwB,WAAe,CACnD,MAAO,CACL,UAAW,UACX,WAAY,mBACZ,cAAe,WACf,UAAW,iBAKD,uBAAsB,WAAe,CACjD,MAAO,CACL,UAAW,UACX,WAAY,iBACZ,cAAe,WACf,UAAW,iBAKD,uBAAsB,WAAe,CACjD,MAAO,CACL,UAAW,UACX,WAAY,iBACZ,cAAe,WACf,UAAW,iBAKD,iBAAgB,WAAe,CAC3C,MAAO,CACL,UAAW,UACX,WAAY,WACZ,cAAe,WACf,UAAW,iBAKD,qBAAoB,WAAe,CAC/C,MAAO,CACL,UAAW,UACX,WAAY,eACZ,cAAe,WACf,UAAW,iBAKD,wBAAuB,WAAe,CAClD,MAAO,CACL,UAAW,UACX,WAAY,kBACZ,cAAe,WACf,UAAW,iBAKD,kBAAiB,WAAe,CAC5C,MAAO,CACL,UAAW,UACX,WAAY,YACZ,cAAe,WACf,UAAW,YAlGjB,QAAA,WAAA",
  "names": []
}
