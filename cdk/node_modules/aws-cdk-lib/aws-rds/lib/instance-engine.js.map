{
  "version": 3,
  "sources": ["instance-engine.ts"],
  "sourcesContent": ["import * as iam from '../../aws-iam';\nimport * as secretsmanager from '../../aws-secretsmanager';\nimport { Construct } from 'constructs';\nimport { IEngine } from './engine';\nimport { EngineVersion } from './engine-version';\nimport { IOptionGroup, OptionGroup } from './option-group';\n\n/**\n * The options passed to {@link IInstanceEngine.bind}.\n */\nexport interface InstanceEngineBindOptions {\n  /**\n   * The Active Directory directory ID to create the DB instance in.\n   *\n   * @default - none (it's an optional field)\n   */\n  readonly domain?: string;\n\n  /**\n   * The timezone of the database, set by the customer.\n   *\n   * @default - none (it's an optional field)\n   */\n  readonly timezone?: string;\n\n  /**\n   * The role used for S3 importing.\n   *\n   * @default - none\n   */\n  readonly s3ImportRole?: iam.IRole;\n\n  /**\n   * The role used for S3 exporting.\n   *\n   * @default - none\n   */\n  readonly s3ExportRole?: iam.IRole;\n\n  /**\n   * The option group of the database\n   *\n   * @default - none\n   */\n  readonly optionGroup?: IOptionGroup;\n}\n\n/**\n * The type returned from the {@link IInstanceEngine.bind} method.\n */\nexport interface InstanceEngineConfig {\n  /**\n   * Features supported by the database engine.\n   *\n   * @see https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DBEngineVersion.html\n   *\n   * @default - no features\n   */\n  readonly features?: InstanceEngineFeatures;\n\n  /**\n   * Option group of the database.\n   *\n   * @default - none\n   */\n  readonly optionGroup?: IOptionGroup;\n}\n\n/**\n * Represents Database Engine features\n */\nexport interface InstanceEngineFeatures {\n  /**\n   * Feature name for the DB instance that the IAM role to access the S3 bucket for import\n   * is to be associated with.\n   *\n   * @default - no s3Import feature name\n   */\n  readonly s3Import?: string;\n\n  /**\n   * Feature name for the DB instance that the IAM role to export to S3 bucket is to be\n   * associated with.\n   *\n   * @default - no s3Export feature name\n   */\n  readonly s3Export?: string;\n}\n\n/**\n * Interface representing a database instance (as opposed to cluster) engine.\n */\nexport interface IInstanceEngine extends IEngine {\n  /** The application used by this engine to perform rotation for a single-user scenario. */\n  readonly singleUserRotationApplication: secretsmanager.SecretRotationApplication;\n\n  /** The application used by this engine to perform rotation for a multi-user scenario. */\n  readonly multiUserRotationApplication: secretsmanager.SecretRotationApplication;\n\n  /**\n   * Whether this engine supports automatic backups of a read replica instance.\n   *\n   * @default false\n   */\n  readonly supportsReadReplicaBackups?: boolean;\n\n  /**\n   * Method called when the engine is used to create a new instance.\n   */\n  bindToInstance(scope: Construct, options: InstanceEngineBindOptions): InstanceEngineConfig;\n}\n\ninterface InstanceEngineBaseProps {\n  readonly engineType: string;\n  readonly singleUserRotationApplication: secretsmanager.SecretRotationApplication;\n  readonly multiUserRotationApplication: secretsmanager.SecretRotationApplication;\n  readonly version?: EngineVersion;\n  readonly parameterGroupFamily?: string;\n  readonly engineFamily?: string;\n  readonly features?: InstanceEngineFeatures;\n}\n\nabstract class InstanceEngineBase implements IInstanceEngine {\n  public readonly engineType: string;\n  public readonly engineVersion?: EngineVersion;\n  public readonly parameterGroupFamily?: string;\n  public readonly singleUserRotationApplication: secretsmanager.SecretRotationApplication;\n  public readonly multiUserRotationApplication: secretsmanager.SecretRotationApplication;\n  public readonly engineFamily?: string;\n  public readonly supportsReadReplicaBackups?: boolean;\n\n  private readonly features?: InstanceEngineFeatures;\n\n  constructor(props: InstanceEngineBaseProps) {\n    this.engineType = props.engineType;\n    this.features = props.features;\n    this.singleUserRotationApplication = props.singleUserRotationApplication;\n    this.multiUserRotationApplication = props.multiUserRotationApplication;\n    this.engineVersion = props.version;\n    this.parameterGroupFamily = props.parameterGroupFamily ??\n      (this.engineVersion ? `${this.engineType}${this.engineVersion.majorVersion}` : undefined);\n    this.engineFamily = props.engineFamily;\n  }\n\n  public bindToInstance(_scope: Construct, options: InstanceEngineBindOptions): InstanceEngineConfig {\n    if (options.timezone && !this.supportsTimezone) {\n      throw new Error(`timezone property can not be configured for ${this.engineType}`);\n    }\n    return {\n      features: this.features,\n      optionGroup: options.optionGroup,\n    };\n  }\n\n  /** Defines whether this Instance Engine can support timezone properties. */\n  protected get supportsTimezone() { return false; }\n}\n\n/**\n * The versions for the MariaDB instance engines\n * (those returned by {@link DatabaseInstanceEngine.mariaDb}).\n */\nexport class MariaDbEngineVersion {\n  /**\n   * Version \"10.0\" (only a major version, without a specific minor version).\n   * @deprecated MariaDB 10.0 will reach end of life on May 18, 2021\n  */\n  public static readonly VER_10_0 = MariaDbEngineVersion.of('10.0', '10.0');\n  /**\n   * Version \"10.0.17\".\n   * @deprecated MariaDB 10.0 will reach end of life on May 18, 2021\n  */\n  public static readonly VER_10_0_17 = MariaDbEngineVersion.of('10.0.17', '10.0');\n  /**\n   * Version \"10.0.24\".\n   * @deprecated MariaDB 10.0 will reach end of life on May 18, 2021\n  */\n  public static readonly VER_10_0_24 = MariaDbEngineVersion.of('10.0.24', '10.0');\n  /**\n   * Version \"10.0.28\".\n   * @deprecated MariaDB 10.0 will reach end of life on May 18, 2021\n  */\n  public static readonly VER_10_0_28 = MariaDbEngineVersion.of('10.0.28', '10.0');\n  /**\n   * Version \"10.0.31\".\n   * @deprecated MariaDB 10.0 will reach end of life on May 18, 2021\n  */\n  public static readonly VER_10_0_31 = MariaDbEngineVersion.of('10.0.31', '10.0');\n  /**\n   * Version \"10.0.32\".\n   * @deprecated MariaDB 10.0 will reach end of life on May 18, 2021\n  */\n  public static readonly VER_10_0_32 = MariaDbEngineVersion.of('10.0.32', '10.0');\n  /**\n   * Version \"10.0.34\".\n   * @deprecated MariaDB 10.0 will reach end of life on May 18, 2021\n  */\n  public static readonly VER_10_0_34 = MariaDbEngineVersion.of('10.0.34', '10.0');\n  /**\n   * Version \"10.0.35\".\n   * @deprecated MariaDB 10.0 will reach end of life on May 18, 2021\n  */\n  public static readonly VER_10_0_35 = MariaDbEngineVersion.of('10.0.35', '10.0');\n\n  /**\n   * Version \"10.1\" (only a major version, without a specific minor version).\n   * @deprecated MariaDB 10.1 will reach end of life on May 18, 2021\n  */\n  public static readonly VER_10_1 = MariaDbEngineVersion.of('10.1', '10.1');\n  /**\n   * Version \"10.1.14\".\n   * @deprecated MariaDB 10.1 will reach end of life on May 18, 2021\n  */\n  public static readonly VER_10_1_14 = MariaDbEngineVersion.of('10.1.14', '10.1');\n  /**\n   * Version \"10.1.19\".\n   * @deprecated MariaDB 10.1 will reach end of life on May 18, 2021\n  */\n  public static readonly VER_10_1_19 = MariaDbEngineVersion.of('10.1.19', '10.1');\n  /**\n   * Version \"10.1.23\".\n   * @deprecated MariaDB 10.1 will reach end of life on May 18, 2021\n  */\n  public static readonly VER_10_1_23 = MariaDbEngineVersion.of('10.1.23', '10.1');\n  /**\n   * Version \"10.1.26\".\n   * @deprecated MariaDB 10.1 will reach end of life on May 18, 2021\n  */\n  public static readonly VER_10_1_26 = MariaDbEngineVersion.of('10.1.26', '10.1');\n  /**\n   * Version \"10.1.31\".\n   * @deprecated MariaDB 10.1 will reach end of life on May 18, 2021\n  */\n  public static readonly VER_10_1_31 = MariaDbEngineVersion.of('10.1.31', '10.1');\n  /**\n   * Version \"10.1.34\".\n   * @deprecated MariaDB 10.1 will reach end of life on May 18, 2021\n  */\n  public static readonly VER_10_1_34 = MariaDbEngineVersion.of('10.1.34', '10.1');\n\n  /** Version \"10.2\" (only a major version, without a specific minor version). */\n  public static readonly VER_10_2 = MariaDbEngineVersion.of('10.2', '10.2');\n  /** Version \"10.2.11\". */\n  public static readonly VER_10_2_11 = MariaDbEngineVersion.of('10.2.11', '10.2');\n  /** Version \"10.2.12\". */\n  public static readonly VER_10_2_12 = MariaDbEngineVersion.of('10.2.12', '10.2');\n  /** Version \"10.2.15\". */\n  public static readonly VER_10_2_15 = MariaDbEngineVersion.of('10.2.15', '10.2');\n  /** Version \"10.2.21\". */\n  public static readonly VER_10_2_21 = MariaDbEngineVersion.of('10.2.21', '10.2');\n  /** Version \"10.2.32\". */\n  public static readonly VER_10_2_32 = MariaDbEngineVersion.of('10.2.32', '10.2');\n  /** Version \"10.2.37\". */\n  public static readonly VER_10_2_37 = MariaDbEngineVersion.of('10.2.37', '10.2');\n  /** Version \"10.2.39\". */\n  public static readonly VER_10_2_39 = MariaDbEngineVersion.of('10.2.39', '10.2');\n  /** Version \"10.2.40\". */\n  public static readonly VER_10_2_40 = MariaDbEngineVersion.of('10.2.40', '10.2');\n  /** Version \"10.2.41\". */\n  public static readonly VER_10_2_41 = MariaDbEngineVersion.of('10.2.41', '10.2');\n\n  /** Version \"10.3\" (only a major version, without a specific minor version). */\n  public static readonly VER_10_3 = MariaDbEngineVersion.of('10.3', '10.3');\n  /** Version \"10.3.8\". */\n  public static readonly VER_10_3_8 = MariaDbEngineVersion.of('10.3.8', '10.3');\n  /** Version \"10.3.13\". */\n  public static readonly VER_10_3_13 = MariaDbEngineVersion.of('10.3.13', '10.3');\n  /** Version \"10.3.20\". */\n  public static readonly VER_10_3_20 = MariaDbEngineVersion.of('10.3.20', '10.3');\n  /** Version \"10.3.23\". */\n  public static readonly VER_10_3_23 = MariaDbEngineVersion.of('10.3.23', '10.3');\n  /** Version \"10.3.28\". */\n  public static readonly VER_10_3_28 = MariaDbEngineVersion.of('10.3.28', '10.3');\n  /** Version \"10.3.31\". */\n  public static readonly VER_10_3_31 = MariaDbEngineVersion.of('10.3.31', '10.3');\n  /** Version \"10.3.32\". */\n  public static readonly VER_10_3_32 = MariaDbEngineVersion.of('10.3.32', '10.3');\n\n  /** Version \"10.4\" (only a major version, without a specific minor version). */\n  public static readonly VER_10_4 = MariaDbEngineVersion.of('10.4', '10.4');\n  /** Version \"10.4.8\". */\n  public static readonly VER_10_4_8 = MariaDbEngineVersion.of('10.4.8', '10.4');\n  /** Version \"10.4.13\". */\n  public static readonly VER_10_4_13 = MariaDbEngineVersion.of('10.4.13', '10.4');\n  /** Version \"10.4.18\". */\n  public static readonly VER_10_4_18 = MariaDbEngineVersion.of('10.4.18', '10.4');\n  /** Version \"10.4.21\". */\n  public static readonly VER_10_4_21 = MariaDbEngineVersion.of('10.4.21', '10.4');\n  /** Version \"10.4.22\". */\n  public static readonly VER_10_4_22 = MariaDbEngineVersion.of('10.4.22', '10.4');\n\n  /** Version \"10.5\" (only a major version, without a specific minor version). */\n  public static readonly VER_10_5 = MariaDbEngineVersion.of('10.5', '10.5');\n  /** Version \"10.5.8\". */\n  public static readonly VER_10_5_8 = MariaDbEngineVersion.of('10.5.8', '10.5');\n  /** Version \"10.5.9\". */\n  public static readonly VER_10_5_9 = MariaDbEngineVersion.of('10.5.9', '10.5');\n  /** Version \"10.5.12\". */\n  public static readonly VER_10_5_12 = MariaDbEngineVersion.of('10.5.12', '10.5');\n  /** Version \"10.5.13\". */\n  public static readonly VER_10_5_13 = MariaDbEngineVersion.of('10.5.13', '10.5');\n\n  /**\n   * Create a new MariaDbEngineVersion with an arbitrary version.\n   *\n   * @param mariaDbFullVersion the full version string,\n   *   for example \"10.5.28\"\n   * @param mariaDbMajorVersion the major version of the engine,\n   *   for example \"10.5\"\n   */\n  public static of(mariaDbFullVersion: string, mariaDbMajorVersion: string): MariaDbEngineVersion {\n    return new MariaDbEngineVersion(mariaDbFullVersion, mariaDbMajorVersion);\n  }\n\n  /** The full version string, for example, \"10.5.28\". */\n  public readonly mariaDbFullVersion: string;\n  /** The major version of the engine, for example, \"10.5\". */\n  public readonly mariaDbMajorVersion: string;\n\n  private constructor(mariaDbFullVersion: string, mariaDbMajorVersion: string) {\n    this.mariaDbFullVersion = mariaDbFullVersion;\n    this.mariaDbMajorVersion = mariaDbMajorVersion;\n  }\n}\n\n/**\n * Properties for MariaDB instance engines.\n * Used in {@link DatabaseInstanceEngine.mariaDb}.\n */\nexport interface MariaDbInstanceEngineProps {\n  /** The exact version of the engine to use. */\n  readonly version: MariaDbEngineVersion;\n}\n\nclass MariaDbInstanceEngine extends InstanceEngineBase {\n  public readonly supportsReadReplicaBackups = true;\n\n  constructor(version?: MariaDbEngineVersion) {\n    super({\n      engineType: 'mariadb',\n      singleUserRotationApplication: secretsmanager.SecretRotationApplication.MARIADB_ROTATION_SINGLE_USER,\n      multiUserRotationApplication: secretsmanager.SecretRotationApplication.MARIADB_ROTATION_MULTI_USER,\n      version: version\n        ? {\n          fullVersion: version.mariaDbFullVersion,\n          majorVersion: version.mariaDbMajorVersion,\n        }\n        : undefined,\n    });\n  }\n\n  public bindToInstance(scope: Construct, options: InstanceEngineBindOptions): InstanceEngineConfig {\n    if (options.domain) {\n      throw new Error(`domain property cannot be configured for ${this.engineType}`);\n    }\n    return super.bindToInstance(scope, options);\n  }\n}\n\n/**\n * The versions for the MySQL instance engines\n * (those returned by {@link DatabaseInstanceEngine.mysql}).\n */\nexport class MysqlEngineVersion {\n  /**\n   * Version \"5.5\" (only a major version, without a specific minor version).\n   * @deprecated MySQL 5.5 will reach end of life on May 25, 2021\n  */\n  public static readonly VER_5_5 = MysqlEngineVersion.of('5.5', '5.5');\n  /**\n   * Version \"5.5.46\".\n   * @deprecated MySQL 5.5 will reach end of life on May 25, 2021\n  */\n  public static readonly VER_5_5_46 = MysqlEngineVersion.of('5.5.46', '5.5');\n  /**\n   * Version \"5.5.53\".\n   * @deprecated MySQL 5.5 will reach end of life on May 25, 2021\n  */\n  public static readonly VER_5_5_53 = MysqlEngineVersion.of('5.5.53', '5.5');\n  /**\n   * Version \"5.5.57\".\n   * @deprecated MySQL 5.5 will reach end of life on May 25, 2021\n  */\n  public static readonly VER_5_5_57 = MysqlEngineVersion.of('5.5.57', '5.5');\n  /**\n   * Version \"5.5.59\".\n   * @deprecated MySQL 5.5 will reach end of life on May 25, 2021\n  */\n  public static readonly VER_5_5_59 = MysqlEngineVersion.of('5.5.59', '5.5');\n  /**\n   * Version \"5.5.61\".\n   * @deprecated MySQL 5.5 will reach end of life on May 25, 2021\n  */\n  public static readonly VER_5_5_61 = MysqlEngineVersion.of('5.5.61', '5.5');\n\n  /**\n   * Version \"5.6\" (only a major version, without a specific minor version).\n   * @deprecated MySQL 5.6 will reach end of life on August 3, 2021\n  */\n  public static readonly VER_5_6 = MysqlEngineVersion.of('5.6', '5.6');\n  /**\n   * Version \"5.6.34\".\n   * @deprecated MySQL 5.6 will reach end of life on August 3, 2021\n  */\n  public static readonly VER_5_6_34 = MysqlEngineVersion.of('5.6.34', '5.6');\n  /**\n   * Version \"5.6.35\".\n   * @deprecated MySQL 5.6 will reach end of life on August 3, 2021\n  */\n  public static readonly VER_5_6_35 = MysqlEngineVersion.of('5.6.35', '5.6');\n  /**\n   * Version \"5.6.37\".\n   * @deprecated MySQL 5.6 will reach end of life on August 3, 2021\n  */\n  public static readonly VER_5_6_37 = MysqlEngineVersion.of('5.6.37', '5.6');\n  /**\n   * Version \"5.6.39\".\n   * @deprecated MySQL 5.6 will reach end of life on August 3, 2021\n  */\n  public static readonly VER_5_6_39 = MysqlEngineVersion.of('5.6.39', '5.6');\n  /**\n   * Version \"5.6.40\".\n   * @deprecated MySQL 5.6 will reach end of life on August 3, 2021\n  */\n  public static readonly VER_5_6_40 = MysqlEngineVersion.of('5.6.40', '5.6');\n  /**\n   * Version \"5.6.41\".\n   * @deprecated MySQL 5.6 will reach end of life on August 3, 2021\n  */\n  public static readonly VER_5_6_41 = MysqlEngineVersion.of('5.6.41', '5.6');\n  /**\n   * Version \"5.6.43\".\n   * @deprecated MySQL 5.6 will reach end of life on August 3, 2021\n  */\n  public static readonly VER_5_6_43 = MysqlEngineVersion.of('5.6.43', '5.6');\n  /**\n   * Version \"5.6.44\".\n   * @deprecated MySQL 5.6 will reach end of life on August 3, 2021\n  */\n  public static readonly VER_5_6_44 = MysqlEngineVersion.of('5.6.44', '5.6');\n  /**\n   * Version \"5.6.46\".\n   * @deprecated MySQL 5.6 will reach end of life on August 3, 2021\n  */\n  public static readonly VER_5_6_46 = MysqlEngineVersion.of('5.6.46', '5.6');\n  /**\n   * Version \"5.6.48\".\n   * @deprecated MySQL 5.6 will reach end of life on August 3, 2021\n  */\n  public static readonly VER_5_6_48 = MysqlEngineVersion.of('5.6.48', '5.6');\n  /**\n   * Version \"5.6.49\".\n   * @deprecated MySQL 5.6 will reach end of life on August 3, 2021\n  */\n  public static readonly VER_5_6_49 = MysqlEngineVersion.of('5.6.49', '5.6');\n  /**\n   * Version \"5.6.51\".\n   * @deprecated MySQL 5.6 will reach end of life on August 3, 2021\n  */\n  public static readonly VER_5_6_51 = MysqlEngineVersion.of('5.6.51', '5.6');\n\n  /** Version \"5.7\" (only a major version, without a specific minor version). */\n  public static readonly VER_5_7 = MysqlEngineVersion.of('5.7', '5.7');\n  /** Version \"5.7.16\". */\n  public static readonly VER_5_7_16 = MysqlEngineVersion.of('5.7.16', '5.7');\n  /** Version \"5.7.17\". */\n  public static readonly VER_5_7_17 = MysqlEngineVersion.of('5.7.17', '5.7');\n  /** Version \"5.7.19\". */\n  public static readonly VER_5_7_19 = MysqlEngineVersion.of('5.7.19', '5.7');\n  /** Version \"5.7.21\". */\n  public static readonly VER_5_7_21 = MysqlEngineVersion.of('5.7.21', '5.7');\n  /** Version \"5.7.22\". */\n  public static readonly VER_5_7_22 = MysqlEngineVersion.of('5.7.22', '5.7');\n  /** Version \"5.7.23\". */\n  public static readonly VER_5_7_23 = MysqlEngineVersion.of('5.7.23', '5.7');\n  /** Version \"5.7.24\". */\n  public static readonly VER_5_7_24 = MysqlEngineVersion.of('5.7.24', '5.7');\n  /** Version \"5.7.25\". */\n  public static readonly VER_5_7_25 = MysqlEngineVersion.of('5.7.25', '5.7');\n  /** Version \"5.7.26\". */\n  public static readonly VER_5_7_26 = MysqlEngineVersion.of('5.7.26', '5.7');\n  /** Version \"5.7.28\". */\n  public static readonly VER_5_7_28 = MysqlEngineVersion.of('5.7.28', '5.7');\n  /** Version \"5.7.30\". */\n  public static readonly VER_5_7_30 = MysqlEngineVersion.of('5.7.30', '5.7');\n  /** Version \"5.7.31\". */\n  public static readonly VER_5_7_31 = MysqlEngineVersion.of('5.7.31', '5.7');\n  /** Version \"5.7.33\". */\n  public static readonly VER_5_7_33 = MysqlEngineVersion.of('5.7.33', '5.7');\n  /** Version \"5.7.34\". */\n  public static readonly VER_5_7_34 = MysqlEngineVersion.of('5.7.34', '5.7');\n  /** Version \"5.7.35\". */\n  public static readonly VER_5_7_35 = MysqlEngineVersion.of('5.7.35', '5.7');\n  /** Version \"5.7.36\". */\n  public static readonly VER_5_7_36 = MysqlEngineVersion.of('5.7.36', '5.7');\n  /** Version \"5.7.37\". */\n  public static readonly VER_5_7_37 = MysqlEngineVersion.of('5.7.37', '5.7');\n\n  /** Version \"8.0\" (only a major version, without a specific minor version). */\n  public static readonly VER_8_0 = MysqlEngineVersion.of('8.0', '8.0');\n  /** Version \"8.0.11\". */\n  public static readonly VER_8_0_11 = MysqlEngineVersion.of('8.0.11', '8.0');\n  /** Version \"8.0.13\". */\n  public static readonly VER_8_0_13 = MysqlEngineVersion.of('8.0.13', '8.0');\n  /** Version \"8.0.15\". */\n  public static readonly VER_8_0_15 = MysqlEngineVersion.of('8.0.15', '8.0');\n  /** Version \"8.0.16\". */\n  public static readonly VER_8_0_16 = MysqlEngineVersion.of('8.0.16', '8.0');\n  /** Version \"8.0.17\". */\n  public static readonly VER_8_0_17 = MysqlEngineVersion.of('8.0.17', '8.0');\n  /** Version \"8.0.19\". */\n  public static readonly VER_8_0_19 = MysqlEngineVersion.of('8.0.19', '8.0');\n  /** Version \"8.0.20 \". */\n  public static readonly VER_8_0_20 = MysqlEngineVersion.of('8.0.20', '8.0');\n  /** Version \"8.0.21 \". */\n  public static readonly VER_8_0_21 = MysqlEngineVersion.of('8.0.21', '8.0');\n  /** Version \"8.0.23\". */\n  public static readonly VER_8_0_23 = MysqlEngineVersion.of('8.0.23', '8.0');\n  /** Version \"8.0.25\". */\n  public static readonly VER_8_0_25 = MysqlEngineVersion.of('8.0.25', '8.0');\n  /** Version \"8.0.26\". */\n  public static readonly VER_8_0_26 = MysqlEngineVersion.of('8.0.26', '8.0');\n  /** Version \"8.0.27\". */\n  public static readonly VER_8_0_27 = MysqlEngineVersion.of('8.0.27', '8.0');\n  /** Version \"8.0.28\". */\n  public static readonly VER_8_0_28 = MysqlEngineVersion.of('8.0.28', '8.0');\n\n  /**\n   * Create a new MysqlEngineVersion with an arbitrary version.\n   *\n   * @param mysqlFullVersion the full version string,\n   *   for example \"8.1.43\"\n   * @param mysqlMajorVersion the major version of the engine,\n   *   for example \"8.1\"\n   */\n  public static of(mysqlFullVersion: string, mysqlMajorVersion: string): MysqlEngineVersion {\n    return new MysqlEngineVersion(mysqlFullVersion, mysqlMajorVersion);\n  }\n\n  /** The full version string, for example, \"10.5.28\". */\n  public readonly mysqlFullVersion: string;\n  /** The major version of the engine, for example, \"10.5\". */\n  public readonly mysqlMajorVersion: string;\n\n  private constructor(mysqlFullVersion: string, mysqlMajorVersion: string) {\n    this.mysqlFullVersion = mysqlFullVersion;\n    this.mysqlMajorVersion = mysqlMajorVersion;\n  }\n}\n\n/**\n * Properties for MySQL instance engines.\n * Used in {@link DatabaseInstanceEngine.mysql}.\n */\nexport interface MySqlInstanceEngineProps {\n  /** The exact version of the engine to use. */\n  readonly version: MysqlEngineVersion;\n}\n\nclass MySqlInstanceEngine extends InstanceEngineBase {\n  public readonly supportsReadReplicaBackups = true;\n\n  constructor(version?: MysqlEngineVersion) {\n    super({\n      engineType: 'mysql',\n      singleUserRotationApplication: secretsmanager.SecretRotationApplication.MYSQL_ROTATION_SINGLE_USER,\n      multiUserRotationApplication: secretsmanager.SecretRotationApplication.MYSQL_ROTATION_MULTI_USER,\n      version: version\n        ? {\n          fullVersion: version.mysqlFullVersion,\n          majorVersion: version.mysqlMajorVersion,\n        }\n        : undefined,\n      engineFamily: 'MYSQL',\n    });\n  }\n}\n\n/**\n * Features supported by the Postgres database engine\n */\nexport interface PostgresEngineFeatures {\n  /**\n   * Whether this version of the Postgres engine supports the S3 data import feature.\n   *\n   * @default false\n   */\n  readonly s3Import?: boolean;\n\n  /**\n   * Whether this version of the Postgres engine supports the S3 data export feature.\n   *\n   * @default false\n   */\n  readonly s3Export?: boolean;\n}\n\n/**\n * The versions for the PostgreSQL instance engines\n * (those returned by {@link DatabaseInstanceEngine.postgres}).\n */\nexport class PostgresEngineVersion {\n  /**\n   * Version \"9.5\" (only a major version, without a specific minor version).\n   * @deprecated PostgreSQL 9.5 will reach end of life on February 16, 2021\n  */\n  public static readonly VER_9_5 = PostgresEngineVersion.of('9.5', '9.5');\n  /**\n   * Version \"9.5.2\".\n   * @deprecated PostgreSQL 9.5 will reach end of life on February 16, 2021\n  */\n  public static readonly VER_9_5_2 = PostgresEngineVersion.of('9.5.2', '9.5');\n  /**\n   * Version \"9.5.4\".\n   * @deprecated PostgreSQL 9.5 will reach end of life on February 16, 2021\n  */\n  public static readonly VER_9_5_4 = PostgresEngineVersion.of('9.5.4', '9.5');\n  /**\n   * Version \"9.5.6\".\n   * @deprecated PostgreSQL 9.5 will reach end of life on February 16, 2021\n  */\n  public static readonly VER_9_5_6 = PostgresEngineVersion.of('9.5.6', '9.5');\n  /**\n   * Version \"9.5.7\".\n   * @deprecated PostgreSQL 9.5 will reach end of life on February 16, 2021\n  */\n  public static readonly VER_9_5_7 = PostgresEngineVersion.of('9.5.7', '9.5');\n  /**\n   * Version \"9.5.9\".\n   * @deprecated PostgreSQL 9.5 will reach end of life on February 16, 2021\n  */\n  public static readonly VER_9_5_9 = PostgresEngineVersion.of('9.5.9', '9.5');\n  /**\n   * Version \"9.5.10\".\n   * @deprecated PostgreSQL 9.5 will reach end of life on February 16, 2021\n  */\n  public static readonly VER_9_5_10 = PostgresEngineVersion.of('9.5.10', '9.5');\n  /**\n   * Version \"9.5.12\".\n   * @deprecated PostgreSQL 9.5 will reach end of life on February 16, 2021\n  */\n  public static readonly VER_9_5_12 = PostgresEngineVersion.of('9.5.12', '9.5');\n  /**\n   * Version \"9.5.13\".\n   * @deprecated PostgreSQL 9.5 will reach end of life on February 16, 2021\n  */\n  public static readonly VER_9_5_13 = PostgresEngineVersion.of('9.5.13', '9.5');\n  /**\n   * Version \"9.5.14\".\n   * @deprecated PostgreSQL 9.5 will reach end of life on February 16, 2021\n  */\n  public static readonly VER_9_5_14 = PostgresEngineVersion.of('9.5.14', '9.5');\n  /**\n   * Version \"9.5.15\".\n   * @deprecated PostgreSQL 9.5 will reach end of life on February 16, 2021\n  */\n  public static readonly VER_9_5_15 = PostgresEngineVersion.of('9.5.15', '9.5');\n  /**\n   * Version \"9.5.16\".\n   * @deprecated PostgreSQL 9.5 will reach end of life on February 16, 2021\n  */\n  public static readonly VER_9_5_16 = PostgresEngineVersion.of('9.5.16', '9.5');\n  /**\n   * Version \"9.5.18\".\n   * @deprecated PostgreSQL 9.5 will reach end of life on February 16, 2021\n  */\n  public static readonly VER_9_5_18 = PostgresEngineVersion.of('9.5.18', '9.5');\n  /**\n   * Version \"9.5.19\".\n   * @deprecated PostgreSQL 9.5 will reach end of life on February 16, 2021\n  */\n  public static readonly VER_9_5_19 = PostgresEngineVersion.of('9.5.19', '9.5');\n  /**\n   * Version \"9.5.20\".\n   * @deprecated PostgreSQL 9.5 will reach end of life on February 16, 2021\n  */\n  public static readonly VER_9_5_20 = PostgresEngineVersion.of('9.5.20', '9.5');\n  /**\n   * Version \"9.5.21\".\n   * @deprecated PostgreSQL 9.5 will reach end of life on February 16, 2021\n  */\n  public static readonly VER_9_5_21 = PostgresEngineVersion.of('9.5.21', '9.5');\n  /**\n   * Version \"9.5.22\".\n   * @deprecated PostgreSQL 9.5 will reach end of life on February 16, 2021\n  */\n  public static readonly VER_9_5_22 = PostgresEngineVersion.of('9.5.22', '9.5');\n  /**\n   * Version \"9.5.23\".\n   * @deprecated PostgreSQL 9.5 will reach end of life on February 16, 2021\n  */\n  public static readonly VER_9_5_23 = PostgresEngineVersion.of('9.5.23', '9.5');\n  /**\n   * Version \"9.5.24\".\n   * @deprecated PostgreSQL 9.5 will reach end of life on February 16, 2021\n  */\n  public static readonly VER_9_5_24 = PostgresEngineVersion.of('9.5.24', '9.5');\n  /**\n   * Version \"9.5.25\".\n   * @deprecated PostgreSQL 9.5 will reach end of life on February 16, 2021\n  */\n  public static readonly VER_9_5_25 = PostgresEngineVersion.of('9.5.25', '9.5');\n\n  /**\n   * Version \"9.6\" (only a major version, without a specific minor version).\n   * @deprecated PostgreSQL 9.6 will reach end of life in November 2021\n  */\n  public static readonly VER_9_6 = PostgresEngineVersion.of('9.6', '9.6');\n  /**\n   * Version \"9.6.1\".\n   * @deprecated PostgreSQL 9.6 will reach end of life in November 2021\n  */\n  public static readonly VER_9_6_1 = PostgresEngineVersion.of('9.6.1', '9.6');\n  /**\n   * Version \"9.6.2\".\n   * @deprecated PostgreSQL 9.6 will reach end of life in November 2021\n  */\n  public static readonly VER_9_6_2 = PostgresEngineVersion.of('9.6.2', '9.6');\n  /**\n   * Version \"9.6.3\".\n   * @deprecated PostgreSQL 9.6 will reach end of life in November 2021\n  */\n  public static readonly VER_9_6_3 = PostgresEngineVersion.of('9.6.3', '9.6');\n  /**\n   * Version \"9.6.5\".\n   * @deprecated PostgreSQL 9.6 will reach end of life in November 2021\n  */\n  public static readonly VER_9_6_5 = PostgresEngineVersion.of('9.6.5', '9.6');\n  /**\n   * Version \"9.6.6\".\n   * @deprecated PostgreSQL 9.6 will reach end of life in November 2021\n  */\n  public static readonly VER_9_6_6 = PostgresEngineVersion.of('9.6.6', '9.6');\n  /**\n   * Version \"9.6.8\".\n   * @deprecated PostgreSQL 9.6 will reach end of life in November 2021\n  */\n  public static readonly VER_9_6_8 = PostgresEngineVersion.of('9.6.8', '9.6');\n  /**\n   * Version \"9.6.9\".\n   * @deprecated PostgreSQL 9.6 will reach end of life in November 2021\n  */\n  public static readonly VER_9_6_9 = PostgresEngineVersion.of('9.6.9', '9.6');\n  /**\n   * Version \"9.6.10\".\n   * @deprecated PostgreSQL 9.6 will reach end of life in November 2021\n  */\n  public static readonly VER_9_6_10 = PostgresEngineVersion.of('9.6.10', '9.6');\n  /**\n   * Version \"9.6.11\".\n   * @deprecated PostgreSQL 9.6 will reach end of life in November 2021\n  */\n  public static readonly VER_9_6_11 = PostgresEngineVersion.of('9.6.11', '9.6');\n  /**\n   * Version \"9.6.12\".\n   * @deprecated PostgreSQL 9.6 will reach end of life in November 2021\n  */\n  public static readonly VER_9_6_12 = PostgresEngineVersion.of('9.6.12', '9.6');\n  /**\n   * Version \"9.6.14\".\n   * @deprecated PostgreSQL 9.6 will reach end of life in November 2021\n  */\n  public static readonly VER_9_6_14 = PostgresEngineVersion.of('9.6.14', '9.6');\n  /**\n   * Version \"9.6.15\".\n   * @deprecated PostgreSQL 9.6 will reach end of life in November 2021\n  */\n  public static readonly VER_9_6_15 = PostgresEngineVersion.of('9.6.15', '9.6');\n  /**\n   * Version \"9.6.16\".\n   * @deprecated PostgreSQL 9.6 will reach end of life in November 2021\n  */\n  public static readonly VER_9_6_16 = PostgresEngineVersion.of('9.6.16', '9.6');\n  /**\n   * Version \"9.6.17\".\n   * @deprecated PostgreSQL 9.6 will reach end of life in November 2021\n  */\n  public static readonly VER_9_6_17 = PostgresEngineVersion.of('9.6.17', '9.6');\n  /**\n   * Version \"9.6.18\".\n   * @deprecated PostgreSQL 9.6 will reach end of life in November 2021\n  */\n  public static readonly VER_9_6_18 = PostgresEngineVersion.of('9.6.18', '9.6');\n  /**\n   * Version \"9.6.19\".\n   * @deprecated PostgreSQL 9.6 will reach end of life in November 2021\n  */\n  public static readonly VER_9_6_19 = PostgresEngineVersion.of('9.6.19', '9.6');\n  /**\n   * Version \"9.6.20\".\n   * @deprecated PostgreSQL 9.6 will reach end of life in November 2021\n  */\n  public static readonly VER_9_6_20 = PostgresEngineVersion.of('9.6.20', '9.6');\n  /**\n   * Version \"9.6.21\".\n   * @deprecated PostgreSQL 9.6 will reach end of life in November 2021\n  */\n  public static readonly VER_9_6_21 = PostgresEngineVersion.of('9.6.21', '9.6');\n  /**\n   * Version \"9.6.22\".\n   * @deprecated PostgreSQL 9.6 will reach end of life in November 2021\n  */\n  public static readonly VER_9_6_22 = PostgresEngineVersion.of('9.6.22', '9.6');\n  /**\n   * Version \"9.6.23\".\n   * @deprecated PostgreSQL 9.6 will reach end of life in November 2021\n  */\n  public static readonly VER_9_6_23 = PostgresEngineVersion.of('9.6.23', '9.6');\n  /**\n   * Version \"9.6.24\".\n   * @deprecated PostgreSQL 9.6 will reach end of life in November 2021\n  */\n  public static readonly VER_9_6_24 = PostgresEngineVersion.of('9.6.24', '9.6');\n\n  /** Version \"10\" (only a major version, without a specific minor version). */\n  public static readonly VER_10 = PostgresEngineVersion.of('10', '10');\n  /** Version \"10.1\". */\n  public static readonly VER_10_1 = PostgresEngineVersion.of('10.1', '10');\n  /** Version \"10.3\". */\n  public static readonly VER_10_3 = PostgresEngineVersion.of('10.3', '10');\n  /** Version \"10.4\". */\n  public static readonly VER_10_4 = PostgresEngineVersion.of('10.4', '10');\n  /** Version \"10.5\". */\n  public static readonly VER_10_5 = PostgresEngineVersion.of('10.5', '10');\n  /** Version \"10.6\". */\n  public static readonly VER_10_6 = PostgresEngineVersion.of('10.6', '10');\n  /** Version \"10.7\". */\n  public static readonly VER_10_7 = PostgresEngineVersion.of('10.7', '10', { s3Import: true });\n  /** Version \"10.9\". */\n  public static readonly VER_10_9 = PostgresEngineVersion.of('10.9', '10', { s3Import: true });\n  /** Version \"10.10\". */\n  public static readonly VER_10_10 = PostgresEngineVersion.of('10.10', '10', { s3Import: true });\n  /** Version \"10.11\". */\n  public static readonly VER_10_11 = PostgresEngineVersion.of('10.11', '10', { s3Import: true });\n  /** Version \"10.12\". */\n  public static readonly VER_10_12 = PostgresEngineVersion.of('10.12', '10', { s3Import: true });\n  /** Version \"10.13\". */\n  public static readonly VER_10_13 = PostgresEngineVersion.of('10.13', '10', { s3Import: true });\n  /** Version \"10.14\". */\n  public static readonly VER_10_14 = PostgresEngineVersion.of('10.14', '10', { s3Import: true, s3Export: true });\n  /** Version \"10.15\". */\n  public static readonly VER_10_15 = PostgresEngineVersion.of('10.15', '10', { s3Import: true, s3Export: true });\n  /** Version \"10.16\". */\n  public static readonly VER_10_16 = PostgresEngineVersion.of('10.16', '10', { s3Import: true, s3Export: true });\n  /** Version \"10.17\". */\n  public static readonly VER_10_17 = PostgresEngineVersion.of('10.17', '10', { s3Import: true, s3Export: true });\n  /** Version \"10.18\". */\n  public static readonly VER_10_18 = PostgresEngineVersion.of('10.18', '10', { s3Import: true, s3Export: true });\n  /** Version \"10.19\". */\n  public static readonly VER_10_19 = PostgresEngineVersion.of('10.19', '10', { s3Import: true, s3Export: true });\n  /** Version \"10.20\". */\n  public static readonly VER_10_20 = PostgresEngineVersion.of('10.20', '10', { s3Import: true, s3Export: true });\n\n  /** Version \"11\" (only a major version, without a specific minor version). */\n  public static readonly VER_11 = PostgresEngineVersion.of('11', '11', { s3Import: true });\n  /** Version \"11.1\". */\n  public static readonly VER_11_1 = PostgresEngineVersion.of('11.1', '11', { s3Import: true });\n  /** Version \"11.2\". */\n  public static readonly VER_11_2 = PostgresEngineVersion.of('11.2', '11', { s3Import: true });\n  /** Version \"11.4\". */\n  public static readonly VER_11_4 = PostgresEngineVersion.of('11.4', '11', { s3Import: true });\n  /** Version \"11.5\". */\n  public static readonly VER_11_5 = PostgresEngineVersion.of('11.5', '11', { s3Import: true });\n  /** Version \"11.6\". */\n  public static readonly VER_11_6 = PostgresEngineVersion.of('11.6', '11', { s3Import: true });\n  /** Version \"11.7\". */\n  public static readonly VER_11_7 = PostgresEngineVersion.of('11.7', '11', { s3Import: true });\n  /** Version \"11.8\". */\n  public static readonly VER_11_8 = PostgresEngineVersion.of('11.8', '11', { s3Import: true });\n  /** Version \"11.9\". */\n  public static readonly VER_11_9 = PostgresEngineVersion.of('11.9', '11', { s3Import: true, s3Export: true });\n  /** Version \"11.10\". */\n  public static readonly VER_11_10 = PostgresEngineVersion.of('11.10', '11', { s3Import: true, s3Export: true });\n  /** Version \"11.11\". */\n  public static readonly VER_11_11 = PostgresEngineVersion.of('11.11', '11', { s3Import: true, s3Export: true });\n  /** Version \"11.12\". */\n  public static readonly VER_11_12 = PostgresEngineVersion.of('11.12', '11', { s3Import: true, s3Export: true });\n  /** Version \"11.13\". */\n  public static readonly VER_11_13 = PostgresEngineVersion.of('11.13', '11', { s3Import: true, s3Export: true });\n  /** Version \"11.14\". */\n  public static readonly VER_11_14 = PostgresEngineVersion.of('11.14', '11', { s3Import: true, s3Export: true });\n  /** Version \"11.15\". */\n  public static readonly VER_11_15 = PostgresEngineVersion.of('11.15', '11', { s3Import: true, s3Export: true });\n\n  /** Version \"12\" (only a major version, without a specific minor version). */\n  public static readonly VER_12 = PostgresEngineVersion.of('12', '12', { s3Import: true });\n  /** Version \"12.2\". */\n  public static readonly VER_12_2 = PostgresEngineVersion.of('12.2', '12', { s3Import: true });\n  /** Version \"12.3\". */\n  public static readonly VER_12_3 = PostgresEngineVersion.of('12.3', '12', { s3Import: true });\n  /** Version \"12.4\". */\n  public static readonly VER_12_4 = PostgresEngineVersion.of('12.4', '12', { s3Import: true, s3Export: true });\n  /** Version \"12.5\". */\n  public static readonly VER_12_5 = PostgresEngineVersion.of('12.5', '12', { s3Import: true, s3Export: true });\n  /** Version \"12.6\". */\n  public static readonly VER_12_6 = PostgresEngineVersion.of('12.6', '12', { s3Import: true, s3Export: true });\n  /** Version \"12.7\". */\n  public static readonly VER_12_7 = PostgresEngineVersion.of('12.7', '12', { s3Import: true, s3Export: true });\n  /** Version \"12.8\". */\n  public static readonly VER_12_8 = PostgresEngineVersion.of('12.8', '12', { s3Import: true, s3Export: true });\n  /** Version \"12.9\". */\n  public static readonly VER_12_9 = PostgresEngineVersion.of('12.9', '12', { s3Import: true, s3Export: true });\n  /** Version \"12.10\". */\n  public static readonly VER_12_10 = PostgresEngineVersion.of('12.10', '12', { s3Import: true, s3Export: true });\n\n  /** Version \"13\" (only a major version, without a specific minor version). */\n  public static readonly VER_13 = PostgresEngineVersion.of('13', '13', { s3Import: true, s3Export: true });\n  /** Version \"13.1\". */\n  public static readonly VER_13_1 = PostgresEngineVersion.of('13.1', '13', { s3Import: true, s3Export: true });\n  /** Version \"13.2\". */\n  public static readonly VER_13_2 = PostgresEngineVersion.of('13.2', '13', { s3Import: true, s3Export: true });\n  /** Version \"13.3\". */\n  public static readonly VER_13_3 = PostgresEngineVersion.of('13.3', '13', { s3Import: true, s3Export: true });\n  /** Version \"13.4\". */\n  public static readonly VER_13_4 = PostgresEngineVersion.of('13.4', '13', { s3Import: true, s3Export: true });\n  /** Version \"13.5\". */\n  public static readonly VER_13_5 = PostgresEngineVersion.of('13.5', '13', { s3Import: true, s3Export: true });\n  /** Version \"13.6\". */\n  public static readonly VER_13_6 = PostgresEngineVersion.of('13.6', '13', { s3Import: true, s3Export: true });\n\n  /** Version \"14\" (only a major version, without a specific minor version). */\n  public static readonly VER_14 = PostgresEngineVersion.of('14', '14', { s3Import: true, s3Export: true });\n  /** Version \"14.1\". */\n  public static readonly VER_14_1 = PostgresEngineVersion.of('14.1', '14', { s3Import: true, s3Export: true });\n  /** Version \"14.2\". */\n  public static readonly VER_14_2 = PostgresEngineVersion.of('14.2', '14', { s3Import: true, s3Export: true });\n\n  /**\n   * Create a new PostgresEngineVersion with an arbitrary version.\n   *\n   * @param postgresFullVersion the full version string,\n   *   for example \"13.11\"\n   * @param postgresMajorVersion the major version of the engine,\n   *   for example \"13\"\n   */\n  public static of(postgresFullVersion: string, postgresMajorVersion: string, postgresFeatures?: PostgresEngineFeatures): PostgresEngineVersion {\n    return new PostgresEngineVersion(postgresFullVersion, postgresMajorVersion, postgresFeatures);\n  }\n\n  /** The full version string, for example, \"13.11\". */\n  public readonly postgresFullVersion: string;\n  /** The major version of the engine, for example, \"13\". */\n  public readonly postgresMajorVersion: string;\n\n  /**\n   * The supported features for the DB engine\n   * @internal\n   */\n  public readonly _features: InstanceEngineFeatures;\n\n  private constructor(postgresFullVersion: string, postgresMajorVersion: string, postgresFeatures?: PostgresEngineFeatures) {\n    this.postgresFullVersion = postgresFullVersion;\n    this.postgresMajorVersion = postgresMajorVersion;\n    this._features = {\n      s3Import: postgresFeatures?.s3Import ? 's3Import' : undefined,\n      s3Export: postgresFeatures?.s3Export ? 's3Export' : undefined,\n    };\n  }\n}\n\n/**\n * Properties for PostgreSQL instance engines.\n * Used in {@link DatabaseInstanceEngine.postgres}.\n */\nexport interface PostgresInstanceEngineProps {\n  /** The exact version of the engine to use. */\n  readonly version: PostgresEngineVersion;\n}\n\n/**\n * The instance engine for PostgreSQL.\n */\nclass PostgresInstanceEngine extends InstanceEngineBase {\n  public readonly defaultUsername = 'postgres';\n\n  constructor(version?: PostgresEngineVersion) {\n    super({\n      engineType: 'postgres',\n      singleUserRotationApplication: secretsmanager.SecretRotationApplication.POSTGRES_ROTATION_SINGLE_USER,\n      multiUserRotationApplication: secretsmanager.SecretRotationApplication.POSTGRES_ROTATION_MULTI_USER,\n      version: version\n        ? {\n          fullVersion: version.postgresFullVersion,\n          majorVersion: version.postgresMajorVersion,\n        }\n        : undefined,\n      features: version ? version?._features : { s3Import: 's3Import' },\n      engineFamily: 'POSTGRESQL',\n    });\n  }\n}\n\n/**\n * The versions for the legacy Oracle instance engines\n * (those returned by {@link DatabaseInstanceEngine.oracleSe}\n * and {@link DatabaseInstanceEngine.oracleSe1}).\n * Note: RDS will stop allowing creating new databases with this version in August 2020.\n *\n * @deprecated instances can no longer be created with these engine versions. See https://forums.aws.amazon.com/ann.jspa?annID=7341\n */\nexport class OracleLegacyEngineVersion {\n  /** Version \"11.2\" (only a major version, without a specific minor version). */\n  public static readonly VER_11_2 = OracleLegacyEngineVersion.of('11.2', '11.2');\n  /** Version \"11.2.0.2.v2\". */\n  public static readonly VER_11_2_0_2_V2 = OracleLegacyEngineVersion.of('11.2.0.2.v2', '11.2');\n  /** Version \"11.2.0.4.v1\". */\n  public static readonly VER_11_2_0_4_V1 = OracleLegacyEngineVersion.of('11.2.0.4.v1', '11.2');\n  /** Version \"11.2.0.4.v3\". */\n  public static readonly VER_11_2_0_4_V3 = OracleLegacyEngineVersion.of('11.2.0.4.v3', '11.2');\n  /** Version \"11.2.0.4.v4\". */\n  public static readonly VER_11_2_0_4_V4 = OracleLegacyEngineVersion.of('11.2.0.4.v4', '11.2');\n  /** Version \"11.2.0.4.v5\". */\n  public static readonly VER_11_2_0_4_V5 = OracleLegacyEngineVersion.of('11.2.0.4.v5', '11.2');\n  /** Version \"11.2.0.4.v6\". */\n  public static readonly VER_11_2_0_4_V6 = OracleLegacyEngineVersion.of('11.2.0.4.v6', '11.2');\n  /** Version \"11.2.0.4.v7\". */\n  public static readonly VER_11_2_0_4_V7 = OracleLegacyEngineVersion.of('11.2.0.4.v7', '11.2');\n  /** Version \"11.2.0.4.v8\". */\n  public static readonly VER_11_2_0_4_V8 = OracleLegacyEngineVersion.of('11.2.0.4.v8', '11.2');\n  /** Version \"11.2.0.4.v9\". */\n  public static readonly VER_11_2_0_4_V9 = OracleLegacyEngineVersion.of('11.2.0.4.v9', '11.2');\n  /** Version \"11.2.0.4.v10\". */\n  public static readonly VER_11_2_0_4_V10 = OracleLegacyEngineVersion.of('11.2.0.4.v10', '11.2');\n  /** Version \"11.2.0.4.v11\". */\n  public static readonly VER_11_2_0_4_V11 = OracleLegacyEngineVersion.of('11.2.0.4.v11', '11.2');\n  /** Version \"11.2.0.4.v12\". */\n  public static readonly VER_11_2_0_4_V12 = OracleLegacyEngineVersion.of('11.2.0.4.v12', '11.2');\n  /** Version \"11.2.0.4.v13\". */\n  public static readonly VER_11_2_0_4_V13 = OracleLegacyEngineVersion.of('11.2.0.4.v13', '11.2');\n  /** Version \"11.2.0.4.v14\". */\n  public static readonly VER_11_2_0_4_V14 = OracleLegacyEngineVersion.of('11.2.0.4.v14', '11.2');\n  /** Version \"11.2.0.4.v15\". */\n  public static readonly VER_11_2_0_4_V15 = OracleLegacyEngineVersion.of('11.2.0.4.v15', '11.2');\n  /** Version \"11.2.0.4.v16\". */\n  public static readonly VER_11_2_0_4_V16 = OracleLegacyEngineVersion.of('11.2.0.4.v16', '11.2');\n  /** Version \"11.2.0.4.v17\". */\n  public static readonly VER_11_2_0_4_V17 = OracleLegacyEngineVersion.of('11.2.0.4.v17', '11.2');\n  /** Version \"11.2.0.4.v18\". */\n  public static readonly VER_11_2_0_4_V18 = OracleLegacyEngineVersion.of('11.2.0.4.v18', '11.2');\n  /** Version \"11.2.0.4.v19\". */\n  public static readonly VER_11_2_0_4_V19 = OracleLegacyEngineVersion.of('11.2.0.4.v19', '11.2');\n  /** Version \"11.2.0.4.v20\". */\n  public static readonly VER_11_2_0_4_V20 = OracleLegacyEngineVersion.of('11.2.0.4.v20', '11.2');\n  /** Version \"11.2.0.4.v21\". */\n  public static readonly VER_11_2_0_4_V21 = OracleLegacyEngineVersion.of('11.2.0.4.v21', '11.2');\n  /** Version \"11.2.0.4.v22\". */\n  public static readonly VER_11_2_0_4_V22 = OracleLegacyEngineVersion.of('11.2.0.4.v22', '11.2');\n  /** Version \"11.2.0.4.v23\". */\n  public static readonly VER_11_2_0_4_V23 = OracleLegacyEngineVersion.of('11.2.0.4.v23', '11.2');\n  /** Version \"11.2.0.4.v24\". */\n  public static readonly VER_11_2_0_4_V24 = OracleLegacyEngineVersion.of('11.2.0.4.v24', '11.2');\n  /** Version \"11.2.0.4.v25\". */\n  public static readonly VER_11_2_0_4_V25 = OracleLegacyEngineVersion.of('11.2.0.4.v25', '11.2');\n\n  private static of(oracleLegacyFullVersion: string, oracleLegacyMajorVersion: string): OracleLegacyEngineVersion {\n    return new OracleLegacyEngineVersion(oracleLegacyFullVersion, oracleLegacyMajorVersion);\n  }\n\n  /** The full version string, for example, \"11.2.0.4.v24\". */\n  public readonly oracleLegacyFullVersion: string;\n  /** The major version of the engine, for example, \"11.2\". */\n  public readonly oracleLegacyMajorVersion: string;\n\n  private constructor(oracleLegacyFullVersion: string, oracleLegacyMajorVersion: string) {\n    this.oracleLegacyFullVersion = oracleLegacyFullVersion;\n    this.oracleLegacyMajorVersion = oracleLegacyMajorVersion;\n  }\n}\n\n/**\n * The versions for the Oracle instance engines\n * (those returned by {@link DatabaseInstanceEngine.oracleSe2} and\n * {@link DatabaseInstanceEngine.oracleEe}).\n */\nexport class OracleEngineVersion {\n  /** Version \"12.1\" (only a major version, without a specific minor version). */\n  public static readonly VER_12_1 = OracleEngineVersion.of('12.1', '12.1');\n  /** Version \"12.1.0.2.v1\". */\n  public static readonly VER_12_1_0_2_V1 = OracleEngineVersion.of('12.1.0.2.v1', '12.1');\n  /** Version \"12.1.0.2.v2\". */\n  public static readonly VER_12_1_0_2_V2 = OracleEngineVersion.of('12.1.0.2.v2', '12.1');\n  /** Version \"12.1.0.2.v3\". */\n  public static readonly VER_12_1_0_2_V3 = OracleEngineVersion.of('12.1.0.2.v3', '12.1');\n  /** Version \"12.1.0.2.v4\". */\n  public static readonly VER_12_1_0_2_V4 = OracleEngineVersion.of('12.1.0.2.v4', '12.1');\n  /** Version \"12.1.0.2.v5\". */\n  public static readonly VER_12_1_0_2_V5 = OracleEngineVersion.of('12.1.0.2.v5', '12.1');\n  /** Version \"12.1.0.2.v6\". */\n  public static readonly VER_12_1_0_2_V6 = OracleEngineVersion.of('12.1.0.2.v6', '12.1');\n  /** Version \"12.1.0.2.v7\". */\n  public static readonly VER_12_1_0_2_V7 = OracleEngineVersion.of('12.1.0.2.v7', '12.1');\n  /** Version \"12.1.0.2.v8\". */\n  public static readonly VER_12_1_0_2_V8 = OracleEngineVersion.of('12.1.0.2.v8', '12.1');\n  /** Version \"12.1.0.2.v9\". */\n  public static readonly VER_12_1_0_2_V9 = OracleEngineVersion.of('12.1.0.2.v9', '12.1');\n  /** Version \"12.1.0.2.v10\". */\n  public static readonly VER_12_1_0_2_V10 = OracleEngineVersion.of('12.1.0.2.v10', '12.1');\n  /** Version \"12.1.0.2.v11\". */\n  public static readonly VER_12_1_0_2_V11 = OracleEngineVersion.of('12.1.0.2.v11', '12.1');\n  /** Version \"12.1.0.2.v12\". */\n  public static readonly VER_12_1_0_2_V12 = OracleEngineVersion.of('12.1.0.2.v12', '12.1');\n  /** Version \"12.1.0.2.v13\". */\n  public static readonly VER_12_1_0_2_V13 = OracleEngineVersion.of('12.1.0.2.v13', '12.1');\n  /** Version \"12.1.0.2.v14\". */\n  public static readonly VER_12_1_0_2_V14 = OracleEngineVersion.of('12.1.0.2.v14', '12.1');\n  /** Version \"12.1.0.2.v15\". */\n  public static readonly VER_12_1_0_2_V15 = OracleEngineVersion.of('12.1.0.2.v15', '12.1');\n  /** Version \"12.1.0.2.v16\". */\n  public static readonly VER_12_1_0_2_V16 = OracleEngineVersion.of('12.1.0.2.v16', '12.1');\n  /** Version \"12.1.0.2.v17\". */\n  public static readonly VER_12_1_0_2_V17 = OracleEngineVersion.of('12.1.0.2.v17', '12.1');\n  /** Version \"12.1.0.2.v18\". */\n  public static readonly VER_12_1_0_2_V18 = OracleEngineVersion.of('12.1.0.2.v18', '12.1');\n  /** Version \"12.1.0.2.v19\". */\n  public static readonly VER_12_1_0_2_V19 = OracleEngineVersion.of('12.1.0.2.v19', '12.1');\n  /** Version \"12.1.0.2.v20\". */\n  public static readonly VER_12_1_0_2_V20 = OracleEngineVersion.of('12.1.0.2.v20', '12.1');\n  /** Version \"12.1.0.2.v21\". */\n  public static readonly VER_12_1_0_2_V21 = OracleEngineVersion.of('12.1.0.2.v21', '12.1');\n  /** Version \"12.1.0.2.v22\". */\n  public static readonly VER_12_1_0_2_V22 = OracleEngineVersion.of('12.1.0.2.v22', '12.1');\n  /** Version \"12.1.0.2.v23\". */\n  public static readonly VER_12_1_0_2_V23 = OracleEngineVersion.of('12.1.0.2.v23', '12.1');\n  /** Version \"12.1.0.2.v24\". */\n  public static readonly VER_12_1_0_2_V24 = OracleEngineVersion.of('12.1.0.2.v24', '12.1');\n\n  /** Version \"12.2\" (only a major version, without a specific minor version). */\n  public static readonly VER_12_2 = OracleEngineVersion.of('12.2', '12.2');\n  /** Version \"12.2.0.1.ru-2018-10.rur-2018-10.r1\". */\n  public static readonly VER_12_2_0_1_2018_10_R1 = OracleEngineVersion.of('12.2.0.1.ru-2018-10.rur-2018-10.r1', '12.2');\n  /** Version \"12.2.0.1.ru-2019-01.rur-2019-01.r1\". */\n  public static readonly VER_12_2_0_1_2019_01_R1 = OracleEngineVersion.of('12.2.0.1.ru-2019-01.rur-2019-01.r1', '12.2');\n  /** Version \"12.2.0.1.ru-2019-04.rur-2019-04.r1\". */\n  public static readonly VER_12_2_0_1_2019_04_R1 = OracleEngineVersion.of('12.2.0.1.ru-2019-04.rur-2019-04.r1', '12.2');\n  /** Version \"12.2.0.1.ru-2019-07.rur-2019-07.r1\". */\n  public static readonly VER_12_2_0_1_2019_07_R1 = OracleEngineVersion.of('12.2.0.1.ru-2019-07.rur-2019-07.r1', '12.2');\n  /** Version \"12.2.0.1.ru-2019-10.rur-2019-10.r1\". */\n  public static readonly VER_12_2_0_1_2019_10_R1 = OracleEngineVersion.of('12.2.0.1.ru-2019-10.rur-2019-10.r1', '12.2');\n  /** Version \"12.2.0.1.ru-2020-01.rur-2020-01.r1\". */\n  public static readonly VER_12_2_0_1_2020_01_R1 = OracleEngineVersion.of('12.2.0.1.ru-2020-01.rur-2020-01.r1', '12.2');\n  /** Version \"12.2.0.1.ru-2020-04.rur-2020-04.r1\". */\n  public static readonly VER_12_2_0_1_2020_04_R1 = OracleEngineVersion.of('12.2.0.1.ru-2020-04.rur-2020-04.r1', '12.2');\n  /** Version \"12.2.0.1.ru-2020-07.rur-2020-07.r1\". */\n  public static readonly VER_12_2_0_1_2020_07_R1 = OracleEngineVersion.of('12.2.0.1.ru-2020-07.rur-2020-07.r1', '12.2');\n  /** Version \"12.2.0.1.ru-2021-10.rur-2020-10.r1\". */\n  public static readonly VER_12_2_0_1_2020_10_R1 = OracleEngineVersion.of('12.2.0.1.ru-2020-10.rur-2020-10.r1', '12.2');\n  /** Version \"12.2.0.1.ru-2021-01.rur-2021-01.r1\". */\n  public static readonly VER_12_2_0_1_2021_01_R1 = OracleEngineVersion.of('12.2.0.1.ru-2021-01.rur-2021-01.r1', '12.2');\n  /** Version \"12.2.0.1.ru-2021-04.rur-2021-04.r1\". */\n  public static readonly VER_12_2_0_1_2021_04_R1 = OracleEngineVersion.of('12.2.0.1.ru-2021-04.rur-2021-04.r1', '12.2');\n\n\n  /** Version \"18\" (only a major version, without a specific minor version). */\n  public static readonly VER_18 = OracleEngineVersion.of('18', '18');\n  /** Version \"18.0.0.0.ru-2019-07.rur-2019-07.r1\". */\n  public static readonly VER_18_0_0_0_2019_07_R1 = OracleEngineVersion.of('18.0.0.0.ru-2019-07.rur-2019-07.r1', '18');\n  /** Version \"18.0.0.0.ru-2019-10.rur-2019-10.r1\". */\n  public static readonly VER_18_0_0_0_2019_10_R1 = OracleEngineVersion.of('18.0.0.0.ru-2019-10.rur-2019-10.r1', '18');\n  /** Version \"18.0.0.0.ru-2020-01.rur-2020-01.r1\". */\n  public static readonly VER_18_0_0_0_2020_01_R1 = OracleEngineVersion.of('18.0.0.0.ru-2020-01.rur-2020-01.r1', '18');\n  /** Version \"18.0.0.0.ru-2020-04.rur-2020-04.r1\". */\n  public static readonly VER_18_0_0_0_2020_04_R1 = OracleEngineVersion.of('18.0.0.0.ru-2020-04.rur-2020-04.r1', '18');\n  /** Version \"18.0.0.0.ru-2020-07.rur-2020-07.r1\". */\n  public static readonly VER_18_0_0_0_2020_07_R1 = OracleEngineVersion.of('18.0.0.0.ru-2020-07.rur-2020-07.r1', '18');\n\n  /** Version \"19\" (only a major version, without a specific minor version). */\n  public static readonly VER_19 = OracleEngineVersion.of('19', '19');\n  /** Version \"19.0.0.0.ru-2019-07.rur-2019-07.r1\". */\n  public static readonly VER_19_0_0_0_2019_07_R1 = OracleEngineVersion.of('19.0.0.0.ru-2019-07.rur-2019-07.r1', '19');\n  /** Version \"19.0.0.0.ru-2019-10.rur-2019-10.r1\". */\n  public static readonly VER_19_0_0_0_2019_10_R1 = OracleEngineVersion.of('19.0.0.0.ru-2019-10.rur-2019-10.r1', '19');\n  /** Version \"19.0.0.0.ru-2020-01.rur-2020-01.r1\". */\n  public static readonly VER_19_0_0_0_2020_01_R1 = OracleEngineVersion.of('19.0.0.0.ru-2020-01.rur-2020-01.r1', '19');\n  /** Version \"19.0.0.0.ru-2020-04.rur-2020-04.r1\". */\n  public static readonly VER_19_0_0_0_2020_04_R1 = OracleEngineVersion.of('19.0.0.0.ru-2020-04.rur-2020-04.r1', '19');\n  /** Version \"19.0.0.0.ru-2020-07.rur-2020-07.r1\". */\n  public static readonly VER_19_0_0_0_2020_07_R1 = OracleEngineVersion.of('19.0.0.0.ru-2020-07.rur-2020-07.r1', '19');\n  /** Version \"19.0.0.0.ru-2020-07.rur-2020-10.r1\". */\n  public static readonly VER_19_0_0_0_2020_10_R1 = OracleEngineVersion.of('19.0.0.0.ru-2020-10.rur-2020-10.r1', '19');\n  /** Version \"19.0.0.0.ru-2021-01.rur-2021-01.r1\". */\n  public static readonly VER_19_0_0_0_2021_01_R1 = OracleEngineVersion.of('19.0.0.0.ru-2021-01.rur-2021-01.r1', '19');\n  /** Version \"19.0.0.0.ru-2021-01.rur-2021-01.r2\". */\n  public static readonly VER_19_0_0_0_2021_01_R2 = OracleEngineVersion.of('19.0.0.0.ru-2021-01.rur-2021-01.r2', '19');\n  /** Version \"19.0.0.0.ru-2021-01.rur-2021-04.r1\". */\n  public static readonly VER_19_0_0_0_2021_04_R1 = OracleEngineVersion.of('19.0.0.0.ru-2021-04.rur-2021-04.r1', '19');\n\n\n  /**\n   * Creates a new OracleEngineVersion with an arbitrary version.\n   *\n   * @param oracleFullVersion the full version string,\n   *   for example \"19.0.0.0.ru-2019-10.rur-2019-10.r1\"\n   * @param oracleMajorVersion the major version of the engine,\n   *   for example \"19\"\n   */\n  public static of(oracleFullVersion: string, oracleMajorVersion: string): OracleEngineVersion {\n    return new OracleEngineVersion(oracleFullVersion, oracleMajorVersion);\n  }\n\n  /** The full version string, for example, \"19.0.0.0.ru-2019-10.rur-2019-10.r1\". */\n  public readonly oracleFullVersion: string;\n  /** The major version of the engine, for example, \"19\". */\n  public readonly oracleMajorVersion: string;\n\n  private constructor(oracleFullVersion: string, oracleMajorVersion: string) {\n    this.oracleFullVersion = oracleFullVersion;\n    this.oracleMajorVersion = oracleMajorVersion;\n  }\n}\n\ninterface OracleInstanceEngineBaseProps {\n  readonly engineType: string;\n  readonly version?: EngineVersion;\n}\n\nabstract class OracleInstanceEngineBase extends InstanceEngineBase {\n  constructor(props: OracleInstanceEngineBaseProps) {\n    super({\n      ...props,\n      singleUserRotationApplication: secretsmanager.SecretRotationApplication.ORACLE_ROTATION_SINGLE_USER,\n      multiUserRotationApplication: secretsmanager.SecretRotationApplication.ORACLE_ROTATION_MULTI_USER,\n      parameterGroupFamily: props.version ? `${props.engineType}-${props.version.majorVersion}` : undefined,\n      features: {\n        s3Import: 'S3_INTEGRATION',\n        s3Export: 'S3_INTEGRATION',\n      },\n    });\n  }\n\n  public bindToInstance(scope: Construct, options: InstanceEngineBindOptions): InstanceEngineConfig {\n    const config = super.bindToInstance(scope, options);\n\n    let optionGroup = options.optionGroup;\n    if (options.s3ImportRole || options.s3ExportRole) {\n      if (!optionGroup) {\n        optionGroup = new OptionGroup(scope, 'InstanceOptionGroup', {\n          engine: this,\n          configurations: [],\n        });\n      }\n      // https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-s3-integration.html\n      optionGroup.addConfiguration({\n        name: 'S3_INTEGRATION',\n        version: '1.0',\n      });\n    }\n\n    return {\n      ...config,\n      optionGroup,\n    };\n  }\n}\n\ninterface OracleInstanceEngineProps {\n  /** The exact version of the engine to use. */\n  readonly version: OracleEngineVersion;\n}\n\n/**\n * Properties for Oracle Standard Edition instance engines.\n * Used in {@link DatabaseInstanceEngine.oracleSe}.\n *\n * @deprecated instances can no longer be created with this engine. See https://forums.aws.amazon.com/ann.jspa?annID=7341\n */\nexport interface OracleSeInstanceEngineProps {\n  /** The exact version of the engine to use. */\n  readonly version: OracleLegacyEngineVersion;\n}\n\n/** @deprecated instances can no longer be created with this engine. See https://forums.aws.amazon.com/ann.jspa?annID=7341 */\nclass OracleSeInstanceEngine extends OracleInstanceEngineBase {\n  constructor(version?: OracleLegacyEngineVersion) {\n    super({\n      engineType: 'oracle-se',\n      version: version\n        ? {\n          fullVersion: version.oracleLegacyFullVersion,\n          majorVersion: version.oracleLegacyMajorVersion,\n        }\n        : {\n          majorVersion: '11.2',\n        },\n    });\n  }\n}\n\n/**\n * Properties for Oracle Standard Edition 1 instance engines.\n * Used in {@link DatabaseInstanceEngine.oracleSe1}.\n *\n * @deprecated instances can no longer be created with this engine. See https://forums.aws.amazon.com/ann.jspa?annID=7341\n */\nexport interface OracleSe1InstanceEngineProps {\n  /** The exact version of the engine to use. */\n  readonly version: OracleLegacyEngineVersion;\n}\n\n/** @deprecated instances can no longer be created with this engine. See https://forums.aws.amazon.com/ann.jspa?annID=7341 */\nclass OracleSe1InstanceEngine extends OracleInstanceEngineBase {\n  constructor(version?: OracleLegacyEngineVersion) {\n    super({\n      engineType: 'oracle-se1',\n      version: version\n        ? {\n          fullVersion: version.oracleLegacyFullVersion,\n          majorVersion: version.oracleLegacyMajorVersion,\n        }\n        : {\n          majorVersion: '11.2',\n        },\n    });\n  }\n}\n\n/**\n * Properties for Oracle Standard Edition 2 instance engines.\n * Used in {@link DatabaseInstanceEngine.oracleSe2}.\n */\nexport interface OracleSe2InstanceEngineProps extends OracleInstanceEngineProps {\n}\n\nclass OracleSe2InstanceEngine extends OracleInstanceEngineBase {\n  constructor(version?: OracleEngineVersion) {\n    super({\n      engineType: 'oracle-se2',\n      version: version\n        ? {\n          fullVersion: version.oracleFullVersion,\n          majorVersion: version.oracleMajorVersion,\n        }\n        : undefined,\n    });\n  }\n}\n\n/**\n * Properties for Oracle Enterprise Edition instance engines.\n * Used in {@link DatabaseInstanceEngine.oracleEe}.\n */\nexport interface OracleEeInstanceEngineProps extends OracleInstanceEngineProps {\n}\n\nclass OracleEeInstanceEngine extends OracleInstanceEngineBase {\n  constructor(version?: OracleEngineVersion) {\n    super({\n      engineType: 'oracle-ee',\n      version: version\n        ? {\n          fullVersion: version.oracleFullVersion,\n          majorVersion: version.oracleMajorVersion,\n        }\n        : undefined,\n    });\n  }\n}\n\n/**\n * The versions for the SQL Server instance engines\n * (those returned by {@link DatabaseInstanceEngine.sqlServerSe},\n * {@link DatabaseInstanceEngine.sqlServerEx}, {@link DatabaseInstanceEngine.sqlServerWeb}\n * and {@link DatabaseInstanceEngine.sqlServerEe}).\n */\nexport class SqlServerEngineVersion {\n  /** Version \"11.00\" (only a major version, without a specific minor version). */\n  public static readonly VER_11 = SqlServerEngineVersion.of('11.00', '11.00');\n  /** Version \"11.00.5058.0.v1\". */\n  public static readonly VER_11_00_5058_0_V1 = SqlServerEngineVersion.of('11.00.5058.0.v1', '11.00');\n  /** Version \"11.00.6020.0.v1\". */\n  public static readonly VER_11_00_6020_0_V1 = SqlServerEngineVersion.of('11.00.6020.0.v1', '11.00');\n  /** Version \"11.00.6594.0.v1\". */\n  public static readonly VER_11_00_6594_0_V1 = SqlServerEngineVersion.of('11.00.6594.0.v1', '11.00');\n  /** Version \"11.00.7462.6.v1\". */\n  public static readonly VER_11_00_7462_6_V1 = SqlServerEngineVersion.of('11.00.7462.6.v1', '11.00');\n  /** Version \"11.00.7493.4.v1\". */\n  public static readonly VER_11_00_7493_4_V1 = SqlServerEngineVersion.of('11.00.7493.4.v1', '11.00');\n\n  /** Version \"12.00\" (only a major version, without a specific minor version). */\n  public static readonly VER_12 = SqlServerEngineVersion.of('12.00', '12.00');\n  /** Version \"12.00.5000.0.v1\". */\n  public static readonly VER_12_00_5000_0_V1 = SqlServerEngineVersion.of('12.00.5000.0.v1', '12.00');\n  /** Version \"12.00.5546.0.v1\". */\n  public static readonly VER_12_00_5546_0_V1 = SqlServerEngineVersion.of('12.00.5546.0.v1', '12.00');\n  /** Version \"12.00.5571.0.v1\". */\n  public static readonly VER_12_00_5571_0_V1 = SqlServerEngineVersion.of('12.00.5571.0.v1', '12.00');\n  /** Version \"12.00.6293.0.v1\". */\n  public static readonly VER_12_00_6293_0_V1 = SqlServerEngineVersion.of('12.00.6293.0.v1', '12.00');\n  /** Version \"12.00.6329.1.v1\". */\n  public static readonly VER_12_00_6329_1_V1 = SqlServerEngineVersion.of('12.00.6329.1.v1', '12.00');\n\n  /** Version \"13.00\" (only a major version, without a specific minor version). */\n  public static readonly VER_13 = SqlServerEngineVersion.of('13.00', '13.00');\n  /** Version \"13.00.2164.0.v1\". */\n  public static readonly VER_13_00_2164_0_V1 = SqlServerEngineVersion.of('13.00.2164.0.v1', '13.00');\n  /** Version \"13.00.4422.0.v1\". */\n  public static readonly VER_13_00_4422_0_V1 = SqlServerEngineVersion.of('13.00.4422.0.v1', '13.00');\n  /** Version \"13.00.4451.0.v1\". */\n  public static readonly VER_13_00_4451_0_V1 = SqlServerEngineVersion.of('13.00.4451.0.v1', '13.00');\n  /** Version \"13.00.4466.4.v1\". */\n  public static readonly VER_13_00_4466_4_V1 = SqlServerEngineVersion.of('13.00.4466.4.v1', '13.00');\n  /** Version \"13.00.4522.0.v1\". */\n  public static readonly VER_13_00_4522_0_V1 = SqlServerEngineVersion.of('13.00.4522.0.v1', '13.00');\n  /** Version \"13.00.5216.0.v1\". */\n  public static readonly VER_13_00_5216_0_V1 = SqlServerEngineVersion.of('13.00.5216.0.v1', '13.00');\n  /** Version \"13.00.5292.0.v1\". */\n  public static readonly VER_13_00_5292_0_V1 = SqlServerEngineVersion.of('13.00.5292.0.v1', '13.00');\n  /** Version \"13.00.5366.0.v1\". */\n  public static readonly VER_13_00_5366_0_V1 = SqlServerEngineVersion.of('13.00.5366.0.v1', '13.00');\n  /** Version \"13.00.5426.0.v1\". */\n  public static readonly VER_13_00_5426_0_V1 = SqlServerEngineVersion.of('13.00.5426.0.v1', '13.00');\n  /** Version \"13.00.5598.27.v1\". */\n  public static readonly VER_13_00_5598_27_V1 = SqlServerEngineVersion.of('13.00.5598.27.v1', '13.00');\n  /** Version \"13.00.5820.21.v1\". */\n  public static readonly VER_13_00_5820_21_V1 = SqlServerEngineVersion.of('13.00.5820.21.v1', '13.00');\n  /** Version \"13.00.5850.14.v1\". */\n  public static readonly VER_13_00_5850_14_V1 = SqlServerEngineVersion.of('13.00.5850.14.v1', '13.00');\n  /** Version \"13.00.5882.1.v1\". */\n  public static readonly VER_13_00_5882_1_V1 = SqlServerEngineVersion.of('13.00.5882.1.v1', '13.00');\n\n  /** Version \"14.00\" (only a major version, without a specific minor version). */\n  public static readonly VER_14 = SqlServerEngineVersion.of('14.00', '14.00');\n  /** Version \"14.00.1000.169.v1\". */\n  public static readonly VER_14_00_1000_169_V1 = SqlServerEngineVersion.of('14.00.1000.169.v1', '14.00');\n  /** Version \"14.00.3015.40.v1\". */\n  public static readonly VER_14_00_3015_40_V1 = SqlServerEngineVersion.of('14.00.3015.40.v1', '14.00');\n  /** Version \"14.00.3035.2.v1\". */\n  public static readonly VER_14_00_3035_2_V1 = SqlServerEngineVersion.of('14.00.3035.2.v1', '14.00');\n  /** Version \"14.00.3049.1.v1\". */\n  public static readonly VER_14_00_3049_1_V1 = SqlServerEngineVersion.of('14.00.3049.1.v1', '14.00');\n  /**\n   * Version \"14.00.3192.2.v1\".\n   * @deprecated SQL Server version 14.00.3192.2.v1 reached end of life\n  */\n  public static readonly VER_14_00_3192_2_V1 = SqlServerEngineVersion.of('14.00.3192.2.v1', '14.00');\n  /** Version \"14.00.3223.3.v1\". */\n  public static readonly VER_14_00_3223_3_V1 = SqlServerEngineVersion.of('14.00.3223.3.v1', '14.00');\n  /** Version \"14.00.3281.6.v1\". */\n  public static readonly VER_14_00_3281_6_V1 = SqlServerEngineVersion.of('14.00.3281.6.v1', '14.00');\n  /** Version \"14.00.3294.2.v1\". */\n  public static readonly VER_14_00_3294_2_V1 = SqlServerEngineVersion.of('14.00.3294.2.v1', '14.00');\n  /** Version \"14.00.3356.20.v1\". */\n  public static readonly VER_14_00_3356_20_V1 = SqlServerEngineVersion.of('14.00.3356.20.v1', '14.00');\n  /** Version \"14.00.3381.3.v1\". */\n  public static readonly VER_14_00_3381_3_V1 = SqlServerEngineVersion.of('14.00.3381.3.v1', '14.00');\n\n  /** Version \"15.00\" (only a major version, without a specific minor version). */\n  public static readonly VER_15 = SqlServerEngineVersion.of('15.00', '15.00');\n  /** Version \"15.00.4043.16.v1\". */\n  public static readonly VER_15_00_4043_16_V1 = SqlServerEngineVersion.of('15.00.4043.16.v1', '15.00');\n  /**\n   * Version \"15.00.4043.23.v1\".\n   * @deprecated This version is erroneous. You might be looking for {@link SqlServerEngineVersion.VER_15_00_4073_23_V1}, instead.\n   */\n  public static readonly VER_15_00_4043_23_V1 = SqlServerEngineVersion.of('15.00.4043.23.v1', '15.00');\n  /** Version \"15.00.4073.23.v1\". */\n  public static readonly VER_15_00_4073_23_V1 = SqlServerEngineVersion.of('15.00.4073.23.v1', '15.00');\n\n  /**\n   * Create a new SqlServerEngineVersion with an arbitrary version.\n   *\n   * @param sqlServerFullVersion the full version string,\n   *   for example \"15.00.3049.1.v1\"\n   * @param sqlServerMajorVersion the major version of the engine,\n   *   for example \"15.00\"\n   */\n  public static of(sqlServerFullVersion: string, sqlServerMajorVersion: string): SqlServerEngineVersion {\n    return new SqlServerEngineVersion(sqlServerFullVersion, sqlServerMajorVersion);\n  }\n\n  /** The full version string, for example, \"15.00.3049.1.v1\". */\n  public readonly sqlServerFullVersion: string;\n  /** The major version of the engine, for example, \"15.00\". */\n  public readonly sqlServerMajorVersion: string;\n\n  private constructor(sqlServerFullVersion: string, sqlServerMajorVersion: string) {\n    this.sqlServerFullVersion = sqlServerFullVersion;\n    this.sqlServerMajorVersion = sqlServerMajorVersion;\n  }\n}\n\ninterface SqlServerInstanceEngineProps {\n  /** The exact version of the engine to use. */\n  readonly version: SqlServerEngineVersion;\n}\n\ninterface SqlServerInstanceEngineBaseProps {\n  readonly engineType: string;\n  readonly version?: SqlServerEngineVersion;\n}\n\nabstract class SqlServerInstanceEngineBase extends InstanceEngineBase {\n  constructor(props: SqlServerInstanceEngineBaseProps) {\n    super({\n      ...props,\n      singleUserRotationApplication: secretsmanager.SecretRotationApplication.SQLSERVER_ROTATION_SINGLE_USER,\n      multiUserRotationApplication: secretsmanager.SecretRotationApplication.SQLSERVER_ROTATION_MULTI_USER,\n      version: props.version\n        ? {\n          fullVersion: props.version.sqlServerFullVersion,\n          majorVersion: props.version.sqlServerMajorVersion,\n        }\n        : undefined,\n      parameterGroupFamily: props.version\n        // for some reason, even though SQL Server major versions usually end in '.00',\n        // the ParameterGroup family has to end in '.0'\n        ? `${props.engineType}-${props.version.sqlServerMajorVersion.endsWith('.00')\n          ? props.version.sqlServerMajorVersion.slice(0, -1)\n          : props.version.sqlServerMajorVersion}`\n        : undefined,\n      features: {\n        s3Import: 'S3_INTEGRATION',\n        s3Export: 'S3_INTEGRATION',\n      },\n    });\n  }\n\n  public bindToInstance(scope: Construct, options: InstanceEngineBindOptions): InstanceEngineConfig {\n    const config = super.bindToInstance(scope, options);\n\n    let optionGroup = options.optionGroup;\n    const s3Role = options.s3ImportRole ?? options.s3ExportRole;\n    if (s3Role) {\n      if (options.s3ImportRole && options.s3ExportRole && options.s3ImportRole !== options.s3ExportRole) {\n        throw new Error('S3 import and export roles must be the same for SQL Server engines');\n      }\n\n      if (!optionGroup) {\n        optionGroup = new OptionGroup(scope, 'InstanceOptionGroup', {\n          engine: this,\n          configurations: [],\n        });\n      }\n      // https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.SQLServer.Options.BackupRestore.html\n      optionGroup.addConfiguration({\n        name: 'SQLSERVER_BACKUP_RESTORE',\n        settings: { IAM_ROLE_ARN: s3Role.roleArn },\n      });\n    }\n\n    return {\n      ...config,\n      optionGroup,\n    };\n  }\n\n  protected get supportsTimezone() { return true; }\n}\n\n/**\n * Properties for SQL Server Standard Edition instance engines.\n * Used in {@link DatabaseInstanceEngine.sqlServerSe}.\n */\nexport interface SqlServerSeInstanceEngineProps extends SqlServerInstanceEngineProps {\n}\n\nclass SqlServerSeInstanceEngine extends SqlServerInstanceEngineBase {\n  constructor(version?: SqlServerEngineVersion) {\n    super({\n      engineType: 'sqlserver-se',\n      version,\n    });\n  }\n}\n\n/**\n * Properties for SQL Server Express Edition instance engines.\n * Used in {@link DatabaseInstanceEngine.sqlServerEx}.\n */\nexport interface SqlServerExInstanceEngineProps extends SqlServerInstanceEngineProps {\n}\n\nclass SqlServerExInstanceEngine extends SqlServerInstanceEngineBase {\n  constructor(version?: SqlServerEngineVersion) {\n    super({\n      engineType: 'sqlserver-ex',\n      version,\n    });\n  }\n}\n\n/**\n * Properties for SQL Server Web Edition instance engines.\n * Used in {@link DatabaseInstanceEngine.sqlServerWeb}.\n */\nexport interface SqlServerWebInstanceEngineProps extends SqlServerInstanceEngineProps {\n}\n\nclass SqlServerWebInstanceEngine extends SqlServerInstanceEngineBase {\n  constructor(version?: SqlServerEngineVersion) {\n    super({\n      engineType: 'sqlserver-web',\n      version,\n    });\n  }\n}\n\n/**\n * Properties for SQL Server Enterprise Edition instance engines.\n * Used in {@link DatabaseInstanceEngine.sqlServerEe}.\n */\nexport interface SqlServerEeInstanceEngineProps extends SqlServerInstanceEngineProps {\n}\n\nclass SqlServerEeInstanceEngine extends SqlServerInstanceEngineBase {\n  constructor(version?: SqlServerEngineVersion) {\n    super({\n      engineType: 'sqlserver-ee',\n      version,\n    });\n  }\n}\n\n/**\n * A database instance engine. Provides mapping to DatabaseEngine used for\n * secret rotation.\n */\nexport class DatabaseInstanceEngine {\n  /**\n   * The unversioned 'mariadb' instance engine.\n   *\n   * NOTE: using unversioned engines is an availability risk.\n   *   We recommend using versioned engines created using the {@link mariaDb()} method\n   */\n  public static readonly MARIADB: IInstanceEngine = new MariaDbInstanceEngine();\n\n  /**\n   * The unversioned 'mysql' instance engine.\n   *\n   * NOTE: using unversioned engines is an availability risk.\n   *   We recommend using versioned engines created using the {@link mysql()} method\n   */\n  public static readonly MYSQL: IInstanceEngine = new MySqlInstanceEngine();\n\n  /**\n   * The unversioned 'oracle-ee' instance engine.\n   *\n   * NOTE: using unversioned engines is an availability risk.\n   *   We recommend using versioned engines created using the {@link oracleEe()} method\n   */\n  public static readonly ORACLE_EE: IInstanceEngine = new OracleEeInstanceEngine();\n\n  /**\n   * The unversioned 'oracle-se2' instance engine.\n   *\n   * NOTE: using unversioned engines is an availability risk.\n   *   We recommend using versioned engines created using the {@link oracleSe2()} method\n   */\n  public static readonly ORACLE_SE2: IInstanceEngine = new OracleSe2InstanceEngine();\n\n  /**\n   * The unversioned 'oracle-se1' instance engine.\n   *\n   * @deprecated instances can no longer be created with this engine. See https://forums.aws.amazon.com/ann.jspa?annID=7341\n   */\n  public static readonly ORACLE_SE1: IInstanceEngine = new OracleSe1InstanceEngine();\n\n  /**\n   * The unversioned 'oracle-se' instance engine.\n   *\n   * @deprecated instances can no longer be created with this engine. See https://forums.aws.amazon.com/ann.jspa?annID=7341\n   */\n  public static readonly ORACLE_SE: IInstanceEngine = new OracleSeInstanceEngine();\n\n  /**\n   * The unversioned 'postgres' instance engine.\n   *\n   * NOTE: using unversioned engines is an availability risk.\n   *   We recommend using versioned engines created using the {@link postgres()} method\n   */\n  public static readonly POSTGRES: IInstanceEngine = new PostgresInstanceEngine();\n\n  /**\n   * The unversioned 'sqlserver-ee' instance engine.\n   *\n   * NOTE: using unversioned engines is an availability risk.\n   *   We recommend using versioned engines created using the {@link sqlServerEe()} method\n   */\n  public static readonly SQL_SERVER_EE: IInstanceEngine = new SqlServerEeInstanceEngine();\n\n  /**\n   * The unversioned 'sqlserver-se' instance engine.\n   *\n   * NOTE: using unversioned engines is an availability risk.\n   *   We recommend using versioned engines created using the {@link sqlServerSe()} method\n   */\n  public static readonly SQL_SERVER_SE: IInstanceEngine = new SqlServerSeInstanceEngine();\n\n  /**\n   * The unversioned 'sqlserver-ex' instance engine.\n   *\n   * NOTE: using unversioned engines is an availability risk.\n   *   We recommend using versioned engines created using the {@link sqlServerEx()} method\n   */\n  public static readonly SQL_SERVER_EX: IInstanceEngine = new SqlServerExInstanceEngine();\n\n  /**\n   * The unversioned 'sqlserver-web' instance engine.\n   *\n   * NOTE: using unversioned engines is an availability risk.\n   *   We recommend using versioned engines created using the {@link sqlServerWeb()} method\n   */\n  public static readonly SQL_SERVER_WEB: IInstanceEngine = new SqlServerWebInstanceEngine();\n\n  /** Creates a new MariaDB instance engine. */\n  public static mariaDb(props: MariaDbInstanceEngineProps): IInstanceEngine {\n    return new MariaDbInstanceEngine(props.version);\n  }\n\n  /** Creates a new MySQL instance engine. */\n  public static mysql(props: MySqlInstanceEngineProps): IInstanceEngine {\n    return new MySqlInstanceEngine(props.version);\n  }\n\n  /** Creates a new PostgreSQL instance engine. */\n  public static postgres(props: PostgresInstanceEngineProps): IInstanceEngine {\n    return new PostgresInstanceEngine(props.version);\n  }\n\n  /**\n   * Creates a new Oracle Standard Edition instance engine.\n   * @deprecated instances can no longer be created with this engine. See https://forums.aws.amazon.com/ann.jspa?annID=7341\n   */\n  public static oracleSe(props: OracleSeInstanceEngineProps): IInstanceEngine {\n    return new OracleSeInstanceEngine(props.version);\n  }\n\n  /**\n   * Creates a new Oracle Standard Edition 1 instance engine.\n   * @deprecated instances can no longer be created with this engine. See https://forums.aws.amazon.com/ann.jspa?annID=7341\n   */\n  public static oracleSe1(props: OracleSe1InstanceEngineProps): IInstanceEngine {\n    return new OracleSe1InstanceEngine(props.version);\n  }\n\n  /** Creates a new Oracle Standard Edition 1 instance engine. */\n  public static oracleSe2(props: OracleSe2InstanceEngineProps): IInstanceEngine {\n    return new OracleSe2InstanceEngine(props.version);\n  }\n\n  /** Creates a new Oracle Enterprise Edition instance engine. */\n  public static oracleEe(props: OracleEeInstanceEngineProps): IInstanceEngine {\n    return new OracleEeInstanceEngine(props.version);\n  }\n\n  /** Creates a new SQL Server Standard Edition instance engine. */\n  public static sqlServerSe(props: SqlServerSeInstanceEngineProps): IInstanceEngine {\n    return new SqlServerSeInstanceEngine(props.version);\n  }\n\n  /** Creates a new SQL Server Express Edition instance engine. */\n  public static sqlServerEx(props: SqlServerExInstanceEngineProps): IInstanceEngine {\n    return new SqlServerExInstanceEngine(props.version);\n  }\n\n  /** Creates a new SQL Server Web Edition instance engine. */\n  public static sqlServerWeb(props: SqlServerWebInstanceEngineProps): IInstanceEngine {\n    return new SqlServerWebInstanceEngine(props.version);\n  }\n\n  /** Creates a new SQL Server Enterprise Edition instance engine. */\n  public static sqlServerEe(props: SqlServerEeInstanceEngineProps): IInstanceEngine {\n    return new SqlServerEeInstanceEngine(props.version);\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
