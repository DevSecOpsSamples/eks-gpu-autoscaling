{
  "version": 3,
  "sources": ["endpoint.ts"],
  "sourcesContent": ["import { Token } from '../../core';\n\n/**\n * Connection endpoint of a database cluster or instance\n *\n * Consists of a combination of hostname and port.\n */\nexport class Endpoint {\n  /**\n   * The hostname of the endpoint\n   */\n  public readonly hostname: string;\n\n  /**\n   * The port of the endpoint\n   */\n  public readonly port: number;\n\n  /**\n   * The combination of \"HOSTNAME:PORT\" for this endpoint\n   */\n  public readonly socketAddress: string;\n\n  constructor(address: string, port: number) {\n    this.hostname = address;\n    this.port = port;\n\n    const portDesc = Token.isUnresolved(port) ? Token.asString(port) : port;\n    this.socketAddress = `${address}:${portDesc}`;\n  }\n}\n"],
  "mappings": "oJAAA,OAAA,QAAA,YAAA,EAOA,MAAa,QAAQ,CAgBnB,YAAY,QAAiB,KAAY,CACvC,KAAK,SAAW,QAChB,KAAK,KAAO,KAEZ,KAAM,UAAW,OAAA,MAAM,aAAa,IAAI,EAAI,OAAA,MAAM,SAAS,IAAI,EAAI,KACnE,KAAK,cAAgB,GAAG,WAAW,YArBvC,QAAA,SAAA",
  "names": []
}
