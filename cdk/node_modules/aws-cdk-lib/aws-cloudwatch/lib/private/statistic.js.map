{
  "version": 3,
  "sources": ["statistic.ts"],
  "sourcesContent": ["import { Statistic } from '../metric-types';\n\nexport interface SimpleStatistic {\n  type: 'simple';\n  statistic: Statistic;\n}\n\nexport interface PercentileStatistic {\n  type: 'percentile';\n  percentile: number;\n}\n\nexport interface GenericStatistic {\n  type: 'generic';\n  statistic: string;\n}\n\n/**\n * Parse a statistic, returning the type of metric that was used (simple or percentile)\n */\nexport function parseStatistic(stat: string): SimpleStatistic | PercentileStatistic | GenericStatistic {\n  const lowerStat = stat.toLowerCase();\n\n  // Simple statistics\n  const statMap: {[k: string]: Statistic} = {\n    average: Statistic.AVERAGE,\n    avg: Statistic.AVERAGE,\n    minimum: Statistic.MINIMUM,\n    min: Statistic.MINIMUM,\n    maximum: Statistic.MAXIMUM,\n    max: Statistic.MAXIMUM,\n    samplecount: Statistic.SAMPLE_COUNT,\n    n: Statistic.SAMPLE_COUNT,\n    sum: Statistic.SUM,\n  };\n\n  if (lowerStat in statMap) {\n    return {\n      type: 'simple',\n      statistic: statMap[lowerStat],\n    };\n  }\n\n  // Percentile statistics\n  const re = /^p([\\d.]+)$/;\n  const m = re.exec(lowerStat);\n  if (m) {\n    return {\n      type: 'percentile',\n      percentile: parseFloat(m[1]),\n    };\n  }\n\n  return {\n    type: 'generic',\n    statistic: stat,\n  };\n}\n\nexport function normalizeStatistic(stat: string): string {\n  const parsed = parseStatistic(stat);\n  if (parsed.type === 'simple' || parsed.type === 'generic') {\n    return parsed.statistic;\n  } else {\n    // Already percentile. Avoid parsing because we might get into\n    // floating point rounding issues, return as-is but lowercase the p.\n    return stat.toLowerCase();\n  }\n}"],
  "mappings": "6HAAA,KAAA,gBAAA,QAAA,iBAAA,EAoBA,wBAA+B,KAAY,CACzC,KAAM,WAAY,KAAK,YAAW,EAG5B,QAAoC,CACxC,QAAS,eAAA,UAAU,QACnB,IAAK,eAAA,UAAU,QACf,QAAS,eAAA,UAAU,QACnB,IAAK,eAAA,UAAU,QACf,QAAS,eAAA,UAAU,QACnB,IAAK,eAAA,UAAU,QACf,YAAa,eAAA,UAAU,aACvB,EAAG,eAAA,UAAU,aACb,IAAK,eAAA,UAAU,KAGjB,GAAI,YAAa,SACf,MAAO,CACL,KAAM,SACN,UAAW,QAAQ,YAMvB,KAAM,GAAI,AADC,cACE,KAAK,SAAS,EAC3B,MAAI,GACK,CACL,KAAM,aACN,WAAY,WAAW,EAAE,EAAE,GAIxB,CACL,KAAM,UACN,UAAW,KAEf,CArCA,QAAA,eAAA,eAuCA,4BAAmC,KAAY,CAC7C,KAAM,QAAS,eAAe,IAAI,EAClC,MAAI,QAAO,OAAS,UAAY,OAAO,OAAS,UACvC,OAAO,UAIP,KAAK,YAAW,CAE3B,CATA,QAAA,mBAAA",
  "names": []
}
