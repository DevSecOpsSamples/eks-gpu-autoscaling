{
  "version": 3,
  "sources": ["ec2-task-definition.ts"],
  "sourcesContent": ["import { Construct } from 'constructs';\nimport { ImportedTaskDefinition } from '../base/_imported-task-definition';\nimport {\n  CommonTaskDefinitionAttributes,\n  CommonTaskDefinitionProps,\n  Compatibility,\n  IpcMode,\n  ITaskDefinition,\n  NetworkMode,\n  PidMode,\n  TaskDefinition,\n  InferenceAccelerator,\n} from '../base/task-definition';\nimport { PlacementConstraint } from '../placement';\n\n/**\n * The properties for a task definition run on an EC2 cluster.\n */\nexport interface Ec2TaskDefinitionProps extends CommonTaskDefinitionProps {\n  /**\n   * The Docker networking mode to use for the containers in the task.\n   *\n   * The valid values are NONE, BRIDGE, AWS_VPC, and HOST.\n   *\n   * @default - NetworkMode.BRIDGE for EC2 tasks, AWS_VPC for Fargate tasks.\n   */\n  readonly networkMode?: NetworkMode;\n\n  /**\n   * An array of placement constraint objects to use for the task. You can\n   * specify a maximum of 10 constraints per task (this limit includes\n   * constraints in the task definition and those specified at run time).\n   *\n   * @default - No placement constraints.\n   */\n  readonly placementConstraints?: PlacementConstraint[];\n\n  /**\n   * The IPC resource namespace to use for the containers in the task.\n   *\n   * Not supported in Fargate and Windows containers.\n   *\n   * @default - IpcMode used by the task is not specified\n   */\n  readonly ipcMode?: IpcMode;\n\n  /**\n   * The process namespace to use for the containers in the task.\n   *\n   * Not supported in Fargate and Windows containers.\n   *\n   * @default - PidMode used by the task is not specified\n   */\n  readonly pidMode?: PidMode;\n\n  /**\n   * The inference accelerators to use for the containers in the task.\n   *\n   * Not supported in Fargate.\n   *\n   * @default - No inference accelerators.\n   */\n  readonly inferenceAccelerators?: InferenceAccelerator[];\n}\n\n/**\n * The interface of a task definition run on an EC2 cluster.\n */\nexport interface IEc2TaskDefinition extends ITaskDefinition {\n\n}\n\n/**\n * Attributes used to import an existing EC2 task definition\n */\nexport interface Ec2TaskDefinitionAttributes extends CommonTaskDefinitionAttributes {\n\n}\n\n/**\n * The details of a task definition run on an EC2 cluster.\n *\n * @resource AWS::ECS::TaskDefinition\n */\nexport class Ec2TaskDefinition extends TaskDefinition implements IEc2TaskDefinition {\n\n  /**\n   * Imports a task definition from the specified task definition ARN.\n   */\n  public static fromEc2TaskDefinitionArn(scope: Construct, id: string, ec2TaskDefinitionArn: string): IEc2TaskDefinition {\n    return new ImportedTaskDefinition(scope, id, {\n      taskDefinitionArn: ec2TaskDefinitionArn,\n    });\n  }\n\n  /**\n   * Imports an existing Ec2 task definition from its attributes\n   */\n  public static fromEc2TaskDefinitionAttributes(\n    scope: Construct,\n    id: string,\n    attrs: Ec2TaskDefinitionAttributes,\n  ): IEc2TaskDefinition {\n    return new ImportedTaskDefinition(scope, id, {\n      taskDefinitionArn: attrs.taskDefinitionArn,\n      compatibility: Compatibility.EC2,\n      networkMode: attrs.networkMode,\n      taskRole: attrs.taskRole,\n    });\n  }\n\n  /**\n   * Constructs a new instance of the Ec2TaskDefinition class.\n   */\n  constructor(scope: Construct, id: string, props: Ec2TaskDefinitionProps = {}) {\n    super(scope, id, {\n      ...props,\n      compatibility: Compatibility.EC2,\n      placementConstraints: props.placementConstraints,\n      ipcMode: props.ipcMode,\n      pidMode: props.pidMode,\n      inferenceAccelerators: props.inferenceAccelerators,\n    });\n  }\n}\n"],
  "mappings": "2NACA,4BAAA,QAAA,mCAAA,EACA,kBAAA,QAAA,yBAAA,EAkFA,MAAa,yBAA0B,mBAAA,cAAc,CA8BnD,YAAY,MAAkB,GAAY,MAAgC,CAAA,EAAE,CAC1E,MAAM,MAAO,GAAI,IACZ,MACH,cAAe,kBAAA,cAAc,IAC7B,qBAAsB,MAAM,qBAC5B,QAAS,MAAM,QACf,QAAS,MAAM,QACf,sBAAuB,MAAM,sBAC9B,kFAjCW,0BAAyB,MAAkB,GAAY,qBAA4B,CAC/F,MAAO,IAAI,6BAAA,uBAAuB,MAAO,GAAI,CAC3C,kBAAmB,qBACpB,QAMW,iCACZ,MACA,GACA,MAAkC,uFAE3B,GAAI,6BAAA,uBAAuB,MAAO,GAAI,CAC3C,kBAAmB,MAAM,kBACzB,cAAe,kBAAA,cAAc,IAC7B,YAAa,MAAM,YACnB,SAAU,MAAM,SACjB,GAxBL,QAAA,kBAAA",
  "names": []
}
