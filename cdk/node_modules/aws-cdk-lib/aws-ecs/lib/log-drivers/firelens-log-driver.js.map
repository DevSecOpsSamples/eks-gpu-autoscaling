{
  "version": 3,
  "sources": ["firelens-log-driver.ts"],
  "sourcesContent": ["import { Construct } from 'constructs';\nimport { ContainerDefinition, Secret } from '../container-definition';\nimport { BaseLogDriverProps } from './base-log-driver';\nimport { LogDriver, LogDriverConfig } from './log-driver';\nimport { removeEmpty, renderLogDriverSecretOptions } from './utils';\n\n/**\n * Specifies the firelens log driver configuration options.\n */\nexport interface FireLensLogDriverProps extends BaseLogDriverProps {\n  /**\n   * The configuration options to send to the log driver.\n   * @default - the log driver options\n   */\n  readonly options?: { [key: string]: string };\n\n  /**\n   * The secrets to pass to the log configuration.\n   * @default - No secret options provided.\n   */\n  readonly secretOptions?: { [key: string]: Secret };\n}\n\n/**\n * FireLens enables you to use task definition parameters to route logs to an AWS service\n *  or AWS Partner Network (APN) destination for log storage and analytics\n */\nexport class FireLensLogDriver extends LogDriver {\n  /**\n   * The configuration options to send to the log driver.\n   * @default - the log driver options\n   */\n  private options?: { [key: string]: string };\n\n  /**\n   * The secrets to pass to the log configuration.\n   * @default - No secret options provided.\n   */\n  private secretOptions?: { [key: string]: Secret };\n\n  /**\n   * Constructs a new instance of the FireLensLogDriver class.\n   * @param props the awsfirelens log driver configuration options.\n   */\n  constructor(props: FireLensLogDriverProps) {\n    super();\n\n    this.options = props.options;\n    this.secretOptions = props.secretOptions;\n  }\n\n  /**\n   * Called when the log driver is configured on a container\n   */\n  public bind(_scope: Construct, _containerDefinition: ContainerDefinition): LogDriverConfig {\n    return {\n      logDriver: 'awsfirelens',\n      ...(this.options && { options: removeEmpty(this.options) }),\n      secretOptions: this.secretOptions && renderLogDriverSecretOptions(this.secretOptions, _containerDefinition.taskDefinition),\n    };\n  }\n}\n"],
  "mappings": "2NAGA,aAAA,QAAA,cAAA,EACA,QAAA,QAAA,SAAA,EAuBA,MAAa,yBAA0B,cAAA,SAAS,CAiB9C,YAAY,MAA6B,CACvC,MAAK,4EAEL,KAAK,QAAU,MAAM,QACrB,KAAK,cAAgB,MAAM,cAMtB,KAAK,OAAmB,qBAAyC,8FAC/D,CACL,UAAW,iBACP,KAAK,SAAW,CAAE,QAAS,QAAA,YAAY,KAAK,OAAO,CAAC,EACxD,cAAe,KAAK,eAAiB,QAAA,6BAA6B,KAAK,cAAe,qBAAqB,cAAc,IA/B/H,QAAA,kBAAA",
  "names": []
}
