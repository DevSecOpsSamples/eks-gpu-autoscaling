{
  "version": 3,
  "sources": ["json-file-log-driver.ts"],
  "sourcesContent": ["import { Construct } from 'constructs';\nimport { ContainerDefinition } from '../container-definition';\nimport { BaseLogDriverProps } from './base-log-driver';\nimport { LogDriver, LogDriverConfig } from './log-driver';\nimport { joinWithCommas, stringifyOptions } from './utils';\n\n/**\n * Specifies the json-file log driver configuration options.\n *\n * [Source](https://docs.docker.com/config/containers/logging/json-file/)\n */\nexport interface JsonFileLogDriverProps extends BaseLogDriverProps {\n  /**\n   * The maximum size of the log before it is rolled. A positive integer plus a modifier\n   * representing the unit of measure (k, m, or g).\n   *\n   * @default - -1 (unlimited)\n   */\n  readonly maxSize?: string;\n\n  /**\n   * The maximum number of log files that can be present. If rolling the logs creates\n   * excess files, the oldest file is removed. Only effective when max-size is also set.\n   * A positive integer.\n   *\n   * @default - 1\n   */\n  readonly maxFile?: number;\n\n  /**\n   * Toggles compression for rotated logs.\n   *\n   * @default - false\n   */\n  readonly compress?: boolean;\n}\n\n/**\n * A log driver that sends log information to json-file Logs.\n */\nexport class JsonFileLogDriver extends LogDriver {\n  /**\n   * Constructs a new instance of the JsonFileLogDriver class.\n   *\n   * @param props the json-file log driver configuration options.\n   */\n  constructor(private readonly props: JsonFileLogDriverProps = {}) {\n    super();\n\n    // Validation\n    if (props.maxFile && props.maxFile < 0) {\n      throw new Error('`maxFile` must be a positive integer.');\n    }\n  }\n\n  /**\n   * Called when the log driver is configured on a container\n   */\n  public bind(_scope: Construct, _containerDefinition: ContainerDefinition): LogDriverConfig {\n    return {\n      logDriver: 'json-file',\n      options: stringifyOptions({\n        'max-size': this.props.maxSize,\n        'max-file': this.props.maxFile,\n        'compress': this.props.compress,\n        'labels': joinWithCommas(this.props.labels),\n        'env': joinWithCommas(this.props.env),\n        'env-regex': this.props.envRegex,\n      }),\n    };\n  }\n}\n"],
  "mappings": "2NAGA,aAAA,QAAA,cAAA,EACA,QAAA,QAAA,SAAA,EAoCA,MAAa,yBAA0B,cAAA,SAAS,CAM9C,YAA6B,MAAgC,CAAA,EAAE,CAC7D,MAAK,EAGL,GAJ2B,KAAA,MAAA,gFAIvB,MAAM,SAAW,MAAM,QAAU,EACnC,KAAM,IAAI,OAAM,uCAAuC,EAOpD,KAAK,OAAmB,qBAAyC,8FAC/D,CACL,UAAW,YACX,QAAS,QAAA,iBAAiB,CACxB,WAAY,KAAK,MAAM,QACvB,WAAY,KAAK,MAAM,QACvB,SAAY,KAAK,MAAM,SACvB,OAAU,QAAA,eAAe,KAAK,MAAM,MAAM,EAC1C,IAAO,QAAA,eAAe,KAAK,MAAM,GAAG,EACpC,YAAa,KAAK,MAAM,SACzB,IA5BP,QAAA,kBAAA",
  "names": []
}
