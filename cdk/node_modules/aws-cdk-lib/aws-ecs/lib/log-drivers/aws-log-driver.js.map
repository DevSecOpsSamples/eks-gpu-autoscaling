{
  "version": 3,
  "sources": ["aws-log-driver.ts"],
  "sourcesContent": ["import * as logs from '../../../aws-logs';\nimport { Construct } from 'constructs';\nimport { ContainerDefinition } from '../container-definition';\nimport { LogDriver, LogDriverConfig } from './log-driver';\nimport { removeEmpty } from './utils';\n\n/**\n * awslogs provides two modes for delivering messages from the container to the log driver\n */\nexport enum AwsLogDriverMode {\n\n  /**\n   * (default) direct, blocking delivery from container to driver.\n   */\n  BLOCKING = 'blocking',\n\n  /**\n   * The non-blocking message delivery mode prevents applications from blocking due to logging back pressure.\n   * Applications are likely to fail in unexpected ways when STDERR or STDOUT streams block.\n   */\n  NON_BLOCKING = 'non-blocking'\n}\n\n/**\n * Specifies the awslogs log driver configuration options.\n */\nexport interface AwsLogDriverProps {\n  /**\n   * Prefix for the log streams\n   *\n   * The awslogs-stream-prefix option allows you to associate a log stream\n   * with the specified prefix, the container name, and the ID of the Amazon\n   * ECS task to which the container belongs. If you specify a prefix with\n   * this option, then the log stream takes the following format:\n   *\n   *     prefix-name/container-name/ecs-task-id\n   */\n  readonly streamPrefix: string;\n\n  /**\n   * The log group to log to\n   *\n   * @default - A log group is automatically created.\n   */\n  readonly logGroup?: logs.ILogGroup;\n\n  /**\n   * The number of days log events are kept in CloudWatch Logs when the log\n   * group is automatically created by this construct.\n   *\n   * @default - Logs never expire.\n   */\n  readonly logRetention?: logs.RetentionDays;\n\n  /**\n   * This option defines a multiline start pattern in Python strftime format.\n   *\n   * A log message consists of a line that matches the pattern and any\n   * following lines that don\u2019t match the pattern. Thus the matched line is\n   * the delimiter between log messages.\n   *\n   * @default - No multiline matching.\n   */\n  readonly datetimeFormat?: string;\n\n  /**\n   * This option defines a multiline start pattern using a regular expression.\n   *\n   * A log message consists of a line that matches the pattern and any\n   * following lines that don\u2019t match the pattern. Thus the matched line is\n   * the delimiter between log messages.\n   *\n   * This option is ignored if datetimeFormat is also configured.\n   *\n   * @default - No multiline matching.\n   */\n  readonly multilinePattern?: string;\n\n  /**\n   * The delivery mode of log messages from the container to awslogs.\n   *\n   * @default - AwsLogDriverMode.BLOCKING\n   */\n  readonly mode?: AwsLogDriverMode;\n}\n\n/**\n * A log driver that sends log information to CloudWatch Logs.\n */\nexport class AwsLogDriver extends LogDriver {\n  /**\n   * The log group to send log streams to.\n   *\n   * Only available after the LogDriver has been bound to a ContainerDefinition.\n   */\n  public logGroup?: logs.ILogGroup;\n\n  /**\n   * Constructs a new instance of the AwsLogDriver class.\n   *\n   * @param props the awslogs log driver configuration options.\n   */\n  constructor(private readonly props: AwsLogDriverProps) {\n    super();\n\n    if (props.logGroup && props.logRetention) {\n      throw new Error('Cannot specify both `logGroup` and `logRetentionDays`.');\n    }\n  }\n\n  /**\n   * Called when the log driver is configured on a container\n   */\n  public bind(scope: Construct, containerDefinition: ContainerDefinition): LogDriverConfig {\n    this.logGroup = this.props.logGroup || new logs.LogGroup(scope, 'LogGroup', {\n      retention: this.props.logRetention || Infinity,\n    });\n\n    this.logGroup.grantWrite(containerDefinition.taskDefinition.obtainExecutionRole());\n\n    return {\n      logDriver: 'awslogs',\n      options: removeEmpty({\n        'awslogs-group': this.logGroup.logGroupName,\n        'awslogs-stream-prefix': this.props.streamPrefix,\n        'awslogs-region': this.logGroup.env.region,\n        'awslogs-datetime-format': this.props.datetimeFormat,\n        'awslogs-multiline-pattern': this.props.multilinePattern,\n        'mode': this.props.mode,\n      }),\n    };\n  }\n}\n"],
  "mappings": "+OAAA,KAAA,QAAA,mBAAA,EAGA,aAAA,QAAA,cAAA,EACA,QAAA,QAAA,SAAA,EAKA,GAAY,kBAAZ,AAAA,UAAY,kBAAgB,CAK1B,kBAAA,SAAA,WAMA,kBAAA,aAAA,cACF,GAZY,iBAAA,QAAA,kBAAA,SAAA,iBAAgB,CAAA,EAAA,EAgF5B,MAAa,oBAAqB,cAAA,SAAS,CAazC,YAA6B,MAAwB,CACnD,MAAK,EAEL,GAH2B,KAAA,MAAA,2EAGvB,MAAM,UAAY,MAAM,aAC1B,KAAM,IAAI,OAAM,wDAAwD,EAOrE,KAAK,MAAkB,oBAAwC,6FACpE,KAAK,SAAW,KAAK,MAAM,UAAY,GAAI,MAAK,SAAS,MAAO,WAAY,CAC1E,UAAW,KAAK,MAAM,cAAgB,IACvC,EAED,KAAK,SAAS,WAAW,oBAAoB,eAAe,oBAAmB,CAAE,EAE1E,CACL,UAAW,UACX,QAAS,QAAA,YAAY,CACnB,gBAAiB,KAAK,SAAS,aAC/B,wBAAyB,KAAK,MAAM,aACpC,iBAAkB,KAAK,SAAS,IAAI,OACpC,0BAA2B,KAAK,MAAM,eACtC,4BAA6B,KAAK,MAAM,iBACxC,KAAQ,KAAK,MAAM,KACpB,IAxCP,QAAA,aAAA",
  "names": []
}
