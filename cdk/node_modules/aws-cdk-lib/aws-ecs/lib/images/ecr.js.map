{
  "version": 3,
  "sources": ["ecr.ts"],
  "sourcesContent": ["import * as ecr from '../../../aws-ecr';\nimport { Construct } from 'constructs';\nimport { ContainerDefinition } from '../container-definition';\nimport { ContainerImage, ContainerImageConfig } from '../container-image';\n\n/**\n * An image from an Amazon ECR repository.\n */\nexport class EcrImage extends ContainerImage {\n  /**\n   * The image name. Images in Amazon ECR repositories can be specified by either using the full registry/repository:tag or\n   * registry/repository@digest.\n   *\n   * For example, 012345678910.dkr.ecr.<region-name>.amazonaws.com/<repository-name>:latest or\n   * 012345678910.dkr.ecr.<region-name>.amazonaws.com/<repository-name>@sha256:94afd1f2e64d908bc90dbca0035a5b567EXAMPLE.\n   */\n  public readonly imageName: string;\n\n  /**\n   * Constructs a new instance of the EcrImage class.\n   */\n  constructor(private readonly repository: ecr.IRepository, private readonly tagOrDigest: string) {\n    super();\n\n    if (tagOrDigest?.startsWith('sha256:')) {\n      this.imageName = this.repository.repositoryUriForDigest(this.tagOrDigest);\n    } else {\n      this.imageName = this.repository.repositoryUriForTag(this.tagOrDigest);\n    }\n  }\n\n  public bind(_scope: Construct, containerDefinition: ContainerDefinition): ContainerImageConfig {\n    this.repository.grantPull(containerDefinition.taskDefinition.obtainExecutionRole());\n\n    return {\n      imageName: this.imageName,\n    };\n  }\n}\n"],
  "mappings": "kNAGA,kBAAA,QAAA,oBAAA,EAKA,MAAa,gBAAiB,mBAAA,cAAc,CAa1C,YAA6B,WAA8C,YAAmB,CAC5F,MAAK,EADsB,KAAA,WAAA,WAA8C,KAAA,YAAA,gFAGzE,AAAI,aAAW,MAAX,YAAa,WAAW,SAAS,EACnC,KAAK,UAAY,KAAK,WAAW,uBAAuB,KAAK,WAAW,EAExE,KAAK,UAAY,KAAK,WAAW,oBAAoB,KAAK,WAAW,EAIlE,KAAK,OAAmB,oBAAwC,6FACrE,KAAK,WAAW,UAAU,oBAAoB,eAAe,oBAAmB,CAAE,EAE3E,CACL,UAAW,KAAK,YA3BtB,QAAA,SAAA",
  "names": []
}
