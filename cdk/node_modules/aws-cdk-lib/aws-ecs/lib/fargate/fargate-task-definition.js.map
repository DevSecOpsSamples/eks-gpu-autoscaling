{
  "version": 3,
  "sources": ["fargate-task-definition.ts"],
  "sourcesContent": ["import { Tokenization, Token } from '../../../core';\nimport { Construct } from 'constructs';\nimport { ImportedTaskDefinition } from '../base/_imported-task-definition';\nimport {\n  CommonTaskDefinitionAttributes,\n  CommonTaskDefinitionProps,\n  Compatibility,\n  ITaskDefinition,\n  NetworkMode,\n  TaskDefinition,\n} from '../base/task-definition';\nimport { RuntimePlatform } from '../runtime-platform';\n\n/**\n * The properties for a task definition.\n */\nexport interface FargateTaskDefinitionProps extends CommonTaskDefinitionProps {\n  /**\n   * The number of cpu units used by the task. For tasks using the Fargate launch type,\n   * this field is required and you must use one of the following values,\n   * which determines your range of valid values for the memory parameter:\n   *\n   * 256 (.25 vCPU) - Available memory values: 512 (0.5 GB), 1024 (1 GB), 2048 (2 GB)\n   *\n   * 512 (.5 vCPU) - Available memory values: 1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB)\n   *\n   * 1024 (1 vCPU) - Available memory values: 2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192 (8 GB)\n   *\n   * 2048 (2 vCPU) - Available memory values: Between 4096 (4 GB) and 16384 (16 GB) in increments of 1024 (1 GB)\n   *\n   * 4096 (4 vCPU) - Available memory values: Between 8192 (8 GB) and 30720 (30 GB) in increments of 1024 (1 GB)\n   *\n   * @default 256\n   */\n  readonly cpu?: number;\n\n  /**\n   * The amount (in MiB) of memory used by the task. For tasks using the Fargate launch type,\n   * this field is required and you must use one of the following values, which determines your range of valid values for the cpu parameter:\n   *\n   * 512 (0.5 GB), 1024 (1 GB), 2048 (2 GB) - Available cpu values: 256 (.25 vCPU)\n   *\n   * 1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB) - Available cpu values: 512 (.5 vCPU)\n   *\n   * 2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192 (8 GB) - Available cpu values: 1024 (1 vCPU)\n   *\n   * Between 4096 (4 GB) and 16384 (16 GB) in increments of 1024 (1 GB) - Available cpu values: 2048 (2 vCPU)\n   *\n   * Between 8192 (8 GB) and 30720 (30 GB) in increments of 1024 (1 GB) - Available cpu values: 4096 (4 vCPU)\n   *\n   * @default 512\n   */\n  readonly memoryLimitMiB?: number;\n\n  /**\n   * The amount (in GiB) of ephemeral storage to be allocated to the task. The maximum supported value is 200 GiB.\n   *\n   * NOTE: This parameter is only supported for tasks hosted on AWS Fargate using platform version 1.4.0 or later.\n   *\n   * @default 20\n   */\n  readonly ephemeralStorageGiB?: number;\n\n  /**\n   * The operating system that your task definitions are running on.\n   *\n   * A runtimePlatform is supported only for tasks using the Fargate launch type.\n   *\n   * @default - Undefined.\n   */\n  readonly runtimePlatform?: RuntimePlatform;\n}\n\n/**\n * The interface of a task definition run on a Fargate cluster.\n */\nexport interface IFargateTaskDefinition extends ITaskDefinition {\n\n}\n\n/**\n * Attributes used to import an existing Fargate task definition\n */\nexport interface FargateTaskDefinitionAttributes extends CommonTaskDefinitionAttributes {\n\n}\n\n/**\n * The details of a task definition run on a Fargate cluster.\n *\n * @resource AWS::ECS::TaskDefinition\n */\nexport class FargateTaskDefinition extends TaskDefinition implements IFargateTaskDefinition {\n\n  /**\n   * Imports a task definition from the specified task definition ARN.\n   */\n  public static fromFargateTaskDefinitionArn(scope: Construct, id: string, fargateTaskDefinitionArn: string): IFargateTaskDefinition {\n    return new ImportedTaskDefinition(scope, id, { taskDefinitionArn: fargateTaskDefinitionArn });\n  }\n\n  /**\n   * Import an existing Fargate task definition from its attributes\n   */\n  public static fromFargateTaskDefinitionAttributes(\n    scope: Construct,\n    id: string,\n    attrs: FargateTaskDefinitionAttributes,\n  ): IFargateTaskDefinition {\n    return new ImportedTaskDefinition(scope, id, {\n      taskDefinitionArn: attrs.taskDefinitionArn,\n      compatibility: Compatibility.FARGATE,\n      networkMode: attrs.networkMode,\n      taskRole: attrs.taskRole,\n    });\n  }\n\n  /**\n   * The Docker networking mode to use for the containers in the task. Fargate tasks require the awsvpc network mode.\n   */\n  public readonly networkMode: NetworkMode = NetworkMode.AWS_VPC;\n  // NOTE: Until the fix to https://github.com/Microsoft/TypeScript/issues/26969 gets released,\n  // we need to explicitly write the type here, as type deduction for enums won't lead to\n  // the import being generated in the .d.ts file.\n\n  /**\n   * The amount (in GiB) of ephemeral storage to be allocated to the task.\n   */\n  public readonly ephemeralStorageGiB?: number;\n\n  /**\n   * Constructs a new instance of the FargateTaskDefinition class.\n   */\n  constructor(scope: Construct, id: string, props: FargateTaskDefinitionProps = {}) {\n    super(scope, id, {\n      ...props,\n      cpu: props.cpu !== undefined ? Tokenization.stringifyNumber(props.cpu) : '256',\n      memoryMiB: props.memoryLimitMiB !== undefined ? Tokenization.stringifyNumber(props.memoryLimitMiB) : '512',\n      compatibility: Compatibility.FARGATE,\n      networkMode: NetworkMode.AWS_VPC,\n    });\n\n    // eslint-disable-next-line max-len\n    if (props.ephemeralStorageGiB && !Token.isUnresolved(props.ephemeralStorageGiB) && (props.ephemeralStorageGiB < 21 || props.ephemeralStorageGiB > 200)) {\n      throw new Error('Ephemeral storage size must be between 21GiB and 200GiB');\n    }\n\n    this.ephemeralStorageGiB = props.ephemeralStorageGiB;\n  }\n}\n"],
  "mappings": "+NAAA,OAAA,QAAA,eAAA,EAEA,4BAAA,QAAA,mCAAA,EACA,kBAAA,QAAA,yBAAA,EAyFA,MAAa,6BAA8B,mBAAA,cAAc,CAyCvD,YAAY,MAAkB,GAAY,MAAoC,CAAA,EAAE,CAC9E,MAAM,MAAO,GAAI,IACZ,MACH,IAAK,MAAM,MAAQ,OAAY,OAAA,aAAa,gBAAgB,MAAM,GAAG,EAAI,MACzE,UAAW,MAAM,iBAAmB,OAAY,OAAA,aAAa,gBAAgB,MAAM,cAAc,EAAI,MACrG,cAAe,kBAAA,cAAc,QAC7B,YAAa,kBAAA,YAAY,QAC1B,EAGD,GAvBc,KAAA,YAA2B,kBAAA,YAAY,sFAuBjD,MAAM,qBAAuB,CAAC,OAAA,MAAM,aAAa,MAAM,mBAAmB,GAAM,OAAM,oBAAsB,IAAM,MAAM,oBAAsB,KAChJ,KAAM,IAAI,OAAM,yDAAyD,EAG3E,KAAK,oBAAsB,MAAM,0BAlDrB,8BAA6B,MAAkB,GAAY,yBAAgC,CACvG,MAAO,IAAI,6BAAA,uBAAuB,MAAO,GAAI,CAAE,kBAAmB,wBAAwB,CAAE,QAMhF,qCACZ,MACA,GACA,MAAsC,2FAE/B,GAAI,6BAAA,uBAAuB,MAAO,GAAI,CAC3C,kBAAmB,MAAM,kBACzB,cAAe,kBAAA,cAAc,QAC7B,YAAa,MAAM,YACnB,SAAU,MAAM,SACjB,GAtBL,QAAA,sBAAA",
  "names": []
}
