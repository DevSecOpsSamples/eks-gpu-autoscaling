{
  "version": 3,
  "sources": ["fargate-service.ts"],
  "sourcesContent": ["import * as ec2 from '../../../aws-ec2';\nimport * as cdk from '../../../core';\nimport { ArnFormat } from '../../../core';\nimport { Construct } from 'constructs';\nimport { BaseService, BaseServiceOptions, DeploymentControllerType, IBaseService, IService, LaunchType } from '../base/base-service';\nimport { fromServiceAtrributes } from '../base/from-service-attributes';\nimport { TaskDefinition } from '../base/task-definition';\nimport { ICluster } from '../cluster';\n\n/**\n * The properties for defining a service using the Fargate launch type.\n */\nexport interface FargateServiceProps extends BaseServiceOptions {\n  /**\n   * The task definition to use for tasks in the service.\n   *\n   * [disable-awslint:ref-via-interface]\n   */\n  readonly taskDefinition: TaskDefinition;\n\n  /**\n   * Specifies whether the task's elastic network interface receives a public IP address.\n   *\n   * If true, each task will receive a public IP address.\n   *\n   * @default false\n   */\n  readonly assignPublicIp?: boolean;\n\n  /**\n   * The subnets to associate with the service.\n   *\n   * @default - Public subnets if `assignPublicIp` is set, otherwise the first available one of Private, Isolated, Public, in that order.\n   */\n  readonly vpcSubnets?: ec2.SubnetSelection;\n\n  /**\n   * The security groups to associate with the service. If you do not specify a security group, a new security group is created.\n   *\n   * @default - A new security group is created.\n   * @deprecated use securityGroups instead.\n   */\n  readonly securityGroup?: ec2.ISecurityGroup;\n\n  /**\n   * The security groups to associate with the service. If you do not specify a security group, a new security group is created.\n   *\n   * @default - A new security group is created.\n   */\n  readonly securityGroups?: ec2.ISecurityGroup[];\n\n  /**\n   * The platform version on which to run your service.\n   *\n   * If one is not specified, the LATEST platform version is used by default. For more information, see\n   * [AWS Fargate Platform Versions](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html)\n   * in the Amazon Elastic Container Service Developer Guide.\n   *\n   * @default Latest\n   */\n  readonly platformVersion?: FargatePlatformVersion;\n}\n\n/**\n * The interface for a service using the Fargate launch type on an ECS cluster.\n */\nexport interface IFargateService extends IService {\n\n}\n\n/**\n * The properties to import from the service using the Fargate launch type.\n */\nexport interface FargateServiceAttributes {\n  /**\n   * The cluster that hosts the service.\n   */\n  readonly cluster: ICluster;\n\n  /**\n   * The service ARN.\n   *\n   * @default - either this, or {@link serviceName}, is required\n   */\n  readonly serviceArn?: string;\n\n  /**\n   * The name of the service.\n   *\n   * @default - either this, or {@link serviceArn}, is required\n   */\n  readonly serviceName?: string;\n}\n\n/**\n * This creates a service using the Fargate launch type on an ECS cluster.\n *\n * @resource AWS::ECS::Service\n */\nexport class FargateService extends BaseService implements IFargateService {\n\n  /**\n   * Imports from the specified service ARN.\n   */\n  public static fromFargateServiceArn(scope: Construct, id: string, fargateServiceArn: string): IFargateService {\n    class Import extends cdk.Resource implements IFargateService {\n      public readonly serviceArn = fargateServiceArn;\n      public readonly serviceName = cdk.Stack.of(scope).splitArn(fargateServiceArn, ArnFormat.SLASH_RESOURCE_NAME).resourceName as string;\n    }\n    return new Import(scope, id);\n  }\n\n  /**\n   * Imports from the specified service attrributes.\n   */\n  public static fromFargateServiceAttributes(scope: Construct, id: string, attrs: FargateServiceAttributes): IBaseService {\n    return fromServiceAtrributes(scope, id, attrs);\n  }\n\n  /**\n   * Constructs a new instance of the FargateService class.\n   */\n  constructor(scope: Construct, id: string, props: FargateServiceProps) {\n    if (!props.taskDefinition.isFargateCompatible) {\n      throw new Error('Supplied TaskDefinition is not configured for compatibility with Fargate');\n    }\n\n    if (props.securityGroup !== undefined && props.securityGroups !== undefined) {\n      throw new Error('Only one of SecurityGroup or SecurityGroups can be populated.');\n    }\n\n    if (props.taskDefinition.referencesSecretJsonField\n        && props.platformVersion\n        && SECRET_JSON_FIELD_UNSUPPORTED_PLATFORM_VERSIONS.includes(props.platformVersion)) {\n      throw new Error(`The task definition of this service uses at least one container that references a secret JSON field. This feature requires platform version ${FargatePlatformVersion.VERSION1_4} or later.`);\n    }\n    super(scope, id, {\n      ...props,\n      desiredCount: props.desiredCount,\n      launchType: LaunchType.FARGATE,\n      capacityProviderStrategies: props.capacityProviderStrategies,\n      enableECSManagedTags: props.enableECSManagedTags,\n    }, {\n      cluster: props.cluster.clusterName,\n      taskDefinition: props.deploymentController?.type === DeploymentControllerType.EXTERNAL ? undefined : props.taskDefinition.taskDefinitionArn,\n      platformVersion: props.platformVersion,\n    }, props.taskDefinition);\n\n    let securityGroups;\n    if (props.securityGroup !== undefined) {\n      securityGroups = [props.securityGroup];\n    } else if (props.securityGroups !== undefined) {\n      securityGroups = props.securityGroups;\n    }\n\n    this.configureAwsVpcNetworkingWithSecurityGroups(props.cluster.vpc, props.assignPublicIp, props.vpcSubnets, securityGroups);\n\n    this.node.addValidation({\n      validate: () => !this.taskDefinition.defaultContainer ? ['A TaskDefinition must have at least one essential container'] : [],\n    });\n  }\n}\n\n/**\n * The platform version on which to run your service.\n *\n * @see https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html\n */\nexport enum FargatePlatformVersion {\n  /**\n   * The latest, recommended platform version.\n   */\n  LATEST = 'LATEST',\n\n  /**\n   * Version 1.4.0\n   *\n   * Supports EFS endpoints, CAP_SYS_PTRACE Linux capability,\n   * network performance metrics in CloudWatch Container Insights,\n   * consolidated 20 GB ephemeral volume.\n   */\n  VERSION1_4 = '1.4.0',\n\n  /**\n   * Version 1.3.0\n   *\n   * Supports secrets, task recycling.\n   */\n  VERSION1_3 = '1.3.0',\n\n  /**\n   * Version 1.2.0\n   *\n   * Supports private registries.\n   */\n  VERSION1_2 = '1.2.0',\n\n  /**\n   * Version 1.1.0\n   *\n   * Supports task metadata, health checks, service discovery.\n   */\n  VERSION1_1 = '1.1.0',\n\n  /**\n   * Initial release\n   *\n   * Based on Amazon Linux 2017.09.\n   */\n  VERSION1_0 = '1.0.0',\n}\n\nconst SECRET_JSON_FIELD_UNSUPPORTED_PLATFORM_VERSIONS = [\n  FargatePlatformVersion.VERSION1_0,\n  FargatePlatformVersion.VERSION1_1,\n  FargatePlatformVersion.VERSION1_2,\n  FargatePlatformVersion.VERSION1_3,\n];\n"],
  "mappings": "uPACA,IAAA,QAAA,eAAA,EACA,OAAA,QAAA,eAAA,EAEA,eAAA,QAAA,sBAAA,EACA,0BAAA,QAAA,iCAAA,EA8FA,MAAa,sBAAuB,gBAAA,WAAW,CAuB7C,YAAY,MAAkB,GAAY,MAA0B,QAClE,0EAAI,CAAC,MAAM,eAAe,oBACxB,KAAM,IAAI,OAAM,0EAA0E,EAG5F,GAAI,MAAM,gBAAkB,QAAa,MAAM,iBAAmB,OAChE,KAAM,IAAI,OAAM,+DAA+D,EAGjF,GAAI,MAAM,eAAe,2BAClB,MAAM,iBACN,gDAAgD,SAAS,MAAM,eAAe,EACnF,KAAM,IAAI,OAAM,+IAA+I,uBAAuB,sBAAsB,EAE9M,MAAM,MAAO,GAAI,IACZ,MACH,aAAc,MAAM,aACpB,WAAY,eAAA,WAAW,QACvB,2BAA4B,MAAM,2BAClC,qBAAsB,MAAM,sBAC3B,CACD,QAAS,MAAM,QAAQ,YACvB,eAAgB,KAAA,MAAM,wBAAoB,MAAA,KAAA,OAAA,OAAA,GAAE,QAAS,eAAA,yBAAyB,SAAW,OAAY,MAAM,eAAe,kBAC1H,gBAAiB,MAAM,iBACtB,MAAM,cAAc,EAEvB,GAAI,gBACJ,AAAI,MAAM,gBAAkB,OAC1B,eAAiB,CAAC,MAAM,aAAa,EAC5B,MAAM,iBAAmB,QAClC,gBAAiB,MAAM,gBAGzB,KAAK,4CAA4C,MAAM,QAAQ,IAAK,MAAM,eAAgB,MAAM,WAAY,cAAc,EAE1H,KAAK,KAAK,cAAc,CACtB,SAAU,IAAM,AAAC,KAAK,eAAe,iBAAqF,CAAA,EAAlE,CAAC,6DAA6D,EACvH,QAvDW,uBAAsB,MAAkB,GAAY,kBAAyB,CACzF,MAAM,cAAe,KAAI,QAAQ,CAAjC,aAAA,qBACkB,KAAA,WAAa,kBACb,KAAA,YAAc,IAAI,MAAM,GAAG,KAAK,EAAE,SAAS,kBAAmB,OAAA,UAAU,mBAAmB,EAAE,YAC/G,EACA,MAAO,IAAI,QAAO,MAAO,EAAE,QAMf,8BAA6B,MAAkB,GAAY,MAA+B,oFAC/F,0BAAA,sBAAsB,MAAO,GAAI,KAAK,GAjBjD,QAAA,eAAA,oHAqEA,GAAY,wBAAZ,AAAA,UAAY,wBAAsB,CAIhC,wBAAA,OAAA,SASA,wBAAA,WAAA,QAOA,wBAAA,WAAA,QAOA,wBAAA,WAAA,QAOA,wBAAA,WAAA,QAOA,wBAAA,WAAA,OACF,GA1CY,uBAAA,QAAA,wBAAA,SAAA,uBAAsB,CAAA,EAAA,EA4ClC,KAAM,iDAAkD,CACtD,uBAAuB,WACvB,uBAAuB,WACvB,uBAAuB,WACvB,uBAAuB",
  "names": []
}
