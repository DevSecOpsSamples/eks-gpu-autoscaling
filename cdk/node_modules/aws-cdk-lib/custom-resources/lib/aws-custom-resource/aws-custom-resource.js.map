{
  "version": 3,
  "sources": ["aws-custom-resource.ts"],
  "sourcesContent": ["import * as fs from 'fs';\nimport * as path from 'path';\nimport * as iam from '../../../aws-iam';\nimport * as lambda from '../../../aws-lambda';\nimport * as logs from '../../../aws-logs';\nimport * as cdk from '../../../core';\nimport { Construct } from 'constructs';\nimport { PHYSICAL_RESOURCE_ID_REFERENCE } from './runtime';\n\n/**\n * Reference to the physical resource id that can be passed to the AWS operation as a parameter.\n */\nexport class PhysicalResourceIdReference implements cdk.IResolvable {\n  public readonly creationStack: string[] = cdk.captureStackTrace();\n\n  /**\n   * toJSON serialization to replace `PhysicalResourceIdReference` with a magic string.\n   */\n  public toJSON() {\n    return PHYSICAL_RESOURCE_ID_REFERENCE;\n  }\n\n  public resolve(_: cdk.IResolveContext): any {\n    return PHYSICAL_RESOURCE_ID_REFERENCE;\n  }\n\n  public toString(): string {\n    return PHYSICAL_RESOURCE_ID_REFERENCE;\n  }\n}\n\n/**\n * Physical ID of the custom resource.\n */\nexport class PhysicalResourceId {\n\n  /**\n   * Extract the physical resource id from the path (dot notation) to the data in the API call response.\n   */\n  public static fromResponse(responsePath: string): PhysicalResourceId {\n    return new PhysicalResourceId(responsePath, undefined);\n  }\n\n  /**\n   * Explicit physical resource id.\n   */\n  public static of(id: string): PhysicalResourceId {\n    return new PhysicalResourceId(undefined, id);\n  }\n\n  /**\n   * @param responsePath Path to a response data element to be used as the physical id.\n   * @param id Literal string to be used as the physical id.\n   */\n  private constructor(public readonly responsePath?: string, public readonly id?: string) { }\n}\n\n/**\n * An AWS SDK call.\n */\nexport interface AwsSdkCall {\n  /**\n   * The service to call\n   *\n   * @see https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/index.html\n   */\n  readonly service: string;\n\n  /**\n   * The service action to call\n   *\n   * @see https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/index.html\n   */\n  readonly action: string;\n\n  /**\n   * The parameters for the service action\n   *\n   * @default - no parameters\n   * @see https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/index.html\n   */\n  readonly parameters?: any;\n\n  /**\n   * The physical resource id of the custom resource for this call.\n   * Mandatory for onCreate or onUpdate calls.\n   *\n   * @default - no physical resource id\n   */\n  readonly physicalResourceId?: PhysicalResourceId;\n\n  /**\n   * The regex pattern to use to catch API errors. The `code` property of the\n   * `Error` object will be tested against this pattern. If there is a match an\n   * error will not be thrown.\n   *\n   * @default - do not catch errors\n   */\n  readonly ignoreErrorCodesMatching?: string;\n\n  /**\n   * API version to use for the service\n   *\n   * @see https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/locking-api-versions.html\n   * @default - use latest available API version\n   */\n  readonly apiVersion?: string;\n\n  /**\n   * The region to send service requests to.\n   * **Note: Cross-region operations are generally considered an anti-pattern.**\n   * **Consider first deploying a stack in that region.**\n   *\n   * @default - the region where this custom resource is deployed\n   */\n  readonly region?: string;\n\n  /**\n   * Restrict the data returned by the custom resource to a specific path in\n   * the API response. Use this to limit the data returned by the custom\n   * resource if working with API calls that could potentially result in custom\n   * response objects exceeding the hard limit of 4096 bytes.\n   *\n   * Example for ECS / updateService: 'service.deploymentConfiguration.maximumPercent'\n   *\n   * @default - return all data\n   *\n   * @deprecated use outputPaths instead\n   */\n  readonly outputPath?: string;\n\n  /**\n   * Restrict the data returned by the custom resource to specific paths in\n   * the API response. Use this to limit the data returned by the custom\n   * resource if working with API calls that could potentially result in custom\n   * response objects exceeding the hard limit of 4096 bytes.\n   *\n   * Example for ECS / updateService: ['service.deploymentConfiguration.maximumPercent']\n   *\n   * @default - return all data\n   */\n  readonly outputPaths?: string[];\n\n  /**\n   * Used for running the SDK calls in underlying lambda with a different role\n   * Can be used primarily for cross-account requests to for example connect\n   * hostedzone with a shared vpc\n   *\n   * Example for Route53 / associateVPCWithHostedZone\n   *\n   * @default - run without assuming role\n   */\n  readonly assumedRoleArn?: string;\n}\n\n/**\n * Options for the auto-generation of policies based on the configured SDK calls.\n */\nexport interface SdkCallsPolicyOptions {\n\n  /**\n   * The resources that the calls will have access to.\n   *\n   * It is best to use specific resource ARN's when possible. However, you can also use `AwsCustomResourcePolicy.ANY_RESOURCE`\n   * to allow access to all resources. For example, when `onCreate` is used to create a resource which you don't\n   * know the physical name of in advance.\n   *\n   * Note that will apply to ALL SDK calls.\n   */\n  readonly resources: string[]\n\n}\n\n/**\n * The IAM Policy that will be applied to the different calls.\n */\nexport class AwsCustomResourcePolicy {\n\n  /**\n   * Use this constant to configure access to any resource.\n   */\n  public static readonly ANY_RESOURCE = ['*'];\n\n  /**\n   * Explicit IAM Policy Statements.\n   *\n   * @param statements the statements to propagate to the SDK calls.\n   */\n  public static fromStatements(statements: iam.PolicyStatement[]) {\n    return new AwsCustomResourcePolicy(statements, undefined);\n  }\n\n  /**\n   * Generate IAM Policy Statements from the configured SDK calls.\n   *\n   * Each SDK call with be translated to an IAM Policy Statement in the form of: `call.service:call.action` (e.g `s3:PutObject`).\n   *\n   * This policy generator assumes the IAM policy name has the same name as the API\n   * call. This is true in 99% of cases, but there are exceptions (for example,\n   * S3's `PutBucketLifecycleConfiguration` requires\n   * `s3:PutLifecycleConfiguration` permissions, Lambda's `Invoke` requires\n   * `lambda:InvokeFunction` permissions). Use `fromStatements` if you want to\n   * do a call that requires different IAM action names.\n   *\n   * @param options options for the policy generation\n   */\n  public static fromSdkCalls(options: SdkCallsPolicyOptions) {\n    return new AwsCustomResourcePolicy([], options.resources);\n  }\n\n  /**\n   * @param statements statements for explicit policy.\n   * @param resources resources for auto-generated from SDK calls.\n   */\n  private constructor(public readonly statements: iam.PolicyStatement[], public readonly resources?: string[]) {}\n}\n\n/**\n * Properties for AwsCustomResource.\n *\n * Note that at least onCreate, onUpdate or onDelete must be specified.\n */\nexport interface AwsCustomResourceProps {\n  /**\n   * Cloudformation Resource type.\n   *\n   * @default - Custom::AWS\n   */\n  readonly resourceType?: string;\n\n  /**\n   * The AWS SDK call to make when the resource is created.\n   *\n   * @default - the call when the resource is updated\n   */\n  readonly onCreate?: AwsSdkCall;\n\n  /**\n   * The AWS SDK call to make when the resource is updated\n   *\n   * @default - no call\n   */\n  readonly onUpdate?: AwsSdkCall;\n\n  /**\n   * The AWS SDK call to make when the resource is deleted\n   *\n   * @default - no call\n   */\n  readonly onDelete?: AwsSdkCall;\n\n  /**\n   * The policy that will be added to the execution role of the Lambda\n   * function implementing this custom resource provider.\n   *\n   * The custom resource also implements `iam.IGrantable`, making it possible\n   * to use the `grantXxx()` methods.\n   *\n   * As this custom resource uses a singleton Lambda function, it's important\n   * to note the that function's role will eventually accumulate the\n   * permissions/grants from all resources.\n   *\n   * @see Policy.fromStatements\n   * @see Policy.fromSdkCalls\n   */\n  readonly policy: AwsCustomResourcePolicy;\n\n  /**\n   * The execution role for the singleton Lambda function implementing this custom\n   * resource provider. This role will apply to all `AwsCustomResource`\n   * instances in the stack. The role must be assumable by the\n   * `lambda.amazonaws.com` service principal.\n   *\n   * @default - a new role is created\n   */\n  readonly role?: iam.IRole;\n\n  /**\n   * The timeout for the singleton Lambda function implementing this custom resource.\n   *\n   * @default Duration.minutes(2)\n   */\n  readonly timeout?: cdk.Duration\n\n  /**\n   * The number of days log events of the singleton Lambda function implementing\n   * this custom resource are kept in CloudWatch Logs.\n   *\n   * @default logs.RetentionDays.INFINITE\n   */\n  readonly logRetention?: logs.RetentionDays;\n\n  /**\n   * Whether to install the latest AWS SDK v2. Allows to use the latest API\n   * calls documented at https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/index.html.\n   *\n   * The installation takes around 60 seconds.\n   *\n   * @default true\n   */\n  readonly installLatestAwsSdk?: boolean;\n\n  /**\n   * A name for the singleton Lambda function implementing this custom resource.\n   * The function name will remain the same after the first AwsCustomResource is created in a stack.\n   *\n   * @default - AWS CloudFormation generates a unique physical ID and uses that\n   * ID for the function's name. For more information, see Name Type.\n   */\n  readonly functionName?: string;\n}\n\n/**\n * Defines a custom resource that is materialized using specific AWS API calls. These calls are created using\n * a singleton Lambda function.\n *\n * Use this to bridge any gap that might exist in the CloudFormation Coverage.\n * You can specify exactly which calls are invoked for the 'CREATE', 'UPDATE' and 'DELETE' life cycle events.\n *\n */\nexport class AwsCustomResource extends Construct implements iam.IGrantable {\n\n  private static breakIgnoreErrorsCircuit(sdkCalls: Array<AwsSdkCall | undefined>, caller: string) {\n\n    for (const call of sdkCalls) {\n      if (call?.ignoreErrorCodesMatching) {\n        throw new Error(`\\`${caller}\\`` + ' cannot be called along with `ignoreErrorCodesMatching`.');\n      }\n    }\n\n  }\n\n  public readonly grantPrincipal: iam.IPrincipal;\n\n  private readonly customResource: cdk.CustomResource;\n  private readonly props: AwsCustomResourceProps;\n\n  // 'props' cannot be optional, even though all its properties are optional.\n  // this is because at least one sdk call must be provided.\n  constructor(scope: Construct, id: string, props: AwsCustomResourceProps) {\n    super(scope, id);\n\n    if (!props.onCreate && !props.onUpdate && !props.onDelete) {\n      throw new Error('At least `onCreate`, `onUpdate` or `onDelete` must be specified.');\n    }\n\n    for (const call of [props.onCreate, props.onUpdate]) {\n      if (call && !call.physicalResourceId) {\n        throw new Error('`physicalResourceId` must be specified for onCreate and onUpdate calls.');\n      }\n    }\n\n    for (const call of [props.onCreate, props.onUpdate, props.onDelete]) {\n      if (call?.physicalResourceId?.responsePath) {\n        AwsCustomResource.breakIgnoreErrorsCircuit([call], 'PhysicalResourceId.fromResponse');\n      }\n    }\n\n    if (includesPhysicalResourceIdRef(props.onCreate?.parameters)) {\n      throw new Error('`PhysicalResourceIdReference` must not be specified in `onCreate` parameters.');\n    }\n\n    this.props = props;\n\n    const provider = new lambda.SingletonFunction(this, 'Provider', {\n      code: lambda.Code.fromAsset(path.join(__dirname, 'runtime')),\n      runtime: lambda.Runtime.NODEJS_12_X,\n      handler: 'index.handler',\n      uuid: '679f53fa-c002-430c-b0da-5b7982bd2287',\n      lambdaPurpose: 'AWS',\n      timeout: props.timeout || cdk.Duration.minutes(2),\n      role: props.role,\n      logRetention: props.logRetention,\n      functionName: props.functionName,\n    });\n    this.grantPrincipal = provider.grantPrincipal;\n\n    // Create the policy statements for the custom resource function role, or use the user-provided ones\n    const statements = [];\n    if (props.policy.statements.length !== 0) {\n      // Use custom statements provided by the user\n      for (const statement of props.policy.statements) {\n        statements.push(statement);\n      }\n    } else {\n      // Derive statements from AWS SDK calls\n      for (const call of [props.onCreate, props.onUpdate, props.onDelete]) {\n        if (call && call.assumedRoleArn == null) {\n          const statement = new iam.PolicyStatement({\n            actions: [awsSdkToIamAction(call.service, call.action)],\n            resources: props.policy.resources,\n          });\n          statements.push(statement);\n        } else if (call && call.assumedRoleArn != null) {\n          const statement = new iam.PolicyStatement({\n            actions: ['sts:AssumeRole'],\n            resources: [call.assumedRoleArn],\n          });\n          statements.push(statement);\n        }\n      }\n    }\n    const policy = new iam.Policy(this, 'CustomResourcePolicy', {\n      statements: statements,\n    });\n    if (provider.role !== undefined) {\n      policy.attachToRole(provider.role);\n    }\n    const create = props.onCreate || props.onUpdate;\n    this.customResource = new cdk.CustomResource(this, 'Resource', {\n      resourceType: props.resourceType || 'Custom::AWS',\n      serviceToken: provider.functionArn,\n      pascalCaseProperties: true,\n      properties: {\n        create: create && this.encodeJson(create),\n        update: props.onUpdate && this.encodeJson(props.onUpdate),\n        delete: props.onDelete && this.encodeJson(props.onDelete),\n        installLatestAwsSdk: props.installLatestAwsSdk ?? true,\n      },\n    });\n\n    // If the policy was deleted first, then the function might lose permissions to delete the custom resource\n    // This is here so that the policy doesn't get removed before onDelete is called\n    this.customResource.node.addDependency(policy);\n  }\n\n  /**\n   * Returns response data for the AWS SDK call.\n   *\n   * Example for S3 / listBucket : 'Buckets.0.Name'\n   *\n   * Use `Token.asXxx` to encode the returned `Reference` as a specific type or\n   * use the convenience `getDataString` for string attributes.\n   *\n   * Note that you cannot use this method if `ignoreErrorCodesMatching`\n   * is configured for any of the SDK calls. This is because in such a case,\n   * the response data might not exist, and will cause a CloudFormation deploy time error.\n   *\n   * @param dataPath the path to the data\n   */\n  public getResponseFieldReference(dataPath: string) {\n    AwsCustomResource.breakIgnoreErrorsCircuit([this.props.onCreate, this.props.onUpdate], 'getData');\n    return this.customResource.getAtt(dataPath);\n  }\n\n  /**\n   * Returns response data for the AWS SDK call as string.\n   *\n   * Example for S3 / listBucket : 'Buckets.0.Name'\n   *\n   * Note that you cannot use this method if `ignoreErrorCodesMatching`\n   * is configured for any of the SDK calls. This is because in such a case,\n   * the response data might not exist, and will cause a CloudFormation deploy time error.\n   *\n   * @param dataPath the path to the data\n   */\n  public getResponseField(dataPath: string): string {\n    AwsCustomResource.breakIgnoreErrorsCircuit([this.props.onCreate, this.props.onUpdate], 'getDataString');\n    return this.customResource.getAttString(dataPath);\n  }\n\n  private encodeJson(obj: any) {\n    return cdk.Lazy.uncachedString({ produce: () => cdk.Stack.of(this).toJsonString(obj) });\n  }\n}\n\n/**\n * AWS SDK service metadata.\n */\nexport type AwsSdkMetadata = {[key: string]: any};\n\n/**\n * Gets awsSdkMetaData from file or from cache\n */\nlet getAwsSdkMetadata = (() => {\n  let _awsSdkMetadata: AwsSdkMetadata;\n  return function () {\n    if (_awsSdkMetadata) {\n      return _awsSdkMetadata;\n    } else {\n      return _awsSdkMetadata = JSON.parse(fs.readFileSync(path.join(__dirname, 'sdk-api-metadata.json'), 'utf-8'));\n    }\n  };\n})();\n\n/**\n * Returns true if `obj` includes a `PhysicalResourceIdReference` in one of the\n * values.\n * @param obj Any object.\n */\nfunction includesPhysicalResourceIdRef(obj: any | undefined) {\n  if (obj === undefined) {\n    return false;\n  }\n\n  let foundRef = false;\n\n  // we use JSON.stringify as a way to traverse all values in the object.\n  JSON.stringify(obj, (_, v) => {\n    if (v === PHYSICAL_RESOURCE_ID_REFERENCE) {\n      foundRef = true;\n    }\n\n    return v;\n  });\n\n  return foundRef;\n}\n\n/**\n * Transform SDK service/action to IAM action using metadata from aws-sdk module.\n * Example: CloudWatchLogs with putRetentionPolicy => logs:PutRetentionPolicy\n *\n * TODO: is this mapping correct for all services?\n */\nfunction awsSdkToIamAction(service: string, action: string): string {\n  const srv = service.toLowerCase();\n  const awsSdkMetadata = getAwsSdkMetadata();\n  const iamService = (awsSdkMetadata[srv] && awsSdkMetadata[srv].prefix) || srv;\n  const iamAction = action.charAt(0).toUpperCase() + action.slice(1);\n  return `${iamService}:${iamAction}`;\n}\n"],
  "mappings": "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",
  "names": []
}
