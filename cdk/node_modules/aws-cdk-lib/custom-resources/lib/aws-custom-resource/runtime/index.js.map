{
  "version": 3,
  "sources": ["index.ts"],
  "sourcesContent": ["/* eslint-disable no-console */\nimport { execSync } from 'child_process';\nimport * as fs from 'fs';\nimport { join } from 'path';\n// import the AWSLambda package explicitly,\n// which is globally available in the Lambda runtime,\n// as otherwise linking this repository with link-all.sh\n// fails in the CDK app executed with ts-node\n/* eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved */\nimport * as AWSLambda from 'aws-lambda';\nimport { AwsSdkCall } from '../aws-custom-resource';\n\n/**\n * Serialized form of the physical resource id for use in the operation parameters\n */\nexport const PHYSICAL_RESOURCE_ID_REFERENCE = 'PHYSICAL:RESOURCEID:';\n\n/**\n * Flattens a nested object\n *\n * @param object the object to be flattened\n * @returns a flat object with path as keys\n */\nexport function flatten(object: object): { [key: string]: any } {\n  return Object.assign(\n    {},\n    ...function _flatten(child: any, path: string[] = []): any {\n      return [].concat(...Object.keys(child)\n        .map(key => {\n          const childKey = Buffer.isBuffer(child[key]) ? child[key].toString('utf8') : child[key];\n          return typeof childKey === 'object' && childKey !== null\n            ? _flatten(childKey, path.concat([key]))\n            : ({ [path.concat([key]).join('.')]: childKey });\n        }));\n    }(object),\n  );\n}\n\n/**\n * Decodes encoded special values (physicalResourceId)\n */\nfunction decodeSpecialValues(object: object, physicalResourceId: string) {\n  return JSON.parse(JSON.stringify(object), (_k, v) => {\n    switch (v) {\n      case PHYSICAL_RESOURCE_ID_REFERENCE:\n        return physicalResourceId;\n      default:\n        return v;\n    }\n  });\n}\n\n/**\n * Filters the keys of an object.\n */\nfunction filterKeys(object: object, pred: (key: string) => boolean) {\n  return Object.entries(object)\n    .reduce(\n      (acc, [k, v]) => pred(k)\n        ? { ...acc, [k]: v }\n        : acc,\n      {},\n    );\n}\n\nlet latestSdkInstalled = false;\n\nexport function forceSdkInstallation() {\n  latestSdkInstalled = false;\n}\n\n/**\n * Installs latest AWS SDK v2\n */\nfunction installLatestSdk(): void {\n  console.log('Installing latest AWS SDK v2');\n  // Both HOME and --prefix are needed here because /tmp is the only writable location\n  execSync('HOME=/tmp npm install aws-sdk@2 --production --no-package-lock --no-save --prefix /tmp');\n  latestSdkInstalled = true;\n}\n\nconst patchedServices: { serviceName: string; apiVersions: string[] }[] = [\n  { serviceName: 'OpenSearch', apiVersions: ['2021-01-01'] },\n];\n/**\n * Patches the AWS SDK by loading service models in the same manner as the actual SDK\n */\nfunction patchSdk(awsSdk: any): any {\n  const apiLoader = awsSdk.apiLoader;\n  patchedServices.forEach(({ serviceName, apiVersions }) => {\n    const lowerServiceName = serviceName.toLowerCase();\n    if (!awsSdk.Service.hasService(lowerServiceName)) {\n      apiLoader.services[lowerServiceName] = {};\n      awsSdk[serviceName] = awsSdk.Service.defineService(lowerServiceName, apiVersions);\n    } else {\n      awsSdk.Service.addVersions(awsSdk[serviceName], apiVersions);\n    }\n    apiVersions.forEach(apiVersion => {\n      Object.defineProperty(apiLoader.services[lowerServiceName], apiVersion, {\n        get: function get() {\n          const modelFilePrefix = `aws-sdk-patch/${lowerServiceName}-${apiVersion}`;\n          const model = JSON.parse(fs.readFileSync(join(__dirname, `${modelFilePrefix}.service.json`), 'utf-8'));\n          model.paginators = JSON.parse(fs.readFileSync(join(__dirname, `${modelFilePrefix}.paginators.json`), 'utf-8')).pagination;\n          return model;\n        },\n        enumerable: true,\n        configurable: true,\n      });\n    });\n  });\n  return awsSdk;\n}\n\n/* eslint-disable @typescript-eslint/no-require-imports, import/no-extraneous-dependencies */\nexport async function handler(event: AWSLambda.CloudFormationCustomResourceEvent, context: AWSLambda.Context) {\n  try {\n    let AWS: any;\n    if (!latestSdkInstalled && event.ResourceProperties.InstallLatestAwsSdk === 'true') {\n      try {\n        installLatestSdk();\n        AWS = require('/tmp/node_modules/aws-sdk');\n      } catch (e) {\n        console.log(`Failed to install latest AWS SDK v2: ${e}`);\n        AWS = require('aws-sdk'); // Fallback to pre-installed version\n      }\n    } else if (latestSdkInstalled) {\n      AWS = require('/tmp/node_modules/aws-sdk');\n    } else {\n      AWS = require('aws-sdk');\n    }\n    try {\n      AWS = patchSdk(AWS);\n    } catch (e) {\n      console.log(`Failed to patch AWS SDK: ${e}. Proceeding with the installed copy.`);\n    }\n\n    console.log(JSON.stringify(event));\n    console.log('AWS SDK VERSION: ' + AWS.VERSION);\n\n    event.ResourceProperties.Create = decodeCall(event.ResourceProperties.Create);\n    event.ResourceProperties.Update = decodeCall(event.ResourceProperties.Update);\n    event.ResourceProperties.Delete = decodeCall(event.ResourceProperties.Delete);\n    // Default physical resource id\n    let physicalResourceId: string;\n    switch (event.RequestType) {\n      case 'Create':\n        physicalResourceId = event.ResourceProperties.Create?.physicalResourceId?.id ??\n                             event.ResourceProperties.Update?.physicalResourceId?.id ??\n                             event.ResourceProperties.Delete?.physicalResourceId?.id ??\n                             event.LogicalResourceId;\n        break;\n      case 'Update':\n      case 'Delete':\n        physicalResourceId = event.ResourceProperties[event.RequestType]?.physicalResourceId?.id ?? event.PhysicalResourceId;\n        break;\n    }\n\n    let flatData: { [key: string]: string } = {};\n    let data: { [key: string]: string } = {};\n    const call: AwsSdkCall | undefined = event.ResourceProperties[event.RequestType];\n\n    if (call) {\n\n      let credentials;\n      if (call.assumedRoleArn) {\n        const timestamp = (new Date()).getTime();\n\n        const params = {\n          RoleArn: call.assumedRoleArn,\n          RoleSessionName: `${timestamp}-${physicalResourceId}`.substring(0, 64),\n        };\n\n        credentials = new AWS.ChainableTemporaryCredentials({\n          params: params,\n        });\n      }\n\n      if (!Object.prototype.hasOwnProperty.call(AWS, call.service)) {\n        throw Error(`Service ${call.service} does not exist in AWS SDK version ${AWS.VERSION}.`);\n      }\n      const awsService = new (AWS as any)[call.service]({\n        apiVersion: call.apiVersion,\n        credentials: credentials,\n        region: call.region,\n      });\n\n      try {\n        const response = await awsService[call.action](\n          call.parameters && decodeSpecialValues(call.parameters, physicalResourceId)).promise();\n        flatData = {\n          apiVersion: awsService.config.apiVersion, // For test purposes: check if apiVersion was correctly passed.\n          region: awsService.config.region, // For test purposes: check if region was correctly passed.\n          ...flatten(response),\n        };\n\n        let outputPaths: string[] | undefined;\n        if (call.outputPath) {\n          outputPaths = [call.outputPath];\n        } else if (call.outputPaths) {\n          outputPaths = call.outputPaths;\n        }\n\n        if (outputPaths) {\n          data = filterKeys(flatData, startsWithOneOf(outputPaths));\n        } else {\n          data = flatData;\n        }\n      } catch (e) {\n        if (!call.ignoreErrorCodesMatching || !new RegExp(call.ignoreErrorCodesMatching).test(e.code)) {\n          throw e;\n        }\n      }\n\n      if (call.physicalResourceId?.responsePath) {\n        physicalResourceId = flatData[call.physicalResourceId.responsePath];\n      }\n    }\n\n    await respond('SUCCESS', 'OK', physicalResourceId, data);\n  } catch (e) {\n    console.log(e);\n    await respond('FAILED', e.message || 'Internal Error', context.logStreamName, {});\n  }\n\n  function respond(responseStatus: string, reason: string, physicalResourceId: string, data: any) {\n    const responseBody = JSON.stringify({\n      Status: responseStatus,\n      Reason: reason,\n      PhysicalResourceId: physicalResourceId,\n      StackId: event.StackId,\n      RequestId: event.RequestId,\n      LogicalResourceId: event.LogicalResourceId,\n      NoEcho: false,\n      Data: data,\n    });\n\n    console.log('Responding', responseBody);\n\n    // eslint-disable-next-line @typescript-eslint/no-require-imports\n    const parsedUrl = require('url').parse(event.ResponseURL);\n    const requestOptions = {\n      hostname: parsedUrl.hostname,\n      path: parsedUrl.path,\n      method: 'PUT',\n      headers: { 'content-type': '', 'content-length': responseBody.length },\n    };\n\n    return new Promise((resolve, reject) => {\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-require-imports\n        const request = require('https').request(requestOptions, resolve);\n        request.on('error', reject);\n        request.write(responseBody);\n        request.end();\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n}\n\nfunction decodeCall(call: string | undefined) {\n  if (!call) { return undefined; }\n  return JSON.parse(call);\n}\n\nfunction startsWithOneOf(searchStrings: string[]): (string: string) => boolean {\n  return function(string: string): boolean {\n    for (const searchString of searchStrings) {\n      if (string.startsWith(searchString)) {\n        return true;\n      }\n    }\n    return false;\n  };\n}\n"],
  "mappings": "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",
  "names": []
}
