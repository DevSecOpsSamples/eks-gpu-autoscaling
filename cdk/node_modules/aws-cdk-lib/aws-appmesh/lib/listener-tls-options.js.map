{
  "version": 3,
  "sources": ["listener-tls-options.ts"],
  "sourcesContent": ["import { TlsCertificate } from './tls-certificate';\nimport { MutualTlsValidation } from './tls-validation';\n\n/**\n * Enum of supported TLS modes\n */\nexport enum TlsMode {\n  /**\n   * Only accept encrypted traffic\n   */\n  STRICT = 'STRICT',\n\n  /**\n   * Accept encrypted and plaintext traffic.\n   */\n  PERMISSIVE = 'PERMISSIVE',\n\n  /**\n   * TLS is disabled, only accept plaintext traffic.\n   */\n  DISABLED = 'DISABLED',\n}\n\n/**\n * Represents TLS properties for listener\n */\nexport interface ListenerTlsOptions {\n  /**\n   * Represents TLS certificate\n   */\n  readonly certificate: TlsCertificate;\n\n  /**\n   * The TLS mode.\n   */\n  readonly mode: TlsMode;\n\n  /**\n   * Represents a listener's TLS validation context.\n   * The client certificate will only be validated if the client provides it, enabling mutual TLS.\n   *\n   * @default - client TLS certificate is not required\n   */\n  readonly mutualTlsValidation?: MutualTlsValidation;\n}\n"],
  "mappings": "2FAMA,GAAY,SAAZ,AAAA,UAAY,SAAO,CAIjB,SAAA,OAAA,SAKA,SAAA,WAAA,aAKA,SAAA,SAAA,UACF,GAfY,QAAA,QAAA,SAAA,SAAA,QAAO,CAAA,EAAA",
  "names": []
}
