{
  "version": 3,
  "sources": ["utils.ts"],
  "sourcesContent": ["import { Token, TokenComparison } from '../../../core';\nimport { Construct } from 'constructs';\nimport { CfnVirtualNode } from '../appmesh.generated';\nimport { GrpcGatewayRouteMatch } from '../gateway-route-spec';\nimport { HeaderMatch } from '../header-match';\nimport { ListenerTlsOptions } from '../listener-tls-options';\nimport { QueryParameterMatch } from '../query-parameter-match';\nimport { GrpcRouteMatch } from '../route-spec';\nimport { TlsClientPolicy } from '../tls-client-policy';\n\n/**\n * Generated Connection pool config\n */\nexport interface ConnectionPoolConfig {\n  /**\n   * The maximum connections in the pool\n   *\n   * @default - none\n   */\n  readonly maxConnections?: number;\n\n  /**\n   * The maximum pending requests in the pool\n   *\n   * @default - none\n   */\n  readonly maxPendingRequests?: number;\n\n  /**\n   * The maximum requests in the pool\n   *\n   * @default - none\n   */\n  readonly maxRequests?: number;\n}\n\n/**\n * This is the helper method to render TLS property of client policy.\n */\nexport function renderTlsClientPolicy(scope: Construct, tlsClientPolicy: TlsClientPolicy | undefined)\n  : CfnVirtualNode.ClientPolicyTlsProperty | undefined {\n  const certificate = tlsClientPolicy?.mutualTlsCertificate?.bind(scope).tlsCertificate;\n  const sans = tlsClientPolicy?.validation.subjectAlternativeNames;\n\n  return tlsClientPolicy\n    ? {\n      certificate: certificate,\n      ports: tlsClientPolicy.ports,\n      enforce: tlsClientPolicy.enforce,\n      validation: {\n        subjectAlternativeNames: sans\n          ? {\n            match: sans.bind(scope).subjectAlternativeNamesMatch,\n          }\n          : undefined,\n        trust: tlsClientPolicy.validation.trust.bind(scope).tlsValidationTrust,\n      },\n    }\n    : undefined;\n}\n\n/**\n * This is the helper method to render the TLS config for a listener.\n */\nexport function renderListenerTlsOptions(scope: Construct, listenerTls: ListenerTlsOptions | undefined)\n  : CfnVirtualNode.ListenerTlsProperty | undefined {\n  const tlsValidation = listenerTls?.mutualTlsValidation;\n\n  return listenerTls\n    ? {\n      certificate: listenerTls.certificate.bind(scope).tlsCertificate,\n      mode: listenerTls.mode,\n      validation: tlsValidation\n        ? {\n          subjectAlternativeNames: tlsValidation.subjectAlternativeNames\n            ? {\n              match: tlsValidation.subjectAlternativeNames.bind(scope).subjectAlternativeNamesMatch,\n            }\n            : undefined,\n          trust: tlsValidation.trust.bind(scope).tlsValidationTrust,\n        }\n        : undefined,\n    }\n    : undefined;\n}\n\n/**\n * This is the helper method to populate mesh owner when it is a shared mesh scenario\n */\nexport function renderMeshOwner(resourceAccount: string, meshAccount: string) : string | undefined {\n  const comparison = Token.compareStrings(resourceAccount, meshAccount);\n  return comparison === TokenComparison.DIFFERENT || comparison === TokenComparison.ONE_UNRESOLVED\n    ? meshAccount\n    : undefined;\n}\n\n/**\n * This is the helper method to validate the length of HTTP match array when it is specified.\n */\nexport function validateHttpMatchArrayLength(headers?: HeaderMatch[], queryParameters?: QueryParameterMatch[]) {\n  const MIN_LENGTH = 1;\n  const MAX_LENGTH = 10;\n\n  if (headers && (headers.length < MIN_LENGTH || headers.length > MAX_LENGTH)) {\n    throw new Error(`Number of headers provided for matching must be between ${MIN_LENGTH} and ${MAX_LENGTH}, got: ${headers.length}`);\n  }\n\n  if (queryParameters && (queryParameters.length < MIN_LENGTH || queryParameters.length > MAX_LENGTH)) {\n    throw new Error(`Number of query parameters provided for matching must be between ${MIN_LENGTH} and ${MAX_LENGTH}, got: ${queryParameters.length}`);\n  }\n}\n\n/**\n * This is the helper method to validate the length of gRPC match array when it is specified.\n */\nexport function validateGrpcMatchArrayLength(metadata?: HeaderMatch[]): void {\n  const MIN_LENGTH = 1;\n  const MAX_LENGTH = 10;\n\n  if (metadata && (metadata.length < MIN_LENGTH || metadata.length > MAX_LENGTH)) {\n    throw new Error(`Number of metadata provided for matching must be between ${MIN_LENGTH} and ${MAX_LENGTH}, got: ${metadata.length}`);\n  }\n}\n\n/**\n * This is the helper method to validate at least one of gRPC route match type is defined.\n */\nexport function validateGrpcRouteMatch(match: GrpcRouteMatch): void {\n  if (match.serviceName === undefined && match.metadata === undefined && match.methodName === undefined) {\n    throw new Error('At least one gRPC route match property must be provided');\n  }\n}\n\n/**\n * This is the helper method to validate at least one of gRPC gateway route match type is defined.\n */\nexport function validateGrpcGatewayRouteMatch(match: GrpcGatewayRouteMatch): void {\n  if (match.serviceName === undefined && match.metadata === undefined && match.hostname === undefined) {\n    throw new Error('At least one gRPC gateway route match property beside rewriteRequestHostname must be provided');\n  }\n}\n"],
  "mappings": "iTAAA,KAAA,QAAA,QAAA,eAAA,EAuCA,+BAAsC,MAAkB,gBAA4C,QAElG,KAAM,aAAW,IAAG,iBAAe,KAAA,OAAf,gBAAiB,wBAAoB,MAAA,KAAA,OAAA,OAAA,GAAE,KAAK,KAAK,EAAE,eACjE,KAAO,iBAAe,KAAA,OAAf,gBAAiB,WAAW,wBAEzC,MAAO,iBACH,CACA,YACA,MAAO,gBAAgB,MACvB,QAAS,gBAAgB,QACzB,WAAY,CACV,wBAAyB,KACrB,CACA,MAAO,KAAK,KAAK,KAAK,EAAE,8BAExB,OACJ,MAAO,gBAAgB,WAAW,MAAM,KAAK,KAAK,EAAE,qBAGtD,MACN,CApBA,QAAA,sBAAA,sBAyBA,kCAAyC,MAAkB,YAA2C,CAEpG,KAAM,eAAgB,aAAW,KAAA,OAAX,YAAa,oBAEnC,MAAO,aACH,CACA,YAAa,YAAY,YAAY,KAAK,KAAK,EAAE,eACjD,KAAM,YAAY,KAClB,WAAY,cACR,CACA,wBAAyB,cAAc,wBACnC,CACA,MAAO,cAAc,wBAAwB,KAAK,KAAK,EAAE,8BAEzD,OACJ,MAAO,cAAc,MAAM,KAAK,KAAK,EAAE,oBAEvC,QAEJ,MACN,CApBA,QAAA,yBAAA,yBAyBA,yBAAgC,gBAAyB,YAAmB,CAC1E,KAAM,YAAa,OAAA,MAAM,eAAe,gBAAiB,WAAW,EACpE,MAAO,cAAe,OAAA,gBAAgB,WAAa,aAAe,OAAA,gBAAgB,eAC9E,YACA,MACN,CALA,QAAA,gBAAA,gBAUA,sCAA6C,QAAyB,gBAAuC,CAI3G,GAAI,SAAY,SAAQ,OAAS,GAAc,QAAQ,OAAS,IAC9D,KAAM,IAAI,OAAM,2DAA2D,SAAkB,YAAoB,QAAQ,QAAQ,EAGnI,GAAI,iBAAoB,iBAAgB,OAAS,GAAc,gBAAgB,OAAS,IACtF,KAAM,IAAI,OAAM,oEAAoE,SAAkB,YAAoB,gBAAgB,QAAQ,CAEtJ,CAXA,QAAA,6BAAA,6BAgBA,sCAA6C,SAAwB,CAInE,GAAI,UAAa,UAAS,OAAS,GAAc,SAAS,OAAS,IACjE,KAAM,IAAI,OAAM,4DAA4D,SAAkB,YAAoB,SAAS,QAAQ,CAEvI,CAPA,QAAA,6BAAA,6BAYA,gCAAuC,MAAqB,CAC1D,GAAI,MAAM,cAAgB,QAAa,MAAM,WAAa,QAAa,MAAM,aAAe,OAC1F,KAAM,IAAI,OAAM,yDAAyD,CAE7E,CAJA,QAAA,uBAAA,uBASA,uCAA8C,MAA4B,CACxE,GAAI,MAAM,cAAgB,QAAa,MAAM,WAAa,QAAa,MAAM,WAAa,OACxF,KAAM,IAAI,OAAM,+FAA+F,CAEnH,CAJA,QAAA,8BAAA",
  "names": []
}
