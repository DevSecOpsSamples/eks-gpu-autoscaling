{
  "version": 3,
  "sources": ["gateway-route.ts"],
  "sourcesContent": ["import * as cdk from '../../core';\nimport { Construct } from 'constructs';\nimport { CfnGatewayRoute } from './appmesh.generated';\nimport { GatewayRouteSpec } from './gateway-route-spec';\nimport { renderMeshOwner } from './private/utils';\nimport { IVirtualGateway, VirtualGateway } from './virtual-gateway';\n\n/**\n * Interface for which all GatewayRoute based classes MUST implement\n */\nexport interface IGatewayRoute extends cdk.IResource {\n  /**\n   * The name of the GatewayRoute\n   *\n   * @attribute\n   */\n  readonly gatewayRouteName: string,\n\n  /**\n   * The Amazon Resource Name (ARN) for the GatewayRoute\n   *\n   * @attribute\n   */\n  readonly gatewayRouteArn: string;\n\n  /**\n   * The VirtualGateway the GatewayRoute belongs to\n   */\n  readonly virtualGateway: IVirtualGateway;\n}\n\n/**\n * Basic configuration properties for a GatewayRoute\n */\nexport interface GatewayRouteBaseProps {\n  /**\n   * The name of the GatewayRoute\n   *\n   * @default - an automatically generated name\n   */\n  readonly gatewayRouteName?: string;\n\n  /**\n   * What protocol the route uses\n   */\n  readonly routeSpec: GatewayRouteSpec;\n}\n\n/**\n * Properties to define a new GatewayRoute\n */\nexport interface GatewayRouteProps extends GatewayRouteBaseProps {\n  /**\n   * The VirtualGateway this GatewayRoute is associated with\n   */\n  readonly virtualGateway: IVirtualGateway;\n}\n\n/**\n * GatewayRoute represents a new or existing gateway route attached to a VirtualGateway and Mesh\n *\n * @see https://docs.aws.amazon.com/app-mesh/latest/userguide/gateway-routes.html\n */\nexport class GatewayRoute extends cdk.Resource implements IGatewayRoute {\n  /**\n   * Import an existing GatewayRoute given an ARN\n   */\n  public static fromGatewayRouteArn(scope: Construct, id: string, gatewayRouteArn: string): IGatewayRoute {\n    return new class extends cdk.Resource implements IGatewayRoute {\n      readonly gatewayRouteArn = gatewayRouteArn;\n      readonly gatewayRouteName = cdk.Fn.select(4, cdk.Fn.split('/', cdk.Stack.of(scope).splitArn(gatewayRouteArn, cdk.ArnFormat.SLASH_RESOURCE_NAME).resourceName!));\n      readonly virtualGateway = VirtualGateway.fromVirtualGatewayArn(this, 'virtualGateway', gatewayRouteArn);\n    }(scope, id);\n  }\n\n  /**\n   * Import an existing GatewayRoute given attributes\n   */\n  public static fromGatewayRouteAttributes(scope: Construct, id: string, attrs: GatewayRouteAttributes): IGatewayRoute {\n    return new class extends cdk.Resource implements IGatewayRoute {\n      readonly gatewayRouteName = attrs.gatewayRouteName;\n      readonly gatewayRouteArn = cdk.Stack.of(scope).formatArn({\n        service: 'appmesh',\n        resource: `mesh/${attrs.virtualGateway.mesh.meshName}/virtualGateway/${attrs.virtualGateway.virtualGatewayName}/gatewayRoute`,\n        resourceName: this.gatewayRouteName,\n      });\n      readonly virtualGateway = attrs.virtualGateway;\n    }(scope, id);\n  }\n\n  /**\n   * The name of the GatewayRoute\n   */\n  public readonly gatewayRouteName: string;\n\n  /**\n   * The Amazon Resource Name (ARN) for the GatewayRoute\n   */\n  public readonly gatewayRouteArn: string;\n\n  /**\n   * The VirtualGateway this GatewayRoute is a part of\n   */\n  public readonly virtualGateway: IVirtualGateway;\n\n  constructor(scope: Construct, id: string, props: GatewayRouteProps) {\n    super(scope, id, {\n      physicalName: props.gatewayRouteName || cdk.Lazy.string({ produce: () => cdk.Names.uniqueId(this) }),\n    });\n\n    this.virtualGateway = props.virtualGateway;\n    const routeSpecConfig = props.routeSpec.bind(this);\n\n    const gatewayRoute = new CfnGatewayRoute(this, 'Resource', {\n      gatewayRouteName: this.physicalName,\n      meshName: props.virtualGateway.mesh.meshName,\n      meshOwner: renderMeshOwner(this.env.account, this.virtualGateway.mesh.env.account),\n      spec: {\n        httpRoute: routeSpecConfig.httpSpecConfig,\n        http2Route: routeSpecConfig.http2SpecConfig,\n        grpcRoute: routeSpecConfig.grpcSpecConfig,\n        priority: routeSpecConfig.priority,\n      },\n      virtualGatewayName: this.virtualGateway.virtualGatewayName,\n    });\n\n    this.gatewayRouteName = this.getResourceNameAttribute(gatewayRoute.attrGatewayRouteName);\n    this.gatewayRouteArn = this.getResourceArnAttribute(gatewayRoute.ref, {\n      service: 'appmesh',\n      resource: `mesh/${props.virtualGateway.mesh.meshName}/virtualRouter/${this.virtualGateway.virtualGatewayName}/gatewayRoute`,\n      resourceName: this.physicalName,\n    });\n  }\n}\n\n/**\n * Interface with properties necessary to import a reusable GatewayRoute\n */\nexport interface GatewayRouteAttributes {\n  /**\n   * The name of the GatewayRoute\n   */\n  readonly gatewayRouteName: string;\n\n  /**\n   * The VirtualGateway this GatewayRoute is associated with.\n   */\n  readonly virtualGateway: IVirtualGateway;\n}\n"],
  "mappings": "mNAAA,IAAA,QAAA,YAAA,EAEA,oBAAA,QAAA,qBAAA,EAEA,QAAA,QAAA,iBAAA,EACA,kBAAA,QAAA,mBAAA,EA0DA,MAAa,oBAAqB,KAAI,QAAQ,CA0C5C,YAAY,MAAkB,GAAY,MAAwB,CAChE,MAAM,MAAO,GAAI,CACf,aAAc,MAAM,kBAAoB,IAAI,KAAK,OAAO,CAAE,QAAS,IAAM,IAAI,MAAM,SAAS,IAAI,CAAC,CAAE,EACpG,2EAED,KAAK,eAAiB,MAAM,eAC5B,KAAM,iBAAkB,MAAM,UAAU,KAAK,IAAI,EAE3C,aAAe,GAAI,qBAAA,gBAAgB,KAAM,WAAY,CACzD,iBAAkB,KAAK,aACvB,SAAU,MAAM,eAAe,KAAK,SACpC,UAAW,QAAA,gBAAgB,KAAK,IAAI,QAAS,KAAK,eAAe,KAAK,IAAI,OAAO,EACjF,KAAM,CACJ,UAAW,gBAAgB,eAC3B,WAAY,gBAAgB,gBAC5B,UAAW,gBAAgB,eAC3B,SAAU,gBAAgB,UAE5B,mBAAoB,KAAK,eAAe,mBACzC,EAED,KAAK,iBAAmB,KAAK,yBAAyB,aAAa,oBAAoB,EACvF,KAAK,gBAAkB,KAAK,wBAAwB,aAAa,IAAK,CACpE,QAAS,UACT,SAAU,QAAQ,MAAM,eAAe,KAAK,0BAA0B,KAAK,eAAe,kCAC1F,aAAc,KAAK,aACpB,QAhEW,qBAAoB,MAAkB,GAAY,gBAAuB,CACrF,MAAO,IAAI,cAAc,KAAI,QAAQ,CAA1B,aAAA,qBACA,KAAA,gBAAkB,gBAClB,KAAA,iBAAmB,IAAI,GAAG,OAAO,EAAG,IAAI,GAAG,MAAM,IAAK,IAAI,MAAM,GAAG,KAAK,EAAE,SAAS,gBAAiB,IAAI,UAAU,mBAAmB,EAAE,YAAa,CAAC,EACrJ,KAAA,eAAiB,kBAAA,eAAe,sBAAsB,KAAM,iBAAkB,eAAe,CACxG,GAAE,MAAO,EAAE,QAMC,4BAA2B,MAAkB,GAAY,MAA6B,sFAC3F,GAAI,cAAc,KAAI,QAAQ,CAA1B,aAAA,qBACA,KAAA,iBAAmB,MAAM,iBACzB,KAAA,gBAAkB,IAAI,MAAM,GAAG,KAAK,EAAE,UAAU,CACvD,QAAS,UACT,SAAU,QAAQ,MAAM,eAAe,KAAK,2BAA2B,MAAM,eAAe,kCAC5F,aAAc,KAAK,iBACpB,EACQ,KAAA,eAAiB,MAAM,cAClC,GAAE,MAAO,EAAE,GAxBf,QAAA,aAAA",
  "names": []
}
