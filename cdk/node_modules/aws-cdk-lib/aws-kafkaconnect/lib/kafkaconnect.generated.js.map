{
  "version": 3,
  "sources": ["kafkaconnect.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-04-07T10:53:56.885Z\",\"fingerprint\":\"aZ+IZFkrwwqxQrPNPYbgNkR0FzsHktpCdHcbMT1dN+M=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n/**\n * Properties for defining a `CfnConnector`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html\n */\nexport interface CfnConnectorProps {\n\n    /**\n     * `AWS::KafkaConnect::Connector.Capacity`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-capacity\n     */\n    readonly capacity: CfnConnector.CapacityProperty | cdk.IResolvable;\n\n    /**\n     * `AWS::KafkaConnect::Connector.ConnectorConfiguration`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-connectorconfiguration\n     */\n    readonly connectorConfiguration: { [key: string]: (string) } | cdk.IResolvable;\n\n    /**\n     * `AWS::KafkaConnect::Connector.ConnectorName`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-connectorname\n     */\n    readonly connectorName: string;\n\n    /**\n     * `AWS::KafkaConnect::Connector.KafkaCluster`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-kafkacluster\n     */\n    readonly kafkaCluster: CfnConnector.KafkaClusterProperty | cdk.IResolvable;\n\n    /**\n     * `AWS::KafkaConnect::Connector.KafkaClusterClientAuthentication`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-kafkaclusterclientauthentication\n     */\n    readonly kafkaClusterClientAuthentication: CfnConnector.KafkaClusterClientAuthenticationProperty | cdk.IResolvable;\n\n    /**\n     * `AWS::KafkaConnect::Connector.KafkaClusterEncryptionInTransit`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-kafkaclusterencryptionintransit\n     */\n    readonly kafkaClusterEncryptionInTransit: CfnConnector.KafkaClusterEncryptionInTransitProperty | cdk.IResolvable;\n\n    /**\n     * `AWS::KafkaConnect::Connector.KafkaConnectVersion`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-kafkaconnectversion\n     */\n    readonly kafkaConnectVersion: string;\n\n    /**\n     * `AWS::KafkaConnect::Connector.Plugins`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-plugins\n     */\n    readonly plugins: Array<CfnConnector.PluginProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * `AWS::KafkaConnect::Connector.ServiceExecutionRoleArn`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-serviceexecutionrolearn\n     */\n    readonly serviceExecutionRoleArn: string;\n\n    /**\n     * `AWS::KafkaConnect::Connector.ConnectorDescription`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-connectordescription\n     */\n    readonly connectorDescription?: string;\n\n    /**\n     * `AWS::KafkaConnect::Connector.LogDelivery`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-logdelivery\n     */\n    readonly logDelivery?: CfnConnector.LogDeliveryProperty | cdk.IResolvable;\n\n    /**\n     * `AWS::KafkaConnect::Connector.WorkerConfiguration`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-workerconfiguration\n     */\n    readonly workerConfiguration?: CfnConnector.WorkerConfigurationProperty | cdk.IResolvable;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnConnectorProps`\n *\n * @param properties - the TypeScript properties of a `CfnConnectorProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnConnectorPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('capacity', cdk.requiredValidator)(properties.capacity));\n    errors.collect(cdk.propertyValidator('capacity', CfnConnector_CapacityPropertyValidator)(properties.capacity));\n    errors.collect(cdk.propertyValidator('connectorConfiguration', cdk.requiredValidator)(properties.connectorConfiguration));\n    errors.collect(cdk.propertyValidator('connectorConfiguration', cdk.hashValidator(cdk.validateString))(properties.connectorConfiguration));\n    errors.collect(cdk.propertyValidator('connectorDescription', cdk.validateString)(properties.connectorDescription));\n    errors.collect(cdk.propertyValidator('connectorName', cdk.requiredValidator)(properties.connectorName));\n    errors.collect(cdk.propertyValidator('connectorName', cdk.validateString)(properties.connectorName));\n    errors.collect(cdk.propertyValidator('kafkaCluster', cdk.requiredValidator)(properties.kafkaCluster));\n    errors.collect(cdk.propertyValidator('kafkaCluster', CfnConnector_KafkaClusterPropertyValidator)(properties.kafkaCluster));\n    errors.collect(cdk.propertyValidator('kafkaClusterClientAuthentication', cdk.requiredValidator)(properties.kafkaClusterClientAuthentication));\n    errors.collect(cdk.propertyValidator('kafkaClusterClientAuthentication', CfnConnector_KafkaClusterClientAuthenticationPropertyValidator)(properties.kafkaClusterClientAuthentication));\n    errors.collect(cdk.propertyValidator('kafkaClusterEncryptionInTransit', cdk.requiredValidator)(properties.kafkaClusterEncryptionInTransit));\n    errors.collect(cdk.propertyValidator('kafkaClusterEncryptionInTransit', CfnConnector_KafkaClusterEncryptionInTransitPropertyValidator)(properties.kafkaClusterEncryptionInTransit));\n    errors.collect(cdk.propertyValidator('kafkaConnectVersion', cdk.requiredValidator)(properties.kafkaConnectVersion));\n    errors.collect(cdk.propertyValidator('kafkaConnectVersion', cdk.validateString)(properties.kafkaConnectVersion));\n    errors.collect(cdk.propertyValidator('logDelivery', CfnConnector_LogDeliveryPropertyValidator)(properties.logDelivery));\n    errors.collect(cdk.propertyValidator('plugins', cdk.requiredValidator)(properties.plugins));\n    errors.collect(cdk.propertyValidator('plugins', cdk.listValidator(CfnConnector_PluginPropertyValidator))(properties.plugins));\n    errors.collect(cdk.propertyValidator('serviceExecutionRoleArn', cdk.requiredValidator)(properties.serviceExecutionRoleArn));\n    errors.collect(cdk.propertyValidator('serviceExecutionRoleArn', cdk.validateString)(properties.serviceExecutionRoleArn));\n    errors.collect(cdk.propertyValidator('workerConfiguration', CfnConnector_WorkerConfigurationPropertyValidator)(properties.workerConfiguration));\n    return errors.wrap('supplied properties not correct for \"CfnConnectorProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector` resource\n *\n * @param properties - the TypeScript properties of a `CfnConnectorProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector` resource.\n */\n// @ts-ignore TS6133\nfunction cfnConnectorPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnConnectorPropsValidator(properties).assertSuccess();\n    return {\n        Capacity: cfnConnectorCapacityPropertyToCloudFormation(properties.capacity),\n        ConnectorConfiguration: cdk.hashMapper(cdk.stringToCloudFormation)(properties.connectorConfiguration),\n        ConnectorName: cdk.stringToCloudFormation(properties.connectorName),\n        KafkaCluster: cfnConnectorKafkaClusterPropertyToCloudFormation(properties.kafkaCluster),\n        KafkaClusterClientAuthentication: cfnConnectorKafkaClusterClientAuthenticationPropertyToCloudFormation(properties.kafkaClusterClientAuthentication),\n        KafkaClusterEncryptionInTransit: cfnConnectorKafkaClusterEncryptionInTransitPropertyToCloudFormation(properties.kafkaClusterEncryptionInTransit),\n        KafkaConnectVersion: cdk.stringToCloudFormation(properties.kafkaConnectVersion),\n        Plugins: cdk.listMapper(cfnConnectorPluginPropertyToCloudFormation)(properties.plugins),\n        ServiceExecutionRoleArn: cdk.stringToCloudFormation(properties.serviceExecutionRoleArn),\n        ConnectorDescription: cdk.stringToCloudFormation(properties.connectorDescription),\n        LogDelivery: cfnConnectorLogDeliveryPropertyToCloudFormation(properties.logDelivery),\n        WorkerConfiguration: cfnConnectorWorkerConfigurationPropertyToCloudFormation(properties.workerConfiguration),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnConnectorPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnConnectorProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnConnectorProps>();\n    ret.addPropertyResult('capacity', 'Capacity', CfnConnectorCapacityPropertyFromCloudFormation(properties.Capacity));\n    ret.addPropertyResult('connectorConfiguration', 'ConnectorConfiguration', cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.ConnectorConfiguration));\n    ret.addPropertyResult('connectorName', 'ConnectorName', cfn_parse.FromCloudFormation.getString(properties.ConnectorName));\n    ret.addPropertyResult('kafkaCluster', 'KafkaCluster', CfnConnectorKafkaClusterPropertyFromCloudFormation(properties.KafkaCluster));\n    ret.addPropertyResult('kafkaClusterClientAuthentication', 'KafkaClusterClientAuthentication', CfnConnectorKafkaClusterClientAuthenticationPropertyFromCloudFormation(properties.KafkaClusterClientAuthentication));\n    ret.addPropertyResult('kafkaClusterEncryptionInTransit', 'KafkaClusterEncryptionInTransit', CfnConnectorKafkaClusterEncryptionInTransitPropertyFromCloudFormation(properties.KafkaClusterEncryptionInTransit));\n    ret.addPropertyResult('kafkaConnectVersion', 'KafkaConnectVersion', cfn_parse.FromCloudFormation.getString(properties.KafkaConnectVersion));\n    ret.addPropertyResult('plugins', 'Plugins', cfn_parse.FromCloudFormation.getArray(CfnConnectorPluginPropertyFromCloudFormation)(properties.Plugins));\n    ret.addPropertyResult('serviceExecutionRoleArn', 'ServiceExecutionRoleArn', cfn_parse.FromCloudFormation.getString(properties.ServiceExecutionRoleArn));\n    ret.addPropertyResult('connectorDescription', 'ConnectorDescription', properties.ConnectorDescription != null ? cfn_parse.FromCloudFormation.getString(properties.ConnectorDescription) : undefined);\n    ret.addPropertyResult('logDelivery', 'LogDelivery', properties.LogDelivery != null ? CfnConnectorLogDeliveryPropertyFromCloudFormation(properties.LogDelivery) : undefined);\n    ret.addPropertyResult('workerConfiguration', 'WorkerConfiguration', properties.WorkerConfiguration != null ? CfnConnectorWorkerConfigurationPropertyFromCloudFormation(properties.WorkerConfiguration) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::KafkaConnect::Connector`\n *\n *\n *\n * @cloudformationResource AWS::KafkaConnect::Connector\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html\n */\nexport class CfnConnector extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::KafkaConnect::Connector\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnConnector {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnConnectorPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnConnector(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     *\n     * @cloudformationAttribute ConnectorArn\n     */\n    public readonly attrConnectorArn: string;\n\n    /**\n     * `AWS::KafkaConnect::Connector.Capacity`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-capacity\n     */\n    public capacity: CfnConnector.CapacityProperty | cdk.IResolvable;\n\n    /**\n     * `AWS::KafkaConnect::Connector.ConnectorConfiguration`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-connectorconfiguration\n     */\n    public connectorConfiguration: { [key: string]: (string) } | cdk.IResolvable;\n\n    /**\n     * `AWS::KafkaConnect::Connector.ConnectorName`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-connectorname\n     */\n    public connectorName: string;\n\n    /**\n     * `AWS::KafkaConnect::Connector.KafkaCluster`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-kafkacluster\n     */\n    public kafkaCluster: CfnConnector.KafkaClusterProperty | cdk.IResolvable;\n\n    /**\n     * `AWS::KafkaConnect::Connector.KafkaClusterClientAuthentication`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-kafkaclusterclientauthentication\n     */\n    public kafkaClusterClientAuthentication: CfnConnector.KafkaClusterClientAuthenticationProperty | cdk.IResolvable;\n\n    /**\n     * `AWS::KafkaConnect::Connector.KafkaClusterEncryptionInTransit`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-kafkaclusterencryptionintransit\n     */\n    public kafkaClusterEncryptionInTransit: CfnConnector.KafkaClusterEncryptionInTransitProperty | cdk.IResolvable;\n\n    /**\n     * `AWS::KafkaConnect::Connector.KafkaConnectVersion`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-kafkaconnectversion\n     */\n    public kafkaConnectVersion: string;\n\n    /**\n     * `AWS::KafkaConnect::Connector.Plugins`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-plugins\n     */\n    public plugins: Array<CfnConnector.PluginProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * `AWS::KafkaConnect::Connector.ServiceExecutionRoleArn`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-serviceexecutionrolearn\n     */\n    public serviceExecutionRoleArn: string;\n\n    /**\n     * `AWS::KafkaConnect::Connector.ConnectorDescription`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-connectordescription\n     */\n    public connectorDescription: string | undefined;\n\n    /**\n     * `AWS::KafkaConnect::Connector.LogDelivery`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-logdelivery\n     */\n    public logDelivery: CfnConnector.LogDeliveryProperty | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::KafkaConnect::Connector.WorkerConfiguration`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-workerconfiguration\n     */\n    public workerConfiguration: CfnConnector.WorkerConfigurationProperty | cdk.IResolvable | undefined;\n\n    /**\n     * Create a new `AWS::KafkaConnect::Connector`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnConnectorProps) {\n        super(scope, id, { type: CfnConnector.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'capacity', this);\n        cdk.requireProperty(props, 'connectorConfiguration', this);\n        cdk.requireProperty(props, 'connectorName', this);\n        cdk.requireProperty(props, 'kafkaCluster', this);\n        cdk.requireProperty(props, 'kafkaClusterClientAuthentication', this);\n        cdk.requireProperty(props, 'kafkaClusterEncryptionInTransit', this);\n        cdk.requireProperty(props, 'kafkaConnectVersion', this);\n        cdk.requireProperty(props, 'plugins', this);\n        cdk.requireProperty(props, 'serviceExecutionRoleArn', this);\n        this.attrConnectorArn = cdk.Token.asString(this.getAtt('ConnectorArn'));\n\n        this.capacity = props.capacity;\n        this.connectorConfiguration = props.connectorConfiguration;\n        this.connectorName = props.connectorName;\n        this.kafkaCluster = props.kafkaCluster;\n        this.kafkaClusterClientAuthentication = props.kafkaClusterClientAuthentication;\n        this.kafkaClusterEncryptionInTransit = props.kafkaClusterEncryptionInTransit;\n        this.kafkaConnectVersion = props.kafkaConnectVersion;\n        this.plugins = props.plugins;\n        this.serviceExecutionRoleArn = props.serviceExecutionRoleArn;\n        this.connectorDescription = props.connectorDescription;\n        this.logDelivery = props.logDelivery;\n        this.workerConfiguration = props.workerConfiguration;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnConnector.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            capacity: this.capacity,\n            connectorConfiguration: this.connectorConfiguration,\n            connectorName: this.connectorName,\n            kafkaCluster: this.kafkaCluster,\n            kafkaClusterClientAuthentication: this.kafkaClusterClientAuthentication,\n            kafkaClusterEncryptionInTransit: this.kafkaClusterEncryptionInTransit,\n            kafkaConnectVersion: this.kafkaConnectVersion,\n            plugins: this.plugins,\n            serviceExecutionRoleArn: this.serviceExecutionRoleArn,\n            connectorDescription: this.connectorDescription,\n            logDelivery: this.logDelivery,\n            workerConfiguration: this.workerConfiguration,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnConnectorPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnConnector {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-apachekafkacluster.html\n     */\n    export interface ApacheKafkaClusterProperty {\n        /**\n         * `CfnConnector.ApacheKafkaClusterProperty.BootstrapServers`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-apachekafkacluster.html#cfn-kafkaconnect-connector-apachekafkacluster-bootstrapservers\n         */\n        readonly bootstrapServers: string;\n        /**\n         * `CfnConnector.ApacheKafkaClusterProperty.Vpc`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-apachekafkacluster.html#cfn-kafkaconnect-connector-apachekafkacluster-vpc\n         */\n        readonly vpc: CfnConnector.VpcProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ApacheKafkaClusterProperty`\n *\n * @param properties - the TypeScript properties of a `ApacheKafkaClusterProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnConnector_ApacheKafkaClusterPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('bootstrapServers', cdk.requiredValidator)(properties.bootstrapServers));\n    errors.collect(cdk.propertyValidator('bootstrapServers', cdk.validateString)(properties.bootstrapServers));\n    errors.collect(cdk.propertyValidator('vpc', cdk.requiredValidator)(properties.vpc));\n    errors.collect(cdk.propertyValidator('vpc', CfnConnector_VpcPropertyValidator)(properties.vpc));\n    return errors.wrap('supplied properties not correct for \"ApacheKafkaClusterProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.ApacheKafkaCluster` resource\n *\n * @param properties - the TypeScript properties of a `ApacheKafkaClusterProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.ApacheKafkaCluster` resource.\n */\n// @ts-ignore TS6133\nfunction cfnConnectorApacheKafkaClusterPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnConnector_ApacheKafkaClusterPropertyValidator(properties).assertSuccess();\n    return {\n        BootstrapServers: cdk.stringToCloudFormation(properties.bootstrapServers),\n        Vpc: cfnConnectorVpcPropertyToCloudFormation(properties.vpc),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnConnectorApacheKafkaClusterPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnConnector.ApacheKafkaClusterProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnConnector.ApacheKafkaClusterProperty>();\n    ret.addPropertyResult('bootstrapServers', 'BootstrapServers', cfn_parse.FromCloudFormation.getString(properties.BootstrapServers));\n    ret.addPropertyResult('vpc', 'Vpc', CfnConnectorVpcPropertyFromCloudFormation(properties.Vpc));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnConnector {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-autoscaling.html\n     */\n    export interface AutoScalingProperty {\n        /**\n         * `CfnConnector.AutoScalingProperty.MaxWorkerCount`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-autoscaling.html#cfn-kafkaconnect-connector-autoscaling-maxworkercount\n         */\n        readonly maxWorkerCount: number;\n        /**\n         * `CfnConnector.AutoScalingProperty.McuCount`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-autoscaling.html#cfn-kafkaconnect-connector-autoscaling-mcucount\n         */\n        readonly mcuCount: number;\n        /**\n         * `CfnConnector.AutoScalingProperty.MinWorkerCount`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-autoscaling.html#cfn-kafkaconnect-connector-autoscaling-minworkercount\n         */\n        readonly minWorkerCount: number;\n        /**\n         * `CfnConnector.AutoScalingProperty.ScaleInPolicy`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-autoscaling.html#cfn-kafkaconnect-connector-autoscaling-scaleinpolicy\n         */\n        readonly scaleInPolicy: CfnConnector.ScaleInPolicyProperty | cdk.IResolvable;\n        /**\n         * `CfnConnector.AutoScalingProperty.ScaleOutPolicy`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-autoscaling.html#cfn-kafkaconnect-connector-autoscaling-scaleoutpolicy\n         */\n        readonly scaleOutPolicy: CfnConnector.ScaleOutPolicyProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AutoScalingProperty`\n *\n * @param properties - the TypeScript properties of a `AutoScalingProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnConnector_AutoScalingPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('maxWorkerCount', cdk.requiredValidator)(properties.maxWorkerCount));\n    errors.collect(cdk.propertyValidator('maxWorkerCount', cdk.validateNumber)(properties.maxWorkerCount));\n    errors.collect(cdk.propertyValidator('mcuCount', cdk.requiredValidator)(properties.mcuCount));\n    errors.collect(cdk.propertyValidator('mcuCount', cdk.validateNumber)(properties.mcuCount));\n    errors.collect(cdk.propertyValidator('minWorkerCount', cdk.requiredValidator)(properties.minWorkerCount));\n    errors.collect(cdk.propertyValidator('minWorkerCount', cdk.validateNumber)(properties.minWorkerCount));\n    errors.collect(cdk.propertyValidator('scaleInPolicy', cdk.requiredValidator)(properties.scaleInPolicy));\n    errors.collect(cdk.propertyValidator('scaleInPolicy', CfnConnector_ScaleInPolicyPropertyValidator)(properties.scaleInPolicy));\n    errors.collect(cdk.propertyValidator('scaleOutPolicy', cdk.requiredValidator)(properties.scaleOutPolicy));\n    errors.collect(cdk.propertyValidator('scaleOutPolicy', CfnConnector_ScaleOutPolicyPropertyValidator)(properties.scaleOutPolicy));\n    return errors.wrap('supplied properties not correct for \"AutoScalingProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.AutoScaling` resource\n *\n * @param properties - the TypeScript properties of a `AutoScalingProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.AutoScaling` resource.\n */\n// @ts-ignore TS6133\nfunction cfnConnectorAutoScalingPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnConnector_AutoScalingPropertyValidator(properties).assertSuccess();\n    return {\n        MaxWorkerCount: cdk.numberToCloudFormation(properties.maxWorkerCount),\n        McuCount: cdk.numberToCloudFormation(properties.mcuCount),\n        MinWorkerCount: cdk.numberToCloudFormation(properties.minWorkerCount),\n        ScaleInPolicy: cfnConnectorScaleInPolicyPropertyToCloudFormation(properties.scaleInPolicy),\n        ScaleOutPolicy: cfnConnectorScaleOutPolicyPropertyToCloudFormation(properties.scaleOutPolicy),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnConnectorAutoScalingPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnConnector.AutoScalingProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnConnector.AutoScalingProperty>();\n    ret.addPropertyResult('maxWorkerCount', 'MaxWorkerCount', cfn_parse.FromCloudFormation.getNumber(properties.MaxWorkerCount));\n    ret.addPropertyResult('mcuCount', 'McuCount', cfn_parse.FromCloudFormation.getNumber(properties.McuCount));\n    ret.addPropertyResult('minWorkerCount', 'MinWorkerCount', cfn_parse.FromCloudFormation.getNumber(properties.MinWorkerCount));\n    ret.addPropertyResult('scaleInPolicy', 'ScaleInPolicy', CfnConnectorScaleInPolicyPropertyFromCloudFormation(properties.ScaleInPolicy));\n    ret.addPropertyResult('scaleOutPolicy', 'ScaleOutPolicy', CfnConnectorScaleOutPolicyPropertyFromCloudFormation(properties.ScaleOutPolicy));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnConnector {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-capacity.html\n     */\n    export interface CapacityProperty {\n        /**\n         * `CfnConnector.CapacityProperty.AutoScaling`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-capacity.html#cfn-kafkaconnect-connector-capacity-autoscaling\n         */\n        readonly autoScaling?: CfnConnector.AutoScalingProperty | cdk.IResolvable;\n        /**\n         * `CfnConnector.CapacityProperty.ProvisionedCapacity`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-capacity.html#cfn-kafkaconnect-connector-capacity-provisionedcapacity\n         */\n        readonly provisionedCapacity?: CfnConnector.ProvisionedCapacityProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `CapacityProperty`\n *\n * @param properties - the TypeScript properties of a `CapacityProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnConnector_CapacityPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('autoScaling', CfnConnector_AutoScalingPropertyValidator)(properties.autoScaling));\n    errors.collect(cdk.propertyValidator('provisionedCapacity', CfnConnector_ProvisionedCapacityPropertyValidator)(properties.provisionedCapacity));\n    return errors.wrap('supplied properties not correct for \"CapacityProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.Capacity` resource\n *\n * @param properties - the TypeScript properties of a `CapacityProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.Capacity` resource.\n */\n// @ts-ignore TS6133\nfunction cfnConnectorCapacityPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnConnector_CapacityPropertyValidator(properties).assertSuccess();\n    return {\n        AutoScaling: cfnConnectorAutoScalingPropertyToCloudFormation(properties.autoScaling),\n        ProvisionedCapacity: cfnConnectorProvisionedCapacityPropertyToCloudFormation(properties.provisionedCapacity),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnConnectorCapacityPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnConnector.CapacityProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnConnector.CapacityProperty>();\n    ret.addPropertyResult('autoScaling', 'AutoScaling', properties.AutoScaling != null ? CfnConnectorAutoScalingPropertyFromCloudFormation(properties.AutoScaling) : undefined);\n    ret.addPropertyResult('provisionedCapacity', 'ProvisionedCapacity', properties.ProvisionedCapacity != null ? CfnConnectorProvisionedCapacityPropertyFromCloudFormation(properties.ProvisionedCapacity) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnConnector {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-cloudwatchlogslogdelivery.html\n     */\n    export interface CloudWatchLogsLogDeliveryProperty {\n        /**\n         * `CfnConnector.CloudWatchLogsLogDeliveryProperty.Enabled`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-cloudwatchlogslogdelivery.html#cfn-kafkaconnect-connector-cloudwatchlogslogdelivery-enabled\n         */\n        readonly enabled: boolean | cdk.IResolvable;\n        /**\n         * `CfnConnector.CloudWatchLogsLogDeliveryProperty.LogGroup`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-cloudwatchlogslogdelivery.html#cfn-kafkaconnect-connector-cloudwatchlogslogdelivery-loggroup\n         */\n        readonly logGroup?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `CloudWatchLogsLogDeliveryProperty`\n *\n * @param properties - the TypeScript properties of a `CloudWatchLogsLogDeliveryProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnConnector_CloudWatchLogsLogDeliveryPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('enabled', cdk.requiredValidator)(properties.enabled));\n    errors.collect(cdk.propertyValidator('enabled', cdk.validateBoolean)(properties.enabled));\n    errors.collect(cdk.propertyValidator('logGroup', cdk.validateString)(properties.logGroup));\n    return errors.wrap('supplied properties not correct for \"CloudWatchLogsLogDeliveryProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.CloudWatchLogsLogDelivery` resource\n *\n * @param properties - the TypeScript properties of a `CloudWatchLogsLogDeliveryProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.CloudWatchLogsLogDelivery` resource.\n */\n// @ts-ignore TS6133\nfunction cfnConnectorCloudWatchLogsLogDeliveryPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnConnector_CloudWatchLogsLogDeliveryPropertyValidator(properties).assertSuccess();\n    return {\n        Enabled: cdk.booleanToCloudFormation(properties.enabled),\n        LogGroup: cdk.stringToCloudFormation(properties.logGroup),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnConnectorCloudWatchLogsLogDeliveryPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnConnector.CloudWatchLogsLogDeliveryProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnConnector.CloudWatchLogsLogDeliveryProperty>();\n    ret.addPropertyResult('enabled', 'Enabled', cfn_parse.FromCloudFormation.getBoolean(properties.Enabled));\n    ret.addPropertyResult('logGroup', 'LogGroup', properties.LogGroup != null ? cfn_parse.FromCloudFormation.getString(properties.LogGroup) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnConnector {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-customplugin.html\n     */\n    export interface CustomPluginProperty {\n        /**\n         * `CfnConnector.CustomPluginProperty.CustomPluginArn`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-customplugin.html#cfn-kafkaconnect-connector-customplugin-custompluginarn\n         */\n        readonly customPluginArn: string;\n        /**\n         * `CfnConnector.CustomPluginProperty.Revision`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-customplugin.html#cfn-kafkaconnect-connector-customplugin-revision\n         */\n        readonly revision: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `CustomPluginProperty`\n *\n * @param properties - the TypeScript properties of a `CustomPluginProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnConnector_CustomPluginPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('customPluginArn', cdk.requiredValidator)(properties.customPluginArn));\n    errors.collect(cdk.propertyValidator('customPluginArn', cdk.validateString)(properties.customPluginArn));\n    errors.collect(cdk.propertyValidator('revision', cdk.requiredValidator)(properties.revision));\n    errors.collect(cdk.propertyValidator('revision', cdk.validateNumber)(properties.revision));\n    return errors.wrap('supplied properties not correct for \"CustomPluginProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.CustomPlugin` resource\n *\n * @param properties - the TypeScript properties of a `CustomPluginProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.CustomPlugin` resource.\n */\n// @ts-ignore TS6133\nfunction cfnConnectorCustomPluginPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnConnector_CustomPluginPropertyValidator(properties).assertSuccess();\n    return {\n        CustomPluginArn: cdk.stringToCloudFormation(properties.customPluginArn),\n        Revision: cdk.numberToCloudFormation(properties.revision),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnConnectorCustomPluginPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnConnector.CustomPluginProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnConnector.CustomPluginProperty>();\n    ret.addPropertyResult('customPluginArn', 'CustomPluginArn', cfn_parse.FromCloudFormation.getString(properties.CustomPluginArn));\n    ret.addPropertyResult('revision', 'Revision', cfn_parse.FromCloudFormation.getNumber(properties.Revision));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnConnector {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-firehoselogdelivery.html\n     */\n    export interface FirehoseLogDeliveryProperty {\n        /**\n         * `CfnConnector.FirehoseLogDeliveryProperty.DeliveryStream`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-firehoselogdelivery.html#cfn-kafkaconnect-connector-firehoselogdelivery-deliverystream\n         */\n        readonly deliveryStream?: string;\n        /**\n         * `CfnConnector.FirehoseLogDeliveryProperty.Enabled`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-firehoselogdelivery.html#cfn-kafkaconnect-connector-firehoselogdelivery-enabled\n         */\n        readonly enabled: boolean | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `FirehoseLogDeliveryProperty`\n *\n * @param properties - the TypeScript properties of a `FirehoseLogDeliveryProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnConnector_FirehoseLogDeliveryPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('deliveryStream', cdk.validateString)(properties.deliveryStream));\n    errors.collect(cdk.propertyValidator('enabled', cdk.requiredValidator)(properties.enabled));\n    errors.collect(cdk.propertyValidator('enabled', cdk.validateBoolean)(properties.enabled));\n    return errors.wrap('supplied properties not correct for \"FirehoseLogDeliveryProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.FirehoseLogDelivery` resource\n *\n * @param properties - the TypeScript properties of a `FirehoseLogDeliveryProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.FirehoseLogDelivery` resource.\n */\n// @ts-ignore TS6133\nfunction cfnConnectorFirehoseLogDeliveryPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnConnector_FirehoseLogDeliveryPropertyValidator(properties).assertSuccess();\n    return {\n        DeliveryStream: cdk.stringToCloudFormation(properties.deliveryStream),\n        Enabled: cdk.booleanToCloudFormation(properties.enabled),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnConnectorFirehoseLogDeliveryPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnConnector.FirehoseLogDeliveryProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnConnector.FirehoseLogDeliveryProperty>();\n    ret.addPropertyResult('deliveryStream', 'DeliveryStream', properties.DeliveryStream != null ? cfn_parse.FromCloudFormation.getString(properties.DeliveryStream) : undefined);\n    ret.addPropertyResult('enabled', 'Enabled', cfn_parse.FromCloudFormation.getBoolean(properties.Enabled));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnConnector {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-kafkacluster.html\n     */\n    export interface KafkaClusterProperty {\n        /**\n         * `CfnConnector.KafkaClusterProperty.ApacheKafkaCluster`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-kafkacluster.html#cfn-kafkaconnect-connector-kafkacluster-apachekafkacluster\n         */\n        readonly apacheKafkaCluster: CfnConnector.ApacheKafkaClusterProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `KafkaClusterProperty`\n *\n * @param properties - the TypeScript properties of a `KafkaClusterProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnConnector_KafkaClusterPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('apacheKafkaCluster', cdk.requiredValidator)(properties.apacheKafkaCluster));\n    errors.collect(cdk.propertyValidator('apacheKafkaCluster', CfnConnector_ApacheKafkaClusterPropertyValidator)(properties.apacheKafkaCluster));\n    return errors.wrap('supplied properties not correct for \"KafkaClusterProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.KafkaCluster` resource\n *\n * @param properties - the TypeScript properties of a `KafkaClusterProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.KafkaCluster` resource.\n */\n// @ts-ignore TS6133\nfunction cfnConnectorKafkaClusterPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnConnector_KafkaClusterPropertyValidator(properties).assertSuccess();\n    return {\n        ApacheKafkaCluster: cfnConnectorApacheKafkaClusterPropertyToCloudFormation(properties.apacheKafkaCluster),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnConnectorKafkaClusterPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnConnector.KafkaClusterProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnConnector.KafkaClusterProperty>();\n    ret.addPropertyResult('apacheKafkaCluster', 'ApacheKafkaCluster', CfnConnectorApacheKafkaClusterPropertyFromCloudFormation(properties.ApacheKafkaCluster));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnConnector {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-kafkaclusterclientauthentication.html\n     */\n    export interface KafkaClusterClientAuthenticationProperty {\n        /**\n         * `CfnConnector.KafkaClusterClientAuthenticationProperty.AuthenticationType`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-kafkaclusterclientauthentication.html#cfn-kafkaconnect-connector-kafkaclusterclientauthentication-authenticationtype\n         */\n        readonly authenticationType: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `KafkaClusterClientAuthenticationProperty`\n *\n * @param properties - the TypeScript properties of a `KafkaClusterClientAuthenticationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnConnector_KafkaClusterClientAuthenticationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('authenticationType', cdk.requiredValidator)(properties.authenticationType));\n    errors.collect(cdk.propertyValidator('authenticationType', cdk.validateString)(properties.authenticationType));\n    return errors.wrap('supplied properties not correct for \"KafkaClusterClientAuthenticationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.KafkaClusterClientAuthentication` resource\n *\n * @param properties - the TypeScript properties of a `KafkaClusterClientAuthenticationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.KafkaClusterClientAuthentication` resource.\n */\n// @ts-ignore TS6133\nfunction cfnConnectorKafkaClusterClientAuthenticationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnConnector_KafkaClusterClientAuthenticationPropertyValidator(properties).assertSuccess();\n    return {\n        AuthenticationType: cdk.stringToCloudFormation(properties.authenticationType),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnConnectorKafkaClusterClientAuthenticationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnConnector.KafkaClusterClientAuthenticationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnConnector.KafkaClusterClientAuthenticationProperty>();\n    ret.addPropertyResult('authenticationType', 'AuthenticationType', cfn_parse.FromCloudFormation.getString(properties.AuthenticationType));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnConnector {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-kafkaclusterencryptionintransit.html\n     */\n    export interface KafkaClusterEncryptionInTransitProperty {\n        /**\n         * `CfnConnector.KafkaClusterEncryptionInTransitProperty.EncryptionType`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-kafkaclusterencryptionintransit.html#cfn-kafkaconnect-connector-kafkaclusterencryptionintransit-encryptiontype\n         */\n        readonly encryptionType: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `KafkaClusterEncryptionInTransitProperty`\n *\n * @param properties - the TypeScript properties of a `KafkaClusterEncryptionInTransitProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnConnector_KafkaClusterEncryptionInTransitPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('encryptionType', cdk.requiredValidator)(properties.encryptionType));\n    errors.collect(cdk.propertyValidator('encryptionType', cdk.validateString)(properties.encryptionType));\n    return errors.wrap('supplied properties not correct for \"KafkaClusterEncryptionInTransitProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.KafkaClusterEncryptionInTransit` resource\n *\n * @param properties - the TypeScript properties of a `KafkaClusterEncryptionInTransitProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.KafkaClusterEncryptionInTransit` resource.\n */\n// @ts-ignore TS6133\nfunction cfnConnectorKafkaClusterEncryptionInTransitPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnConnector_KafkaClusterEncryptionInTransitPropertyValidator(properties).assertSuccess();\n    return {\n        EncryptionType: cdk.stringToCloudFormation(properties.encryptionType),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnConnectorKafkaClusterEncryptionInTransitPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnConnector.KafkaClusterEncryptionInTransitProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnConnector.KafkaClusterEncryptionInTransitProperty>();\n    ret.addPropertyResult('encryptionType', 'EncryptionType', cfn_parse.FromCloudFormation.getString(properties.EncryptionType));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnConnector {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-logdelivery.html\n     */\n    export interface LogDeliveryProperty {\n        /**\n         * `CfnConnector.LogDeliveryProperty.WorkerLogDelivery`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-logdelivery.html#cfn-kafkaconnect-connector-logdelivery-workerlogdelivery\n         */\n        readonly workerLogDelivery: CfnConnector.WorkerLogDeliveryProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `LogDeliveryProperty`\n *\n * @param properties - the TypeScript properties of a `LogDeliveryProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnConnector_LogDeliveryPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('workerLogDelivery', cdk.requiredValidator)(properties.workerLogDelivery));\n    errors.collect(cdk.propertyValidator('workerLogDelivery', CfnConnector_WorkerLogDeliveryPropertyValidator)(properties.workerLogDelivery));\n    return errors.wrap('supplied properties not correct for \"LogDeliveryProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.LogDelivery` resource\n *\n * @param properties - the TypeScript properties of a `LogDeliveryProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.LogDelivery` resource.\n */\n// @ts-ignore TS6133\nfunction cfnConnectorLogDeliveryPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnConnector_LogDeliveryPropertyValidator(properties).assertSuccess();\n    return {\n        WorkerLogDelivery: cfnConnectorWorkerLogDeliveryPropertyToCloudFormation(properties.workerLogDelivery),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnConnectorLogDeliveryPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnConnector.LogDeliveryProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnConnector.LogDeliveryProperty>();\n    ret.addPropertyResult('workerLogDelivery', 'WorkerLogDelivery', CfnConnectorWorkerLogDeliveryPropertyFromCloudFormation(properties.WorkerLogDelivery));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnConnector {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-plugin.html\n     */\n    export interface PluginProperty {\n        /**\n         * `CfnConnector.PluginProperty.CustomPlugin`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-plugin.html#cfn-kafkaconnect-connector-plugin-customplugin\n         */\n        readonly customPlugin: CfnConnector.CustomPluginProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `PluginProperty`\n *\n * @param properties - the TypeScript properties of a `PluginProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnConnector_PluginPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('customPlugin', cdk.requiredValidator)(properties.customPlugin));\n    errors.collect(cdk.propertyValidator('customPlugin', CfnConnector_CustomPluginPropertyValidator)(properties.customPlugin));\n    return errors.wrap('supplied properties not correct for \"PluginProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.Plugin` resource\n *\n * @param properties - the TypeScript properties of a `PluginProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.Plugin` resource.\n */\n// @ts-ignore TS6133\nfunction cfnConnectorPluginPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnConnector_PluginPropertyValidator(properties).assertSuccess();\n    return {\n        CustomPlugin: cfnConnectorCustomPluginPropertyToCloudFormation(properties.customPlugin),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnConnectorPluginPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnConnector.PluginProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnConnector.PluginProperty>();\n    ret.addPropertyResult('customPlugin', 'CustomPlugin', CfnConnectorCustomPluginPropertyFromCloudFormation(properties.CustomPlugin));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnConnector {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-provisionedcapacity.html\n     */\n    export interface ProvisionedCapacityProperty {\n        /**\n         * `CfnConnector.ProvisionedCapacityProperty.McuCount`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-provisionedcapacity.html#cfn-kafkaconnect-connector-provisionedcapacity-mcucount\n         */\n        readonly mcuCount?: number;\n        /**\n         * `CfnConnector.ProvisionedCapacityProperty.WorkerCount`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-provisionedcapacity.html#cfn-kafkaconnect-connector-provisionedcapacity-workercount\n         */\n        readonly workerCount: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ProvisionedCapacityProperty`\n *\n * @param properties - the TypeScript properties of a `ProvisionedCapacityProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnConnector_ProvisionedCapacityPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('mcuCount', cdk.validateNumber)(properties.mcuCount));\n    errors.collect(cdk.propertyValidator('workerCount', cdk.requiredValidator)(properties.workerCount));\n    errors.collect(cdk.propertyValidator('workerCount', cdk.validateNumber)(properties.workerCount));\n    return errors.wrap('supplied properties not correct for \"ProvisionedCapacityProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.ProvisionedCapacity` resource\n *\n * @param properties - the TypeScript properties of a `ProvisionedCapacityProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.ProvisionedCapacity` resource.\n */\n// @ts-ignore TS6133\nfunction cfnConnectorProvisionedCapacityPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnConnector_ProvisionedCapacityPropertyValidator(properties).assertSuccess();\n    return {\n        McuCount: cdk.numberToCloudFormation(properties.mcuCount),\n        WorkerCount: cdk.numberToCloudFormation(properties.workerCount),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnConnectorProvisionedCapacityPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnConnector.ProvisionedCapacityProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnConnector.ProvisionedCapacityProperty>();\n    ret.addPropertyResult('mcuCount', 'McuCount', properties.McuCount != null ? cfn_parse.FromCloudFormation.getNumber(properties.McuCount) : undefined);\n    ret.addPropertyResult('workerCount', 'WorkerCount', cfn_parse.FromCloudFormation.getNumber(properties.WorkerCount));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnConnector {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-s3logdelivery.html\n     */\n    export interface S3LogDeliveryProperty {\n        /**\n         * `CfnConnector.S3LogDeliveryProperty.Bucket`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-s3logdelivery.html#cfn-kafkaconnect-connector-s3logdelivery-bucket\n         */\n        readonly bucket?: string;\n        /**\n         * `CfnConnector.S3LogDeliveryProperty.Enabled`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-s3logdelivery.html#cfn-kafkaconnect-connector-s3logdelivery-enabled\n         */\n        readonly enabled: boolean | cdk.IResolvable;\n        /**\n         * `CfnConnector.S3LogDeliveryProperty.Prefix`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-s3logdelivery.html#cfn-kafkaconnect-connector-s3logdelivery-prefix\n         */\n        readonly prefix?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `S3LogDeliveryProperty`\n *\n * @param properties - the TypeScript properties of a `S3LogDeliveryProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnConnector_S3LogDeliveryPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('bucket', cdk.validateString)(properties.bucket));\n    errors.collect(cdk.propertyValidator('enabled', cdk.requiredValidator)(properties.enabled));\n    errors.collect(cdk.propertyValidator('enabled', cdk.validateBoolean)(properties.enabled));\n    errors.collect(cdk.propertyValidator('prefix', cdk.validateString)(properties.prefix));\n    return errors.wrap('supplied properties not correct for \"S3LogDeliveryProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.S3LogDelivery` resource\n *\n * @param properties - the TypeScript properties of a `S3LogDeliveryProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.S3LogDelivery` resource.\n */\n// @ts-ignore TS6133\nfunction cfnConnectorS3LogDeliveryPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnConnector_S3LogDeliveryPropertyValidator(properties).assertSuccess();\n    return {\n        Bucket: cdk.stringToCloudFormation(properties.bucket),\n        Enabled: cdk.booleanToCloudFormation(properties.enabled),\n        Prefix: cdk.stringToCloudFormation(properties.prefix),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnConnectorS3LogDeliveryPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnConnector.S3LogDeliveryProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnConnector.S3LogDeliveryProperty>();\n    ret.addPropertyResult('bucket', 'Bucket', properties.Bucket != null ? cfn_parse.FromCloudFormation.getString(properties.Bucket) : undefined);\n    ret.addPropertyResult('enabled', 'Enabled', cfn_parse.FromCloudFormation.getBoolean(properties.Enabled));\n    ret.addPropertyResult('prefix', 'Prefix', properties.Prefix != null ? cfn_parse.FromCloudFormation.getString(properties.Prefix) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnConnector {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-scaleinpolicy.html\n     */\n    export interface ScaleInPolicyProperty {\n        /**\n         * `CfnConnector.ScaleInPolicyProperty.CpuUtilizationPercentage`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-scaleinpolicy.html#cfn-kafkaconnect-connector-scaleinpolicy-cpuutilizationpercentage\n         */\n        readonly cpuUtilizationPercentage: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ScaleInPolicyProperty`\n *\n * @param properties - the TypeScript properties of a `ScaleInPolicyProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnConnector_ScaleInPolicyPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('cpuUtilizationPercentage', cdk.requiredValidator)(properties.cpuUtilizationPercentage));\n    errors.collect(cdk.propertyValidator('cpuUtilizationPercentage', cdk.validateNumber)(properties.cpuUtilizationPercentage));\n    return errors.wrap('supplied properties not correct for \"ScaleInPolicyProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.ScaleInPolicy` resource\n *\n * @param properties - the TypeScript properties of a `ScaleInPolicyProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.ScaleInPolicy` resource.\n */\n// @ts-ignore TS6133\nfunction cfnConnectorScaleInPolicyPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnConnector_ScaleInPolicyPropertyValidator(properties).assertSuccess();\n    return {\n        CpuUtilizationPercentage: cdk.numberToCloudFormation(properties.cpuUtilizationPercentage),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnConnectorScaleInPolicyPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnConnector.ScaleInPolicyProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnConnector.ScaleInPolicyProperty>();\n    ret.addPropertyResult('cpuUtilizationPercentage', 'CpuUtilizationPercentage', cfn_parse.FromCloudFormation.getNumber(properties.CpuUtilizationPercentage));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnConnector {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-scaleoutpolicy.html\n     */\n    export interface ScaleOutPolicyProperty {\n        /**\n         * `CfnConnector.ScaleOutPolicyProperty.CpuUtilizationPercentage`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-scaleoutpolicy.html#cfn-kafkaconnect-connector-scaleoutpolicy-cpuutilizationpercentage\n         */\n        readonly cpuUtilizationPercentage: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ScaleOutPolicyProperty`\n *\n * @param properties - the TypeScript properties of a `ScaleOutPolicyProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnConnector_ScaleOutPolicyPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('cpuUtilizationPercentage', cdk.requiredValidator)(properties.cpuUtilizationPercentage));\n    errors.collect(cdk.propertyValidator('cpuUtilizationPercentage', cdk.validateNumber)(properties.cpuUtilizationPercentage));\n    return errors.wrap('supplied properties not correct for \"ScaleOutPolicyProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.ScaleOutPolicy` resource\n *\n * @param properties - the TypeScript properties of a `ScaleOutPolicyProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.ScaleOutPolicy` resource.\n */\n// @ts-ignore TS6133\nfunction cfnConnectorScaleOutPolicyPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnConnector_ScaleOutPolicyPropertyValidator(properties).assertSuccess();\n    return {\n        CpuUtilizationPercentage: cdk.numberToCloudFormation(properties.cpuUtilizationPercentage),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnConnectorScaleOutPolicyPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnConnector.ScaleOutPolicyProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnConnector.ScaleOutPolicyProperty>();\n    ret.addPropertyResult('cpuUtilizationPercentage', 'CpuUtilizationPercentage', cfn_parse.FromCloudFormation.getNumber(properties.CpuUtilizationPercentage));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnConnector {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-vpc.html\n     */\n    export interface VpcProperty {\n        /**\n         * `CfnConnector.VpcProperty.SecurityGroups`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-vpc.html#cfn-kafkaconnect-connector-vpc-securitygroups\n         */\n        readonly securityGroups: string[];\n        /**\n         * `CfnConnector.VpcProperty.Subnets`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-vpc.html#cfn-kafkaconnect-connector-vpc-subnets\n         */\n        readonly subnets: string[];\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `VpcProperty`\n *\n * @param properties - the TypeScript properties of a `VpcProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnConnector_VpcPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('securityGroups', cdk.requiredValidator)(properties.securityGroups));\n    errors.collect(cdk.propertyValidator('securityGroups', cdk.listValidator(cdk.validateString))(properties.securityGroups));\n    errors.collect(cdk.propertyValidator('subnets', cdk.requiredValidator)(properties.subnets));\n    errors.collect(cdk.propertyValidator('subnets', cdk.listValidator(cdk.validateString))(properties.subnets));\n    return errors.wrap('supplied properties not correct for \"VpcProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.Vpc` resource\n *\n * @param properties - the TypeScript properties of a `VpcProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.Vpc` resource.\n */\n// @ts-ignore TS6133\nfunction cfnConnectorVpcPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnConnector_VpcPropertyValidator(properties).assertSuccess();\n    return {\n        SecurityGroups: cdk.listMapper(cdk.stringToCloudFormation)(properties.securityGroups),\n        Subnets: cdk.listMapper(cdk.stringToCloudFormation)(properties.subnets),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnConnectorVpcPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnConnector.VpcProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnConnector.VpcProperty>();\n    ret.addPropertyResult('securityGroups', 'SecurityGroups', cfn_parse.FromCloudFormation.getStringArray(properties.SecurityGroups));\n    ret.addPropertyResult('subnets', 'Subnets', cfn_parse.FromCloudFormation.getStringArray(properties.Subnets));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnConnector {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-workerconfiguration.html\n     */\n    export interface WorkerConfigurationProperty {\n        /**\n         * `CfnConnector.WorkerConfigurationProperty.Revision`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-workerconfiguration.html#cfn-kafkaconnect-connector-workerconfiguration-revision\n         */\n        readonly revision: number;\n        /**\n         * `CfnConnector.WorkerConfigurationProperty.WorkerConfigurationArn`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-workerconfiguration.html#cfn-kafkaconnect-connector-workerconfiguration-workerconfigurationarn\n         */\n        readonly workerConfigurationArn: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `WorkerConfigurationProperty`\n *\n * @param properties - the TypeScript properties of a `WorkerConfigurationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnConnector_WorkerConfigurationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('revision', cdk.requiredValidator)(properties.revision));\n    errors.collect(cdk.propertyValidator('revision', cdk.validateNumber)(properties.revision));\n    errors.collect(cdk.propertyValidator('workerConfigurationArn', cdk.requiredValidator)(properties.workerConfigurationArn));\n    errors.collect(cdk.propertyValidator('workerConfigurationArn', cdk.validateString)(properties.workerConfigurationArn));\n    return errors.wrap('supplied properties not correct for \"WorkerConfigurationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.WorkerConfiguration` resource\n *\n * @param properties - the TypeScript properties of a `WorkerConfigurationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.WorkerConfiguration` resource.\n */\n// @ts-ignore TS6133\nfunction cfnConnectorWorkerConfigurationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnConnector_WorkerConfigurationPropertyValidator(properties).assertSuccess();\n    return {\n        Revision: cdk.numberToCloudFormation(properties.revision),\n        WorkerConfigurationArn: cdk.stringToCloudFormation(properties.workerConfigurationArn),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnConnectorWorkerConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnConnector.WorkerConfigurationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnConnector.WorkerConfigurationProperty>();\n    ret.addPropertyResult('revision', 'Revision', cfn_parse.FromCloudFormation.getNumber(properties.Revision));\n    ret.addPropertyResult('workerConfigurationArn', 'WorkerConfigurationArn', cfn_parse.FromCloudFormation.getString(properties.WorkerConfigurationArn));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnConnector {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-workerlogdelivery.html\n     */\n    export interface WorkerLogDeliveryProperty {\n        /**\n         * `CfnConnector.WorkerLogDeliveryProperty.CloudWatchLogs`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-workerlogdelivery.html#cfn-kafkaconnect-connector-workerlogdelivery-cloudwatchlogs\n         */\n        readonly cloudWatchLogs?: CfnConnector.CloudWatchLogsLogDeliveryProperty | cdk.IResolvable;\n        /**\n         * `CfnConnector.WorkerLogDeliveryProperty.Firehose`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-workerlogdelivery.html#cfn-kafkaconnect-connector-workerlogdelivery-firehose\n         */\n        readonly firehose?: CfnConnector.FirehoseLogDeliveryProperty | cdk.IResolvable;\n        /**\n         * `CfnConnector.WorkerLogDeliveryProperty.S3`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kafkaconnect-connector-workerlogdelivery.html#cfn-kafkaconnect-connector-workerlogdelivery-s3\n         */\n        readonly s3?: CfnConnector.S3LogDeliveryProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `WorkerLogDeliveryProperty`\n *\n * @param properties - the TypeScript properties of a `WorkerLogDeliveryProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnConnector_WorkerLogDeliveryPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('cloudWatchLogs', CfnConnector_CloudWatchLogsLogDeliveryPropertyValidator)(properties.cloudWatchLogs));\n    errors.collect(cdk.propertyValidator('firehose', CfnConnector_FirehoseLogDeliveryPropertyValidator)(properties.firehose));\n    errors.collect(cdk.propertyValidator('s3', CfnConnector_S3LogDeliveryPropertyValidator)(properties.s3));\n    return errors.wrap('supplied properties not correct for \"WorkerLogDeliveryProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.WorkerLogDelivery` resource\n *\n * @param properties - the TypeScript properties of a `WorkerLogDeliveryProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::KafkaConnect::Connector.WorkerLogDelivery` resource.\n */\n// @ts-ignore TS6133\nfunction cfnConnectorWorkerLogDeliveryPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnConnector_WorkerLogDeliveryPropertyValidator(properties).assertSuccess();\n    return {\n        CloudWatchLogs: cfnConnectorCloudWatchLogsLogDeliveryPropertyToCloudFormation(properties.cloudWatchLogs),\n        Firehose: cfnConnectorFirehoseLogDeliveryPropertyToCloudFormation(properties.firehose),\n        S3: cfnConnectorS3LogDeliveryPropertyToCloudFormation(properties.s3),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnConnectorWorkerLogDeliveryPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnConnector.WorkerLogDeliveryProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnConnector.WorkerLogDeliveryProperty>();\n    ret.addPropertyResult('cloudWatchLogs', 'CloudWatchLogs', properties.CloudWatchLogs != null ? CfnConnectorCloudWatchLogsLogDeliveryPropertyFromCloudFormation(properties.CloudWatchLogs) : undefined);\n    ret.addPropertyResult('firehose', 'Firehose', properties.Firehose != null ? CfnConnectorFirehoseLogDeliveryPropertyFromCloudFormation(properties.Firehose) : undefined);\n    ret.addPropertyResult('s3', 'S3', properties.S3 != null ? CfnConnectorS3LogDeliveryPropertyFromCloudFormation(properties.S3) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n"],
  "mappings": "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",
  "names": []
}
