{
  "version": 3,
  "sources": ["integ.parameter.lit.ts"],
  "sourcesContent": ["import * as iam from '../../aws-iam';\nimport * as cdk from '../../core';\nimport * as ssm from '../lib';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'SSM-Parameter');\n\nconst role = new iam.Role(stack, 'UserRole', {\n  assumedBy: new iam.AccountRootPrincipal(),\n});\n\n/// !show\n// Create a new SSM Parameter holding a String\nconst param = new ssm.StringParameter(stack, 'StringParameter', {\n  // description: 'Some user-friendly description',\n  // name: 'ParameterName',\n  stringValue: 'Initial parameter value',\n  // allowedPattern: '.*',\n});\n\n// Grant read access to some Role\nparam.grantRead(role);\n\n// Create a new SSM Parameter holding a StringList\nconst listParameter = new ssm.StringListParameter(stack, 'StringListParameter', {\n  // description: 'Some user-friendly description',\n  // name: 'ParameterName',\n  stringListValue: ['Initial parameter value A', 'Initial parameter value B'],\n  // allowedPattern: '.*',\n});\n/// !hide\n\nnew cdk.CfnOutput(stack, 'StringListOutput', {\n  value: cdk.Fn.join('+', listParameter.stringListValue),\n});\n\nnew cdk.CfnOutput(stack, 'ParamArn', {\n  value: param.parameterArn,\n});\n\napp.synth();\n"],
  "mappings": "oEAAA,KAAA,KAAA,QAAA,eAAA,EACA,IAAA,QAAA,YAAA,EACA,IAAA,QAAA,QAAA,EAEM,IAAM,GAAI,KAAI,IACd,MAAQ,GAAI,KAAI,MAAM,IAAK,eAAe,EAE1C,KAAO,GAAI,KAAI,KAAK,MAAO,WAAY,CAC3C,UAAW,GAAI,KAAI,qBACpB,EAIK,MAAQ,GAAI,KAAI,gBAAgB,MAAO,kBAAmB,CAG9D,YAAa,0BAEd,EAGD,MAAM,UAAU,IAAI,EAGpB,KAAM,eAAgB,GAAI,KAAI,oBAAoB,MAAO,sBAAuB,CAG9E,gBAAiB,CAAC,4BAA6B,2BAA2B,EAE3E,EAGD,GAAI,KAAI,UAAU,MAAO,mBAAoB,CAC3C,MAAO,IAAI,GAAG,KAAK,IAAK,cAAc,eAAe,EACtD,EAED,GAAI,KAAI,UAAU,MAAO,WAAY,CACnC,MAAO,MAAM,aACd,EAED,IAAI,MAAK",
  "names": []
}
