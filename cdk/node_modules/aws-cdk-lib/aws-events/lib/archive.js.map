{
  "version": 3,
  "sources": ["archive.ts"],
  "sourcesContent": ["import { Duration, Resource } from '../../core';\nimport { Construct } from 'constructs';\nimport { IEventBus } from './event-bus';\nimport { EventPattern } from './event-pattern';\nimport { CfnArchive } from './events.generated';\nimport { renderEventPattern } from './util';\n\n/**\n * The event archive base properties\n */\nexport interface BaseArchiveProps {\n  /**\n   * The name of the archive.\n   *\n   * @default - Automatically generated\n   */\n  readonly archiveName?: string;\n  /**\n   * A description for the archive.\n   *\n   * @default - none\n   */\n  readonly description?: string;\n  /**\n   * An event pattern to use to filter events sent to the archive.\n   */\n  readonly eventPattern: EventPattern;\n  /**\n   * The number of days to retain events for. Default value is 0. If set to 0, events are retained indefinitely.\n   * @default - Infinite\n   */\n  readonly retention?: Duration;\n}\n\n\n/**\n * The event archive properties\n */\nexport interface ArchiveProps extends BaseArchiveProps {\n  /**\n   * The event source associated with the archive.\n   */\n  readonly sourceEventBus: IEventBus;\n}\n\n/**\n * Define an EventBridge Archive\n *\n * @resource AWS::Events::Archive\n */\nexport class Archive extends Resource {\n  /**\n   * The archive name.\n   * @attribute\n   */\n  public readonly archiveName: string;\n\n  /**\n   * The ARN of the archive created.\n   * @attribute\n   */\n  public readonly archiveArn: string;\n\n  constructor(scope: Construct, id: string, props: ArchiveProps) {\n    super(scope, id, { physicalName: props.archiveName });\n\n    let archive = new CfnArchive(this, 'Archive', {\n      sourceArn: props.sourceEventBus.eventBusArn,\n      description: props.description,\n      eventPattern: renderEventPattern(props.eventPattern),\n      retentionDays: props.retention?.toDays({ integral: true }) || 0,\n      archiveName: this.physicalName,\n    });\n\n    this.archiveArn = archive.attrArn;\n    this.archiveName = archive.attrArchiveName;\n  }\n}\n"],
  "mappings": "8MAAA,OAAA,QAAA,YAAA,EAIA,mBAAA,QAAA,oBAAA,EACA,OAAA,QAAA,QAAA,EA6CA,MAAa,eAAgB,QAAA,QAAQ,CAanC,YAAY,MAAkB,GAAY,MAAmB,QAC3D,MAAM,MAAO,GAAI,CAAE,aAAc,MAAM,WAAW,CAAE,qEAEpD,GAAI,SAAU,GAAI,oBAAA,WAAW,KAAM,UAAW,CAC5C,UAAW,MAAM,eAAe,YAChC,YAAa,MAAM,YACnB,aAAc,OAAA,mBAAmB,MAAM,YAAY,EACnD,cAAe,KAAA,MAAM,aAAS,MAAA,KAAA,OAAA,OAAA,GAAE,OAAO,CAAE,SAAU,EAAI,CAAE,IAAK,EAC9D,YAAa,KAAK,aACnB,EAED,KAAK,WAAa,QAAQ,QAC1B,KAAK,YAAc,QAAQ,iBAzB/B,QAAA,QAAA",
  "names": []
}
