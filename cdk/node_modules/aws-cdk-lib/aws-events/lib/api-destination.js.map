{
  "version": 3,
  "sources": ["api-destination.ts"],
  "sourcesContent": ["import { IResource, Resource } from '../../core';\nimport { Construct } from 'constructs';\nimport { HttpMethod, IConnection } from './connection';\nimport { CfnApiDestination } from './events.generated';\n\n/**\n * The event API Destination properties\n */\nexport interface ApiDestinationProps {\n  /**\n   * The name for the API destination.\n   * @default - A unique name will be generated\n   */\n  readonly apiDestinationName?: string;\n\n  /**\n   * A description for the API destination.\n   *\n   * @default - none\n   */\n  readonly description?: string;\n\n  /**\n   * The ARN of the connection to use for the API destination\n   */\n  readonly connection: IConnection;\n\n  /**\n   * The URL to the HTTP invocation endpoint for the API destination..\n   */\n  readonly endpoint: string;\n\n  /**\n   * The method to use for the request to the HTTP invocation endpoint.\n   *\n   * @default HttpMethod.POST\n   */\n  readonly httpMethod?: HttpMethod;\n\n  /**\n   * The maximum number of requests per second to send to the HTTP invocation endpoint.\n   *\n   * @default - Not rate limited\n   */\n  readonly rateLimitPerSecond?: number;\n}\n\n/**\n * Interface for API Destinations\n */\nexport interface IApiDestination extends IResource {\n  /**\n   * The Name of the Api Destination created.\n   * @attribute\n   */\n  readonly apiDestinationName: string;\n\n  /**\n   * The ARN of the Api Destination created.\n   * @attribute\n   */\n  readonly apiDestinationArn: string;\n}\n\n/**\n * Define an EventBridge Api Destination\n *\n * @resource AWS::Events::ApiDestination\n */\nexport class ApiDestination extends Resource implements IApiDestination {\n  /**\n   * The Connection to associate with Api Destination\n   */\n  public readonly connection: IConnection;\n\n  /**\n   * The Name of the Api Destination created.\n   * @attribute\n   */\n  public readonly apiDestinationName: string;\n\n  /**\n   * The ARN of the Api Destination created.\n   * @attribute\n   */\n  public readonly apiDestinationArn: string;\n\n  constructor(scope: Construct, id: string, props: ApiDestinationProps) {\n    super(scope, id, {\n      physicalName: props.apiDestinationName,\n    });\n\n    this.connection = props.connection;\n\n    let apiDestination = new CfnApiDestination(this, 'ApiDestination', {\n      connectionArn: this.connection.connectionArn,\n      description: props.description,\n      httpMethod: props.httpMethod ?? HttpMethod.POST,\n      invocationEndpoint: props.endpoint,\n      invocationRateLimitPerSecond: props.rateLimitPerSecond,\n      name: this.physicalName,\n    });\n\n    this.apiDestinationName = this.getResourceNameAttribute(apiDestination.ref);\n    this.apiDestinationArn = apiDestination.attrArn;\n  }\n}\n"],
  "mappings": "qNAAA,OAAA,QAAA,YAAA,EAEA,aAAA,QAAA,cAAA,EACA,mBAAA,QAAA,oBAAA,EAkEA,MAAa,sBAAuB,QAAA,QAAQ,CAkB1C,YAAY,MAAkB,GAAY,MAA0B,QAClE,MAAM,MAAO,GAAI,CACf,aAAc,MAAM,mBACrB,4EAED,KAAK,WAAa,MAAM,WAExB,GAAI,gBAAiB,GAAI,oBAAA,kBAAkB,KAAM,iBAAkB,CACjE,cAAe,KAAK,WAAW,cAC/B,YAAa,MAAM,YACnB,WAAU,IAAE,MAAM,cAAU,MAAA,KAAA,OAAA,GAAI,aAAA,WAAW,KAC3C,mBAAoB,MAAM,SAC1B,6BAA8B,MAAM,mBACpC,KAAM,KAAK,aACZ,EAED,KAAK,mBAAqB,KAAK,yBAAyB,eAAe,GAAG,EAC1E,KAAK,kBAAoB,eAAe,SAnC5C,QAAA,eAAA",
  "names": []
}
