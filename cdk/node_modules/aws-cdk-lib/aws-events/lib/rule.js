"use strict";var _a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.Rule=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),aws_iam_1=require("../../aws-iam"),core_1=require("../../core"),constructs_1=require("constructs"),events_generated_1=require("./events.generated"),schedule_1=require("./schedule"),util_1=require("./util");class Rule extends core_1.Resource{constructor(scope,id,props={}){var _b,_c;super(scope,id,{physicalName:props.ruleName});if(this.targets=new Array,this.eventPattern={},this._xEnvTargetsAdded=new Set,jsiiDeprecationWarnings.aws_cdk_lib_aws_events_RuleProps(props),props.eventBus&&props.schedule)throw new Error("Cannot associate rule with 'eventBus' when using 'schedule'");this.description=props.description,this.scheduleExpression=(_b=props.schedule)===null||_b===void 0?void 0:_b.expressionString,(_c=props.schedule)===null||_c===void 0||_c._bind(this);const resource=new events_generated_1.CfnRule(this,"Resource",{name:this.physicalName,description:this.description,state:props.enabled==null||props.enabled?"ENABLED":"DISABLED",scheduleExpression:this.scheduleExpression,eventPattern:core_1.Lazy.any({produce:()=>this._renderEventPattern()}),targets:core_1.Lazy.any({produce:()=>this.renderTargets()}),eventBusName:props.eventBus&&props.eventBus.eventBusName});this.ruleArn=this.getResourceArnAttribute(resource.attrArn,{service:"events",resource:"rule",resourceName:this.physicalName}),this.ruleName=this.getResourceNameAttribute(resource.ref),this.addEventPattern(props.eventPattern);for(const target of props.targets||[])this.addTarget(target);this.node.addValidation({validate:()=>this.validateRule()})}static fromEventRuleArn(scope,id,eventRuleArn){const parts=core_1.Stack.of(scope).splitArn(eventRuleArn,core_1.ArnFormat.SLASH_RESOURCE_NAME);class Import extends core_1.Resource{constructor(){super(...arguments);this.ruleArn=eventRuleArn,this.ruleName=parts.resourceName||""}}return new Import(scope,id)}addTarget(target){var _b,_c,_d;if(jsiiDeprecationWarnings.aws_cdk_lib_aws_events_IRuleTarget(target),!target)return;const autoGeneratedId=`Target${this.targets.length}`,targetProps=target.bind(this,autoGeneratedId),inputProps=targetProps.input&&targetProps.input.bind(this),roleArn=(_b=targetProps.role)===null||_b===void 0?void 0:_b.roleArn,id=targetProps.id||autoGeneratedId;if(targetProps.targetResource){const targetStack=core_1.Stack.of(targetProps.targetResource),targetAccount=((_c=targetProps.targetResource.env)===null||_c===void 0?void 0:_c.account)||targetStack.account,targetRegion=((_d=targetProps.targetResource.env)===null||_d===void 0?void 0:_d.region)||targetStack.region,sourceStack=core_1.Stack.of(this),sourceAccount=sourceStack.account,sourceRegion=sourceStack.region;if(!util_1.sameEnvDimension(sourceAccount,targetAccount)||!util_1.sameEnvDimension(sourceRegion,targetRegion)){if(!targetAccount||core_1.Token.isUnresolved(targetAccount))throw new Error("You need to provide a concrete account for the target stack when using cross-account or cross-region events");if(!targetRegion||core_1.Token.isUnresolved(targetRegion))throw new Error("You need to provide a concrete region for the target stack when using cross-account or cross-region events");if(core_1.Token.isUnresolved(sourceAccount))throw new Error("You need to provide a concrete account for the source stack when using cross-account or cross-region events");const sourceApp=this.node.root;if(!sourceApp||!core_1.App.isApp(sourceApp))throw new Error("Event stack which uses cross-account or cross-region targets must be part of a CDK app");const targetApp=constructs_1.Node.of(targetProps.targetResource).root;if(!targetApp||!core_1.App.isApp(targetApp))throw new Error("Target stack which uses cross-account or cross-region event targets must be part of a CDK app");if(sourceApp!==targetApp)throw new Error("Event stack and target stack must belong to the same CDK app");this.ensureXEnvTargetEventBus(targetStack,targetAccount,targetRegion,id);const mirrorRuleScope=this.obtainMirrorRuleScope(targetStack,targetAccount,targetRegion);new MirrorRule(mirrorRuleScope,`${core_1.Names.uniqueId(this)}-${id}`,{targets:[target],eventPattern:this.eventPattern,schedule:this.scheduleExpression?schedule_1.Schedule.expression(this.scheduleExpression):void 0,description:this.description},this);return}}this.targets.push({id,arn:targetProps.arn,roleArn,ecsParameters:targetProps.ecsParameters,httpParameters:targetProps.httpParameters,kinesisParameters:targetProps.kinesisParameters,runCommandParameters:targetProps.runCommandParameters,batchParameters:targetProps.batchParameters,deadLetterConfig:targetProps.deadLetterConfig,retryPolicy:targetProps.retryPolicy,sqsParameters:targetProps.sqsParameters,input:inputProps&&inputProps.input,inputPath:inputProps&&inputProps.inputPath,inputTransformer:(inputProps==null?void 0:inputProps.inputTemplate)!==void 0?{inputTemplate:inputProps.inputTemplate,inputPathsMap:inputProps.inputPathsMap}:void 0})}addEventPattern(eventPattern){jsiiDeprecationWarnings.aws_cdk_lib_aws_events_EventPattern(eventPattern),eventPattern&&util_1.mergeEventPattern(this.eventPattern,eventPattern)}_renderEventPattern(){return util_1.renderEventPattern(this.eventPattern)}validateRule(){return Object.keys(this.eventPattern).length===0&&!this.scheduleExpression?["Either 'eventPattern' or 'schedule' must be defined"]:[]}renderTargets(){if(this.targets.length!==0)return this.targets}ensureXEnvTargetEventBus(targetStack,targetAccount,targetRegion,id){const key=`${targetAccount}:${targetRegion}`;if(this._xEnvTargetsAdded.has(key))return;this._xEnvTargetsAdded.add(key);const eventBusArn=targetStack.formatArn({service:"events",resource:"event-bus",resourceName:"default",region:targetRegion,account:targetAccount}),roleArn=util_1.sameEnvDimension(targetRegion,core_1.Stack.of(this).region)?void 0:this.crossRegionPutEventsRole(eventBusArn).roleArn;this.targets.push({id,arn:eventBusArn,roleArn});const sourceApp=this.node.root,sourceAccount=core_1.Stack.of(this).account;if(!util_1.sameEnvDimension(sourceAccount,targetAccount)){const stackId=`EventBusPolicy-${sourceAccount}-${targetRegion}-${targetAccount}`;let eventBusPolicyStack=sourceApp.node.tryFindChild(stackId);eventBusPolicyStack||(eventBusPolicyStack=new core_1.Stack(sourceApp,stackId,{env:{account:targetAccount,region:targetRegion},stackName:`${targetStack.stackName}-EventBusPolicy-support-${targetRegion}-${sourceAccount}`}),new events_generated_1.CfnEventBusPolicy(eventBusPolicyStack,"GivePermToOtherAccount",{action:"events:PutEvents",statementId:`Allow-account-${sourceAccount}-${this.node.addr}`,principal:sourceAccount})),core_1.Stack.of(this).addDependency(eventBusPolicyStack)}}obtainMirrorRuleScope(targetStack,targetAccount,targetRegion){if(util_1.sameEnvDimension(targetStack.account,targetAccount)&&util_1.sameEnvDimension(targetStack.region,targetRegion))return targetStack;throw new Error("Cannot create a cross-account or cross-region rule for an imported resource (create a stack with the right environment for the imported resource)")}crossRegionPutEventsRole(eventBusArn){const id="EventsRole";let role=this.node.tryFindChild(id);return role||(role=new aws_iam_1.Role(this,id,{roleName:core_1.PhysicalName.GENERATE_IF_NEEDED,assumedBy:new aws_iam_1.ServicePrincipal("events.amazonaws.com")})),role.addToPrincipalPolicy(new aws_iam_1.PolicyStatement({actions:["events:PutEvents"],resources:[eventBusArn]})),role}}exports.Rule=Rule,_a=JSII_RTTI_SYMBOL_1,Rule[_a]={fqn:"aws-cdk-lib.aws_events.Rule",version:"2.20.0"};class MirrorRule extends Rule{constructor(scope,id,props,source){super(scope,id,props);this.source=source}_renderEventPattern(){return this.source._renderEventPattern()}validateRule(){return[]}}
//# sourceMappingURL=rule.js.map
