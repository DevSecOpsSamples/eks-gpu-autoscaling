{
  "version": 3,
  "sources": ["integ.assets.refs.lit.ts"],
  "sourcesContent": ["import * as path from 'path';\nimport * as iam from '../../aws-iam';\nimport * as cdk from '../../core';\nimport * as assets from '../lib';\n\nclass TestStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    /// !show\n    const asset = new assets.Asset(this, 'SampleAsset', {\n      path: path.join(__dirname, 'sample-asset-directory'),\n    });\n\n    new cdk.CfnOutput(this, 'S3BucketName', { value: asset.s3BucketName });\n    new cdk.CfnOutput(this, 'S3ObjectKey', { value: asset.s3ObjectKey });\n    new cdk.CfnOutput(this, 'S3HttpURL', { value: asset.httpUrl });\n    new cdk.CfnOutput(this, 'S3ObjectURL', { value: asset.s3ObjectUrl });\n    /// !hide\n\n    // we need at least one resource\n    asset.grantRead(new iam.User(this, 'MyUser'));\n  }\n}\n\nconst app = new cdk.App();\nnew TestStack(app, 'aws-cdk-asset-refs');\napp.synth();\n"],
  "mappings": "oEAAA,KAAA,MAAA,QAAA,MAAA,EACA,IAAA,QAAA,eAAA,EACA,IAAA,QAAA,YAAA,EACA,OAAA,QAAA,QAAA,EAEA,MAAM,iBAAkB,KAAI,KAAK,CAC/B,YAAY,MAAgB,GAAY,MAAsB,CAC5D,MAAM,MAAO,GAAI,KAAK,EAGtB,KAAM,OAAQ,GAAI,QAAO,MAAM,KAAM,cAAe,CAClD,KAAM,KAAK,KAAK,UAAW,wBAAwB,EACpD,EAED,GAAI,KAAI,UAAU,KAAM,eAAgB,CAAE,MAAO,MAAM,YAAY,CAAE,EACrE,GAAI,KAAI,UAAU,KAAM,cAAe,CAAE,MAAO,MAAM,WAAW,CAAE,EACnE,GAAI,KAAI,UAAU,KAAM,YAAa,CAAE,MAAO,MAAM,OAAO,CAAE,EAC7D,GAAI,KAAI,UAAU,KAAM,cAAe,CAAE,MAAO,MAAM,WAAW,CAAE,EAInE,MAAM,UAAU,GAAI,KAAI,KAAK,KAAM,QAAQ,CAAC,GAIhD,KAAM,KAAM,GAAI,KAAI,IACpB,GAAI,WAAU,IAAK,oBAAoB,EACvC,IAAI,MAAK",
  "names": []
}
