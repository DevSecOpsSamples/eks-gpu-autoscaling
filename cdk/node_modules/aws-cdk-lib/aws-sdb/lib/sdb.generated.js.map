{
  "version": 3,
  "sources": ["sdb.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-04-07T10:53:59.218Z\",\"fingerprint\":\"inHsfG5P7JTdYaaTGPLkLmcMSNb5yJtuvnZzZASkils=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n/**\n * Properties for defining a `CfnDomain`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-simpledb.html\n */\nexport interface CfnDomainProps {\n\n    /**\n     * Information about the SimpleDB domain.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-simpledb.html#cfn-sdb-domain-description\n     */\n    readonly description?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnDomainProps`\n *\n * @param properties - the TypeScript properties of a `CfnDomainProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnDomainPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    return errors.wrap('supplied properties not correct for \"CfnDomainProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::SDB::Domain` resource\n *\n * @param properties - the TypeScript properties of a `CfnDomainProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::SDB::Domain` resource.\n */\n// @ts-ignore TS6133\nfunction cfnDomainPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnDomainPropsValidator(properties).assertSuccess();\n    return {\n        Description: cdk.stringToCloudFormation(properties.description),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnDomainPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnDomainProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDomainProps>();\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::SDB::Domain`\n *\n * Use the `AWS::SDB::Domain` resource to declare a SimpleDB domain. When you specify `AWS::SDB::Domain` as an argument in a `Ref` function, AWS CloudFormation returns the value of the `DomainName` .\n *\n * > The `AWS::SDB::Domain` resource does not allow any updates, including metadata updates.\n *\n * @cloudformationResource AWS::SDB::Domain\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-simpledb.html\n */\nexport class CfnDomain extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::SDB::Domain\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnDomain {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnDomainPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnDomain(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * Information about the SimpleDB domain.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-simpledb.html#cfn-sdb-domain-description\n     */\n    public description: string | undefined;\n\n    /**\n     * Create a new `AWS::SDB::Domain`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnDomainProps = {}) {\n        super(scope, id, { type: CfnDomain.CFN_RESOURCE_TYPE_NAME, properties: props });\n\n        this.description = props.description;\n        if (this.node.scope && cdk.Resource.isResource(this.node.scope)) {\n            this.node.addValidation({ validate: () => this.cfnOptions.deletionPolicy === undefined\n              ? ['\\'AWS::SDB::Domain\\' is a stateful resource type, and you must specify a Removal Policy for it. Call \\'resource.applyRemovalPolicy()\\'.']\n              : [] });\n        }\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnDomain.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            description: this.description,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnDomainPropsToCloudFormation(props);\n    }\n}\n"],
  "mappings": "gNAQA,IAAA,QAAA,YAAA,EACA,UAAA,QAAA,0BAAA,EA2BA,iCAAiC,WAAe,CAC5C,GAAI,CAAC,IAAI,WAAW,UAAU,EAAK,MAAO,KAAI,mBAC9C,KAAM,QAAS,GAAI,KAAI,kBACvB,MAAI,OAAO,aAAe,UACtB,OAAO,QAAQ,GAAI,KAAI,iBAAiB,qCAAuC,KAAK,UAAU,UAAU,CAAC,CAAC,EAE9G,OAAO,QAAQ,IAAI,kBAAkB,cAAe,IAAI,cAAc,EAAE,WAAW,WAAW,CAAC,EACxF,OAAO,KAAK,sDAAsD,CAC7E,CAUA,wCAAwC,WAAe,CACnD,MAAK,KAAI,WAAW,UAAU,EAC9B,yBAAwB,UAAU,EAAE,cAAa,EAC1C,CACH,YAAa,IAAI,uBAAuB,WAAW,WAAW,IAHxB,UAK9C,CAGA,0CAA0C,WAAe,CAErD,GADA,WAAa,YAAc,KAAO,CAAA,EAAK,WACnC,MAAO,aAAe,SACtB,MAAO,IAAI,WAAU,yBAAyB,UAAU,EAE5D,KAAM,KAAM,GAAI,WAAU,iCAC1B,WAAI,kBAAkB,cAAe,cAAe,WAAW,aAAe,KAAO,UAAU,mBAAmB,UAAU,WAAW,WAAW,EAAI,MAAS,EAC/J,IAAI,iCAAiC,UAAU,EACxC,GACX,CAcA,MAAa,iBAAkB,KAAI,WAAW,CAuC1C,YAAY,MAA6B,GAAY,MAAwB,CAAA,EAAE,CAC3E,MAAM,MAAO,GAAI,CAAE,KAAM,UAAU,uBAAwB,WAAY,KAAK,CAAE,oEAE9E,KAAK,YAAc,MAAM,YACrB,KAAK,KAAK,OAAS,IAAI,SAAS,WAAW,KAAK,KAAK,KAAK,GAC1D,KAAK,KAAK,cAAc,CAAE,SAAU,IAAM,KAAK,WAAW,iBAAmB,OACzE,CAAC,qIAAyI,EAC1I,CAAA,CAAE,CAAE,QAjCF,qBAAoB,MAA6B,GAAY,mBAAyB,QAA4C,CAC5I,mBAAqB,oBAAsB,CAAA,EAC3C,KAAM,oBAAqB,QAAQ,OAAO,WAAW,mBAAmB,UAAU,EAC5E,YAAc,iCAAiC,kBAAkB,EACjE,IAAM,GAAI,WAAU,MAAO,GAAI,YAAY,KAAK,EACtD,SAAW,CAAC,QAAS,UAAY,QAAO,QAAQ,YAAY,eAAe,EACvE,IAAI,oBAAoB,QAAS,OAAO,EAE5C,eAAQ,OAAO,iBAAiB,IAAK,mBAAoB,EAAE,EACpD,IAkCJ,QAAQ,UAA4B,8DACvC,UAAU,aAAa,8BAA+B,UAAU,sBAAsB,EACtF,UAAU,aAAa,+BAAgC,KAAK,aAAa,KAG/D,gBAAa,CACvB,MAAO,CACH,YAAa,KAAK,aAIhB,iBAAiB,MAA2B,CAClD,MAAO,gCAA+B,KAAK,GApEnD,QAAA,UAAA,qGAI2B,UAAA,uBAAyB",
  "names": []
}
