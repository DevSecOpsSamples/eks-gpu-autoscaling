{
  "version": 3,
  "sources": ["function-hash.ts"],
  "sourcesContent": ["import * as crypto from 'crypto';\nimport { CfnResource, FeatureFlags, Stack } from '../../core';\nimport { LAMBDA_RECOGNIZE_VERSION_PROPS } from '../../cx-api';\nimport { Function as LambdaFunction } from './function';\n\nexport function calculateFunctionHash(fn: LambdaFunction) {\n  const stack = Stack.of(fn);\n\n  const functionResource = fn.node.defaultChild as CfnResource;\n\n  // render the cloudformation resource from this function\n  const config = stack.resolve((functionResource as any)._toCloudFormation());\n  // config is of the shape: { Resources: { LogicalId: { Type: 'Function', Properties: { ... } }}}\n  const resources = config.Resources;\n  const resourceKeys = Object.keys(resources);\n  if (resourceKeys.length !== 1) {\n    throw new Error(`Expected one rendered CloudFormation resource but found ${resourceKeys.length}`);\n  }\n  const logicalId = resourceKeys[0];\n  const properties = resources[logicalId].Properties;\n\n  let stringifiedConfig;\n  if (FeatureFlags.of(fn).isEnabled(LAMBDA_RECOGNIZE_VERSION_PROPS)) {\n    const updatedProps = sortProperties(filterUsefulKeys(properties));\n    stringifiedConfig = JSON.stringify(updatedProps);\n  } else {\n    const sorted = sortProperties(properties);\n    config.Resources[logicalId].Properties = sorted;\n    stringifiedConfig = JSON.stringify(config);\n  }\n\n  const hash = crypto.createHash('md5');\n  hash.update(stringifiedConfig);\n  return hash.digest('hex');\n}\n\nexport function trimFromStart(s: string, maxLength: number) {\n  const desiredLength = Math.min(maxLength, s.length);\n  const newStart = s.length - desiredLength;\n  return s.substring(newStart);\n}\n\n/*\n * The list of properties found in CfnFunction (or AWS::Lambda::Function).\n * They are classified as \"locked\" to a Function Version or not.\n * When a property is locked, any change to that property will not take effect on previously created Versions.\n * Instead, a new Version must be generated for the change to take effect.\n * Similarly, if a property that's not locked to a Version is modified, a new Version\n * must not be generated.\n *\n * Adding a new property to this list - If the property is part of the UpdateFunctionConfiguration\n * API or UpdateFunctionCode API, then it must be classified as true, otherwise false.\n * See https://docs.aws.amazon.com/lambda/latest/dg/API_UpdateFunctionConfiguration.html and\n * https://docs.aws.amazon.com/lambda/latest/dg/API_UpdateFunctionConfiguration.html\n */\nexport const VERSION_LOCKED: { [key: string]: boolean } = {\n  // locked to the version\n  Architectures: true,\n  Code: true,\n  DeadLetterConfig: true,\n  Description: true,\n  Environment: true,\n  EphemeralStorage: true,\n  FileSystemConfigs: true,\n  FunctionName: true,\n  Handler: true,\n  ImageConfig: true,\n  KmsKeyArn: true,\n  Layers: true,\n  MemorySize: true,\n  PackageType: true,\n  Role: true,\n  Runtime: true,\n  Timeout: true,\n  TracingConfig: true,\n  VpcConfig: true,\n\n  // not locked to the version\n  CodeSigningConfigArn: false,\n  ReservedConcurrentExecutions: false,\n  Tags: false,\n};\n\nfunction filterUsefulKeys(properties: any) {\n  const versionProps = { ...VERSION_LOCKED, ...LambdaFunction._VER_PROPS };\n  const unclassified = Object.entries(properties)\n    .filter(([k, v]) => v != null && !Object.keys(versionProps).includes(k))\n    .map(([k, _]) => k);\n  if (unclassified.length > 0) {\n    throw new Error(`The following properties are not recognized as version properties: [${unclassified}].`\n      + ' See the README of the aws-lambda module to learn more about this and to fix it.');\n  }\n  const notLocked = Object.entries(versionProps).filter(([_, v]) => !v).map(([k, _]) => k);\n  notLocked.forEach(p => delete properties[p]);\n\n  const ret: { [key: string]: any } = {};\n  Object.entries(properties).filter(([k, _]) => versionProps[k]).forEach(([k, v]) => ret[k] = v);\n  return ret;\n}\n\nfunction sortProperties(properties: any) {\n  const ret: any = {};\n  // We take all required properties in the order that they were historically,\n  // to make sure the hash we calculate is stable.\n  // There cannot be more required properties added in the future,\n  // as that would be a backwards-incompatible change.\n  const requiredProperties = ['Code', 'Handler', 'Role', 'Runtime'];\n  for (const requiredProperty of requiredProperties) {\n    ret[requiredProperty] = properties[requiredProperty];\n  }\n  // then, add all of the non-required properties,\n  // in the original order\n  for (const property of Object.keys(properties)) {\n    if (requiredProperties.indexOf(property) === -1) {\n      ret[property] = properties[property];\n    }\n  }\n  return ret;\n}\n"],
  "mappings": "sJAAA,KAAA,QAAA,QAAA,QAAA,EACA,OAAA,QAAA,YAAA,EACA,SAAA,QAAA,cAAA,EACA,WAAA,QAAA,YAAA,EAEA,+BAAsC,GAAkB,CACtD,KAAM,OAAQ,OAAA,MAAM,GAAG,EAAE,EAEnB,iBAAmB,GAAG,KAAK,aAG3B,OAAS,MAAM,QAAS,iBAAyB,kBAAiB,CAAE,EAEpE,UAAY,OAAO,UACnB,aAAe,OAAO,KAAK,SAAS,EAC1C,GAAI,aAAa,SAAW,EAC1B,KAAM,IAAI,OAAM,2DAA2D,aAAa,QAAQ,EAElG,KAAM,WAAY,aAAa,GACzB,WAAa,UAAU,WAAW,WAExC,GAAI,mBACJ,GAAI,OAAA,aAAa,GAAG,EAAE,EAAE,UAAU,SAAA,8BAA8B,EAAG,CACjE,KAAM,cAAe,eAAe,iBAAiB,UAAU,CAAC,EAChE,kBAAoB,KAAK,UAAU,YAAY,MAC1C,CACL,KAAM,QAAS,eAAe,UAAU,EACxC,OAAO,UAAU,WAAW,WAAa,OACzC,kBAAoB,KAAK,UAAU,MAAM,EAG3C,KAAM,MAAO,OAAO,WAAW,KAAK,EACpC,YAAK,OAAO,iBAAiB,EACtB,KAAK,OAAO,KAAK,CAC1B,CA7BA,QAAA,sBAAA,sBA+BA,uBAA8B,EAAW,UAAiB,CACxD,KAAM,eAAgB,KAAK,IAAI,UAAW,EAAE,MAAM,EAC5C,SAAW,EAAE,OAAS,cAC5B,MAAO,GAAE,UAAU,QAAQ,CAC7B,CAJA,QAAA,cAAA,cAmBa,QAAA,eAA6C,CAExD,cAAe,GACf,KAAM,GACN,iBAAkB,GAClB,YAAa,GACb,YAAa,GACb,iBAAkB,GAClB,kBAAmB,GACnB,aAAc,GACd,QAAS,GACT,YAAa,GACb,UAAW,GACX,OAAQ,GACR,WAAY,GACZ,YAAa,GACb,KAAM,GACN,QAAS,GACT,QAAS,GACT,cAAe,GACf,UAAW,GAGX,qBAAsB,GACtB,6BAA8B,GAC9B,KAAM,IAGR,0BAA0B,WAAe,CACvC,KAAM,cAAe,IAAK,QAAA,kBAAmB,WAAA,SAAe,UAAU,EAChE,aAAe,OAAO,QAAQ,UAAU,EAC3C,OAAO,CAAC,CAAC,EAAG,KAAO,GAAK,MAAQ,CAAC,OAAO,KAAK,YAAY,EAAE,SAAS,CAAC,CAAC,EACtE,IAAI,CAAC,CAAC,EAAG,KAAO,CAAC,EACpB,GAAI,aAAa,OAAS,EACxB,KAAM,IAAI,OAAM,uEAAuE,gGACD,EAGxF,AADkB,OAAO,QAAQ,YAAY,EAAE,OAAO,CAAC,CAAC,EAAG,KAAO,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAG,KAAO,CAAC,EAC7E,QAAQ,GAAK,MAAO,YAAW,EAAE,EAE3C,KAAM,KAA8B,CAAA,EACpC,cAAO,QAAQ,UAAU,EAAE,OAAO,CAAC,CAAC,EAAG,KAAO,aAAa,EAAE,EAAE,QAAQ,CAAC,CAAC,EAAG,KAAO,IAAI,GAAK,CAAC,EACtF,GACT,CAEA,wBAAwB,WAAe,CACrC,KAAM,KAAW,CAAA,EAKX,mBAAqB,CAAC,OAAQ,UAAW,OAAQ,SAAS,EAChE,SAAW,oBAAoB,oBAC7B,IAAI,kBAAoB,WAAW,kBAIrC,SAAW,YAAY,QAAO,KAAK,UAAU,EAC3C,AAAI,mBAAmB,QAAQ,QAAQ,IAAM,IAC3C,KAAI,UAAY,WAAW,WAG/B,MAAO,IACT",
  "names": []
}
