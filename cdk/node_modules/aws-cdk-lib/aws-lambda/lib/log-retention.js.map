{
  "version": 3,
  "sources": ["log-retention.ts"],
  "sourcesContent": ["import * as logs from '../../aws-logs';\nimport { Construct } from 'constructs';\n\n/**\n * Retry options for all AWS API calls.\n */\nexport interface LogRetentionRetryOptions extends logs.LogRetentionRetryOptions {\n}\n\n/**\n * Construction properties for a LogRetention.\n *\n * @deprecated use `LogRetentionProps` from '@aws-cdk/aws-logs' instead\n */\nexport interface LogRetentionProps extends logs.LogRetentionProps {\n}\n\n/**\n * Creates a custom resource to control the retention policy of a CloudWatch Logs\n * log group. The log group is created if it doesn't already exist. The policy\n * is removed when `retentionDays` is `undefined` or equal to `Infinity`.\n *\n * @deprecated use `LogRetention` from '@aws-cdk/aws-logs' instead\n */\nexport class LogRetention extends logs.LogRetention {\n  constructor(scope: Construct, id: string, props: LogRetentionProps) {\n    super(scope, id, { ...props });\n  }\n}\n"],
  "mappings": "wJAAA,KAAA,QAAA,gBAAA,EAwBA,MAAa,oBAAqB,MAAK,YAAY,CACjD,YAAY,MAAkB,GAAY,MAAwB,CAChE,MAAM,MAAO,GAAI,IAAK,KAAK,CAAE,GAFjC,QAAA,aAAA",
  "names": []
}
