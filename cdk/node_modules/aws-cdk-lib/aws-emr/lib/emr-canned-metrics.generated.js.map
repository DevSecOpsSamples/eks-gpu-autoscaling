{
  "version": 3,
  "sources": ["emr-canned-metrics.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nexport class ElasticMapReduceMetrics {\n  public static appsCompletedSum(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'AppsCompleted',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static appsFailedSum(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'AppsFailed',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static appsKilledSum(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'AppsKilled',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static appsPendingSum(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'AppsPending',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static appsRunningSum(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'AppsRunning',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static appsSubmittedSum(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'AppsSubmitted',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static backupFailedAverage(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'BackupFailed',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static capacityRemainingGbSum(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'CapacityRemainingGB',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static containerAllocatedSum(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'ContainerAllocated',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static containerPendingSum(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'ContainerPending',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static containerPendingRatioSum(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'ContainerPendingRatio',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static containerReservedSum(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'ContainerReserved',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static coreNodesPendingAverage(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'CoreNodesPending',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static coreNodesRunningAverage(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'CoreNodesRunning',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static corruptBlocksSum(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'CorruptBlocks',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static dfsPendingReplicationBlocksSum(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'DfsPendingReplicationBlocks',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static hbaseBackupFailedSum(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'HbaseBackupFailed',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static hdfsBytesReadSum(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'HDFSBytesRead',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static hdfsBytesWrittenSum(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'HDFSBytesWritten',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static hdfsUtilizationAverage(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'HDFSUtilization',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static isIdleAverage(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'IsIdle',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static jobsFailedAverage(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'JobsFailed',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static jobsRunningAverage(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'JobsRunning',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static liveDataNodesAverage(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'LiveDataNodes',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static liveTaskTrackersAverage(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'LiveTaskTrackers',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static mapSlotsOpenAverage(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'MapSlotsOpen',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static mapTasksRemainingAverage(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'MapTasksRemaining',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static mapTasksRunningAverage(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'MapTasksRunning',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static memoryAllocatedMbSum(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'MemoryAllocatedMB',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static memoryReservedMbSum(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'MemoryReservedMB',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static memoryTotalMbSum(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'MemoryTotalMB',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static missingBlocksAverage(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'MissingBlocks',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static mostRecentBackupDurationAverage(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'MostRecentBackupDuration',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static mrActiveNodesSum(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'MRActiveNodes',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static mrDecommissionedNodesSum(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'MRDecommissionedNodes',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static mrLostNodesSum(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'MRLostNodes',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static mrRebootedNodesSum(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'MRRebootedNodes',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static mrTotalNodesSum(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'MRTotalNodes',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static mrUnhealthyNodesSum(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'MRUnhealthyNodes',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static multiMasterInstanceGroupNodesRequestedSum(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'MultiMasterInstanceGroupNodesRequested',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static multiMasterInstanceGroupNodesRunningSum(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'MultiMasterInstanceGroupNodesRunning',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static multiMasterInstanceGroupNodesRunningPercentageAverage(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'MultiMasterInstanceGroupNodesRunningPercentage',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static pendingDeletionBlocksSum(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'PendingDeletionBlocks',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static reduceSlotsOpenAverage(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'ReduceSlotsOpen',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static reduceTasksRemainingAverage(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'ReduceTasksRemaining',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static reduceTasksRunningAverage(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'ReduceTasksRunning',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static remainingMapTasksPerSlotAverage(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'RemainingMapTasksPerSlot',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static s3BytesReadSum(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'S3BytesRead',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static s3BytesWrittenSum(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'S3BytesWritten',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static taskNodesPendingAverage(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'TaskNodesPending',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static taskNodesRunningAverage(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'TaskNodesRunning',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static timeSinceLastSuccessfulBackupAverage(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'TimeSinceLastSuccessfulBackup',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static totalLoadAverage(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'TotalLoad',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static underReplicatedBlocksSum(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'UnderReplicatedBlocks',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static yarnMemoryAvailablePercentageAverage(dimensions: { JobFlowId: string }) {\n    return {\n      namespace: 'AWS/ElasticMapReduce',\n      metricName: 'YARNMemoryAvailablePercentage',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
