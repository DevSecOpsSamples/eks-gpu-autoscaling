"use strict";var _a,_b,_c,_d,_e;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnRepository=exports.CfnReplicationConfiguration=exports.CfnRegistryPolicy=exports.CfnPullThroughCacheRule=exports.CfnPublicRepository=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/cfn-parse");function CfnPublicRepositoryPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("repositoryCatalogData",cdk.validateObject)(properties.repositoryCatalogData)),errors.collect(cdk.propertyValidator("repositoryName",cdk.validateString)(properties.repositoryName)),errors.collect(cdk.propertyValidator("repositoryPolicyText",cdk.validateObject)(properties.repositoryPolicyText)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnPublicRepositoryProps"')}function cfnPublicRepositoryPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnPublicRepositoryPropsValidator(properties).assertSuccess(),{RepositoryCatalogData:cdk.objectToCloudFormation(properties.repositoryCatalogData),RepositoryName:cdk.stringToCloudFormation(properties.repositoryName),RepositoryPolicyText:cdk.objectToCloudFormation(properties.repositoryPolicyText),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnPublicRepositoryPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("repositoryCatalogData","RepositoryCatalogData",properties.RepositoryCatalogData!=null?cfn_parse.FromCloudFormation.getAny(properties.RepositoryCatalogData):void 0),ret.addPropertyResult("repositoryName","RepositoryName",properties.RepositoryName!=null?cfn_parse.FromCloudFormation.getString(properties.RepositoryName):void 0),ret.addPropertyResult("repositoryPolicyText","RepositoryPolicyText",properties.RepositoryPolicyText!=null?cfn_parse.FromCloudFormation.getAny(properties.RepositoryPolicyText):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnPublicRepository extends cdk.CfnResource{constructor(scope,id,props={}){super(scope,id,{type:CfnPublicRepository.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_ecr_CfnPublicRepositoryProps(props),this.attrArn=cdk.Token.asString(this.getAtt("Arn")),this.repositoryCatalogData=props.repositoryCatalogData,this.repositoryName=props.repositoryName,this.repositoryPolicyText=props.repositoryPolicyText,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::ECR::PublicRepository",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnPublicRepositoryPropsFromCloudFormation(resourceProperties),ret=new CfnPublicRepository(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnPublicRepository.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{repositoryCatalogData:this.repositoryCatalogData,repositoryName:this.repositoryName,repositoryPolicyText:this.repositoryPolicyText,tags:this.tags.renderTags()}}renderProperties(props){return cfnPublicRepositoryPropsToCloudFormation(props)}}exports.CfnPublicRepository=CfnPublicRepository,_a=JSII_RTTI_SYMBOL_1,CfnPublicRepository[_a]={fqn:"aws-cdk-lib.aws_ecr.CfnPublicRepository",version:"2.20.0"},CfnPublicRepository.CFN_RESOURCE_TYPE_NAME="AWS::ECR::PublicRepository";function CfnPullThroughCacheRulePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("ecrRepositoryPrefix",cdk.validateString)(properties.ecrRepositoryPrefix)),errors.collect(cdk.propertyValidator("upstreamRegistryUrl",cdk.validateString)(properties.upstreamRegistryUrl)),errors.wrap('supplied properties not correct for "CfnPullThroughCacheRuleProps"')}function cfnPullThroughCacheRulePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnPullThroughCacheRulePropsValidator(properties).assertSuccess(),{EcrRepositoryPrefix:cdk.stringToCloudFormation(properties.ecrRepositoryPrefix),UpstreamRegistryUrl:cdk.stringToCloudFormation(properties.upstreamRegistryUrl)}):properties}function CfnPullThroughCacheRulePropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("ecrRepositoryPrefix","EcrRepositoryPrefix",properties.EcrRepositoryPrefix!=null?cfn_parse.FromCloudFormation.getString(properties.EcrRepositoryPrefix):void 0),ret.addPropertyResult("upstreamRegistryUrl","UpstreamRegistryUrl",properties.UpstreamRegistryUrl!=null?cfn_parse.FromCloudFormation.getString(properties.UpstreamRegistryUrl):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnPullThroughCacheRule extends cdk.CfnResource{constructor(scope,id,props={}){super(scope,id,{type:CfnPullThroughCacheRule.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_ecr_CfnPullThroughCacheRuleProps(props),this.ecrRepositoryPrefix=props.ecrRepositoryPrefix,this.upstreamRegistryUrl=props.upstreamRegistryUrl}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnPullThroughCacheRulePropsFromCloudFormation(resourceProperties),ret=new CfnPullThroughCacheRule(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnPullThroughCacheRule.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{ecrRepositoryPrefix:this.ecrRepositoryPrefix,upstreamRegistryUrl:this.upstreamRegistryUrl}}renderProperties(props){return cfnPullThroughCacheRulePropsToCloudFormation(props)}}exports.CfnPullThroughCacheRule=CfnPullThroughCacheRule,_b=JSII_RTTI_SYMBOL_1,CfnPullThroughCacheRule[_b]={fqn:"aws-cdk-lib.aws_ecr.CfnPullThroughCacheRule",version:"2.20.0"},CfnPullThroughCacheRule.CFN_RESOURCE_TYPE_NAME="AWS::ECR::PullThroughCacheRule";function CfnRegistryPolicyPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("policyText",cdk.requiredValidator)(properties.policyText)),errors.collect(cdk.propertyValidator("policyText",cdk.validateObject)(properties.policyText)),errors.wrap('supplied properties not correct for "CfnRegistryPolicyProps"')}function cfnRegistryPolicyPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRegistryPolicyPropsValidator(properties).assertSuccess(),{PolicyText:cdk.objectToCloudFormation(properties.policyText)}):properties}function CfnRegistryPolicyPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("policyText","PolicyText",cfn_parse.FromCloudFormation.getAny(properties.PolicyText)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnRegistryPolicy extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnRegistryPolicy.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_ecr_CfnRegistryPolicyProps(props),cdk.requireProperty(props,"policyText",this),this.attrRegistryId=cdk.Token.asString(this.getAtt("RegistryId")),this.policyText=props.policyText}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnRegistryPolicyPropsFromCloudFormation(resourceProperties),ret=new CfnRegistryPolicy(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnRegistryPolicy.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{policyText:this.policyText}}renderProperties(props){return cfnRegistryPolicyPropsToCloudFormation(props)}}exports.CfnRegistryPolicy=CfnRegistryPolicy,_c=JSII_RTTI_SYMBOL_1,CfnRegistryPolicy[_c]={fqn:"aws-cdk-lib.aws_ecr.CfnRegistryPolicy",version:"2.20.0"},CfnRegistryPolicy.CFN_RESOURCE_TYPE_NAME="AWS::ECR::RegistryPolicy";function CfnReplicationConfigurationPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("replicationConfiguration",cdk.requiredValidator)(properties.replicationConfiguration)),errors.collect(cdk.propertyValidator("replicationConfiguration",CfnReplicationConfiguration_ReplicationConfigurationPropertyValidator)(properties.replicationConfiguration)),errors.wrap('supplied properties not correct for "CfnReplicationConfigurationProps"')}function cfnReplicationConfigurationPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnReplicationConfigurationPropsValidator(properties).assertSuccess(),{ReplicationConfiguration:cfnReplicationConfigurationReplicationConfigurationPropertyToCloudFormation(properties.replicationConfiguration)}):properties}function CfnReplicationConfigurationPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("replicationConfiguration","ReplicationConfiguration",CfnReplicationConfigurationReplicationConfigurationPropertyFromCloudFormation(properties.ReplicationConfiguration)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnReplicationConfiguration extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnReplicationConfiguration.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_ecr_CfnReplicationConfigurationProps(props),cdk.requireProperty(props,"replicationConfiguration",this),this.attrRegistryId=cdk.Token.asString(this.getAtt("RegistryId")),this.replicationConfiguration=props.replicationConfiguration}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnReplicationConfigurationPropsFromCloudFormation(resourceProperties),ret=new CfnReplicationConfiguration(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnReplicationConfiguration.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{replicationConfiguration:this.replicationConfiguration}}renderProperties(props){return cfnReplicationConfigurationPropsToCloudFormation(props)}}exports.CfnReplicationConfiguration=CfnReplicationConfiguration,_d=JSII_RTTI_SYMBOL_1,CfnReplicationConfiguration[_d]={fqn:"aws-cdk-lib.aws_ecr.CfnReplicationConfiguration",version:"2.20.0"},CfnReplicationConfiguration.CFN_RESOURCE_TYPE_NAME="AWS::ECR::ReplicationConfiguration";function CfnReplicationConfiguration_ReplicationConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("rules",cdk.requiredValidator)(properties.rules)),errors.collect(cdk.propertyValidator("rules",cdk.listValidator(CfnReplicationConfiguration_ReplicationRulePropertyValidator))(properties.rules)),errors.wrap('supplied properties not correct for "ReplicationConfigurationProperty"')}function cfnReplicationConfigurationReplicationConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnReplicationConfiguration_ReplicationConfigurationPropertyValidator(properties).assertSuccess(),{Rules:cdk.listMapper(cfnReplicationConfigurationReplicationRulePropertyToCloudFormation)(properties.rules)}):properties}function CfnReplicationConfigurationReplicationConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("rules","Rules",cfn_parse.FromCloudFormation.getArray(CfnReplicationConfigurationReplicationRulePropertyFromCloudFormation)(properties.Rules)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnReplicationConfiguration_ReplicationDestinationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("region",cdk.requiredValidator)(properties.region)),errors.collect(cdk.propertyValidator("region",cdk.validateString)(properties.region)),errors.collect(cdk.propertyValidator("registryId",cdk.requiredValidator)(properties.registryId)),errors.collect(cdk.propertyValidator("registryId",cdk.validateString)(properties.registryId)),errors.wrap('supplied properties not correct for "ReplicationDestinationProperty"')}function cfnReplicationConfigurationReplicationDestinationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnReplicationConfiguration_ReplicationDestinationPropertyValidator(properties).assertSuccess(),{Region:cdk.stringToCloudFormation(properties.region),RegistryId:cdk.stringToCloudFormation(properties.registryId)}):properties}function CfnReplicationConfigurationReplicationDestinationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("region","Region",cfn_parse.FromCloudFormation.getString(properties.Region)),ret.addPropertyResult("registryId","RegistryId",cfn_parse.FromCloudFormation.getString(properties.RegistryId)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnReplicationConfiguration_ReplicationRulePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("destinations",cdk.requiredValidator)(properties.destinations)),errors.collect(cdk.propertyValidator("destinations",cdk.listValidator(CfnReplicationConfiguration_ReplicationDestinationPropertyValidator))(properties.destinations)),errors.collect(cdk.propertyValidator("repositoryFilters",cdk.listValidator(CfnReplicationConfiguration_RepositoryFilterPropertyValidator))(properties.repositoryFilters)),errors.wrap('supplied properties not correct for "ReplicationRuleProperty"')}function cfnReplicationConfigurationReplicationRulePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnReplicationConfiguration_ReplicationRulePropertyValidator(properties).assertSuccess(),{Destinations:cdk.listMapper(cfnReplicationConfigurationReplicationDestinationPropertyToCloudFormation)(properties.destinations),RepositoryFilters:cdk.listMapper(cfnReplicationConfigurationRepositoryFilterPropertyToCloudFormation)(properties.repositoryFilters)}):properties}function CfnReplicationConfigurationReplicationRulePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("destinations","Destinations",cfn_parse.FromCloudFormation.getArray(CfnReplicationConfigurationReplicationDestinationPropertyFromCloudFormation)(properties.Destinations)),ret.addPropertyResult("repositoryFilters","RepositoryFilters",properties.RepositoryFilters!=null?cfn_parse.FromCloudFormation.getArray(CfnReplicationConfigurationRepositoryFilterPropertyFromCloudFormation)(properties.RepositoryFilters):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnReplicationConfiguration_RepositoryFilterPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("filter",cdk.requiredValidator)(properties.filter)),errors.collect(cdk.propertyValidator("filter",cdk.validateString)(properties.filter)),errors.collect(cdk.propertyValidator("filterType",cdk.requiredValidator)(properties.filterType)),errors.collect(cdk.propertyValidator("filterType",cdk.validateString)(properties.filterType)),errors.wrap('supplied properties not correct for "RepositoryFilterProperty"')}function cfnReplicationConfigurationRepositoryFilterPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnReplicationConfiguration_RepositoryFilterPropertyValidator(properties).assertSuccess(),{Filter:cdk.stringToCloudFormation(properties.filter),FilterType:cdk.stringToCloudFormation(properties.filterType)}):properties}function CfnReplicationConfigurationRepositoryFilterPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("filter","Filter",cfn_parse.FromCloudFormation.getString(properties.Filter)),ret.addPropertyResult("filterType","FilterType",cfn_parse.FromCloudFormation.getString(properties.FilterType)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnRepositoryPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("encryptionConfiguration",CfnRepository_EncryptionConfigurationPropertyValidator)(properties.encryptionConfiguration)),errors.collect(cdk.propertyValidator("imageScanningConfiguration",CfnRepository_ImageScanningConfigurationPropertyValidator)(properties.imageScanningConfiguration)),errors.collect(cdk.propertyValidator("imageTagMutability",cdk.validateString)(properties.imageTagMutability)),errors.collect(cdk.propertyValidator("lifecyclePolicy",CfnRepository_LifecyclePolicyPropertyValidator)(properties.lifecyclePolicy)),errors.collect(cdk.propertyValidator("repositoryName",cdk.validateString)(properties.repositoryName)),errors.collect(cdk.propertyValidator("repositoryPolicyText",cdk.validateObject)(properties.repositoryPolicyText)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnRepositoryProps"')}function cfnRepositoryPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRepositoryPropsValidator(properties).assertSuccess(),{EncryptionConfiguration:cfnRepositoryEncryptionConfigurationPropertyToCloudFormation(properties.encryptionConfiguration),ImageScanningConfiguration:cfnRepositoryImageScanningConfigurationPropertyToCloudFormation(properties.imageScanningConfiguration),ImageTagMutability:cdk.stringToCloudFormation(properties.imageTagMutability),LifecyclePolicy:cfnRepositoryLifecyclePolicyPropertyToCloudFormation(properties.lifecyclePolicy),RepositoryName:cdk.stringToCloudFormation(properties.repositoryName),RepositoryPolicyText:cdk.objectToCloudFormation(properties.repositoryPolicyText),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnRepositoryPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("encryptionConfiguration","EncryptionConfiguration",properties.EncryptionConfiguration!=null?CfnRepositoryEncryptionConfigurationPropertyFromCloudFormation(properties.EncryptionConfiguration):void 0),ret.addPropertyResult("imageScanningConfiguration","ImageScanningConfiguration",properties.ImageScanningConfiguration!=null?CfnRepositoryImageScanningConfigurationPropertyFromCloudFormation(properties.ImageScanningConfiguration):void 0),ret.addPropertyResult("imageTagMutability","ImageTagMutability",properties.ImageTagMutability!=null?cfn_parse.FromCloudFormation.getString(properties.ImageTagMutability):void 0),ret.addPropertyResult("lifecyclePolicy","LifecyclePolicy",properties.LifecyclePolicy!=null?CfnRepositoryLifecyclePolicyPropertyFromCloudFormation(properties.LifecyclePolicy):void 0),ret.addPropertyResult("repositoryName","RepositoryName",properties.RepositoryName!=null?cfn_parse.FromCloudFormation.getString(properties.RepositoryName):void 0),ret.addPropertyResult("repositoryPolicyText","RepositoryPolicyText",properties.RepositoryPolicyText!=null?cfn_parse.FromCloudFormation.getAny(properties.RepositoryPolicyText):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnRepository extends cdk.CfnResource{constructor(scope,id,props={}){super(scope,id,{type:CfnRepository.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_ecr_CfnRepositoryProps(props),this.attrArn=cdk.Token.asString(this.getAtt("Arn")),this.attrRepositoryUri=cdk.Token.asString(this.getAtt("RepositoryUri")),this.encryptionConfiguration=props.encryptionConfiguration,this.imageScanningConfiguration=props.imageScanningConfiguration,this.imageTagMutability=props.imageTagMutability,this.lifecyclePolicy=props.lifecyclePolicy,this.repositoryName=props.repositoryName,this.repositoryPolicyText=props.repositoryPolicyText,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::ECR::Repository",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnRepositoryPropsFromCloudFormation(resourceProperties),ret=new CfnRepository(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnRepository.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{encryptionConfiguration:this.encryptionConfiguration,imageScanningConfiguration:this.imageScanningConfiguration,imageTagMutability:this.imageTagMutability,lifecyclePolicy:this.lifecyclePolicy,repositoryName:this.repositoryName,repositoryPolicyText:this.repositoryPolicyText,tags:this.tags.renderTags()}}renderProperties(props){return cfnRepositoryPropsToCloudFormation(props)}}exports.CfnRepository=CfnRepository,_e=JSII_RTTI_SYMBOL_1,CfnRepository[_e]={fqn:"aws-cdk-lib.aws_ecr.CfnRepository",version:"2.20.0"},CfnRepository.CFN_RESOURCE_TYPE_NAME="AWS::ECR::Repository";function CfnRepository_EncryptionConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("encryptionType",cdk.requiredValidator)(properties.encryptionType)),errors.collect(cdk.propertyValidator("encryptionType",cdk.validateString)(properties.encryptionType)),errors.collect(cdk.propertyValidator("kmsKey",cdk.validateString)(properties.kmsKey)),errors.wrap('supplied properties not correct for "EncryptionConfigurationProperty"')}function cfnRepositoryEncryptionConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRepository_EncryptionConfigurationPropertyValidator(properties).assertSuccess(),{EncryptionType:cdk.stringToCloudFormation(properties.encryptionType),KmsKey:cdk.stringToCloudFormation(properties.kmsKey)}):properties}function CfnRepositoryEncryptionConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("encryptionType","EncryptionType",cfn_parse.FromCloudFormation.getString(properties.EncryptionType)),ret.addPropertyResult("kmsKey","KmsKey",properties.KmsKey!=null?cfn_parse.FromCloudFormation.getString(properties.KmsKey):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnRepository_ImageScanningConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("scanOnPush",cdk.validateBoolean)(properties.scanOnPush)),errors.wrap('supplied properties not correct for "ImageScanningConfigurationProperty"')}function cfnRepositoryImageScanningConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRepository_ImageScanningConfigurationPropertyValidator(properties).assertSuccess(),{ScanOnPush:cdk.booleanToCloudFormation(properties.scanOnPush)}):properties}function CfnRepositoryImageScanningConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("scanOnPush","ScanOnPush",properties.ScanOnPush!=null?cfn_parse.FromCloudFormation.getBoolean(properties.ScanOnPush):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnRepository_LifecyclePolicyPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("lifecyclePolicyText",cdk.validateString)(properties.lifecyclePolicyText)),errors.collect(cdk.propertyValidator("registryId",cdk.validateString)(properties.registryId)),errors.wrap('supplied properties not correct for "LifecyclePolicyProperty"')}function cfnRepositoryLifecyclePolicyPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRepository_LifecyclePolicyPropertyValidator(properties).assertSuccess(),{LifecyclePolicyText:cdk.stringToCloudFormation(properties.lifecyclePolicyText),RegistryId:cdk.stringToCloudFormation(properties.registryId)}):properties}function CfnRepositoryLifecyclePolicyPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("lifecyclePolicyText","LifecyclePolicyText",properties.LifecyclePolicyText!=null?cfn_parse.FromCloudFormation.getString(properties.LifecyclePolicyText):void 0),ret.addPropertyResult("registryId","RegistryId",properties.RegistryId!=null?cfn_parse.FromCloudFormation.getString(properties.RegistryId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
//# sourceMappingURL=ecr.generated.js.map
