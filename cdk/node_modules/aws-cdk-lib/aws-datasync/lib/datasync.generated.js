"use strict";var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnTask=exports.CfnLocationSMB=exports.CfnLocationS3=exports.CfnLocationObjectStorage=exports.CfnLocationNFS=exports.CfnLocationHDFS=exports.CfnLocationFSxWindows=exports.CfnLocationFSxLustre=exports.CfnLocationEFS=exports.CfnAgent=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/cfn-parse");function CfnAgentPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("activationKey",cdk.requiredValidator)(properties.activationKey)),errors.collect(cdk.propertyValidator("activationKey",cdk.validateString)(properties.activationKey)),errors.collect(cdk.propertyValidator("agentName",cdk.validateString)(properties.agentName)),errors.collect(cdk.propertyValidator("securityGroupArns",cdk.listValidator(cdk.validateString))(properties.securityGroupArns)),errors.collect(cdk.propertyValidator("subnetArns",cdk.listValidator(cdk.validateString))(properties.subnetArns)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("vpcEndpointId",cdk.validateString)(properties.vpcEndpointId)),errors.wrap('supplied properties not correct for "CfnAgentProps"')}function cfnAgentPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnAgentPropsValidator(properties).assertSuccess(),{ActivationKey:cdk.stringToCloudFormation(properties.activationKey),AgentName:cdk.stringToCloudFormation(properties.agentName),SecurityGroupArns:cdk.listMapper(cdk.stringToCloudFormation)(properties.securityGroupArns),SubnetArns:cdk.listMapper(cdk.stringToCloudFormation)(properties.subnetArns),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),VpcEndpointId:cdk.stringToCloudFormation(properties.vpcEndpointId)}):properties}function CfnAgentPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("activationKey","ActivationKey",cfn_parse.FromCloudFormation.getString(properties.ActivationKey)),ret.addPropertyResult("agentName","AgentName",properties.AgentName!=null?cfn_parse.FromCloudFormation.getString(properties.AgentName):void 0),ret.addPropertyResult("securityGroupArns","SecurityGroupArns",properties.SecurityGroupArns!=null?cfn_parse.FromCloudFormation.getStringArray(properties.SecurityGroupArns):void 0),ret.addPropertyResult("subnetArns","SubnetArns",properties.SubnetArns!=null?cfn_parse.FromCloudFormation.getStringArray(properties.SubnetArns):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("vpcEndpointId","VpcEndpointId",properties.VpcEndpointId!=null?cfn_parse.FromCloudFormation.getString(properties.VpcEndpointId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnAgent extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnAgent.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_datasync_CfnAgentProps(props),cdk.requireProperty(props,"activationKey",this),this.attrAgentArn=cdk.Token.asString(this.getAtt("AgentArn")),this.attrEndpointType=cdk.Token.asString(this.getAtt("EndpointType")),this.activationKey=props.activationKey,this.agentName=props.agentName,this.securityGroupArns=props.securityGroupArns,this.subnetArns=props.subnetArns,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::DataSync::Agent",props.tags,{tagPropertyName:"tags"}),this.vpcEndpointId=props.vpcEndpointId}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnAgentPropsFromCloudFormation(resourceProperties),ret=new CfnAgent(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnAgent.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{activationKey:this.activationKey,agentName:this.agentName,securityGroupArns:this.securityGroupArns,subnetArns:this.subnetArns,tags:this.tags.renderTags(),vpcEndpointId:this.vpcEndpointId}}renderProperties(props){return cfnAgentPropsToCloudFormation(props)}}exports.CfnAgent=CfnAgent,_a=JSII_RTTI_SYMBOL_1,CfnAgent[_a]={fqn:"aws-cdk-lib.aws_datasync.CfnAgent",version:"2.20.0"},CfnAgent.CFN_RESOURCE_TYPE_NAME="AWS::DataSync::Agent";function CfnLocationEFSPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("ec2Config",cdk.requiredValidator)(properties.ec2Config)),errors.collect(cdk.propertyValidator("ec2Config",CfnLocationEFS_Ec2ConfigPropertyValidator)(properties.ec2Config)),errors.collect(cdk.propertyValidator("efsFilesystemArn",cdk.requiredValidator)(properties.efsFilesystemArn)),errors.collect(cdk.propertyValidator("efsFilesystemArn",cdk.validateString)(properties.efsFilesystemArn)),errors.collect(cdk.propertyValidator("subdirectory",cdk.validateString)(properties.subdirectory)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnLocationEFSProps"')}function cfnLocationEFSPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnLocationEFSPropsValidator(properties).assertSuccess(),{Ec2Config:cfnLocationEFSEc2ConfigPropertyToCloudFormation(properties.ec2Config),EfsFilesystemArn:cdk.stringToCloudFormation(properties.efsFilesystemArn),Subdirectory:cdk.stringToCloudFormation(properties.subdirectory),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnLocationEFSPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("ec2Config","Ec2Config",CfnLocationEFSEc2ConfigPropertyFromCloudFormation(properties.Ec2Config)),ret.addPropertyResult("efsFilesystemArn","EfsFilesystemArn",cfn_parse.FromCloudFormation.getString(properties.EfsFilesystemArn)),ret.addPropertyResult("subdirectory","Subdirectory",properties.Subdirectory!=null?cfn_parse.FromCloudFormation.getString(properties.Subdirectory):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnLocationEFS extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnLocationEFS.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_datasync_CfnLocationEFSProps(props),cdk.requireProperty(props,"ec2Config",this),cdk.requireProperty(props,"efsFilesystemArn",this),this.attrLocationArn=cdk.Token.asString(this.getAtt("LocationArn")),this.attrLocationUri=cdk.Token.asString(this.getAtt("LocationUri")),this.ec2Config=props.ec2Config,this.efsFilesystemArn=props.efsFilesystemArn,this.subdirectory=props.subdirectory,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::DataSync::LocationEFS",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnLocationEFSPropsFromCloudFormation(resourceProperties),ret=new CfnLocationEFS(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnLocationEFS.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{ec2Config:this.ec2Config,efsFilesystemArn:this.efsFilesystemArn,subdirectory:this.subdirectory,tags:this.tags.renderTags()}}renderProperties(props){return cfnLocationEFSPropsToCloudFormation(props)}}exports.CfnLocationEFS=CfnLocationEFS,_b=JSII_RTTI_SYMBOL_1,CfnLocationEFS[_b]={fqn:"aws-cdk-lib.aws_datasync.CfnLocationEFS",version:"2.20.0"},CfnLocationEFS.CFN_RESOURCE_TYPE_NAME="AWS::DataSync::LocationEFS";function CfnLocationEFS_Ec2ConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("securityGroupArns",cdk.requiredValidator)(properties.securityGroupArns)),errors.collect(cdk.propertyValidator("securityGroupArns",cdk.listValidator(cdk.validateString))(properties.securityGroupArns)),errors.collect(cdk.propertyValidator("subnetArn",cdk.requiredValidator)(properties.subnetArn)),errors.collect(cdk.propertyValidator("subnetArn",cdk.validateString)(properties.subnetArn)),errors.wrap('supplied properties not correct for "Ec2ConfigProperty"')}function cfnLocationEFSEc2ConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnLocationEFS_Ec2ConfigPropertyValidator(properties).assertSuccess(),{SecurityGroupArns:cdk.listMapper(cdk.stringToCloudFormation)(properties.securityGroupArns),SubnetArn:cdk.stringToCloudFormation(properties.subnetArn)}):properties}function CfnLocationEFSEc2ConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("securityGroupArns","SecurityGroupArns",cfn_parse.FromCloudFormation.getStringArray(properties.SecurityGroupArns)),ret.addPropertyResult("subnetArn","SubnetArn",cfn_parse.FromCloudFormation.getString(properties.SubnetArn)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnLocationFSxLustrePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("fsxFilesystemArn",cdk.requiredValidator)(properties.fsxFilesystemArn)),errors.collect(cdk.propertyValidator("fsxFilesystemArn",cdk.validateString)(properties.fsxFilesystemArn)),errors.collect(cdk.propertyValidator("securityGroupArns",cdk.requiredValidator)(properties.securityGroupArns)),errors.collect(cdk.propertyValidator("securityGroupArns",cdk.listValidator(cdk.validateString))(properties.securityGroupArns)),errors.collect(cdk.propertyValidator("subdirectory",cdk.validateString)(properties.subdirectory)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnLocationFSxLustreProps"')}function cfnLocationFSxLustrePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnLocationFSxLustrePropsValidator(properties).assertSuccess(),{FsxFilesystemArn:cdk.stringToCloudFormation(properties.fsxFilesystemArn),SecurityGroupArns:cdk.listMapper(cdk.stringToCloudFormation)(properties.securityGroupArns),Subdirectory:cdk.stringToCloudFormation(properties.subdirectory),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnLocationFSxLustrePropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("fsxFilesystemArn","FsxFilesystemArn",cfn_parse.FromCloudFormation.getString(properties.FsxFilesystemArn)),ret.addPropertyResult("securityGroupArns","SecurityGroupArns",cfn_parse.FromCloudFormation.getStringArray(properties.SecurityGroupArns)),ret.addPropertyResult("subdirectory","Subdirectory",properties.Subdirectory!=null?cfn_parse.FromCloudFormation.getString(properties.Subdirectory):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnLocationFSxLustre extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnLocationFSxLustre.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_datasync_CfnLocationFSxLustreProps(props),cdk.requireProperty(props,"fsxFilesystemArn",this),cdk.requireProperty(props,"securityGroupArns",this),this.attrLocationArn=cdk.Token.asString(this.getAtt("LocationArn")),this.attrLocationUri=cdk.Token.asString(this.getAtt("LocationUri")),this.fsxFilesystemArn=props.fsxFilesystemArn,this.securityGroupArns=props.securityGroupArns,this.subdirectory=props.subdirectory,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::DataSync::LocationFSxLustre",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnLocationFSxLustrePropsFromCloudFormation(resourceProperties),ret=new CfnLocationFSxLustre(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnLocationFSxLustre.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{fsxFilesystemArn:this.fsxFilesystemArn,securityGroupArns:this.securityGroupArns,subdirectory:this.subdirectory,tags:this.tags.renderTags()}}renderProperties(props){return cfnLocationFSxLustrePropsToCloudFormation(props)}}exports.CfnLocationFSxLustre=CfnLocationFSxLustre,_c=JSII_RTTI_SYMBOL_1,CfnLocationFSxLustre[_c]={fqn:"aws-cdk-lib.aws_datasync.CfnLocationFSxLustre",version:"2.20.0"},CfnLocationFSxLustre.CFN_RESOURCE_TYPE_NAME="AWS::DataSync::LocationFSxLustre";function CfnLocationFSxWindowsPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("domain",cdk.validateString)(properties.domain)),errors.collect(cdk.propertyValidator("fsxFilesystemArn",cdk.requiredValidator)(properties.fsxFilesystemArn)),errors.collect(cdk.propertyValidator("fsxFilesystemArn",cdk.validateString)(properties.fsxFilesystemArn)),errors.collect(cdk.propertyValidator("password",cdk.requiredValidator)(properties.password)),errors.collect(cdk.propertyValidator("password",cdk.validateString)(properties.password)),errors.collect(cdk.propertyValidator("securityGroupArns",cdk.requiredValidator)(properties.securityGroupArns)),errors.collect(cdk.propertyValidator("securityGroupArns",cdk.listValidator(cdk.validateString))(properties.securityGroupArns)),errors.collect(cdk.propertyValidator("subdirectory",cdk.validateString)(properties.subdirectory)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("user",cdk.requiredValidator)(properties.user)),errors.collect(cdk.propertyValidator("user",cdk.validateString)(properties.user)),errors.wrap('supplied properties not correct for "CfnLocationFSxWindowsProps"')}function cfnLocationFSxWindowsPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnLocationFSxWindowsPropsValidator(properties).assertSuccess(),{FsxFilesystemArn:cdk.stringToCloudFormation(properties.fsxFilesystemArn),Password:cdk.stringToCloudFormation(properties.password),SecurityGroupArns:cdk.listMapper(cdk.stringToCloudFormation)(properties.securityGroupArns),User:cdk.stringToCloudFormation(properties.user),Domain:cdk.stringToCloudFormation(properties.domain),Subdirectory:cdk.stringToCloudFormation(properties.subdirectory),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnLocationFSxWindowsPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("fsxFilesystemArn","FsxFilesystemArn",cfn_parse.FromCloudFormation.getString(properties.FsxFilesystemArn)),ret.addPropertyResult("password","Password",cfn_parse.FromCloudFormation.getString(properties.Password)),ret.addPropertyResult("securityGroupArns","SecurityGroupArns",cfn_parse.FromCloudFormation.getStringArray(properties.SecurityGroupArns)),ret.addPropertyResult("user","User",cfn_parse.FromCloudFormation.getString(properties.User)),ret.addPropertyResult("domain","Domain",properties.Domain!=null?cfn_parse.FromCloudFormation.getString(properties.Domain):void 0),ret.addPropertyResult("subdirectory","Subdirectory",properties.Subdirectory!=null?cfn_parse.FromCloudFormation.getString(properties.Subdirectory):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnLocationFSxWindows extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnLocationFSxWindows.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_datasync_CfnLocationFSxWindowsProps(props),cdk.requireProperty(props,"fsxFilesystemArn",this),cdk.requireProperty(props,"password",this),cdk.requireProperty(props,"securityGroupArns",this),cdk.requireProperty(props,"user",this),this.attrLocationArn=cdk.Token.asString(this.getAtt("LocationArn")),this.attrLocationUri=cdk.Token.asString(this.getAtt("LocationUri")),this.fsxFilesystemArn=props.fsxFilesystemArn,this.password=props.password,this.securityGroupArns=props.securityGroupArns,this.user=props.user,this.domain=props.domain,this.subdirectory=props.subdirectory,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::DataSync::LocationFSxWindows",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnLocationFSxWindowsPropsFromCloudFormation(resourceProperties),ret=new CfnLocationFSxWindows(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnLocationFSxWindows.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{fsxFilesystemArn:this.fsxFilesystemArn,password:this.password,securityGroupArns:this.securityGroupArns,user:this.user,domain:this.domain,subdirectory:this.subdirectory,tags:this.tags.renderTags()}}renderProperties(props){return cfnLocationFSxWindowsPropsToCloudFormation(props)}}exports.CfnLocationFSxWindows=CfnLocationFSxWindows,_d=JSII_RTTI_SYMBOL_1,CfnLocationFSxWindows[_d]={fqn:"aws-cdk-lib.aws_datasync.CfnLocationFSxWindows",version:"2.20.0"},CfnLocationFSxWindows.CFN_RESOURCE_TYPE_NAME="AWS::DataSync::LocationFSxWindows";function CfnLocationHDFSPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("agentArns",cdk.requiredValidator)(properties.agentArns)),errors.collect(cdk.propertyValidator("agentArns",cdk.listValidator(cdk.validateString))(properties.agentArns)),errors.collect(cdk.propertyValidator("authenticationType",cdk.requiredValidator)(properties.authenticationType)),errors.collect(cdk.propertyValidator("authenticationType",cdk.validateString)(properties.authenticationType)),errors.collect(cdk.propertyValidator("blockSize",cdk.validateNumber)(properties.blockSize)),errors.collect(cdk.propertyValidator("kerberosKeytab",cdk.validateString)(properties.kerberosKeytab)),errors.collect(cdk.propertyValidator("kerberosKrb5Conf",cdk.validateString)(properties.kerberosKrb5Conf)),errors.collect(cdk.propertyValidator("kerberosPrincipal",cdk.validateString)(properties.kerberosPrincipal)),errors.collect(cdk.propertyValidator("kmsKeyProviderUri",cdk.validateString)(properties.kmsKeyProviderUri)),errors.collect(cdk.propertyValidator("nameNodes",cdk.requiredValidator)(properties.nameNodes)),errors.collect(cdk.propertyValidator("nameNodes",cdk.listValidator(CfnLocationHDFS_NameNodePropertyValidator))(properties.nameNodes)),errors.collect(cdk.propertyValidator("qopConfiguration",CfnLocationHDFS_QopConfigurationPropertyValidator)(properties.qopConfiguration)),errors.collect(cdk.propertyValidator("replicationFactor",cdk.validateNumber)(properties.replicationFactor)),errors.collect(cdk.propertyValidator("simpleUser",cdk.validateString)(properties.simpleUser)),errors.collect(cdk.propertyValidator("subdirectory",cdk.validateString)(properties.subdirectory)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnLocationHDFSProps"')}function cfnLocationHDFSPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnLocationHDFSPropsValidator(properties).assertSuccess(),{AgentArns:cdk.listMapper(cdk.stringToCloudFormation)(properties.agentArns),AuthenticationType:cdk.stringToCloudFormation(properties.authenticationType),NameNodes:cdk.listMapper(cfnLocationHDFSNameNodePropertyToCloudFormation)(properties.nameNodes),BlockSize:cdk.numberToCloudFormation(properties.blockSize),KerberosKeytab:cdk.stringToCloudFormation(properties.kerberosKeytab),KerberosKrb5Conf:cdk.stringToCloudFormation(properties.kerberosKrb5Conf),KerberosPrincipal:cdk.stringToCloudFormation(properties.kerberosPrincipal),KmsKeyProviderUri:cdk.stringToCloudFormation(properties.kmsKeyProviderUri),QopConfiguration:cfnLocationHDFSQopConfigurationPropertyToCloudFormation(properties.qopConfiguration),ReplicationFactor:cdk.numberToCloudFormation(properties.replicationFactor),SimpleUser:cdk.stringToCloudFormation(properties.simpleUser),Subdirectory:cdk.stringToCloudFormation(properties.subdirectory),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnLocationHDFSPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("agentArns","AgentArns",cfn_parse.FromCloudFormation.getStringArray(properties.AgentArns)),ret.addPropertyResult("authenticationType","AuthenticationType",cfn_parse.FromCloudFormation.getString(properties.AuthenticationType)),ret.addPropertyResult("nameNodes","NameNodes",cfn_parse.FromCloudFormation.getArray(CfnLocationHDFSNameNodePropertyFromCloudFormation)(properties.NameNodes)),ret.addPropertyResult("blockSize","BlockSize",properties.BlockSize!=null?cfn_parse.FromCloudFormation.getNumber(properties.BlockSize):void 0),ret.addPropertyResult("kerberosKeytab","KerberosKeytab",properties.KerberosKeytab!=null?cfn_parse.FromCloudFormation.getString(properties.KerberosKeytab):void 0),ret.addPropertyResult("kerberosKrb5Conf","KerberosKrb5Conf",properties.KerberosKrb5Conf!=null?cfn_parse.FromCloudFormation.getString(properties.KerberosKrb5Conf):void 0),ret.addPropertyResult("kerberosPrincipal","KerberosPrincipal",properties.KerberosPrincipal!=null?cfn_parse.FromCloudFormation.getString(properties.KerberosPrincipal):void 0),ret.addPropertyResult("kmsKeyProviderUri","KmsKeyProviderUri",properties.KmsKeyProviderUri!=null?cfn_parse.FromCloudFormation.getString(properties.KmsKeyProviderUri):void 0),ret.addPropertyResult("qopConfiguration","QopConfiguration",properties.QopConfiguration!=null?CfnLocationHDFSQopConfigurationPropertyFromCloudFormation(properties.QopConfiguration):void 0),ret.addPropertyResult("replicationFactor","ReplicationFactor",properties.ReplicationFactor!=null?cfn_parse.FromCloudFormation.getNumber(properties.ReplicationFactor):void 0),ret.addPropertyResult("simpleUser","SimpleUser",properties.SimpleUser!=null?cfn_parse.FromCloudFormation.getString(properties.SimpleUser):void 0),ret.addPropertyResult("subdirectory","Subdirectory",properties.Subdirectory!=null?cfn_parse.FromCloudFormation.getString(properties.Subdirectory):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnLocationHDFS extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnLocationHDFS.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_datasync_CfnLocationHDFSProps(props),cdk.requireProperty(props,"agentArns",this),cdk.requireProperty(props,"authenticationType",this),cdk.requireProperty(props,"nameNodes",this),this.attrLocationArn=cdk.Token.asString(this.getAtt("LocationArn")),this.attrLocationUri=cdk.Token.asString(this.getAtt("LocationUri")),this.agentArns=props.agentArns,this.authenticationType=props.authenticationType,this.nameNodes=props.nameNodes,this.blockSize=props.blockSize,this.kerberosKeytab=props.kerberosKeytab,this.kerberosKrb5Conf=props.kerberosKrb5Conf,this.kerberosPrincipal=props.kerberosPrincipal,this.kmsKeyProviderUri=props.kmsKeyProviderUri,this.qopConfiguration=props.qopConfiguration,this.replicationFactor=props.replicationFactor,this.simpleUser=props.simpleUser,this.subdirectory=props.subdirectory,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::DataSync::LocationHDFS",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnLocationHDFSPropsFromCloudFormation(resourceProperties),ret=new CfnLocationHDFS(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnLocationHDFS.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{agentArns:this.agentArns,authenticationType:this.authenticationType,nameNodes:this.nameNodes,blockSize:this.blockSize,kerberosKeytab:this.kerberosKeytab,kerberosKrb5Conf:this.kerberosKrb5Conf,kerberosPrincipal:this.kerberosPrincipal,kmsKeyProviderUri:this.kmsKeyProviderUri,qopConfiguration:this.qopConfiguration,replicationFactor:this.replicationFactor,simpleUser:this.simpleUser,subdirectory:this.subdirectory,tags:this.tags.renderTags()}}renderProperties(props){return cfnLocationHDFSPropsToCloudFormation(props)}}exports.CfnLocationHDFS=CfnLocationHDFS,_e=JSII_RTTI_SYMBOL_1,CfnLocationHDFS[_e]={fqn:"aws-cdk-lib.aws_datasync.CfnLocationHDFS",version:"2.20.0"},CfnLocationHDFS.CFN_RESOURCE_TYPE_NAME="AWS::DataSync::LocationHDFS";function CfnLocationHDFS_NameNodePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("hostname",cdk.requiredValidator)(properties.hostname)),errors.collect(cdk.propertyValidator("hostname",cdk.validateString)(properties.hostname)),errors.collect(cdk.propertyValidator("port",cdk.requiredValidator)(properties.port)),errors.collect(cdk.propertyValidator("port",cdk.validateNumber)(properties.port)),errors.wrap('supplied properties not correct for "NameNodeProperty"')}function cfnLocationHDFSNameNodePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnLocationHDFS_NameNodePropertyValidator(properties).assertSuccess(),{Hostname:cdk.stringToCloudFormation(properties.hostname),Port:cdk.numberToCloudFormation(properties.port)}):properties}function CfnLocationHDFSNameNodePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("hostname","Hostname",cfn_parse.FromCloudFormation.getString(properties.Hostname)),ret.addPropertyResult("port","Port",cfn_parse.FromCloudFormation.getNumber(properties.Port)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnLocationHDFS_QopConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("dataTransferProtection",cdk.validateString)(properties.dataTransferProtection)),errors.collect(cdk.propertyValidator("rpcProtection",cdk.validateString)(properties.rpcProtection)),errors.wrap('supplied properties not correct for "QopConfigurationProperty"')}function cfnLocationHDFSQopConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnLocationHDFS_QopConfigurationPropertyValidator(properties).assertSuccess(),{DataTransferProtection:cdk.stringToCloudFormation(properties.dataTransferProtection),RpcProtection:cdk.stringToCloudFormation(properties.rpcProtection)}):properties}function CfnLocationHDFSQopConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("dataTransferProtection","DataTransferProtection",properties.DataTransferProtection!=null?cfn_parse.FromCloudFormation.getString(properties.DataTransferProtection):void 0),ret.addPropertyResult("rpcProtection","RpcProtection",properties.RpcProtection!=null?cfn_parse.FromCloudFormation.getString(properties.RpcProtection):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnLocationNFSPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("mountOptions",CfnLocationNFS_MountOptionsPropertyValidator)(properties.mountOptions)),errors.collect(cdk.propertyValidator("onPremConfig",cdk.requiredValidator)(properties.onPremConfig)),errors.collect(cdk.propertyValidator("onPremConfig",CfnLocationNFS_OnPremConfigPropertyValidator)(properties.onPremConfig)),errors.collect(cdk.propertyValidator("serverHostname",cdk.requiredValidator)(properties.serverHostname)),errors.collect(cdk.propertyValidator("serverHostname",cdk.validateString)(properties.serverHostname)),errors.collect(cdk.propertyValidator("subdirectory",cdk.requiredValidator)(properties.subdirectory)),errors.collect(cdk.propertyValidator("subdirectory",cdk.validateString)(properties.subdirectory)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnLocationNFSProps"')}function cfnLocationNFSPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnLocationNFSPropsValidator(properties).assertSuccess(),{OnPremConfig:cfnLocationNFSOnPremConfigPropertyToCloudFormation(properties.onPremConfig),ServerHostname:cdk.stringToCloudFormation(properties.serverHostname),Subdirectory:cdk.stringToCloudFormation(properties.subdirectory),MountOptions:cfnLocationNFSMountOptionsPropertyToCloudFormation(properties.mountOptions),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnLocationNFSPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("onPremConfig","OnPremConfig",CfnLocationNFSOnPremConfigPropertyFromCloudFormation(properties.OnPremConfig)),ret.addPropertyResult("serverHostname","ServerHostname",cfn_parse.FromCloudFormation.getString(properties.ServerHostname)),ret.addPropertyResult("subdirectory","Subdirectory",cfn_parse.FromCloudFormation.getString(properties.Subdirectory)),ret.addPropertyResult("mountOptions","MountOptions",properties.MountOptions!=null?CfnLocationNFSMountOptionsPropertyFromCloudFormation(properties.MountOptions):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnLocationNFS extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnLocationNFS.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_datasync_CfnLocationNFSProps(props),cdk.requireProperty(props,"onPremConfig",this),cdk.requireProperty(props,"serverHostname",this),cdk.requireProperty(props,"subdirectory",this),this.attrLocationArn=cdk.Token.asString(this.getAtt("LocationArn")),this.attrLocationUri=cdk.Token.asString(this.getAtt("LocationUri")),this.onPremConfig=props.onPremConfig,this.serverHostname=props.serverHostname,this.subdirectory=props.subdirectory,this.mountOptions=props.mountOptions,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::DataSync::LocationNFS",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnLocationNFSPropsFromCloudFormation(resourceProperties),ret=new CfnLocationNFS(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnLocationNFS.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{onPremConfig:this.onPremConfig,serverHostname:this.serverHostname,subdirectory:this.subdirectory,mountOptions:this.mountOptions,tags:this.tags.renderTags()}}renderProperties(props){return cfnLocationNFSPropsToCloudFormation(props)}}exports.CfnLocationNFS=CfnLocationNFS,_f=JSII_RTTI_SYMBOL_1,CfnLocationNFS[_f]={fqn:"aws-cdk-lib.aws_datasync.CfnLocationNFS",version:"2.20.0"},CfnLocationNFS.CFN_RESOURCE_TYPE_NAME="AWS::DataSync::LocationNFS";function CfnLocationNFS_MountOptionsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("version",cdk.validateString)(properties.version)),errors.wrap('supplied properties not correct for "MountOptionsProperty"')}function cfnLocationNFSMountOptionsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnLocationNFS_MountOptionsPropertyValidator(properties).assertSuccess(),{Version:cdk.stringToCloudFormation(properties.version)}):properties}function CfnLocationNFSMountOptionsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("version","Version",properties.Version!=null?cfn_parse.FromCloudFormation.getString(properties.Version):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnLocationNFS_OnPremConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("agentArns",cdk.requiredValidator)(properties.agentArns)),errors.collect(cdk.propertyValidator("agentArns",cdk.listValidator(cdk.validateString))(properties.agentArns)),errors.wrap('supplied properties not correct for "OnPremConfigProperty"')}function cfnLocationNFSOnPremConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnLocationNFS_OnPremConfigPropertyValidator(properties).assertSuccess(),{AgentArns:cdk.listMapper(cdk.stringToCloudFormation)(properties.agentArns)}):properties}function CfnLocationNFSOnPremConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("agentArns","AgentArns",cfn_parse.FromCloudFormation.getStringArray(properties.AgentArns)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnLocationObjectStoragePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("accessKey",cdk.validateString)(properties.accessKey)),errors.collect(cdk.propertyValidator("agentArns",cdk.requiredValidator)(properties.agentArns)),errors.collect(cdk.propertyValidator("agentArns",cdk.listValidator(cdk.validateString))(properties.agentArns)),errors.collect(cdk.propertyValidator("bucketName",cdk.requiredValidator)(properties.bucketName)),errors.collect(cdk.propertyValidator("bucketName",cdk.validateString)(properties.bucketName)),errors.collect(cdk.propertyValidator("secretKey",cdk.validateString)(properties.secretKey)),errors.collect(cdk.propertyValidator("serverHostname",cdk.requiredValidator)(properties.serverHostname)),errors.collect(cdk.propertyValidator("serverHostname",cdk.validateString)(properties.serverHostname)),errors.collect(cdk.propertyValidator("serverPort",cdk.validateNumber)(properties.serverPort)),errors.collect(cdk.propertyValidator("serverProtocol",cdk.validateString)(properties.serverProtocol)),errors.collect(cdk.propertyValidator("subdirectory",cdk.validateString)(properties.subdirectory)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnLocationObjectStorageProps"')}function cfnLocationObjectStoragePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnLocationObjectStoragePropsValidator(properties).assertSuccess(),{AgentArns:cdk.listMapper(cdk.stringToCloudFormation)(properties.agentArns),BucketName:cdk.stringToCloudFormation(properties.bucketName),ServerHostname:cdk.stringToCloudFormation(properties.serverHostname),AccessKey:cdk.stringToCloudFormation(properties.accessKey),SecretKey:cdk.stringToCloudFormation(properties.secretKey),ServerPort:cdk.numberToCloudFormation(properties.serverPort),ServerProtocol:cdk.stringToCloudFormation(properties.serverProtocol),Subdirectory:cdk.stringToCloudFormation(properties.subdirectory),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnLocationObjectStoragePropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("agentArns","AgentArns",cfn_parse.FromCloudFormation.getStringArray(properties.AgentArns)),ret.addPropertyResult("bucketName","BucketName",cfn_parse.FromCloudFormation.getString(properties.BucketName)),ret.addPropertyResult("serverHostname","ServerHostname",cfn_parse.FromCloudFormation.getString(properties.ServerHostname)),ret.addPropertyResult("accessKey","AccessKey",properties.AccessKey!=null?cfn_parse.FromCloudFormation.getString(properties.AccessKey):void 0),ret.addPropertyResult("secretKey","SecretKey",properties.SecretKey!=null?cfn_parse.FromCloudFormation.getString(properties.SecretKey):void 0),ret.addPropertyResult("serverPort","ServerPort",properties.ServerPort!=null?cfn_parse.FromCloudFormation.getNumber(properties.ServerPort):void 0),ret.addPropertyResult("serverProtocol","ServerProtocol",properties.ServerProtocol!=null?cfn_parse.FromCloudFormation.getString(properties.ServerProtocol):void 0),ret.addPropertyResult("subdirectory","Subdirectory",properties.Subdirectory!=null?cfn_parse.FromCloudFormation.getString(properties.Subdirectory):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnLocationObjectStorage extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnLocationObjectStorage.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_datasync_CfnLocationObjectStorageProps(props),cdk.requireProperty(props,"agentArns",this),cdk.requireProperty(props,"bucketName",this),cdk.requireProperty(props,"serverHostname",this),this.attrLocationArn=cdk.Token.asString(this.getAtt("LocationArn")),this.attrLocationUri=cdk.Token.asString(this.getAtt("LocationUri")),this.agentArns=props.agentArns,this.bucketName=props.bucketName,this.serverHostname=props.serverHostname,this.accessKey=props.accessKey,this.secretKey=props.secretKey,this.serverPort=props.serverPort,this.serverProtocol=props.serverProtocol,this.subdirectory=props.subdirectory,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::DataSync::LocationObjectStorage",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnLocationObjectStoragePropsFromCloudFormation(resourceProperties),ret=new CfnLocationObjectStorage(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnLocationObjectStorage.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{agentArns:this.agentArns,bucketName:this.bucketName,serverHostname:this.serverHostname,accessKey:this.accessKey,secretKey:this.secretKey,serverPort:this.serverPort,serverProtocol:this.serverProtocol,subdirectory:this.subdirectory,tags:this.tags.renderTags()}}renderProperties(props){return cfnLocationObjectStoragePropsToCloudFormation(props)}}exports.CfnLocationObjectStorage=CfnLocationObjectStorage,_g=JSII_RTTI_SYMBOL_1,CfnLocationObjectStorage[_g]={fqn:"aws-cdk-lib.aws_datasync.CfnLocationObjectStorage",version:"2.20.0"},CfnLocationObjectStorage.CFN_RESOURCE_TYPE_NAME="AWS::DataSync::LocationObjectStorage";function CfnLocationS3PropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("s3BucketArn",cdk.requiredValidator)(properties.s3BucketArn)),errors.collect(cdk.propertyValidator("s3BucketArn",cdk.validateString)(properties.s3BucketArn)),errors.collect(cdk.propertyValidator("s3Config",cdk.requiredValidator)(properties.s3Config)),errors.collect(cdk.propertyValidator("s3Config",CfnLocationS3_S3ConfigPropertyValidator)(properties.s3Config)),errors.collect(cdk.propertyValidator("s3StorageClass",cdk.validateString)(properties.s3StorageClass)),errors.collect(cdk.propertyValidator("subdirectory",cdk.validateString)(properties.subdirectory)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnLocationS3Props"')}function cfnLocationS3PropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnLocationS3PropsValidator(properties).assertSuccess(),{S3BucketArn:cdk.stringToCloudFormation(properties.s3BucketArn),S3Config:cfnLocationS3S3ConfigPropertyToCloudFormation(properties.s3Config),S3StorageClass:cdk.stringToCloudFormation(properties.s3StorageClass),Subdirectory:cdk.stringToCloudFormation(properties.subdirectory),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnLocationS3PropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("s3BucketArn","S3BucketArn",cfn_parse.FromCloudFormation.getString(properties.S3BucketArn)),ret.addPropertyResult("s3Config","S3Config",CfnLocationS3S3ConfigPropertyFromCloudFormation(properties.S3Config)),ret.addPropertyResult("s3StorageClass","S3StorageClass",properties.S3StorageClass!=null?cfn_parse.FromCloudFormation.getString(properties.S3StorageClass):void 0),ret.addPropertyResult("subdirectory","Subdirectory",properties.Subdirectory!=null?cfn_parse.FromCloudFormation.getString(properties.Subdirectory):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnLocationS3 extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnLocationS3.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_datasync_CfnLocationS3Props(props),cdk.requireProperty(props,"s3BucketArn",this),cdk.requireProperty(props,"s3Config",this),this.attrLocationArn=cdk.Token.asString(this.getAtt("LocationArn")),this.attrLocationUri=cdk.Token.asString(this.getAtt("LocationUri")),this.s3BucketArn=props.s3BucketArn,this.s3Config=props.s3Config,this.s3StorageClass=props.s3StorageClass,this.subdirectory=props.subdirectory,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::DataSync::LocationS3",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnLocationS3PropsFromCloudFormation(resourceProperties),ret=new CfnLocationS3(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnLocationS3.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{s3BucketArn:this.s3BucketArn,s3Config:this.s3Config,s3StorageClass:this.s3StorageClass,subdirectory:this.subdirectory,tags:this.tags.renderTags()}}renderProperties(props){return cfnLocationS3PropsToCloudFormation(props)}}exports.CfnLocationS3=CfnLocationS3,_h=JSII_RTTI_SYMBOL_1,CfnLocationS3[_h]={fqn:"aws-cdk-lib.aws_datasync.CfnLocationS3",version:"2.20.0"},CfnLocationS3.CFN_RESOURCE_TYPE_NAME="AWS::DataSync::LocationS3";function CfnLocationS3_S3ConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("bucketAccessRoleArn",cdk.requiredValidator)(properties.bucketAccessRoleArn)),errors.collect(cdk.propertyValidator("bucketAccessRoleArn",cdk.validateString)(properties.bucketAccessRoleArn)),errors.wrap('supplied properties not correct for "S3ConfigProperty"')}function cfnLocationS3S3ConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnLocationS3_S3ConfigPropertyValidator(properties).assertSuccess(),{BucketAccessRoleArn:cdk.stringToCloudFormation(properties.bucketAccessRoleArn)}):properties}function CfnLocationS3S3ConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("bucketAccessRoleArn","BucketAccessRoleArn",cfn_parse.FromCloudFormation.getString(properties.BucketAccessRoleArn)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnLocationSMBPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("agentArns",cdk.requiredValidator)(properties.agentArns)),errors.collect(cdk.propertyValidator("agentArns",cdk.listValidator(cdk.validateString))(properties.agentArns)),errors.collect(cdk.propertyValidator("domain",cdk.validateString)(properties.domain)),errors.collect(cdk.propertyValidator("mountOptions",CfnLocationSMB_MountOptionsPropertyValidator)(properties.mountOptions)),errors.collect(cdk.propertyValidator("password",cdk.requiredValidator)(properties.password)),errors.collect(cdk.propertyValidator("password",cdk.validateString)(properties.password)),errors.collect(cdk.propertyValidator("serverHostname",cdk.requiredValidator)(properties.serverHostname)),errors.collect(cdk.propertyValidator("serverHostname",cdk.validateString)(properties.serverHostname)),errors.collect(cdk.propertyValidator("subdirectory",cdk.requiredValidator)(properties.subdirectory)),errors.collect(cdk.propertyValidator("subdirectory",cdk.validateString)(properties.subdirectory)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("user",cdk.requiredValidator)(properties.user)),errors.collect(cdk.propertyValidator("user",cdk.validateString)(properties.user)),errors.wrap('supplied properties not correct for "CfnLocationSMBProps"')}function cfnLocationSMBPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnLocationSMBPropsValidator(properties).assertSuccess(),{AgentArns:cdk.listMapper(cdk.stringToCloudFormation)(properties.agentArns),Password:cdk.stringToCloudFormation(properties.password),ServerHostname:cdk.stringToCloudFormation(properties.serverHostname),Subdirectory:cdk.stringToCloudFormation(properties.subdirectory),User:cdk.stringToCloudFormation(properties.user),Domain:cdk.stringToCloudFormation(properties.domain),MountOptions:cfnLocationSMBMountOptionsPropertyToCloudFormation(properties.mountOptions),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnLocationSMBPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("agentArns","AgentArns",cfn_parse.FromCloudFormation.getStringArray(properties.AgentArns)),ret.addPropertyResult("password","Password",cfn_parse.FromCloudFormation.getString(properties.Password)),ret.addPropertyResult("serverHostname","ServerHostname",cfn_parse.FromCloudFormation.getString(properties.ServerHostname)),ret.addPropertyResult("subdirectory","Subdirectory",cfn_parse.FromCloudFormation.getString(properties.Subdirectory)),ret.addPropertyResult("user","User",cfn_parse.FromCloudFormation.getString(properties.User)),ret.addPropertyResult("domain","Domain",properties.Domain!=null?cfn_parse.FromCloudFormation.getString(properties.Domain):void 0),ret.addPropertyResult("mountOptions","MountOptions",properties.MountOptions!=null?CfnLocationSMBMountOptionsPropertyFromCloudFormation(properties.MountOptions):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnLocationSMB extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnLocationSMB.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_datasync_CfnLocationSMBProps(props),cdk.requireProperty(props,"agentArns",this),cdk.requireProperty(props,"password",this),cdk.requireProperty(props,"serverHostname",this),cdk.requireProperty(props,"subdirectory",this),cdk.requireProperty(props,"user",this),this.attrLocationArn=cdk.Token.asString(this.getAtt("LocationArn")),this.attrLocationUri=cdk.Token.asString(this.getAtt("LocationUri")),this.agentArns=props.agentArns,this.password=props.password,this.serverHostname=props.serverHostname,this.subdirectory=props.subdirectory,this.user=props.user,this.domain=props.domain,this.mountOptions=props.mountOptions,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::DataSync::LocationSMB",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnLocationSMBPropsFromCloudFormation(resourceProperties),ret=new CfnLocationSMB(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnLocationSMB.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{agentArns:this.agentArns,password:this.password,serverHostname:this.serverHostname,subdirectory:this.subdirectory,user:this.user,domain:this.domain,mountOptions:this.mountOptions,tags:this.tags.renderTags()}}renderProperties(props){return cfnLocationSMBPropsToCloudFormation(props)}}exports.CfnLocationSMB=CfnLocationSMB,_j=JSII_RTTI_SYMBOL_1,CfnLocationSMB[_j]={fqn:"aws-cdk-lib.aws_datasync.CfnLocationSMB",version:"2.20.0"},CfnLocationSMB.CFN_RESOURCE_TYPE_NAME="AWS::DataSync::LocationSMB";function CfnLocationSMB_MountOptionsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("version",cdk.validateString)(properties.version)),errors.wrap('supplied properties not correct for "MountOptionsProperty"')}function cfnLocationSMBMountOptionsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnLocationSMB_MountOptionsPropertyValidator(properties).assertSuccess(),{Version:cdk.stringToCloudFormation(properties.version)}):properties}function CfnLocationSMBMountOptionsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("version","Version",properties.Version!=null?cfn_parse.FromCloudFormation.getString(properties.Version):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTaskPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("cloudWatchLogGroupArn",cdk.validateString)(properties.cloudWatchLogGroupArn)),errors.collect(cdk.propertyValidator("destinationLocationArn",cdk.requiredValidator)(properties.destinationLocationArn)),errors.collect(cdk.propertyValidator("destinationLocationArn",cdk.validateString)(properties.destinationLocationArn)),errors.collect(cdk.propertyValidator("excludes",cdk.listValidator(CfnTask_FilterRulePropertyValidator))(properties.excludes)),errors.collect(cdk.propertyValidator("includes",cdk.listValidator(CfnTask_FilterRulePropertyValidator))(properties.includes)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("options",CfnTask_OptionsPropertyValidator)(properties.options)),errors.collect(cdk.propertyValidator("schedule",CfnTask_TaskSchedulePropertyValidator)(properties.schedule)),errors.collect(cdk.propertyValidator("sourceLocationArn",cdk.requiredValidator)(properties.sourceLocationArn)),errors.collect(cdk.propertyValidator("sourceLocationArn",cdk.validateString)(properties.sourceLocationArn)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnTaskProps"')}function cfnTaskPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnTaskPropsValidator(properties).assertSuccess(),{DestinationLocationArn:cdk.stringToCloudFormation(properties.destinationLocationArn),SourceLocationArn:cdk.stringToCloudFormation(properties.sourceLocationArn),CloudWatchLogGroupArn:cdk.stringToCloudFormation(properties.cloudWatchLogGroupArn),Excludes:cdk.listMapper(cfnTaskFilterRulePropertyToCloudFormation)(properties.excludes),Includes:cdk.listMapper(cfnTaskFilterRulePropertyToCloudFormation)(properties.includes),Name:cdk.stringToCloudFormation(properties.name),Options:cfnTaskOptionsPropertyToCloudFormation(properties.options),Schedule:cfnTaskTaskSchedulePropertyToCloudFormation(properties.schedule),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnTaskPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("destinationLocationArn","DestinationLocationArn",cfn_parse.FromCloudFormation.getString(properties.DestinationLocationArn)),ret.addPropertyResult("sourceLocationArn","SourceLocationArn",cfn_parse.FromCloudFormation.getString(properties.SourceLocationArn)),ret.addPropertyResult("cloudWatchLogGroupArn","CloudWatchLogGroupArn",properties.CloudWatchLogGroupArn!=null?cfn_parse.FromCloudFormation.getString(properties.CloudWatchLogGroupArn):void 0),ret.addPropertyResult("excludes","Excludes",properties.Excludes!=null?cfn_parse.FromCloudFormation.getArray(CfnTaskFilterRulePropertyFromCloudFormation)(properties.Excludes):void 0),ret.addPropertyResult("includes","Includes",properties.Includes!=null?cfn_parse.FromCloudFormation.getArray(CfnTaskFilterRulePropertyFromCloudFormation)(properties.Includes):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("options","Options",properties.Options!=null?CfnTaskOptionsPropertyFromCloudFormation(properties.Options):void 0),ret.addPropertyResult("schedule","Schedule",properties.Schedule!=null?CfnTaskTaskSchedulePropertyFromCloudFormation(properties.Schedule):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnTask extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnTask.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_datasync_CfnTaskProps(props),cdk.requireProperty(props,"destinationLocationArn",this),cdk.requireProperty(props,"sourceLocationArn",this),this.attrDestinationNetworkInterfaceArns=cdk.Token.asList(this.getAtt("DestinationNetworkInterfaceArns")),this.attrErrorCode=cdk.Token.asString(this.getAtt("ErrorCode")),this.attrErrorDetail=cdk.Token.asString(this.getAtt("ErrorDetail")),this.attrSourceNetworkInterfaceArns=cdk.Token.asList(this.getAtt("SourceNetworkInterfaceArns")),this.attrStatus=cdk.Token.asString(this.getAtt("Status")),this.attrTaskArn=cdk.Token.asString(this.getAtt("TaskArn")),this.destinationLocationArn=props.destinationLocationArn,this.sourceLocationArn=props.sourceLocationArn,this.cloudWatchLogGroupArn=props.cloudWatchLogGroupArn,this.excludes=props.excludes,this.includes=props.includes,this.name=props.name,this.options=props.options,this.schedule=props.schedule,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::DataSync::Task",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnTaskPropsFromCloudFormation(resourceProperties),ret=new CfnTask(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnTask.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{destinationLocationArn:this.destinationLocationArn,sourceLocationArn:this.sourceLocationArn,cloudWatchLogGroupArn:this.cloudWatchLogGroupArn,excludes:this.excludes,includes:this.includes,name:this.name,options:this.options,schedule:this.schedule,tags:this.tags.renderTags()}}renderProperties(props){return cfnTaskPropsToCloudFormation(props)}}exports.CfnTask=CfnTask,_k=JSII_RTTI_SYMBOL_1,CfnTask[_k]={fqn:"aws-cdk-lib.aws_datasync.CfnTask",version:"2.20.0"},CfnTask.CFN_RESOURCE_TYPE_NAME="AWS::DataSync::Task";function CfnTask_FilterRulePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("filterType",cdk.validateString)(properties.filterType)),errors.collect(cdk.propertyValidator("value",cdk.validateString)(properties.value)),errors.wrap('supplied properties not correct for "FilterRuleProperty"')}function cfnTaskFilterRulePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnTask_FilterRulePropertyValidator(properties).assertSuccess(),{FilterType:cdk.stringToCloudFormation(properties.filterType),Value:cdk.stringToCloudFormation(properties.value)}):properties}function CfnTaskFilterRulePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("filterType","FilterType",properties.FilterType!=null?cfn_parse.FromCloudFormation.getString(properties.FilterType):void 0),ret.addPropertyResult("value","Value",properties.Value!=null?cfn_parse.FromCloudFormation.getString(properties.Value):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTask_OptionsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("atime",cdk.validateString)(properties.atime)),errors.collect(cdk.propertyValidator("bytesPerSecond",cdk.validateNumber)(properties.bytesPerSecond)),errors.collect(cdk.propertyValidator("gid",cdk.validateString)(properties.gid)),errors.collect(cdk.propertyValidator("logLevel",cdk.validateString)(properties.logLevel)),errors.collect(cdk.propertyValidator("mtime",cdk.validateString)(properties.mtime)),errors.collect(cdk.propertyValidator("overwriteMode",cdk.validateString)(properties.overwriteMode)),errors.collect(cdk.propertyValidator("posixPermissions",cdk.validateString)(properties.posixPermissions)),errors.collect(cdk.propertyValidator("preserveDeletedFiles",cdk.validateString)(properties.preserveDeletedFiles)),errors.collect(cdk.propertyValidator("preserveDevices",cdk.validateString)(properties.preserveDevices)),errors.collect(cdk.propertyValidator("securityDescriptorCopyFlags",cdk.validateString)(properties.securityDescriptorCopyFlags)),errors.collect(cdk.propertyValidator("taskQueueing",cdk.validateString)(properties.taskQueueing)),errors.collect(cdk.propertyValidator("transferMode",cdk.validateString)(properties.transferMode)),errors.collect(cdk.propertyValidator("uid",cdk.validateString)(properties.uid)),errors.collect(cdk.propertyValidator("verifyMode",cdk.validateString)(properties.verifyMode)),errors.wrap('supplied properties not correct for "OptionsProperty"')}function cfnTaskOptionsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnTask_OptionsPropertyValidator(properties).assertSuccess(),{Atime:cdk.stringToCloudFormation(properties.atime),BytesPerSecond:cdk.numberToCloudFormation(properties.bytesPerSecond),Gid:cdk.stringToCloudFormation(properties.gid),LogLevel:cdk.stringToCloudFormation(properties.logLevel),Mtime:cdk.stringToCloudFormation(properties.mtime),OverwriteMode:cdk.stringToCloudFormation(properties.overwriteMode),PosixPermissions:cdk.stringToCloudFormation(properties.posixPermissions),PreserveDeletedFiles:cdk.stringToCloudFormation(properties.preserveDeletedFiles),PreserveDevices:cdk.stringToCloudFormation(properties.preserveDevices),SecurityDescriptorCopyFlags:cdk.stringToCloudFormation(properties.securityDescriptorCopyFlags),TaskQueueing:cdk.stringToCloudFormation(properties.taskQueueing),TransferMode:cdk.stringToCloudFormation(properties.transferMode),Uid:cdk.stringToCloudFormation(properties.uid),VerifyMode:cdk.stringToCloudFormation(properties.verifyMode)}):properties}function CfnTaskOptionsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("atime","Atime",properties.Atime!=null?cfn_parse.FromCloudFormation.getString(properties.Atime):void 0),ret.addPropertyResult("bytesPerSecond","BytesPerSecond",properties.BytesPerSecond!=null?cfn_parse.FromCloudFormation.getNumber(properties.BytesPerSecond):void 0),ret.addPropertyResult("gid","Gid",properties.Gid!=null?cfn_parse.FromCloudFormation.getString(properties.Gid):void 0),ret.addPropertyResult("logLevel","LogLevel",properties.LogLevel!=null?cfn_parse.FromCloudFormation.getString(properties.LogLevel):void 0),ret.addPropertyResult("mtime","Mtime",properties.Mtime!=null?cfn_parse.FromCloudFormation.getString(properties.Mtime):void 0),ret.addPropertyResult("overwriteMode","OverwriteMode",properties.OverwriteMode!=null?cfn_parse.FromCloudFormation.getString(properties.OverwriteMode):void 0),ret.addPropertyResult("posixPermissions","PosixPermissions",properties.PosixPermissions!=null?cfn_parse.FromCloudFormation.getString(properties.PosixPermissions):void 0),ret.addPropertyResult("preserveDeletedFiles","PreserveDeletedFiles",properties.PreserveDeletedFiles!=null?cfn_parse.FromCloudFormation.getString(properties.PreserveDeletedFiles):void 0),ret.addPropertyResult("preserveDevices","PreserveDevices",properties.PreserveDevices!=null?cfn_parse.FromCloudFormation.getString(properties.PreserveDevices):void 0),ret.addPropertyResult("securityDescriptorCopyFlags","SecurityDescriptorCopyFlags",properties.SecurityDescriptorCopyFlags!=null?cfn_parse.FromCloudFormation.getString(properties.SecurityDescriptorCopyFlags):void 0),ret.addPropertyResult("taskQueueing","TaskQueueing",properties.TaskQueueing!=null?cfn_parse.FromCloudFormation.getString(properties.TaskQueueing):void 0),ret.addPropertyResult("transferMode","TransferMode",properties.TransferMode!=null?cfn_parse.FromCloudFormation.getString(properties.TransferMode):void 0),ret.addPropertyResult("uid","Uid",properties.Uid!=null?cfn_parse.FromCloudFormation.getString(properties.Uid):void 0),ret.addPropertyResult("verifyMode","VerifyMode",properties.VerifyMode!=null?cfn_parse.FromCloudFormation.getString(properties.VerifyMode):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTask_TaskSchedulePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("scheduleExpression",cdk.requiredValidator)(properties.scheduleExpression)),errors.collect(cdk.propertyValidator("scheduleExpression",cdk.validateString)(properties.scheduleExpression)),errors.wrap('supplied properties not correct for "TaskScheduleProperty"')}function cfnTaskTaskSchedulePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnTask_TaskSchedulePropertyValidator(properties).assertSuccess(),{ScheduleExpression:cdk.stringToCloudFormation(properties.scheduleExpression)}):properties}function CfnTaskTaskSchedulePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("scheduleExpression","ScheduleExpression",cfn_parse.FromCloudFormation.getString(properties.ScheduleExpression)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
//# sourceMappingURL=datasync.generated.js.map
