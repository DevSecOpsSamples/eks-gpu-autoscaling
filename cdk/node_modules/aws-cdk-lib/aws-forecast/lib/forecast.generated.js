"use strict";var _a,_b;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnDatasetGroup=exports.CfnDataset=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/cfn-parse");function CfnDatasetPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("dataFrequency",cdk.validateString)(properties.dataFrequency)),errors.collect(cdk.propertyValidator("datasetName",cdk.requiredValidator)(properties.datasetName)),errors.collect(cdk.propertyValidator("datasetName",cdk.validateString)(properties.datasetName)),errors.collect(cdk.propertyValidator("datasetType",cdk.requiredValidator)(properties.datasetType)),errors.collect(cdk.propertyValidator("datasetType",cdk.validateString)(properties.datasetType)),errors.collect(cdk.propertyValidator("domain",cdk.requiredValidator)(properties.domain)),errors.collect(cdk.propertyValidator("domain",cdk.validateString)(properties.domain)),errors.collect(cdk.propertyValidator("encryptionConfig",cdk.validateObject)(properties.encryptionConfig)),errors.collect(cdk.propertyValidator("schema",cdk.requiredValidator)(properties.schema)),errors.collect(cdk.propertyValidator("schema",cdk.validateObject)(properties.schema)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateObject))(properties.tags)),errors.wrap('supplied properties not correct for "CfnDatasetProps"')}function cfnDatasetPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDatasetPropsValidator(properties).assertSuccess(),{DatasetName:cdk.stringToCloudFormation(properties.datasetName),DatasetType:cdk.stringToCloudFormation(properties.datasetType),Domain:cdk.stringToCloudFormation(properties.domain),Schema:cdk.objectToCloudFormation(properties.schema),DataFrequency:cdk.stringToCloudFormation(properties.dataFrequency),EncryptionConfig:cdk.objectToCloudFormation(properties.encryptionConfig),Tags:cdk.listMapper(cdk.objectToCloudFormation)(properties.tags)}):properties}function CfnDatasetPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("datasetName","DatasetName",cfn_parse.FromCloudFormation.getString(properties.DatasetName)),ret.addPropertyResult("datasetType","DatasetType",cfn_parse.FromCloudFormation.getString(properties.DatasetType)),ret.addPropertyResult("domain","Domain",cfn_parse.FromCloudFormation.getString(properties.Domain)),ret.addPropertyResult("schema","Schema",cfn_parse.FromCloudFormation.getAny(properties.Schema)),ret.addPropertyResult("dataFrequency","DataFrequency",properties.DataFrequency!=null?cfn_parse.FromCloudFormation.getString(properties.DataFrequency):void 0),ret.addPropertyResult("encryptionConfig","EncryptionConfig",properties.EncryptionConfig!=null?cfn_parse.FromCloudFormation.getAny(properties.EncryptionConfig):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getAny)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnDataset extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnDataset.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_forecast_CfnDatasetProps(props),cdk.requireProperty(props,"datasetName",this),cdk.requireProperty(props,"datasetType",this),cdk.requireProperty(props,"domain",this),cdk.requireProperty(props,"schema",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn")),this.datasetName=props.datasetName,this.datasetType=props.datasetType,this.domain=props.domain,this.schema=props.schema,this.dataFrequency=props.dataFrequency,this.encryptionConfig=props.encryptionConfig,this.tags=props.tags}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnDatasetPropsFromCloudFormation(resourceProperties),ret=new CfnDataset(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnDataset.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{datasetName:this.datasetName,datasetType:this.datasetType,domain:this.domain,schema:this.schema,dataFrequency:this.dataFrequency,encryptionConfig:this.encryptionConfig,tags:this.tags}}renderProperties(props){return cfnDatasetPropsToCloudFormation(props)}}exports.CfnDataset=CfnDataset,_a=JSII_RTTI_SYMBOL_1,CfnDataset[_a]={fqn:"aws-cdk-lib.aws_forecast.CfnDataset",version:"2.20.0"},CfnDataset.CFN_RESOURCE_TYPE_NAME="AWS::Forecast::Dataset";function CfnDatasetGroupPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("datasetArns",cdk.listValidator(cdk.validateString))(properties.datasetArns)),errors.collect(cdk.propertyValidator("datasetGroupName",cdk.requiredValidator)(properties.datasetGroupName)),errors.collect(cdk.propertyValidator("datasetGroupName",cdk.validateString)(properties.datasetGroupName)),errors.collect(cdk.propertyValidator("domain",cdk.requiredValidator)(properties.domain)),errors.collect(cdk.propertyValidator("domain",cdk.validateString)(properties.domain)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnDatasetGroupProps"')}function cfnDatasetGroupPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDatasetGroupPropsValidator(properties).assertSuccess(),{DatasetGroupName:cdk.stringToCloudFormation(properties.datasetGroupName),Domain:cdk.stringToCloudFormation(properties.domain),DatasetArns:cdk.listMapper(cdk.stringToCloudFormation)(properties.datasetArns),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnDatasetGroupPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("datasetGroupName","DatasetGroupName",cfn_parse.FromCloudFormation.getString(properties.DatasetGroupName)),ret.addPropertyResult("domain","Domain",cfn_parse.FromCloudFormation.getString(properties.Domain)),ret.addPropertyResult("datasetArns","DatasetArns",properties.DatasetArns!=null?cfn_parse.FromCloudFormation.getStringArray(properties.DatasetArns):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnDatasetGroup extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnDatasetGroup.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_forecast_CfnDatasetGroupProps(props),cdk.requireProperty(props,"datasetGroupName",this),cdk.requireProperty(props,"domain",this),this.attrDatasetGroupArn=cdk.Token.asString(this.getAtt("DatasetGroupArn")),this.datasetGroupName=props.datasetGroupName,this.domain=props.domain,this.datasetArns=props.datasetArns,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Forecast::DatasetGroup",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnDatasetGroupPropsFromCloudFormation(resourceProperties),ret=new CfnDatasetGroup(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnDatasetGroup.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{datasetGroupName:this.datasetGroupName,domain:this.domain,datasetArns:this.datasetArns,tags:this.tags.renderTags()}}renderProperties(props){return cfnDatasetGroupPropsToCloudFormation(props)}}exports.CfnDatasetGroup=CfnDatasetGroup,_b=JSII_RTTI_SYMBOL_1,CfnDatasetGroup[_b]={fqn:"aws-cdk-lib.aws_forecast.CfnDatasetGroup",version:"2.20.0"},CfnDatasetGroup.CFN_RESOURCE_TYPE_NAME="AWS::Forecast::DatasetGroup";
//# sourceMappingURL=forecast.generated.js.map
