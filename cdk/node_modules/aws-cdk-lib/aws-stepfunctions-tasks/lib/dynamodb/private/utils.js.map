{
  "version": 3,
  "sources": ["utils.ts"],
  "sourcesContent": ["import * as sfn from '../../../../aws-stepfunctions';\nimport { integrationResourceArn } from '../../private/task-utils';\nimport { DynamoAttributeValue } from '../shared-types';\n\nexport enum DynamoMethod {\n  GET = 'Get',\n  PUT = 'Put',\n  DELETE = 'Delete',\n  UPDATE = 'Update',\n}\n\nexport function getDynamoResourceArn(method: DynamoMethod) {\n  return integrationResourceArn('dynamodb', `${method.toLowerCase()}Item`, sfn.IntegrationPattern.REQUEST_RESPONSE);\n}\n\nexport function transformAttributeValueMap(attrMap?: { [key: string]: DynamoAttributeValue }) {\n  const transformedValue: any = {};\n  for (const key in attrMap) {\n    if (key) {\n      transformedValue[key] = attrMap[key].toObject();\n    }\n  }\n  return attrMap ? transformedValue : undefined;\n}\n\nexport function validateJsonPath(value: string) {\n  if (!value.startsWith('$')) {\n    throw new Error(\"Data JSON path values must either be exactly equal to '$' or start with '$.'\");\n  }\n}\n"],
  "mappings": "yLAAA,KAAA,KAAA,QAAA,+BAAA,EACA,aAAA,QAAA,0BAAA,EAGA,GAAY,cAAZ,AAAA,UAAY,cAAY,CACtB,cAAA,IAAA,MACA,cAAA,IAAA,MACA,cAAA,OAAA,SACA,cAAA,OAAA,QACF,GALY,aAAA,QAAA,cAAA,SAAA,aAAY,CAAA,EAAA,EAOxB,8BAAqC,OAAoB,CACvD,MAAO,cAAA,uBAAuB,WAAY,GAAG,OAAO,YAAW,QAAU,IAAI,mBAAmB,gBAAgB,CAClH,CAFA,QAAA,qBAAA,qBAIA,oCAA2C,QAAiD,CAC1F,KAAM,kBAAwB,CAAA,EAC9B,SAAW,OAAO,SAChB,AAAI,KACF,kBAAiB,KAAO,QAAQ,KAAK,SAAQ,GAGjD,MAAO,SAAU,iBAAmB,MACtC,CARA,QAAA,2BAAA,2BAUA,0BAAiC,MAAa,CAC5C,GAAI,CAAC,MAAM,WAAW,GAAG,EACvB,KAAM,IAAI,OAAM,8EAA8E,CAElG,CAJA,QAAA,iBAAA",
  "names": []
}
