{
  "version": 3,
  "sources": ["put-item.ts"],
  "sourcesContent": ["import * as ddb from '../../../aws-dynamodb';\nimport * as iam from '../../../aws-iam';\nimport * as sfn from '../../../aws-stepfunctions';\nimport { Stack } from '../../../core';\nimport { Construct } from 'constructs';\nimport { DynamoMethod, getDynamoResourceArn, transformAttributeValueMap } from './private/utils';\nimport { DynamoAttributeValue, DynamoConsumedCapacity, DynamoItemCollectionMetrics, DynamoReturnValues } from './shared-types';\n\n/**\n * Properties for DynamoPutItem Task\n */\nexport interface DynamoPutItemProps extends sfn.TaskStateBaseProps {\n  /**\n   * A map of attribute name/value pairs, one for each attribute.\n   * Only the primary key attributes are required;\n   * you can optionally provide other attribute name-value pairs for the item.\n   *\n   * @see https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_PutItem.html#DDB-PutItem-request-Item\n   */\n  readonly item: { [key: string]: DynamoAttributeValue };\n\n  /**\n   * The name of the table where the item should be written .\n   */\n  readonly table: ddb.ITable;\n\n  /**\n   * A condition that must be satisfied in order for a conditional PutItem operation to succeed.\n   *\n   * @see https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_PutItem.html#DDB-PutItem-request-ConditionExpression\n   *\n   * @default - No condition expression\n   */\n  readonly conditionExpression?: string;\n\n  /**\n   * One or more substitution tokens for attribute names in an expression\n   *\n   * @see https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_PutItem.html#DDB-PutItem-request-ExpressionAttributeNames\n   *\n   * @default - No expression attribute names\n   */\n  readonly expressionAttributeNames?: { [key: string]: string };\n\n  /**\n   * One or more values that can be substituted in an expression.\n   *\n   * @see https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_PutItem.html#DDB-PutItem-request-ExpressionAttributeValues\n   *\n   * @default - No expression attribute values\n   */\n  readonly expressionAttributeValues?: { [key: string]: DynamoAttributeValue };\n\n  /**\n   * Determines the level of detail about provisioned throughput consumption that is returned in the response\n   *\n   * @see https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_PutItem.html#DDB-PutItem-request-ReturnConsumedCapacity\n   *\n   * @default DynamoConsumedCapacity.NONE\n   */\n  readonly returnConsumedCapacity?: DynamoConsumedCapacity;\n\n  /**\n   * The item collection metrics to returned in the response\n   *\n   * @see https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LSI.html#LSI.ItemCollections\n   *\n   * @default DynamoItemCollectionMetrics.NONE\n   */\n  readonly returnItemCollectionMetrics?: DynamoItemCollectionMetrics;\n\n  /**\n   * Use ReturnValues if you want to get the item attributes as they appeared\n   * before they were updated with the PutItem request.\n   *\n   * @see https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_PutItem.html#DDB-PutItem-request-ReturnValues\n   *\n   * @default DynamoReturnValues.NONE\n   */\n  readonly returnValues?: DynamoReturnValues;\n}\n\n/**\n * A StepFunctions task to call DynamoPutItem\n */\nexport class DynamoPutItem extends sfn.TaskStateBase {\n  protected readonly taskMetrics?: sfn.TaskMetricsConfig;\n  protected readonly taskPolicies?: iam.PolicyStatement[];\n\n  constructor(scope: Construct, id: string, private readonly props: DynamoPutItemProps) {\n    super(scope, id, props);\n\n    this.taskPolicies = [\n      new iam.PolicyStatement({\n        resources: [\n          Stack.of(this).formatArn({\n            service: 'dynamodb',\n            resource: 'table',\n            resourceName: props.table.tableName,\n          }),\n        ],\n        actions: [`dynamodb:${DynamoMethod.PUT}Item`],\n      }),\n    ];\n  }\n\n  /**\n   * @internal\n   */\n  protected _renderTask(): any {\n    return {\n      Resource: getDynamoResourceArn(DynamoMethod.PUT),\n      Parameters: sfn.FieldUtils.renderObject({\n        Item: transformAttributeValueMap(this.props.item),\n        TableName: this.props.table.tableName,\n        ConditionExpression: this.props.conditionExpression,\n        ExpressionAttributeNames: this.props.expressionAttributeNames,\n        ExpressionAttributeValues: transformAttributeValueMap(this.props.expressionAttributeValues),\n        ReturnConsumedCapacity: this.props.returnConsumedCapacity,\n        ReturnItemCollectionMetrics: this.props.returnItemCollectionMetrics,\n        ReturnValues: this.props.returnValues,\n      }),\n    };\n  }\n}\n"],
  "mappings": "uNACA,IAAA,QAAA,kBAAA,EACA,IAAA,QAAA,4BAAA,EACA,OAAA,QAAA,eAAA,EAEA,QAAA,QAAA,iBAAA,EAgFA,MAAa,qBAAsB,KAAI,aAAa,CAIlD,YAAY,MAAkB,GAA6B,MAAyB,CAClF,MAAM,MAAO,GAAI,KAAK,EADmC,KAAA,MAAA,4FAGzD,KAAK,aAAe,CAClB,GAAI,KAAI,gBAAgB,CACtB,UAAW,CACT,OAAA,MAAM,GAAG,IAAI,EAAE,UAAU,CACvB,QAAS,WACT,SAAU,QACV,aAAc,MAAM,MAAM,UAC3B,GAEH,QAAS,CAAC,YAAY,QAAA,aAAa,SAAS,EAC7C,GAOK,aAAW,CACnB,MAAO,CACL,SAAU,QAAA,qBAAqB,QAAA,aAAa,GAAG,EAC/C,WAAY,IAAI,WAAW,aAAa,CACtC,KAAM,QAAA,2BAA2B,KAAK,MAAM,IAAI,EAChD,UAAW,KAAK,MAAM,MAAM,UAC5B,oBAAqB,KAAK,MAAM,oBAChC,yBAA0B,KAAK,MAAM,yBACrC,0BAA2B,QAAA,2BAA2B,KAAK,MAAM,yBAAyB,EAC1F,uBAAwB,KAAK,MAAM,uBACnC,4BAA6B,KAAK,MAAM,4BACxC,aAAc,KAAK,MAAM,aAC1B,IApCP,QAAA,cAAA",
  "names": []
}
