{
  "version": 3,
  "sources": ["emr-terminate-cluster.ts"],
  "sourcesContent": ["import * as iam from '../../../aws-iam';\nimport * as sfn from '../../../aws-stepfunctions';\nimport { Stack } from '../../../core';\nimport { Construct } from 'constructs';\nimport { integrationResourceArn, validatePatternSupported } from '../private/task-utils';\n\n/**\n * Properties for EmrTerminateCluster\n *\n */\nexport interface EmrTerminateClusterProps extends sfn.TaskStateBaseProps {\n  /**\n   * The ClusterId to terminate.\n   */\n  readonly clusterId: string;\n}\n\n/**\n * A Step Functions Task to terminate an EMR Cluster.\n *\n */\nexport class EmrTerminateCluster extends sfn.TaskStateBase {\n  private static readonly SUPPORTED_INTEGRATION_PATTERNS: sfn.IntegrationPattern[] = [\n    sfn.IntegrationPattern.REQUEST_RESPONSE,\n    sfn.IntegrationPattern.RUN_JOB,\n  ];\n\n  protected readonly taskPolicies?: iam.PolicyStatement[];\n  protected readonly taskMetrics?: sfn.TaskMetricsConfig;\n\n  private readonly integrationPattern: sfn.IntegrationPattern;\n\n  constructor(scope: Construct, id: string, private readonly props: EmrTerminateClusterProps) {\n    super(scope, id, props);\n    this.integrationPattern = props.integrationPattern ?? sfn.IntegrationPattern.RUN_JOB;\n    validatePatternSupported(this.integrationPattern, EmrTerminateCluster.SUPPORTED_INTEGRATION_PATTERNS);\n\n    this.taskPolicies = this.createPolicyStatements();\n  }\n\n  /**\n   * @internal\n   */\n  protected _renderTask(): any {\n    return {\n      Resource: integrationResourceArn('elasticmapreduce', 'terminateCluster', this.integrationPattern),\n      Parameters: sfn.FieldUtils.renderObject({\n        ClusterId: this.props.clusterId,\n      }),\n    };\n  }\n\n  /**\n   * This generates the PolicyStatements required by the Task to call TerminateCluster.\n   */\n  private createPolicyStatements(): iam.PolicyStatement[] {\n    const stack = Stack.of(this);\n\n    const policyStatements = [\n      new iam.PolicyStatement({\n        actions: [\n          'elasticmapreduce:DescribeCluster',\n          'elasticmapreduce:TerminateJobFlows',\n        ],\n        resources: [\n          Stack.of(this).formatArn({\n            service: 'elasticmapreduce',\n            resource: 'cluster',\n            resourceName: '*',\n          }),\n        ],\n      }),\n    ];\n\n    if (this.integrationPattern === sfn.IntegrationPattern.RUN_JOB) {\n      policyStatements.push(new iam.PolicyStatement({\n        actions: ['events:PutTargets', 'events:PutRule', 'events:DescribeRule'],\n        resources: [stack.formatArn({\n          service: 'events',\n          resource: 'rule',\n          resourceName: 'StepFunctionsGetEventForEMRTerminateJobFlowsRule',\n        })],\n      }));\n    }\n\n    return policyStatements;\n  }\n}"],
  "mappings": "6NAAA,IAAA,QAAA,kBAAA,EACA,IAAA,QAAA,4BAAA,EACA,OAAA,QAAA,eAAA,EAEA,aAAA,QAAA,uBAAA,EAiBA,MAAa,2BAA4B,KAAI,aAAa,CAWxD,YAAY,MAAkB,GAA6B,MAA+B,QACxF,MAAM,MAAO,GAAI,KAAK,EADmC,KAAA,MAAA,kGAEzD,KAAK,mBAAkB,IAAG,MAAM,sBAAkB,MAAA,KAAA,OAAA,GAAI,IAAI,mBAAmB,QAC7E,aAAA,yBAAyB,KAAK,mBAAoB,oBAAoB,8BAA8B,EAEpG,KAAK,aAAe,KAAK,uBAAsB,EAMvC,aAAW,CACnB,MAAO,CACL,SAAU,aAAA,uBAAuB,mBAAoB,mBAAoB,KAAK,kBAAkB,EAChG,WAAY,IAAI,WAAW,aAAa,CACtC,UAAW,KAAK,MAAM,UACvB,GAOG,wBAAsB,CAC5B,KAAM,OAAQ,OAAA,MAAM,GAAG,IAAI,EAErB,iBAAmB,CACvB,GAAI,KAAI,gBAAgB,CACtB,QAAS,CACP,mCACA,sCAEF,UAAW,CACT,OAAA,MAAM,GAAG,IAAI,EAAE,UAAU,CACvB,QAAS,mBACT,SAAU,UACV,aAAc,IACf,GAEJ,GAGH,MAAI,MAAK,qBAAuB,IAAI,mBAAmB,SACrD,iBAAiB,KAAK,GAAI,KAAI,gBAAgB,CAC5C,QAAS,CAAC,oBAAqB,iBAAkB,qBAAqB,EACtE,UAAW,CAAC,MAAM,UAAU,CAC1B,QAAS,SACT,SAAU,OACV,aAAc,mDACf,CAAC,EACH,CAAC,EAGG,kBAhEX,QAAA,oBAAA,mJAC0B,oBAAA,+BAA2D,CACjF,IAAI,mBAAmB,iBACvB,IAAI,mBAAmB",
  "names": []
}
