{
  "version": 3,
  "sources": ["emr-add-step.ts"],
  "sourcesContent": ["import * as iam from '../../../aws-iam';\nimport * as sfn from '../../../aws-stepfunctions';\nimport { Stack } from '../../../core';\nimport { Construct } from 'constructs';\nimport { integrationResourceArn, validatePatternSupported } from '../private/task-utils';\n\n/**\n * The action to take when the cluster step fails.\n * @see https://docs.aws.amazon.com/emr/latest/APIReference/API_StepConfig.html\n *\n * Here, they are named as TERMINATE_JOB_FLOW, TERMINATE_CLUSTER, CANCEL_AND_WAIT, and CONTINUE respectively.\n *\n * @default CONTINUE\n *\n */\nexport enum ActionOnFailure {\n  /**\n   * Terminate the Cluster on Step Failure\n   */\n  TERMINATE_CLUSTER = 'TERMINATE_CLUSTER',\n\n  /**\n   * Cancel Step execution and enter WAITING state\n   */\n  CANCEL_AND_WAIT = 'CANCEL_AND_WAIT',\n\n  /**\n   * Continue to the next Step\n   */\n  CONTINUE = 'CONTINUE'\n}\n\n/**\n * Properties for EmrAddStep\n *\n */\nexport interface EmrAddStepProps extends sfn.TaskStateBaseProps {\n  /**\n   * The ClusterId to add the Step to.\n   */\n  readonly clusterId: string;\n\n  /**\n   * The name of the Step\n   *\n   * @see https://docs.aws.amazon.com/emr/latest/APIReference/API_StepConfig.html\n   */\n  readonly name: string;\n\n  /**\n   * The action to take when the cluster step fails.\n   *\n   * @see https://docs.aws.amazon.com/emr/latest/APIReference/API_StepConfig.html\n   *\n   * @default ActionOnFailure.CONTINUE\n   */\n  readonly actionOnFailure?: ActionOnFailure;\n\n  /**\n   * A path to a JAR file run during the step.\n   *\n   * @see https://docs.aws.amazon.com/emr/latest/APIReference/API_HadoopJarStepConfig.html\n   */\n  readonly jar: string;\n\n  /**\n   * The name of the main class in the specified Java file. If not specified, the JAR file should specify a Main-Class in its manifest file.\n   *\n   * @see https://docs.aws.amazon.com/emr/latest/APIReference/API_HadoopJarStepConfig.html\n   *\n   * @default - No mainClass\n   */\n  readonly mainClass?: string;\n\n  /**\n   * A list of command line arguments passed to the JAR file's main function when executed.\n   *\n   * @see https://docs.aws.amazon.com/emr/latest/APIReference/API_HadoopJarStepConfig.html\n   *\n   * @default - No args\n   */\n  readonly args?: string[];\n\n  /**\n   * A list of Java properties that are set when the step runs. You can use these properties to pass key value pairs to your main function.\n   *\n   * @see https://docs.aws.amazon.com/emr/latest/APIReference/API_HadoopJarStepConfig.html\n   *\n   * @default - No properties\n   */\n  readonly properties?: { [key: string]: string };\n}\n\n/**\n * A Step Functions Task to add a Step to an EMR Cluster\n *\n * The StepConfiguration is defined as Parameters in the state machine definition.\n *\n * OUTPUT: the StepId\n *\n */\nexport class EmrAddStep extends sfn.TaskStateBase {\n  private static readonly SUPPORTED_INTEGRATION_PATTERNS: sfn.IntegrationPattern[] = [\n    sfn.IntegrationPattern.REQUEST_RESPONSE,\n    sfn.IntegrationPattern.RUN_JOB,\n  ];\n\n  protected readonly taskPolicies?: iam.PolicyStatement[];\n  protected readonly taskMetrics?: sfn.TaskMetricsConfig;\n\n  private readonly actionOnFailure: ActionOnFailure;\n  private readonly integrationPattern: sfn.IntegrationPattern;\n\n  constructor(scope: Construct, id: string, private readonly props: EmrAddStepProps) {\n    super(scope, id, props);\n    this.actionOnFailure = props.actionOnFailure ?? ActionOnFailure.CONTINUE;\n    this.integrationPattern = props.integrationPattern ?? sfn.IntegrationPattern.RUN_JOB;\n\n    validatePatternSupported(this.integrationPattern, EmrAddStep.SUPPORTED_INTEGRATION_PATTERNS);\n    this.taskPolicies = this.createPolicyStatements();\n  }\n\n  /**\n   * @internal\n   */\n  protected _renderTask(): any {\n    return {\n      Resource: integrationResourceArn('elasticmapreduce', 'addStep', this.integrationPattern),\n      Parameters: sfn.FieldUtils.renderObject({\n        ClusterId: this.props.clusterId,\n        Step: {\n          Name: this.props.name,\n          ActionOnFailure: this.actionOnFailure.valueOf(),\n          HadoopJarStep: {\n            Jar: this.props.jar,\n            MainClass: this.props.mainClass,\n            Args: this.props.args,\n            Properties: (this.props.properties === undefined) ?\n              undefined :\n              Object.entries(this.props.properties).map(\n                kv => ({\n                  Key: kv[0],\n                  Value: kv[1],\n                }),\n              ),\n          },\n        },\n      }),\n    };\n  }\n\n  /**\n   * This generates the PolicyStatements required by the Task to call AddStep.\n   */\n  private createPolicyStatements(): iam.PolicyStatement[] {\n    const stack = Stack.of(this);\n\n    const policyStatements = [\n      new iam.PolicyStatement({\n        actions: [\n          'elasticmapreduce:AddJobFlowSteps',\n          'elasticmapreduce:DescribeStep',\n          'elasticmapreduce:CancelSteps',\n        ],\n        resources: [\n          stack.formatArn({\n            service: 'elasticmapreduce',\n            resource: 'cluster',\n            resourceName: '*',\n          }),\n        ],\n      }),\n    ];\n\n    if (this.integrationPattern === sfn.IntegrationPattern.RUN_JOB) {\n      policyStatements.push(new iam.PolicyStatement({\n        actions: ['events:PutTargets', 'events:PutRule', 'events:DescribeRule'],\n        resources: [stack.formatArn({\n          service: 'events',\n          resource: 'rule',\n          resourceName: 'StepFunctionsGetEventForEMRAddJobFlowStepsRule',\n        })],\n      }));\n    }\n\n    return policyStatements;\n  }\n}"],
  "mappings": "4OAAA,IAAA,QAAA,kBAAA,EACA,IAAA,QAAA,4BAAA,EACA,OAAA,QAAA,eAAA,EAEA,aAAA,QAAA,uBAAA,EAWA,GAAY,iBAAZ,AAAA,UAAY,iBAAe,CAIzB,iBAAA,kBAAA,oBAKA,iBAAA,gBAAA,kBAKA,iBAAA,SAAA,UACF,GAfY,gBAAA,QAAA,iBAAA,SAAA,gBAAe,CAAA,EAAA,EAsF3B,MAAa,kBAAmB,KAAI,aAAa,CAY/C,YAAY,MAAkB,GAA6B,MAAsB,WAC/E,MAAM,MAAO,GAAI,KAAK,EADmC,KAAA,MAAA,yFAEzD,KAAK,gBAAe,IAAG,MAAM,mBAAe,MAAA,KAAA,OAAA,GAAI,gBAAgB,SAChE,KAAK,mBAAkB,IAAG,MAAM,sBAAkB,MAAA,KAAA,OAAA,GAAI,IAAI,mBAAmB,QAE7E,aAAA,yBAAyB,KAAK,mBAAoB,WAAW,8BAA8B,EAC3F,KAAK,aAAe,KAAK,uBAAsB,EAMvC,aAAW,CACnB,MAAO,CACL,SAAU,aAAA,uBAAuB,mBAAoB,UAAW,KAAK,kBAAkB,EACvF,WAAY,IAAI,WAAW,aAAa,CACtC,UAAW,KAAK,MAAM,UACtB,KAAM,CACJ,KAAM,KAAK,MAAM,KACjB,gBAAiB,KAAK,gBAAgB,QAAO,EAC7C,cAAe,CACb,IAAK,KAAK,MAAM,IAChB,UAAW,KAAK,MAAM,UACtB,KAAM,KAAK,MAAM,KACjB,WAAa,KAAK,MAAM,aAAe,OACrC,OACA,OAAO,QAAQ,KAAK,MAAM,UAAU,EAAE,IACpC,IAAO,EACL,IAAK,GAAG,GACR,MAAO,GAAG,IACV,IAIX,GAOG,wBAAsB,CAC5B,KAAM,OAAQ,OAAA,MAAM,GAAG,IAAI,EAErB,iBAAmB,CACvB,GAAI,KAAI,gBAAgB,CACtB,QAAS,CACP,mCACA,gCACA,gCAEF,UAAW,CACT,MAAM,UAAU,CACd,QAAS,mBACT,SAAU,UACV,aAAc,IACf,GAEJ,GAGH,MAAI,MAAK,qBAAuB,IAAI,mBAAmB,SACrD,iBAAiB,KAAK,GAAI,KAAI,gBAAgB,CAC5C,QAAS,CAAC,oBAAqB,iBAAkB,qBAAqB,EACtE,UAAW,CAAC,MAAM,UAAU,CAC1B,QAAS,SACT,SAAU,OACV,aAAc,iDACf,CAAC,EACH,CAAC,EAGG,kBApFX,QAAA,WAAA,wHAC0B,WAAA,+BAA2D,CACjF,IAAI,mBAAmB,iBACvB,IAAI,mBAAmB",
  "names": []
}
