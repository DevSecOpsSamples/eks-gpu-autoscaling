{
  "version": 3,
  "sources": ["emr-modify-instance-fleet-by-name.ts"],
  "sourcesContent": ["import * as iam from '../../../aws-iam';\nimport * as sfn from '../../../aws-stepfunctions';\nimport { Stack } from '../../../core';\nimport { Construct } from 'constructs';\nimport { integrationResourceArn } from '../private/task-utils';\n\n/**\n * Properties for EmrModifyInstanceFleetByName\n *\n */\nexport interface EmrModifyInstanceFleetByNameProps extends sfn.TaskStateBaseProps {\n  /**\n   * The ClusterId to update.\n   */\n  readonly clusterId: string;\n\n  /**\n   * The InstanceFleetName to update.\n   */\n  readonly instanceFleetName: string;\n\n  /**\n   * The target capacity of On-Demand units for the instance fleet.\n   *\n   * @see https://docs.aws.amazon.com/emr/latest/APIReference/API_InstanceFleetModifyConfig.html\n   *\n   * @default - None\n   */\n  readonly targetOnDemandCapacity: number;\n\n  /**\n   * The target capacity of Spot units for the instance fleet.\n   *\n   * @see https://docs.aws.amazon.com/emr/latest/APIReference/API_InstanceFleetModifyConfig.html\n   *\n   * @default - None\n   */\n  readonly targetSpotCapacity: number;\n}\n\n/**\n * A Step Functions Task to to modify an InstanceFleet on an EMR Cluster.\n *\n */\nexport class EmrModifyInstanceFleetByName extends sfn.TaskStateBase {\n\n  protected readonly taskPolicies?: iam.PolicyStatement[];\n  protected readonly taskMetrics?: sfn.TaskMetricsConfig;\n\n  constructor(scope: Construct, id: string, private readonly props: EmrModifyInstanceFleetByNameProps) {\n    super(scope, id, props);\n\n    this.taskPolicies = [\n      new iam.PolicyStatement({\n        actions: [\n          'elasticmapreduce:ModifyInstanceFleet',\n          'elasticmapreduce:ListInstanceFleets',\n        ],\n        resources: [\n          Stack.of(this).formatArn({\n            service: 'elasticmapreduce',\n            resource: 'cluster',\n            resourceName: '*',\n          }),\n        ],\n      }),\n    ];\n  }\n\n  /**\n   * @internal\n   */\n  protected _renderTask(): any {\n    return {\n      Resource: integrationResourceArn('elasticmapreduce', 'modifyInstanceFleetByName',\n        sfn.IntegrationPattern.REQUEST_RESPONSE),\n      Parameters: sfn.FieldUtils.renderObject({\n        ClusterId: this.props.clusterId,\n        InstanceFleetName: this.props.instanceFleetName,\n        InstanceFleet: {\n          TargetOnDemandCapacity: this.props.targetOnDemandCapacity,\n          TargetSpotCapacity: this.props.targetSpotCapacity,\n        },\n      }),\n    };\n  }\n}"],
  "mappings": "sOAAA,IAAA,QAAA,kBAAA,EACA,IAAA,QAAA,4BAAA,EACA,OAAA,QAAA,eAAA,EAEA,aAAA,QAAA,uBAAA,EAwCA,MAAa,oCAAqC,KAAI,aAAa,CAKjE,YAAY,MAAkB,GAA6B,MAAwC,CACjG,MAAM,MAAO,GAAI,KAAK,EADmC,KAAA,MAAA,2GAGzD,KAAK,aAAe,CAClB,GAAI,KAAI,gBAAgB,CACtB,QAAS,CACP,uCACA,uCAEF,UAAW,CACT,OAAA,MAAM,GAAG,IAAI,EAAE,UAAU,CACvB,QAAS,mBACT,SAAU,UACV,aAAc,IACf,GAEJ,GAOK,aAAW,CACnB,MAAO,CACL,SAAU,aAAA,uBAAuB,mBAAoB,4BACnD,IAAI,mBAAmB,gBAAgB,EACzC,WAAY,IAAI,WAAW,aAAa,CACtC,UAAW,KAAK,MAAM,UACtB,kBAAmB,KAAK,MAAM,kBAC9B,cAAe,CACb,uBAAwB,KAAK,MAAM,uBACnC,mBAAoB,KAAK,MAAM,oBAElC,IAvCP,QAAA,6BAAA",
  "names": []
}
