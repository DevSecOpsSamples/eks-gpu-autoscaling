{
  "version": 3,
  "sources": ["run-ecs-ec2-task.ts"],
  "sourcesContent": ["import * as ec2 from '../../../aws-ec2';\nimport * as ecs from '../../../aws-ecs';\nimport { CommonEcsRunTaskProps, EcsRunTaskBase } from './run-ecs-task-base';\n\n/**\n * Properties to run an ECS task on EC2 in StepFunctionsan ECS\n * @deprecated use `EcsRunTask` and `EcsRunTaskProps`\n */\nexport interface RunEcsEc2TaskProps extends CommonEcsRunTaskProps {\n  /**\n   * In what subnets to place the task's ENIs\n   *\n   * (Only applicable in case the TaskDefinition is configured for AwsVpc networking)\n   *\n   * @default Private subnets\n   */\n  readonly subnets?: ec2.SubnetSelection;\n\n  /**\n   * Existing security group to use for the task's ENIs\n   *\n   * (Only applicable in case the TaskDefinition is configured for AwsVpc networking)\n   *\n   * @default A new security group is created\n   */\n  readonly securityGroup?: ec2.ISecurityGroup;\n\n  /**\n   * Placement constraints\n   *\n   * @default No constraints\n   */\n  readonly placementConstraints?: ecs.PlacementConstraint[];\n\n  /**\n   * Placement strategies\n   *\n   * @default No strategies\n   */\n  readonly placementStrategies?: ecs.PlacementStrategy[];\n}\n\n/**\n * Run an ECS/EC2 Task in a StepFunctions workflow\n *\n * @deprecated - replaced by `EcsRunTask`\n */\nexport class RunEcsEc2Task extends EcsRunTaskBase {\n  constructor(props: RunEcsEc2TaskProps) {\n    if (!props.taskDefinition.isEc2Compatible) {\n      throw new Error('Supplied TaskDefinition is not configured for compatibility with EC2');\n    }\n\n    if (!props.cluster.hasEc2Capacity) {\n      throw new Error('Cluster for this service needs Ec2 capacity. Call addXxxCapacity() on the cluster.');\n    }\n\n    if (!props.taskDefinition.defaultContainer) {\n      throw new Error('A TaskDefinition must have at least one essential container');\n    }\n\n    super({\n      ...props,\n      parameters: {\n        LaunchType: 'EC2',\n        PlacementConstraints: noEmpty(flatten((props.placementConstraints || []).map(c => c.toJson().map(uppercaseKeys)))),\n        PlacementStrategy: noEmpty(flatten((props.placementStrategies || []).map(c => c.toJson().map(uppercaseKeys)))),\n      },\n    });\n\n    if (props.taskDefinition.networkMode === ecs.NetworkMode.AWS_VPC) {\n      this.configureAwsVpcNetworking(props.cluster.vpc, undefined, props.subnets, props.securityGroup);\n    } else {\n      // Either None, Bridge or Host networking. Copy SecurityGroup from ASG.\n      validateNoNetworkingProps(props);\n      this.connections.addSecurityGroup(...props.cluster.connections.securityGroups);\n    }\n  }\n}\n\n/**\n * Validate combinations of networking arguments\n */\nfunction validateNoNetworkingProps(props: RunEcsEc2TaskProps) {\n  if (props.subnets !== undefined || props.securityGroup !== undefined) {\n    throw new Error('vpcPlacement and securityGroup can only be used in AwsVpc networking mode');\n  }\n}\n\nfunction uppercaseKeys(obj: {[key: string]: any}): {[key: string]: any} {\n  const ret: {[key: string]: any} = {};\n  for (const key of Object.keys(obj)) {\n    ret[key.slice(0, 1).toUpperCase() + key.slice(1)] = obj[key];\n  }\n  return ret;\n}\n\nfunction flatten<A>(xs: A[][]): A[] {\n  return Array.prototype.concat([], ...xs);\n}\n\nfunction noEmpty<A>(xs: A[]): A[] | undefined {\n  if (xs.length === 0) { return undefined; }\n  return xs;\n}\n"],
  "mappings": "yJACA,IAAA,QAAA,kBAAA,EACA,oBAAA,QAAA,qBAAA,EA6CA,MAAa,qBAAsB,qBAAA,cAAc,CAC/C,YAAY,MAAyB,CACnC,GAAI,CAAC,MAAM,eAAe,gBACxB,KAAM,IAAI,OAAM,sEAAsE,EAGxF,GAAI,CAAC,MAAM,QAAQ,eACjB,KAAM,IAAI,OAAM,oFAAoF,EAGtG,GAAI,CAAC,MAAM,eAAe,iBACxB,KAAM,IAAI,OAAM,6DAA6D,EAG/E,MAAM,IACD,MACH,WAAY,CACV,WAAY,MACZ,qBAAsB,QAAQ,QAAS,OAAM,sBAAwB,CAAA,GAAI,IAAI,GAAK,EAAE,OAAM,EAAG,IAAI,aAAa,CAAC,CAAC,CAAC,EACjH,kBAAmB,QAAQ,QAAS,OAAM,qBAAuB,CAAA,GAAI,IAAI,GAAK,EAAE,OAAM,EAAG,IAAI,aAAa,CAAC,CAAC,CAAC,GAEhH,EAED,AAAI,MAAM,eAAe,cAAgB,IAAI,YAAY,QACvD,KAAK,0BAA0B,MAAM,QAAQ,IAAK,OAAW,MAAM,QAAS,MAAM,aAAa,EAG/F,2BAA0B,KAAK,EAC/B,KAAK,YAAY,iBAAiB,GAAG,MAAM,QAAQ,YAAY,cAAc,IA5BnF,QAAA,cAAA,iIAoCA,mCAAmC,MAAyB,CAC1D,GAAI,MAAM,UAAY,QAAa,MAAM,gBAAkB,OACzD,KAAM,IAAI,OAAM,2EAA2E,CAE/F,CAEA,uBAAuB,IAAyB,CAC9C,KAAM,KAA4B,CAAA,EAClC,SAAW,OAAO,QAAO,KAAK,GAAG,EAC/B,IAAI,IAAI,MAAM,EAAG,CAAC,EAAE,YAAW,EAAK,IAAI,MAAM,CAAC,GAAK,IAAI,KAE1D,MAAO,IACT,CAEA,iBAAoB,GAAS,CAC3B,MAAO,OAAM,UAAU,OAAO,CAAA,EAAI,GAAG,EAAE,CACzC,CAEA,iBAAoB,GAAO,CACzB,GAAI,GAAG,SAAW,EAClB,MAAO,GACT",
  "names": []
}
