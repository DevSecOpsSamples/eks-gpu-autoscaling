"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CallApiGatewayEndpointBase=void 0;const iam=require("../../../aws-iam"),sfn=require("../../../aws-stepfunctions"),task_utils_1=require("../private/task-utils"),base_types_1=require("./base-types");class CallApiGatewayEndpointBase extends sfn.TaskStateBase{constructor(scope,id,props){var _a;super(scope,id,props);if(this.baseProps=props,this.integrationPattern=(_a=props.integrationPattern)!==null&&_a!==void 0?_a:sfn.IntegrationPattern.REQUEST_RESPONSE,task_utils_1.validatePatternSupported(this.integrationPattern,CallApiGatewayEndpointBase.SUPPORTED_INTEGRATION_PATTERNS),this.integrationPattern===sfn.IntegrationPattern.WAIT_FOR_TASK_TOKEN&&!sfn.FieldUtils.containsTaskToken(this.baseProps.headers))throw new Error("Task Token is required in `headers` for WAIT_FOR_TASK_TOKEN pattern. Use JsonPath.taskToken to set the token.")}_renderTask(){var _a,_b,_c;return{Resource:task_utils_1.integrationResourceArn("apigateway","invoke",this.integrationPattern),Parameters:sfn.FieldUtils.renderObject({ApiEndpoint:this.apiEndpoint,Method:this.baseProps.method,Headers:(_a=this.baseProps.headers)===null||_a===void 0?void 0:_a.value,Stage:this.stageName,Path:this.baseProps.apiPath,QueryParameters:(_b=this.baseProps.queryParameters)===null||_b===void 0?void 0:_b.value,RequestBody:(_c=this.baseProps.requestBody)===null||_c===void 0?void 0:_c.value,AuthType:this.baseProps.authType?this.baseProps.authType:"NO_AUTH"})}}createPolicyStatements(){return this.baseProps.authType===base_types_1.AuthType.NO_AUTH?[]:[new iam.PolicyStatement({resources:[this.arnForExecuteApi],actions:["execute-api:Invoke"]})]}}exports.CallApiGatewayEndpointBase=CallApiGatewayEndpointBase,CallApiGatewayEndpointBase.SUPPORTED_INTEGRATION_PATTERNS=[sfn.IntegrationPattern.REQUEST_RESPONSE,sfn.IntegrationPattern.WAIT_FOR_TASK_TOKEN];
//# sourceMappingURL=base.js.map
