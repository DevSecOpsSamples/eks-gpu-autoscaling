"use strict";var _a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.HttpMethods=exports.EksCall=void 0;const jsiiDeprecationWarnings=require("../../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),sfn=require("../../../aws-stepfunctions"),task_utils_1=require("../private/task-utils");class EksCall extends sfn.TaskStateBase{constructor(scope,id,props){var _b;super(scope,id,props);this.props=props,jsiiDeprecationWarnings.aws_cdk_lib_aws_stepfunctions_tasks_EksCallProps(props),this.integrationPattern=(_b=props.integrationPattern)!==null&&_b!==void 0?_b:sfn.IntegrationPattern.REQUEST_RESPONSE,task_utils_1.validatePatternSupported(this.integrationPattern,EksCall.SUPPORTED_INTEGRATION_PATTERNS);try{this.clusterEndpoint=this.props.cluster.clusterEndpoint}catch{throw new Error('The "clusterEndpoint" property must be specified when using an imported Cluster.')}try{this.clusterCertificateAuthorityData=this.props.cluster.clusterCertificateAuthorityData}catch{throw new Error('The "clusterCertificateAuthorityData" property must be specified when using an imported Cluster.')}}_renderTask(){var _b;return{Resource:task_utils_1.integrationResourceArn("eks","call",this.integrationPattern),Parameters:sfn.FieldUtils.renderObject({ClusterName:this.props.cluster.clusterName,CertificateAuthority:this.clusterCertificateAuthorityData,Endpoint:this.clusterEndpoint,Method:this.props.httpMethod,Path:this.props.httpPath,QueryParameters:this.props.queryParameters,RequestBody:(_b=this.props.requestBody)===null||_b===void 0?void 0:_b.value})}}}exports.EksCall=EksCall,_a=JSII_RTTI_SYMBOL_1,EksCall[_a]={fqn:"aws-cdk-lib.aws_stepfunctions_tasks.EksCall",version:"2.20.0"},EksCall.SUPPORTED_INTEGRATION_PATTERNS=[sfn.IntegrationPattern.REQUEST_RESPONSE];var HttpMethods;(function(HttpMethods2){HttpMethods2.GET="GET",HttpMethods2.POST="POST",HttpMethods2.PUT="PUT",HttpMethods2.DELETE="DELETE",HttpMethods2.PATCH="PATCH",HttpMethods2.HEAD="HEAD"})(HttpMethods=exports.HttpMethods||(exports.HttpMethods={}));
//# sourceMappingURL=call.js.map
