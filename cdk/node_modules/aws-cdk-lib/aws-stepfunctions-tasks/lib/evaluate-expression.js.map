{
  "version": 3,
  "sources": ["evaluate-expression.ts"],
  "sourcesContent": ["import * as path from 'path';\nimport * as iam from '../../aws-iam';\nimport * as lambda from '../../aws-lambda';\nimport * as sfn from '../../aws-stepfunctions';\nimport { Construct } from 'constructs';\n\n/**\n * Properties for EvaluateExpression\n *\n */\nexport interface EvaluateExpressionProps extends sfn.TaskStateBaseProps {\n  /**\n   * The expression to evaluate. The expression may contain state paths.\n   *\n   * Example value: `'$.a + $.b'`\n   */\n  readonly expression: string;\n\n  /**\n   * The runtime language to use to evaluate the expression.\n   *\n   * @default lambda.Runtime.NODEJS_14_X\n   */\n  readonly runtime?: lambda.Runtime;\n}\n\n/**\n * The event received by the Lambda function\n *\n * @internal\n */\nexport interface Event {\n  /**\n   * The expression to evaluate\n   */\n  readonly expression: string;\n\n  /**\n   * The expression attribute values\n   */\n  readonly expressionAttributeValues: { [key: string]: any };\n}\n\n/**\n * A Step Functions Task to evaluate an expression\n *\n * OUTPUT: the output of this task is the evaluated expression.\n *\n */\nexport class EvaluateExpression extends sfn.TaskStateBase {\n  protected readonly taskMetrics?: sfn.TaskMetricsConfig;\n  protected readonly taskPolicies?: iam.PolicyStatement[];\n\n  private readonly evalFn: lambda.SingletonFunction;\n\n  constructor(scope: Construct, id: string, private readonly props: EvaluateExpressionProps) {\n    super(scope, id, props);\n\n    this.evalFn = createEvalFn(this.props.runtime ?? lambda.Runtime.NODEJS_14_X, this);\n\n    this.taskPolicies = [\n      new iam.PolicyStatement({\n        resources: this.evalFn.resourceArnsForGrantInvoke,\n        actions: ['lambda:InvokeFunction'],\n      }),\n    ];\n  }\n\n  /**\n   * @internal\n   */\n  protected _renderTask(): any {\n    const matches = this.props.expression.match(/\\$[.\\[][.a-zA-Z[\\]0-9-_]+/g);\n\n    let expressionAttributeValues = {};\n    if (matches) {\n      expressionAttributeValues = matches.reduce(\n        (acc, m) => ({\n          ...acc,\n          [m]: sfn.JsonPath.stringAt(m), // It's okay to always use `stringAt` here\n        }),\n        {},\n      );\n    }\n\n    const parameters: Event = {\n      expression: this.props.expression,\n      expressionAttributeValues,\n    };\n    return {\n      Resource: this.evalFn.functionArn,\n      Parameters: sfn.FieldUtils.renderObject(parameters),\n    };\n  }\n}\n\nfunction createEvalFn(runtime: lambda.Runtime, scope: Construct) {\n  const lambdaPurpose = 'Eval';\n\n  const nodeJsGuids = {\n    [lambda.Runtime.NODEJS_14_X.name]: 'da2d1181-604e-4a45-8694-1a6abd7fe42d',\n    [lambda.Runtime.NODEJS_12_X.name]: '2b81e383-aad2-44db-8aaf-b4809ae0e3b4',\n    [lambda.Runtime.NODEJS_10_X.name]: 'a0d2ce44-871b-4e74-87a1-f5e63d7c3bdc',\n  };\n\n  switch (runtime) {\n    case lambda.Runtime.NODEJS_14_X:\n    case lambda.Runtime.NODEJS_12_X:\n    case lambda.Runtime.NODEJS_10_X:\n      const uuid = nodeJsGuids[runtime.name];\n      if (uuid) {\n        return new lambda.SingletonFunction(scope, 'EvalFunction', {\n          runtime,\n          uuid,\n          handler: 'index.handler',\n          lambdaPurpose,\n          code: lambda.Code.fromAsset(path.join(__dirname, 'eval-nodejs-handler')),\n        });\n      }\n      break;\n  }\n\n  throw new Error(`The runtime ${runtime.name} is currently not supported.`);\n}\n"],
  "mappings": "yNAAA,KAAA,QAAA,MAAA,EACA,IAAA,QAAA,eAAA,EACA,OAAA,QAAA,kBAAA,EACA,IAAA,QAAA,yBAAA,EA8CA,MAAa,0BAA2B,KAAI,aAAa,CAMvD,YAAY,MAAkB,GAA6B,MAA8B,QACvF,MAAM,MAAO,GAAI,KAAK,EADmC,KAAA,MAAA,iGAGzD,KAAK,OAAS,aAAY,IAAC,KAAK,MAAM,WAAO,MAAA,KAAA,OAAA,GAAI,OAAO,QAAQ,YAAa,IAAI,EAEjF,KAAK,aAAe,CAClB,GAAI,KAAI,gBAAgB,CACtB,UAAW,KAAK,OAAO,2BACvB,QAAS,CAAC,uBAAuB,EAClC,GAOK,aAAW,CACnB,KAAM,SAAU,KAAK,MAAM,WAAW,MAAM,4BAA4B,EAExE,GAAI,2BAA4B,CAAA,EAChC,AAAI,SACF,2BAA4B,QAAQ,OAClC,CAAC,IAAK,IAAO,KACR,KACF,GAAI,IAAI,SAAS,SAAS,CAAC,IAE9B,CAAA,CAAE,GAIN,KAAM,YAAoB,CACxB,WAAY,KAAK,MAAM,WACvB,2BAEF,MAAO,CACL,SAAU,KAAK,OAAO,YACtB,WAAY,IAAI,WAAW,aAAa,UAAU,IA1CxD,QAAA,mBAAA,gJA+CA,sBAAsB,QAAyB,MAAgB,CAC7D,KAAM,eAAgB,OAEhB,YAAc,EACjB,OAAO,QAAQ,YAAY,MAAO,wCAClC,OAAO,QAAQ,YAAY,MAAO,wCAClC,OAAO,QAAQ,YAAY,MAAO,wCAGrC,OAAQ,aACD,QAAO,QAAQ,gBACf,QAAO,QAAQ,gBACf,QAAO,QAAQ,YAClB,KAAM,MAAO,YAAY,QAAQ,MACjC,GAAI,KACF,MAAO,IAAI,QAAO,kBAAkB,MAAO,eAAgB,CACzD,QACA,KACA,QAAS,gBACT,cACA,KAAM,OAAO,KAAK,UAAU,KAAK,KAAK,UAAW,qBAAqB,CAAC,EACxE,EAEH,MAGJ,KAAM,IAAI,OAAM,eAAe,QAAQ,kCAAkC,CAC3E",
  "names": []
}
