{
  "version": 3,
  "sources": ["start-execution.ts"],
  "sourcesContent": ["import * as iam from '../../../aws-iam';\nimport * as sfn from '../../../aws-stepfunctions';\nimport { ArnFormat, Stack } from '../../../core';\nimport { Construct } from 'constructs';\nimport { integrationResourceArn, validatePatternSupported } from '../private/task-utils';\n\n/**\n * Properties for StartExecution\n */\nexport interface StepFunctionsStartExecutionProps extends sfn.TaskStateBaseProps {\n  /**\n   * The Step Functions state machine to start the execution on.\n   */\n  readonly stateMachine: sfn.IStateMachine;\n\n  /**\n   * The JSON input for the execution, same as that of StartExecution.\n   *\n   * @see https://docs.aws.amazon.com/step-functions/latest/apireference/API_StartExecution.html\n   *\n   * @default - The state input (JSON path '$')\n   */\n  readonly input?: sfn.TaskInput;\n\n  /**\n   * The name of the execution, same as that of StartExecution.\n   *\n   * @see https://docs.aws.amazon.com/step-functions/latest/apireference/API_StartExecution.html\n   *\n   * @default - None\n   */\n  readonly name?: string;\n\n  /**\n   * Pass the execution ID from the context object to the execution input.\n   * This allows the Step Functions UI to link child executions from parent executions, making it easier to trace execution flow across state machines.\n   *\n   * If you set this property to `true`, the `input` property must be an object (provided by `sfn.TaskInput.fromObject`) or omitted entirely.\n   *\n   * @see https://docs.aws.amazon.com/step-functions/latest/dg/concepts-nested-workflows.html#nested-execution-startid\n   *\n   * @default - false\n   */\n  readonly associateWithParent?: boolean;\n}\n\n/**\n * A Step Functions Task to call StartExecution on another state machine.\n *\n * It supports three service integration patterns: REQUEST_RESPONSE, RUN_JOB, and WAIT_FOR_TASK_TOKEN.\n */\nexport class StepFunctionsStartExecution extends sfn.TaskStateBase {\n  private static readonly SUPPORTED_INTEGRATION_PATTERNS = [\n    sfn.IntegrationPattern.REQUEST_RESPONSE,\n    sfn.IntegrationPattern.RUN_JOB,\n    sfn.IntegrationPattern.WAIT_FOR_TASK_TOKEN,\n  ];\n\n  protected readonly taskMetrics?: sfn.TaskMetricsConfig;\n  protected readonly taskPolicies?: iam.PolicyStatement[];\n\n  private readonly integrationPattern: sfn.IntegrationPattern;\n\n  constructor(scope: Construct, id: string, private readonly props: StepFunctionsStartExecutionProps) {\n    super(scope, id, props);\n\n    this.integrationPattern = props.integrationPattern || sfn.IntegrationPattern.REQUEST_RESPONSE;\n    validatePatternSupported(this.integrationPattern, StepFunctionsStartExecution.SUPPORTED_INTEGRATION_PATTERNS);\n\n    if (this.integrationPattern === sfn.IntegrationPattern.WAIT_FOR_TASK_TOKEN && !sfn.FieldUtils.containsTaskToken(props.input)) {\n      throw new Error('Task Token is required in `input` for callback. Use JsonPath.taskToken to set the token.');\n    }\n\n    if (this.props.associateWithParent && props.input && props.input.type !== sfn.InputType.OBJECT) {\n      throw new Error('Could not enable `associateWithParent` because `input` is taken directly from a JSON path. Use `sfn.TaskInput.fromObject` instead.');\n    }\n\n    this.taskPolicies = this.createScopedAccessPolicy();\n  }\n\n  /**\n   * @internal\n   */\n  protected _renderTask(): any {\n    // suffix of ':2' indicates that the output of the nested state machine should be JSON\n    // suffix is only applicable when waiting for a nested state machine to complete (RUN_JOB)\n    // https://docs.aws.amazon.com/step-functions/latest/dg/connect-stepfunctions.html\n    const suffix = this.integrationPattern === sfn.IntegrationPattern.RUN_JOB ? ':2' : '';\n    let input: any;\n    if (this.props.associateWithParent) {\n      const associateWithParentEntry = {\n        AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID: sfn.JsonPath.stringAt('$$.Execution.Id'),\n      };\n      input = this.props.input ? { ...this.props.input.value, ...associateWithParentEntry } : associateWithParentEntry;\n    } else {\n      input = this.props.input ? this.props.input.value: sfn.TaskInput.fromJsonPathAt('$').value;\n    }\n\n    return {\n      Resource: `${integrationResourceArn('states', 'startExecution', this.integrationPattern)}${suffix}`,\n      Parameters: sfn.FieldUtils.renderObject({\n        Input: input,\n        StateMachineArn: this.props.stateMachine.stateMachineArn,\n        Name: this.props.name,\n      }),\n    };\n  }\n\n  /**\n   * As StateMachineArn is extracted automatically from the state machine object included in the constructor,\n   *\n   * the scoped access policy should be generated accordingly.\n   *\n   * This means the action of StartExecution should be restricted on the given state machine, instead of being granted to all the resources (*).\n   */\n  private createScopedAccessPolicy(): iam.PolicyStatement[] {\n    const stack = Stack.of(this);\n\n    const policyStatements = [\n      new iam.PolicyStatement({\n        actions: ['states:StartExecution'],\n        resources: [this.props.stateMachine.stateMachineArn],\n      }),\n    ];\n\n    // Step Functions use Cloud Watch managed rules to deal with synchronous tasks.\n    if (this.integrationPattern === sfn.IntegrationPattern.RUN_JOB) {\n      policyStatements.push(\n        new iam.PolicyStatement({\n          actions: ['states:DescribeExecution', 'states:StopExecution'],\n          // https://docs.aws.amazon.com/step-functions/latest/dg/concept-create-iam-advanced.html#concept-create-iam-advanced-execution\n          resources: [\n            stack.formatArn({\n              service: 'states',\n              resource: 'execution',\n              arnFormat: ArnFormat.COLON_RESOURCE_NAME,\n              resourceName: `${stack.splitArn(this.props.stateMachine.stateMachineArn, ArnFormat.COLON_RESOURCE_NAME).resourceName}*`,\n            }),\n          ],\n        }),\n      );\n\n      policyStatements.push(\n        new iam.PolicyStatement({\n          actions: ['events:PutTargets', 'events:PutRule', 'events:DescribeRule'],\n          resources: [\n            stack.formatArn({\n              service: 'events',\n              resource: 'rule',\n              resourceName: 'StepFunctionsGetEventsForStepFunctionsExecutionRule',\n            }),\n          ],\n        }),\n      );\n    }\n\n    return policyStatements;\n  }\n}\n"],
  "mappings": "qOAAA,IAAA,QAAA,kBAAA,EACA,IAAA,QAAA,4BAAA,EACA,OAAA,QAAA,eAAA,EAEA,aAAA,QAAA,uBAAA,EA+CA,MAAa,mCAAoC,KAAI,aAAa,CAYhE,YAAY,MAAkB,GAA6B,MAAuC,CAChG,MAAM,MAAO,GAAI,KAAK,EAKtB,GANyD,KAAA,MAAA,0GAGzD,KAAK,mBAAqB,MAAM,oBAAsB,IAAI,mBAAmB,iBAC7E,aAAA,yBAAyB,KAAK,mBAAoB,4BAA4B,8BAA8B,EAExG,KAAK,qBAAuB,IAAI,mBAAmB,qBAAuB,CAAC,IAAI,WAAW,kBAAkB,MAAM,KAAK,EACzH,KAAM,IAAI,OAAM,0FAA0F,EAG5G,GAAI,KAAK,MAAM,qBAAuB,MAAM,OAAS,MAAM,MAAM,OAAS,IAAI,UAAU,OACtF,KAAM,IAAI,OAAM,oIAAoI,EAGtJ,KAAK,aAAe,KAAK,yBAAwB,EAMzC,aAAW,CAInB,KAAM,QAAS,KAAK,qBAAuB,IAAI,mBAAmB,QAAU,KAAO,GACnF,GAAI,OACJ,GAAI,KAAK,MAAM,oBAAqB,CAClC,KAAM,0BAA2B,CAC/B,2CAA4C,IAAI,SAAS,SAAS,iBAAiB,GAErF,MAAQ,KAAK,MAAM,MAAQ,IAAK,KAAK,MAAM,MAAM,SAAU,wBAAwB,EAAK,6BAExF,OAAQ,KAAK,MAAM,MAAQ,KAAK,MAAM,MAAM,MAAO,IAAI,UAAU,eAAe,GAAG,EAAE,MAGvF,MAAO,CACL,SAAU,GAAG,aAAA,uBAAuB,SAAU,iBAAkB,KAAK,kBAAkB,IAAI,SAC3F,WAAY,IAAI,WAAW,aAAa,CACtC,MAAO,MACP,gBAAiB,KAAK,MAAM,aAAa,gBACzC,KAAM,KAAK,MAAM,KAClB,GAWG,0BAAwB,CAC9B,KAAM,OAAQ,OAAA,MAAM,GAAG,IAAI,EAErB,iBAAmB,CACvB,GAAI,KAAI,gBAAgB,CACtB,QAAS,CAAC,uBAAuB,EACjC,UAAW,CAAC,KAAK,MAAM,aAAa,eAAe,EACpD,GAIH,MAAI,MAAK,qBAAuB,IAAI,mBAAmB,SACrD,kBAAiB,KACf,GAAI,KAAI,gBAAgB,CACtB,QAAS,CAAC,2BAA4B,sBAAsB,EAE5D,UAAW,CACT,MAAM,UAAU,CACd,QAAS,SACT,SAAU,YACV,UAAW,OAAA,UAAU,oBACrB,aAAc,GAAG,MAAM,SAAS,KAAK,MAAM,aAAa,gBAAiB,OAAA,UAAU,mBAAmB,EAAE,gBACzG,GAEJ,CAAC,EAGJ,iBAAiB,KACf,GAAI,KAAI,gBAAgB,CACtB,QAAS,CAAC,oBAAqB,iBAAkB,qBAAqB,EACtE,UAAW,CACT,MAAM,UAAU,CACd,QAAS,SACT,SAAU,OACV,aAAc,sDACf,GAEJ,CAAC,GAIC,kBAzGX,QAAA,4BAAA,2KAC0B,4BAAA,+BAAiC,CACvD,IAAI,mBAAmB,iBACvB,IAAI,mBAAmB,QACvB,IAAI,mBAAmB",
  "names": []
}
