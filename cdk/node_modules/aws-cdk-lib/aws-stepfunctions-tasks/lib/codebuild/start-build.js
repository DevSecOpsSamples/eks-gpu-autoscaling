"use strict";var _a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CodeBuildStartBuild=void 0;const jsiiDeprecationWarnings=require("../../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),codebuild=require("../../../aws-codebuild"),iam=require("../../../aws-iam"),sfn=require("../../../aws-stepfunctions"),cdk=require("../../../core"),task_utils_1=require("../private/task-utils");class CodeBuildStartBuild extends sfn.TaskStateBase{constructor(scope,id,props){var _b;super(scope,id,props);this.props=props,jsiiDeprecationWarnings.aws_cdk_lib_aws_stepfunctions_tasks_CodeBuildStartBuildProps(props),this.integrationPattern=(_b=props.integrationPattern)!==null&&_b!==void 0?_b:sfn.IntegrationPattern.REQUEST_RESPONSE,task_utils_1.validatePatternSupported(this.integrationPattern,CodeBuildStartBuild.SUPPORTED_INTEGRATION_PATTERNS),this.taskMetrics={metricPrefixSingular:"CodeBuildProject",metricPrefixPlural:"CodeBuildProjects",metricDimensions:{ProjectArn:this.props.project.projectArn}},this.taskPolicies=this.configurePolicyStatements()}configurePolicyStatements(){let policyStatements=[new iam.PolicyStatement({resources:[this.props.project.projectArn],actions:["codebuild:StartBuild","codebuild:StopBuild","codebuild:BatchGetBuilds","codebuild:BatchGetReports"]})];return this.integrationPattern===sfn.IntegrationPattern.RUN_JOB&&policyStatements.push(new iam.PolicyStatement({actions:["events:PutTargets","events:PutRule","events:DescribeRule"],resources:[cdk.Stack.of(this).formatArn({service:"events",resource:"rule/StepFunctionsGetEventForCodeBuildStartBuildRule"})]})),policyStatements}_renderTask(){return{Resource:task_utils_1.integrationResourceArn("codebuild","startBuild",this.integrationPattern),Parameters:sfn.FieldUtils.renderObject({ProjectName:this.props.project.projectName,EnvironmentVariablesOverride:this.props.environmentVariablesOverride?this.serializeEnvVariables(this.props.environmentVariablesOverride):void 0})}}serializeEnvVariables(environmentVariables){return Object.keys(environmentVariables).map(name=>({Name:name,Type:environmentVariables[name].type||codebuild.BuildEnvironmentVariableType.PLAINTEXT,Value:environmentVariables[name].value}))}}exports.CodeBuildStartBuild=CodeBuildStartBuild,_a=JSII_RTTI_SYMBOL_1,CodeBuildStartBuild[_a]={fqn:"aws-cdk-lib.aws_stepfunctions_tasks.CodeBuildStartBuild",version:"2.20.0"},CodeBuildStartBuild.SUPPORTED_INTEGRATION_PATTERNS=[sfn.IntegrationPattern.REQUEST_RESPONSE,sfn.IntegrationPattern.RUN_JOB];
//# sourceMappingURL=start-build.js.map
