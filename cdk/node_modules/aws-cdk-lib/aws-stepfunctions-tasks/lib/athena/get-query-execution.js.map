{
  "version": 3,
  "sources": ["get-query-execution.ts"],
  "sourcesContent": ["import * as iam from '../../../aws-iam';\nimport * as sfn from '../../../aws-stepfunctions';\nimport { Construct } from 'constructs';\nimport { integrationResourceArn, validatePatternSupported } from '../private/task-utils';\n\n/**\n * Properties for getting a Query Execution\n */\nexport interface AthenaGetQueryExecutionProps extends sfn.TaskStateBaseProps {\n  /**\n   * Query that will be retrieved\n   *\n   * Example value: `adfsaf-23trf23-f23rt23`\n   */\n  readonly queryExecutionId: string;\n}\n\n/**\n * Get an Athena Query Execution as a Task\n *\n * @see https://docs.aws.amazon.com/step-functions/latest/dg/connect-athena.html\n */\nexport class AthenaGetQueryExecution extends sfn.TaskStateBase {\n\n  private static readonly SUPPORTED_INTEGRATION_PATTERNS: sfn.IntegrationPattern[] = [\n    sfn.IntegrationPattern.REQUEST_RESPONSE,\n  ];\n\n  protected readonly taskMetrics?: sfn.TaskMetricsConfig;\n  protected readonly taskPolicies?: iam.PolicyStatement[];\n\n  private readonly integrationPattern: sfn.IntegrationPattern;\n\n  constructor(scope: Construct, id: string, private readonly props: AthenaGetQueryExecutionProps) {\n    super(scope, id, props);\n    this.integrationPattern = props.integrationPattern ?? sfn.IntegrationPattern.REQUEST_RESPONSE;\n\n    validatePatternSupported(this.integrationPattern, AthenaGetQueryExecution.SUPPORTED_INTEGRATION_PATTERNS);\n\n    this.taskPolicies = [\n      new iam.PolicyStatement({\n        resources: ['*'], // Grant access to all workgroups as it can not be specified in the request https://docs.aws.amazon.com/athena/latest/ug/workgroups-iam-policy.html\n        actions: ['athena:getQueryExecution'],\n      }),\n    ];\n  }\n\n  /**\n   * Provides the Athena get query execution service integration task configuration\n   * @internal\n   */\n  protected _renderTask(): any {\n    return {\n      Resource: integrationResourceArn('athena', 'getQueryExecution', this.integrationPattern),\n      Parameters: sfn.FieldUtils.renderObject({\n        QueryExecutionId: this.props.queryExecutionId,\n      }),\n    };\n  }\n}\n\n"],
  "mappings": "iOAAA,IAAA,QAAA,kBAAA,EACA,IAAA,QAAA,4BAAA,EAEA,aAAA,QAAA,uBAAA,EAmBA,MAAa,+BAAgC,KAAI,aAAa,CAW5D,YAAY,MAAkB,GAA6B,MAAmC,QAC5F,MAAM,MAAO,GAAI,KAAK,EADmC,KAAA,MAAA,sGAEzD,KAAK,mBAAkB,IAAG,MAAM,sBAAkB,MAAA,KAAA,OAAA,GAAI,IAAI,mBAAmB,iBAE7E,aAAA,yBAAyB,KAAK,mBAAoB,wBAAwB,8BAA8B,EAExG,KAAK,aAAe,CAClB,GAAI,KAAI,gBAAgB,CACtB,UAAW,CAAC,GAAG,EACf,QAAS,CAAC,0BAA0B,EACrC,GAQK,aAAW,CACnB,MAAO,CACL,SAAU,aAAA,uBAAuB,SAAU,oBAAqB,KAAK,kBAAkB,EACvF,WAAY,IAAI,WAAW,aAAa,CACtC,iBAAkB,KAAK,MAAM,iBAC9B,IAlCP,QAAA,wBAAA,+JAE0B,wBAAA,+BAA2D,CACjF,IAAI,mBAAmB",
  "names": []
}
