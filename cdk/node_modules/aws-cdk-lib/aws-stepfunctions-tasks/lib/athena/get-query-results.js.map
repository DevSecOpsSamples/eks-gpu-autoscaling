{
  "version": 3,
  "sources": ["get-query-results.ts"],
  "sourcesContent": ["import * as iam from '../../../aws-iam';\nimport * as sfn from '../../../aws-stepfunctions';\nimport { Construct } from 'constructs';\nimport { integrationResourceArn, validatePatternSupported } from '../private/task-utils';\n\n/**\n * Properties for getting a Query Results\n */\nexport interface AthenaGetQueryResultsProps extends sfn.TaskStateBaseProps {\n  /**\n   * Query that will be retrieved\n   *\n   * Example value: `adfsaf-23trf23-f23rt23`\n   */\n  readonly queryExecutionId: string;\n\n  /**\n   * Pagination token\n   *\n   * @default - No next token\n   */\n  readonly nextToken?: string;\n\n  /**\n   * Max number of results\n   *\n   * @default 1000\n   */\n  readonly maxResults?: number;\n}\n\n/**\n * Get an Athena Query Results as a Task\n *\n * @see https://docs.aws.amazon.com/step-functions/latest/dg/connect-athena.html\n */\nexport class AthenaGetQueryResults extends sfn.TaskStateBase {\n\n  private static readonly SUPPORTED_INTEGRATION_PATTERNS: sfn.IntegrationPattern[] = [\n    sfn.IntegrationPattern.REQUEST_RESPONSE,\n  ];\n\n  protected readonly taskMetrics?: sfn.TaskMetricsConfig;\n  protected readonly taskPolicies?: iam.PolicyStatement[];\n\n  private readonly integrationPattern: sfn.IntegrationPattern;\n\n  constructor(scope: Construct, id: string, private readonly props: AthenaGetQueryResultsProps) {\n    super(scope, id, props);\n    this.integrationPattern = props.integrationPattern ?? sfn.IntegrationPattern.REQUEST_RESPONSE;\n\n    validatePatternSupported(this.integrationPattern, AthenaGetQueryResults.SUPPORTED_INTEGRATION_PATTERNS);\n\n    const policyStatements = [\n      new iam.PolicyStatement({\n        resources: ['*'], // Workgroup can not be specified in the request https://docs.aws.amazon.com/athena/latest/ug/workgroups-iam-policy.html\n        actions: ['athena:getQueryResults'],\n      }),\n    ];\n\n    policyStatements.push(\n      new iam.PolicyStatement({\n        actions: ['s3:GetObject'],\n        resources: ['*'], // To stream query results successfully the IAM principal must have permissions to the Amazon S3 GetObject action for the Athena query results location https://docs.amazonaws.cn/en_us/athena/latest/APIReference/API_GetQueryResults.html\n      }),\n    );\n\n    this.taskPolicies = policyStatements;\n  }\n\n  /**\n   * Provides the Athena get query results service integration task configuration\n   * @internal\n   */\n  protected _renderTask(): any {\n    return {\n      Resource: integrationResourceArn('athena', 'getQueryResults', this.integrationPattern),\n      Parameters: sfn.FieldUtils.renderObject({\n        QueryExecutionId: this.props.queryExecutionId,\n        NextToken: this.props.nextToken,\n        MaxResults: this.props.maxResults,\n      }),\n    };\n  }\n}\n\n"],
  "mappings": "+NAAA,IAAA,QAAA,kBAAA,EACA,IAAA,QAAA,4BAAA,EAEA,aAAA,QAAA,uBAAA,EAiCA,MAAa,6BAA8B,KAAI,aAAa,CAW1D,YAAY,MAAkB,GAA6B,MAAiC,QAC1F,MAAM,MAAO,GAAI,KAAK,EADmC,KAAA,MAAA,oGAEzD,KAAK,mBAAkB,IAAG,MAAM,sBAAkB,MAAA,KAAA,OAAA,GAAI,IAAI,mBAAmB,iBAE7E,aAAA,yBAAyB,KAAK,mBAAoB,sBAAsB,8BAA8B,EAEtG,KAAM,kBAAmB,CACvB,GAAI,KAAI,gBAAgB,CACtB,UAAW,CAAC,GAAG,EACf,QAAS,CAAC,wBAAwB,EACnC,GAGH,iBAAiB,KACf,GAAI,KAAI,gBAAgB,CACtB,QAAS,CAAC,cAAc,EACxB,UAAW,CAAC,GAAG,EAChB,CAAC,EAGJ,KAAK,aAAe,iBAOZ,aAAW,CACnB,MAAO,CACL,SAAU,aAAA,uBAAuB,SAAU,kBAAmB,KAAK,kBAAkB,EACrF,WAAY,IAAI,WAAW,aAAa,CACtC,iBAAkB,KAAK,MAAM,iBAC7B,UAAW,KAAK,MAAM,UACtB,WAAY,KAAK,MAAM,WACxB,IA7CP,QAAA,sBAAA,yJAE0B,sBAAA,+BAA2D,CACjF,IAAI,mBAAmB",
  "names": []
}
