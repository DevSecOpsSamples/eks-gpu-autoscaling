{
  "version": 3,
  "sources": ["start-job-run.ts"],
  "sourcesContent": ["import * as iam from '../../../aws-iam';\nimport * as sfn from '../../../aws-stepfunctions';\nimport * as cdk from '../../../core';\nimport { Construct } from 'constructs';\nimport { integrationResourceArn, validatePatternSupported } from '../private/task-utils';\n\n/**\n * Properties for starting a job run with StartJobRun\n */\nexport interface GlueDataBrewStartJobRunProps extends sfn.TaskStateBaseProps {\n\n  /**\n   * Glue DataBrew Job to run\n   */\n  readonly name: string;\n}\n\n/**\n * Start a Job run as a Task\n *\n * @see https://docs.aws.amazon.com/step-functions/latest/dg/connect-databrew.html\n */\nexport class GlueDataBrewStartJobRun extends sfn.TaskStateBase {\n\n  private static readonly SUPPORTED_INTEGRATION_PATTERNS: sfn.IntegrationPattern[] = [\n    sfn.IntegrationPattern.REQUEST_RESPONSE,\n    sfn.IntegrationPattern.RUN_JOB,\n  ];\n\n  protected readonly taskMetrics?: sfn.TaskMetricsConfig;\n  protected readonly taskPolicies?: iam.PolicyStatement[];\n\n  private readonly integrationPattern: sfn.IntegrationPattern;\n\n  /**\n   */\n  constructor(scope: Construct, id: string, private readonly props: GlueDataBrewStartJobRunProps) {\n    super(scope, id, props);\n    this.integrationPattern = props.integrationPattern ?? sfn.IntegrationPattern.REQUEST_RESPONSE;\n\n    validatePatternSupported(this.integrationPattern, GlueDataBrewStartJobRun.SUPPORTED_INTEGRATION_PATTERNS);\n\n    const actions = ['databrew:startJobRun'];\n\n    if (this.integrationPattern === sfn.IntegrationPattern.RUN_JOB) {\n      actions.push('databrew:stopJobRun', 'databrew:listJobRuns');\n    }\n\n    this.taskPolicies = [\n      new iam.PolicyStatement({\n        resources: [\n          cdk.Stack.of(this).formatArn({\n            service: 'databrew',\n            resource: 'job',\n            // If the name comes from input, we cannot target the policy to a particular ARN prefix reliably.\n            resourceName: sfn.JsonPath.isEncodedJsonPath(this.props.name) ? '*' : this.props.name,\n          }),\n        ],\n        actions: actions,\n      }),\n    ];\n  }\n\n  /**\n   * Provides the Glue DataBrew Start Job Run task configuration\n   * @internal\n   */\n  protected _renderTask(): any {\n    return {\n      Resource: integrationResourceArn('databrew', 'startJobRun', this.integrationPattern),\n      Parameters: sfn.FieldUtils.renderObject({\n        Name: this.props.name,\n      }),\n    };\n  }\n}\n\n"],
  "mappings": "iOAAA,IAAA,QAAA,kBAAA,EACA,IAAA,QAAA,4BAAA,EACA,IAAA,QAAA,eAAA,EAEA,aAAA,QAAA,uBAAA,EAkBA,MAAa,+BAAgC,KAAI,aAAa,CAc5D,YAAY,MAAkB,GAA6B,MAAmC,QAC5F,MAAM,MAAO,GAAI,KAAK,EADmC,KAAA,MAAA,sGAEzD,KAAK,mBAAkB,IAAG,MAAM,sBAAkB,MAAA,KAAA,OAAA,GAAI,IAAI,mBAAmB,iBAE7E,aAAA,yBAAyB,KAAK,mBAAoB,wBAAwB,8BAA8B,EAExG,KAAM,SAAU,CAAC,sBAAsB,EAEvC,AAAI,KAAK,qBAAuB,IAAI,mBAAmB,SACrD,QAAQ,KAAK,sBAAuB,sBAAsB,EAG5D,KAAK,aAAe,CAClB,GAAI,KAAI,gBAAgB,CACtB,UAAW,CACT,IAAI,MAAM,GAAG,IAAI,EAAE,UAAU,CAC3B,QAAS,WACT,SAAU,MAEV,aAAc,IAAI,SAAS,kBAAkB,KAAK,MAAM,IAAI,EAAI,IAAM,KAAK,MAAM,KAClF,GAEH,QACD,GAQK,aAAW,CACnB,MAAO,CACL,SAAU,aAAA,uBAAuB,WAAY,cAAe,KAAK,kBAAkB,EACnF,WAAY,IAAI,WAAW,aAAa,CACtC,KAAM,KAAK,MAAM,KAClB,IAlDP,QAAA,wBAAA,+JAE0B,wBAAA,+BAA2D,CACjF,IAAI,mBAAmB,iBACvB,IAAI,mBAAmB",
  "names": []
}
