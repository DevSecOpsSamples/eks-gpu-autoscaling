{
  "version": 3,
  "sources": ["create-endpoint-config.ts"],
  "sourcesContent": ["import * as iam from '../../../aws-iam';\nimport * as kms from '../../../aws-kms';\nimport * as sfn from '../../../aws-stepfunctions';\nimport * as cdk from '../../../core';\nimport { Construct } from 'constructs';\nimport { integrationResourceArn, validatePatternSupported } from '../private/task-utils';\nimport { ProductionVariant } from './base-types';\n\n/**\n * Properties for creating an Amazon SageMaker endpoint configuration\n *\n * @see https://docs.aws.amazon.com/step-functions/latest/dg/connect-sagemaker.html\n */\nexport interface SageMakerCreateEndpointConfigProps extends sfn.TaskStateBaseProps {\n  /**\n   * The name of the endpoint configuration.\n   */\n  readonly endpointConfigName: string;\n  /**\n   * AWS Key Management Service key that Amazon SageMaker\n   * uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.\n   *\n   * @default - None\n   */\n  readonly kmsKey?: kms.IKey;\n\n  /**\n   * An list of ProductionVariant objects, one for each model that you want to host at this endpoint.\n   * Identifies a model that you want to host and the resources to deploy for hosting it.\n   * If you are deploying multiple models, tell Amazon SageMaker how to distribute traffic among the models by specifying variant weights.\n   */\n  readonly productionVariants: ProductionVariant[];\n\n  /**\n   * Tags to be applied to the endpoint configuration.\n   *\n   * @default - No tags\n   */\n  readonly tags?: sfn.TaskInput;\n}\n\n/**\n * A Step Functions Task to create a SageMaker endpoint configuration\n *\n * @see https://docs.aws.amazon.com/step-functions/latest/dg/connect-sagemaker.html\n */\nexport class SageMakerCreateEndpointConfig extends sfn.TaskStateBase {\n  private static readonly SUPPORTED_INTEGRATION_PATTERNS: sfn.IntegrationPattern[] = [\n    sfn.IntegrationPattern.REQUEST_RESPONSE,\n  ];\n  protected readonly taskMetrics?: sfn.TaskMetricsConfig;\n  protected readonly taskPolicies?: iam.PolicyStatement[];\n  private readonly integrationPattern: sfn.IntegrationPattern;\n\n  constructor(scope: Construct, id: string, private readonly props: SageMakerCreateEndpointConfigProps) {\n    super(scope, id, props);\n    this.integrationPattern = props.integrationPattern || sfn.IntegrationPattern.REQUEST_RESPONSE;\n    validatePatternSupported(this.integrationPattern, SageMakerCreateEndpointConfig.SUPPORTED_INTEGRATION_PATTERNS);\n\n    this.validateProductionVariants();\n    this.taskPolicies = this.makePolicyStatements();\n  }\n\n  /**\n   * @internal\n   */\n  protected _renderTask(): any {\n    return {\n      Resource: integrationResourceArn('sagemaker', 'createEndpointConfig', this.integrationPattern),\n      Parameters: sfn.FieldUtils.renderObject(this.renderParameters()),\n    };\n  }\n\n  private renderParameters(): { [key: string]: any } {\n    return {\n      EndpointConfigName: this.props.endpointConfigName,\n      Tags: this.props.tags?.value,\n      KmsKeyId: this.props.kmsKey?.keyId,\n      ProductionVariants: this.props.productionVariants.map((variant) => ({\n        InitialInstanceCount: variant.initialInstanceCount ? variant.initialInstanceCount : 1,\n        InstanceType: sfn.JsonPath.isEncodedJsonPath(variant.instanceType.toString())\n          ? variant.instanceType.toString() : `ml.${variant.instanceType}`,\n        ModelName: variant.modelName,\n        VariantName: variant.variantName,\n        AcceleratorType: variant.acceleratorType,\n        InitialVariantWeight: variant.initialVariantWeight,\n      }),\n      ),\n    };\n  }\n\n  private makePolicyStatements(): iam.PolicyStatement[] {\n    const stack = cdk.Stack.of(this);\n    // https://docs.aws.amazon.com/sagemaker/latest/dg/api-permissions-reference.html\n    return [\n      new iam.PolicyStatement({\n        actions: ['sagemaker:CreateEndpointConfig'],\n        resources: [\n          stack.formatArn({\n            service: 'sagemaker',\n            resource: 'endpoint-config',\n            // If the endpoint configuration name comes from input, we cannot target the policy to a particular ARN prefix reliably.\n            // SageMaker uses lowercase for resource name in the arn\n            resourceName: sfn.JsonPath.isEncodedJsonPath(this.props.endpointConfigName) ? '*' : `${this.props.endpointConfigName.toLowerCase()}`,\n          }),\n        ],\n      }),\n      new iam.PolicyStatement({\n        actions: ['sagemaker:ListTags'],\n        // https://docs.aws.amazon.com/step-functions/latest/dg/sagemaker-iam.html\n        resources: ['*'],\n      }),\n    ];\n  }\n\n  private validateProductionVariants() {\n    if (this.props.productionVariants.length < 1 || this.props.productionVariants.length > 10) {\n      throw new Error('Must specify from 1 to 10 production variants per endpoint configuration');\n    }\n    this.props.productionVariants.forEach((variant) => {\n      if (variant.initialInstanceCount && variant.initialInstanceCount < 1) throw new Error('Must define at least one instance');\n      if ( variant.initialVariantWeight && variant.initialVariantWeight <= 0) {\n        throw new Error('InitialVariantWeight has minimum value of 0');\n      }\n    });\n  }\n}"],
  "mappings": "uOAAA,IAAA,QAAA,kBAAA,EAEA,IAAA,QAAA,4BAAA,EACA,IAAA,QAAA,eAAA,EAEA,aAAA,QAAA,uBAAA,EAyCA,MAAa,qCAAsC,KAAI,aAAa,CAQlE,YAAY,MAAkB,GAA6B,MAAyC,CAClG,MAAM,MAAO,GAAI,KAAK,EADmC,KAAA,MAAA,4GAEzD,KAAK,mBAAqB,MAAM,oBAAsB,IAAI,mBAAmB,iBAC7E,aAAA,yBAAyB,KAAK,mBAAoB,8BAA8B,8BAA8B,EAE9G,KAAK,2BAA0B,EAC/B,KAAK,aAAe,KAAK,qBAAoB,EAMrC,aAAW,CACnB,MAAO,CACL,SAAU,aAAA,uBAAuB,YAAa,uBAAwB,KAAK,kBAAkB,EAC7F,WAAY,IAAI,WAAW,aAAa,KAAK,iBAAgB,CAAE,GAI3D,kBAAgB,WACtB,MAAO,CACL,mBAAoB,KAAK,MAAM,mBAC/B,KAAI,IAAE,KAAK,MAAM,QAAI,MAAA,KAAA,OAAA,OAAA,GAAE,MACvB,SAAQ,IAAE,KAAK,MAAM,UAAM,MAAA,KAAA,OAAA,OAAA,GAAE,MAC7B,mBAAoB,KAAK,MAAM,mBAAmB,IAAI,AAAC,SAAa,EAClE,qBAAsB,QAAQ,qBAAuB,QAAQ,qBAAuB,EACpF,aAAc,IAAI,SAAS,kBAAkB,QAAQ,aAAa,SAAQ,CAAE,EACxE,QAAQ,aAAa,SAAQ,EAAK,MAAM,QAAQ,eACpD,UAAW,QAAQ,UACnB,YAAa,QAAQ,YACrB,gBAAiB,QAAQ,gBACzB,qBAAsB,QAAQ,sBAC9B,GAKE,sBAAoB,CAC1B,KAAM,OAAQ,IAAI,MAAM,GAAG,IAAI,EAE/B,MAAO,CACL,GAAI,KAAI,gBAAgB,CACtB,QAAS,CAAC,gCAAgC,EAC1C,UAAW,CACT,MAAM,UAAU,CACd,QAAS,YACT,SAAU,kBAGV,aAAc,IAAI,SAAS,kBAAkB,KAAK,MAAM,kBAAkB,EAAI,IAAM,GAAG,KAAK,MAAM,mBAAmB,YAAW,IACjI,GAEJ,EACD,GAAI,KAAI,gBAAgB,CACtB,QAAS,CAAC,oBAAoB,EAE9B,UAAW,CAAC,GAAG,EAChB,GAIG,4BAA0B,CAChC,GAAI,KAAK,MAAM,mBAAmB,OAAS,GAAK,KAAK,MAAM,mBAAmB,OAAS,GACrF,KAAM,IAAI,OAAM,0EAA0E,EAE5F,KAAK,MAAM,mBAAmB,QAAQ,AAAC,SAAW,CAChD,GAAI,QAAQ,sBAAwB,QAAQ,qBAAuB,EAAG,KAAM,IAAI,OAAM,mCAAmC,EACzH,GAAK,QAAQ,sBAAwB,QAAQ,sBAAwB,EACnE,KAAM,IAAI,OAAM,6CAA6C,CAEjE,CAAC,GA9EL,QAAA,8BAAA,iLAC0B,8BAAA,+BAA2D,CACjF,IAAI,mBAAmB",
  "names": []
}
