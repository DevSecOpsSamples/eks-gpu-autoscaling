{
  "version": 3,
  "sources": ["codestar.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-04-07T10:53:54.213Z\",\"fingerprint\":\"fyvaMn3a+C7fGBAH0y5nH2joSTYAKpG/hj7y7oWQZnc=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n/**\n * Properties for defining a `CfnGitHubRepository`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html\n */\nexport interface CfnGitHubRepositoryProps {\n\n    /**\n     * The name of the repository you want to create in GitHub with AWS CloudFormation stack creation.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryname\n     */\n    readonly repositoryName: string;\n\n    /**\n     * The GitHub user name for the owner of the GitHub repository to be created. If this repository should be owned by a GitHub organization, provide its name.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryowner\n     */\n    readonly repositoryOwner: string;\n\n    /**\n     * Information about code to be committed to a repository after it is created in an AWS CloudFormation stack.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-code\n     */\n    readonly code?: CfnGitHubRepository.CodeProperty | cdk.IResolvable;\n\n    /**\n     * `AWS::CodeStar::GitHubRepository.ConnectionArn`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-connectionarn\n     */\n    readonly connectionArn?: string;\n\n    /**\n     * Indicates whether to enable issues for the GitHub repository. You can use GitHub issues to track information and bugs for your repository.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-enableissues\n     */\n    readonly enableIssues?: boolean | cdk.IResolvable;\n\n    /**\n     * Indicates whether the GitHub repository is a private repository. If so, you choose who can see and commit to this repository.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-isprivate\n     */\n    readonly isPrivate?: boolean | cdk.IResolvable;\n\n    /**\n     * The GitHub user's personal access token for the GitHub repository.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryaccesstoken\n     */\n    readonly repositoryAccessToken?: string;\n\n    /**\n     * A comment or description about the new repository. This description is displayed in GitHub after the repository is created.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositorydescription\n     */\n    readonly repositoryDescription?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnGitHubRepositoryProps`\n *\n * @param properties - the TypeScript properties of a `CfnGitHubRepositoryProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnGitHubRepositoryPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('code', CfnGitHubRepository_CodePropertyValidator)(properties.code));\n    errors.collect(cdk.propertyValidator('connectionArn', cdk.validateString)(properties.connectionArn));\n    errors.collect(cdk.propertyValidator('enableIssues', cdk.validateBoolean)(properties.enableIssues));\n    errors.collect(cdk.propertyValidator('isPrivate', cdk.validateBoolean)(properties.isPrivate));\n    errors.collect(cdk.propertyValidator('repositoryAccessToken', cdk.validateString)(properties.repositoryAccessToken));\n    errors.collect(cdk.propertyValidator('repositoryDescription', cdk.validateString)(properties.repositoryDescription));\n    errors.collect(cdk.propertyValidator('repositoryName', cdk.requiredValidator)(properties.repositoryName));\n    errors.collect(cdk.propertyValidator('repositoryName', cdk.validateString)(properties.repositoryName));\n    errors.collect(cdk.propertyValidator('repositoryOwner', cdk.requiredValidator)(properties.repositoryOwner));\n    errors.collect(cdk.propertyValidator('repositoryOwner', cdk.validateString)(properties.repositoryOwner));\n    return errors.wrap('supplied properties not correct for \"CfnGitHubRepositoryProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::CodeStar::GitHubRepository` resource\n *\n * @param properties - the TypeScript properties of a `CfnGitHubRepositoryProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::CodeStar::GitHubRepository` resource.\n */\n// @ts-ignore TS6133\nfunction cfnGitHubRepositoryPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnGitHubRepositoryPropsValidator(properties).assertSuccess();\n    return {\n        RepositoryName: cdk.stringToCloudFormation(properties.repositoryName),\n        RepositoryOwner: cdk.stringToCloudFormation(properties.repositoryOwner),\n        Code: cfnGitHubRepositoryCodePropertyToCloudFormation(properties.code),\n        ConnectionArn: cdk.stringToCloudFormation(properties.connectionArn),\n        EnableIssues: cdk.booleanToCloudFormation(properties.enableIssues),\n        IsPrivate: cdk.booleanToCloudFormation(properties.isPrivate),\n        RepositoryAccessToken: cdk.stringToCloudFormation(properties.repositoryAccessToken),\n        RepositoryDescription: cdk.stringToCloudFormation(properties.repositoryDescription),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnGitHubRepositoryPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnGitHubRepositoryProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnGitHubRepositoryProps>();\n    ret.addPropertyResult('repositoryName', 'RepositoryName', cfn_parse.FromCloudFormation.getString(properties.RepositoryName));\n    ret.addPropertyResult('repositoryOwner', 'RepositoryOwner', cfn_parse.FromCloudFormation.getString(properties.RepositoryOwner));\n    ret.addPropertyResult('code', 'Code', properties.Code != null ? CfnGitHubRepositoryCodePropertyFromCloudFormation(properties.Code) : undefined);\n    ret.addPropertyResult('connectionArn', 'ConnectionArn', properties.ConnectionArn != null ? cfn_parse.FromCloudFormation.getString(properties.ConnectionArn) : undefined);\n    ret.addPropertyResult('enableIssues', 'EnableIssues', properties.EnableIssues != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableIssues) : undefined);\n    ret.addPropertyResult('isPrivate', 'IsPrivate', properties.IsPrivate != null ? cfn_parse.FromCloudFormation.getBoolean(properties.IsPrivate) : undefined);\n    ret.addPropertyResult('repositoryAccessToken', 'RepositoryAccessToken', properties.RepositoryAccessToken != null ? cfn_parse.FromCloudFormation.getString(properties.RepositoryAccessToken) : undefined);\n    ret.addPropertyResult('repositoryDescription', 'RepositoryDescription', properties.RepositoryDescription != null ? cfn_parse.FromCloudFormation.getString(properties.RepositoryDescription) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::CodeStar::GitHubRepository`\n *\n * The `AWS::CodeStar::GitHubRepository` resource creates a GitHub repository where users can store source code for use with AWS workflows. You must provide a location for the source code ZIP file in the AWS CloudFormation template, so the code can be uploaded to the created repository. You must have created a personal access token in GitHub to provide in the AWS CloudFormation template. AWS uses this token to connect to GitHub on your behalf. For more information about using a GitHub source repository with AWS CodeStar projects, see [AWS CodeStar Project Files and Resources](https://docs.aws.amazon.com/codestar/latest/userguide/templates.html#templates-whatis) .\n *\n * @cloudformationResource AWS::CodeStar::GitHubRepository\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html\n */\nexport class CfnGitHubRepository extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::CodeStar::GitHubRepository\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnGitHubRepository {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnGitHubRepositoryPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnGitHubRepository(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The name of the repository you want to create in GitHub with AWS CloudFormation stack creation.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryname\n     */\n    public repositoryName: string;\n\n    /**\n     * The GitHub user name for the owner of the GitHub repository to be created. If this repository should be owned by a GitHub organization, provide its name.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryowner\n     */\n    public repositoryOwner: string;\n\n    /**\n     * Information about code to be committed to a repository after it is created in an AWS CloudFormation stack.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-code\n     */\n    public code: CfnGitHubRepository.CodeProperty | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::CodeStar::GitHubRepository.ConnectionArn`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-connectionarn\n     */\n    public connectionArn: string | undefined;\n\n    /**\n     * Indicates whether to enable issues for the GitHub repository. You can use GitHub issues to track information and bugs for your repository.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-enableissues\n     */\n    public enableIssues: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * Indicates whether the GitHub repository is a private repository. If so, you choose who can see and commit to this repository.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-isprivate\n     */\n    public isPrivate: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * The GitHub user's personal access token for the GitHub repository.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryaccesstoken\n     */\n    public repositoryAccessToken: string | undefined;\n\n    /**\n     * A comment or description about the new repository. This description is displayed in GitHub after the repository is created.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositorydescription\n     */\n    public repositoryDescription: string | undefined;\n\n    /**\n     * Create a new `AWS::CodeStar::GitHubRepository`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnGitHubRepositoryProps) {\n        super(scope, id, { type: CfnGitHubRepository.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'repositoryName', this);\n        cdk.requireProperty(props, 'repositoryOwner', this);\n\n        this.repositoryName = props.repositoryName;\n        this.repositoryOwner = props.repositoryOwner;\n        this.code = props.code;\n        this.connectionArn = props.connectionArn;\n        this.enableIssues = props.enableIssues;\n        this.isPrivate = props.isPrivate;\n        this.repositoryAccessToken = props.repositoryAccessToken;\n        this.repositoryDescription = props.repositoryDescription;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnGitHubRepository.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            repositoryName: this.repositoryName,\n            repositoryOwner: this.repositoryOwner,\n            code: this.code,\n            connectionArn: this.connectionArn,\n            enableIssues: this.enableIssues,\n            isPrivate: this.isPrivate,\n            repositoryAccessToken: this.repositoryAccessToken,\n            repositoryDescription: this.repositoryDescription,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnGitHubRepositoryPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnGitHubRepository {\n    /**\n     * The `Code` property type specifies information about code to be committed.\n     *\n     * `Code` is a property of the `AWS::CodeStar::GitHubRepository` resource.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codestar-githubrepository-code.html\n     */\n    export interface CodeProperty {\n        /**\n         * Information about the Amazon S3 bucket that contains a ZIP file of code to be committed to the repository.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codestar-githubrepository-code.html#cfn-codestar-githubrepository-code-s3\n         */\n        readonly s3: CfnGitHubRepository.S3Property | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `CodeProperty`\n *\n * @param properties - the TypeScript properties of a `CodeProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnGitHubRepository_CodePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('s3', cdk.requiredValidator)(properties.s3));\n    errors.collect(cdk.propertyValidator('s3', CfnGitHubRepository_S3PropertyValidator)(properties.s3));\n    return errors.wrap('supplied properties not correct for \"CodeProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::CodeStar::GitHubRepository.Code` resource\n *\n * @param properties - the TypeScript properties of a `CodeProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::CodeStar::GitHubRepository.Code` resource.\n */\n// @ts-ignore TS6133\nfunction cfnGitHubRepositoryCodePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnGitHubRepository_CodePropertyValidator(properties).assertSuccess();\n    return {\n        S3: cfnGitHubRepositoryS3PropertyToCloudFormation(properties.s3),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnGitHubRepositoryCodePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnGitHubRepository.CodeProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnGitHubRepository.CodeProperty>();\n    ret.addPropertyResult('s3', 'S3', CfnGitHubRepositoryS3PropertyFromCloudFormation(properties.S3));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnGitHubRepository {\n    /**\n     * The `S3` property type specifies information about the Amazon S3 bucket that contains the code to be committed to the new repository.\n     *\n     * `S3` is a property of the `AWS::CodeStar::GitHubRepository` resource.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codestar-githubrepository-s3.html\n     */\n    export interface S3Property {\n        /**\n         * The name of the Amazon S3 bucket that contains the ZIP file with the content to be committed to the new repository.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codestar-githubrepository-s3.html#cfn-codestar-githubrepository-s3-bucket\n         */\n        readonly bucket: string;\n        /**\n         * The S3 object key or file name for the ZIP file.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codestar-githubrepository-s3.html#cfn-codestar-githubrepository-s3-key\n         */\n        readonly key: string;\n        /**\n         * The object version of the ZIP file, if versioning is enabled for the Amazon S3 bucket.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codestar-githubrepository-s3.html#cfn-codestar-githubrepository-s3-objectversion\n         */\n        readonly objectVersion?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `S3Property`\n *\n * @param properties - the TypeScript properties of a `S3Property`\n *\n * @returns the result of the validation.\n */\nfunction CfnGitHubRepository_S3PropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('bucket', cdk.requiredValidator)(properties.bucket));\n    errors.collect(cdk.propertyValidator('bucket', cdk.validateString)(properties.bucket));\n    errors.collect(cdk.propertyValidator('key', cdk.requiredValidator)(properties.key));\n    errors.collect(cdk.propertyValidator('key', cdk.validateString)(properties.key));\n    errors.collect(cdk.propertyValidator('objectVersion', cdk.validateString)(properties.objectVersion));\n    return errors.wrap('supplied properties not correct for \"S3Property\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::CodeStar::GitHubRepository.S3` resource\n *\n * @param properties - the TypeScript properties of a `S3Property`\n *\n * @returns the AWS CloudFormation properties of an `AWS::CodeStar::GitHubRepository.S3` resource.\n */\n// @ts-ignore TS6133\nfunction cfnGitHubRepositoryS3PropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnGitHubRepository_S3PropertyValidator(properties).assertSuccess();\n    return {\n        Bucket: cdk.stringToCloudFormation(properties.bucket),\n        Key: cdk.stringToCloudFormation(properties.key),\n        ObjectVersion: cdk.stringToCloudFormation(properties.objectVersion),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnGitHubRepositoryS3PropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnGitHubRepository.S3Property | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnGitHubRepository.S3Property>();\n    ret.addPropertyResult('bucket', 'Bucket', cfn_parse.FromCloudFormation.getString(properties.Bucket));\n    ret.addPropertyResult('key', 'Key', cfn_parse.FromCloudFormation.getString(properties.Key));\n    ret.addPropertyResult('objectVersion', 'ObjectVersion', properties.ObjectVersion != null ? cfn_parse.FromCloudFormation.getString(properties.ObjectVersion) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n"],
  "mappings": "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",
  "names": []
}
