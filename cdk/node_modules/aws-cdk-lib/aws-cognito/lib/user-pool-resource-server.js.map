{
  "version": 3,
  "sources": ["user-pool-resource-server.ts"],
  "sourcesContent": ["import { IResource, Resource } from '../../core';\nimport { Construct } from 'constructs';\nimport { CfnUserPoolResourceServer } from './cognito.generated';\nimport { IUserPool } from './user-pool';\n\n/**\n * Represents a Cognito user pool resource server\n */\nexport interface IUserPoolResourceServer extends IResource {\n  /**\n   * Resource server id\n   * @attribute\n   */\n  readonly userPoolResourceServerId: string;\n}\n\n/**\n * Props to initialize ResourceServerScope\n */\nexport interface ResourceServerScopeProps {\n  /**\n   * The name of the scope\n   */\n  readonly scopeName: string;\n\n  /**\n   * A description of the scope.\n   */\n  readonly scopeDescription: string;\n}\n\n/**\n * A scope for ResourceServer\n */\nexport class ResourceServerScope {\n  /**\n   * The name of the scope\n   */\n  public readonly scopeName: string;\n\n  /**\n   * A description of the scope.\n   */\n  public readonly scopeDescription: string;\n\n  constructor(props: ResourceServerScopeProps) {\n    this.scopeName = props.scopeName;\n    this.scopeDescription = props.scopeDescription;\n  }\n}\n\n\n/**\n * Options to create a UserPoolResourceServer\n */\nexport interface UserPoolResourceServerOptions {\n  /**\n   * A unique resource server identifier for the resource server.\n   */\n  readonly identifier: string;\n\n  /**\n   * A friendly name for the resource server.\n   * @default - same as `identifier`\n   */\n  readonly userPoolResourceServerName?: string;\n\n  /**\n   * Oauth scopes\n   * @default - No scopes will be added\n   */\n  readonly scopes?: ResourceServerScope[];\n}\n\n/**\n * Properties for the UserPoolResourceServer construct\n */\nexport interface UserPoolResourceServerProps extends UserPoolResourceServerOptions {\n  /**\n   * The user pool to add this resource server to\n   */\n  readonly userPool: IUserPool;\n}\n\n/**\n * Defines a User Pool OAuth2.0 Resource Server\n */\nexport class UserPoolResourceServer extends Resource implements IUserPoolResourceServer {\n  /**\n   * Import a user pool resource client given its id.\n   */\n  public static fromUserPoolResourceServerId(scope: Construct, id: string, userPoolResourceServerId: string): IUserPoolResourceServer {\n    class Import extends Resource implements IUserPoolResourceServer {\n      public readonly userPoolResourceServerId = userPoolResourceServerId;\n    }\n\n    return new Import(scope, id);\n  }\n\n  public readonly userPoolResourceServerId: string;\n\n  constructor(scope: Construct, id: string, props: UserPoolResourceServerProps) {\n    super(scope, id, {\n      physicalName: props.identifier,\n    });\n\n    const resource = new CfnUserPoolResourceServer(this, 'Resource', {\n      identifier: this.physicalName,\n      name: props.userPoolResourceServerName ?? this.physicalName,\n      scopes: props.scopes,\n      userPoolId: props.userPool.userPoolId,\n    });\n\n    this.userPoolResourceServerId = resource.ref;\n  }\n}\n"],
  "mappings": "4PAAA,OAAA,QAAA,YAAA,EAEA,oBAAA,QAAA,qBAAA,EAgCA,MAAa,mBAAmB,CAW9B,YAAY,MAA+B,iFACzC,KAAK,UAAY,MAAM,UACvB,KAAK,iBAAmB,MAAM,kBAblC,QAAA,oBAAA,uIAqDA,MAAa,8BAA+B,QAAA,QAAQ,CAclD,YAAY,MAAkB,GAAY,MAAkC,QAC1E,MAAM,MAAO,GAAI,CACf,aAAc,MAAM,WACrB,qFAED,KAAM,UAAW,GAAI,qBAAA,0BAA0B,KAAM,WAAY,CAC/D,WAAY,KAAK,aACjB,KAAI,IAAE,MAAM,8BAA0B,MAAA,KAAA,OAAA,GAAI,KAAK,aAC/C,OAAQ,MAAM,OACd,WAAY,MAAM,SAAS,WAC5B,EAED,KAAK,yBAA2B,SAAS,UAtB7B,8BAA6B,MAAkB,GAAY,yBAAgC,CACvG,MAAM,cAAe,QAAA,QAAQ,CAA7B,aAAA,qBACkB,KAAA,yBAA2B,wBAC7C,EAEA,MAAO,IAAI,QAAO,MAAO,EAAE,GAT/B,QAAA,uBAAA",
  "names": []
}
