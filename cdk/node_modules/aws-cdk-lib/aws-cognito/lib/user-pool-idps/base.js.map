{
  "version": 3,
  "sources": ["base.ts"],
  "sourcesContent": ["import { IUserPool } from '../user-pool';\n\n/**\n * An attribute available from a third party identity provider.\n */\nexport class ProviderAttribute {\n  /** The email attribute provided by Apple */\n  public static readonly APPLE_EMAIL = new ProviderAttribute('email');\n  /** The name attribute provided by Apple */\n  public static readonly APPLE_NAME = new ProviderAttribute('name');\n  /** The first name attribute provided by Apple */\n  public static readonly APPLE_FIRST_NAME = new ProviderAttribute('firstName');\n  /** The last name attribute provided by Apple */\n  public static readonly APPLE_LAST_NAME = new ProviderAttribute('lastName');\n\n  /** The user id attribute provided by Amazon */\n  public static readonly AMAZON_USER_ID = new ProviderAttribute('user_id');\n  /** The email attribute provided by Amazon */\n  public static readonly AMAZON_EMAIL = new ProviderAttribute('email');\n  /** The name attribute provided by Amazon */\n  public static readonly AMAZON_NAME = new ProviderAttribute('name');\n  /** The postal code attribute provided by Amazon */\n  public static readonly AMAZON_POSTAL_CODE = new ProviderAttribute('postal_code');\n\n  /** The user id attribute provided by Facebook */\n  public static readonly FACEBOOK_ID = new ProviderAttribute('id');\n  /** The birthday attribute provided by Facebook */\n  public static readonly FACEBOOK_BIRTHDAY = new ProviderAttribute('birthday');\n  /** The email attribute provided by Facebook */\n  public static readonly FACEBOOK_EMAIL = new ProviderAttribute('email');\n  /** The name attribute provided by Facebook */\n  public static readonly FACEBOOK_NAME = new ProviderAttribute('name');\n  /** The first name attribute provided by Facebook */\n  public static readonly FACEBOOK_FIRST_NAME = new ProviderAttribute('first_name');\n  /** The last name attribute provided by Facebook */\n  public static readonly FACEBOOK_LAST_NAME = new ProviderAttribute('last_name');\n  /** The middle name attribute provided by Facebook */\n  public static readonly FACEBOOK_MIDDLE_NAME = new ProviderAttribute('middle_name');\n  /** The gender attribute provided by Facebook */\n  public static readonly FACEBOOK_GENDER = new ProviderAttribute('gender');\n  /** The locale attribute provided by Facebook */\n  public static readonly FACEBOOK_LOCALE = new ProviderAttribute('locale');\n\n  /** The name attribute provided by Google */\n  public static readonly GOOGLE_NAMES = new ProviderAttribute('names');\n  /** The gender attribute provided by Google */\n  public static readonly GOOGLE_GENDER = new ProviderAttribute('gender');\n  /** The birthday attribute provided by Google */\n  public static readonly GOOGLE_BIRTHDAYS = new ProviderAttribute('birthdays');\n  /** The phone number attribute provided by Google */\n  public static readonly GOOGLE_PHONE_NUMBERS = new ProviderAttribute('phoneNumbers');\n  /** The email attribute provided by Google */\n  public static readonly GOOGLE_EMAIL = new ProviderAttribute('email');\n  /** The name attribute provided by Google */\n  public static readonly GOOGLE_NAME = new ProviderAttribute('name');\n  /** The picture attribute provided by Google */\n  public static readonly GOOGLE_PICTURE = new ProviderAttribute('picture');\n  /** The given name attribute provided by Google */\n  public static readonly GOOGLE_GIVEN_NAME = new ProviderAttribute('given_name');\n  /** The family name attribute provided by Google */\n  public static readonly GOOGLE_FAMILY_NAME = new ProviderAttribute('family_name');\n\n  /**\n   * Use this to specify an attribute from the identity provider that is not pre-defined in the CDK.\n   * @param attributeName the attribute value string as recognized by the provider\n   */\n  public static other(attributeName: string): ProviderAttribute {\n    return new ProviderAttribute(attributeName);\n  }\n\n  /** The attribute value string as recognized by the provider. */\n  public readonly attributeName: string;\n\n  private constructor(attributeName: string) {\n    this.attributeName = attributeName;\n  }\n}\n\n/**\n * The mapping of user pool attributes to the attributes provided by the identity providers.\n */\nexport interface AttributeMapping {\n  /**\n   * The user's postal address is a required attribute.\n   * @default - not mapped\n   */\n  readonly address?: ProviderAttribute;\n\n  /**\n   * The user's birthday.\n   * @default - not mapped\n   */\n  readonly birthdate?: ProviderAttribute;\n\n  /**\n   * The user's e-mail address.\n   * @default - not mapped\n   */\n  readonly email?: ProviderAttribute;\n\n  /**\n   * The surname or last name of user.\n   * @default - not mapped\n   */\n  readonly familyName?: ProviderAttribute;\n\n  /**\n   * The user's gender.\n   * @default - not mapped\n   */\n  readonly gender?: ProviderAttribute;\n\n  /**\n   * The user's first name or give name.\n   * @default - not mapped\n   */\n  readonly givenName?: ProviderAttribute;\n\n  /**\n   * The user's locale.\n   * @default - not mapped\n   */\n  readonly locale?: ProviderAttribute;\n\n  /**\n   * The user's middle name.\n   * @default - not mapped\n   */\n  readonly middleName?: ProviderAttribute;\n\n  /**\n   * The user's full name in displayable form.\n   * @default - not mapped\n   */\n  readonly fullname?: ProviderAttribute;\n\n  /**\n   * The user's nickname or casual name.\n   * @default - not mapped\n   */\n  readonly nickname?: ProviderAttribute;\n\n  /**\n   * The user's telephone number.\n   * @default - not mapped\n   */\n  readonly phoneNumber?: ProviderAttribute;\n\n  /**\n   * The URL to the user's profile picture.\n   * @default - not mapped\n   */\n  readonly profilePicture?: ProviderAttribute;\n\n  /**\n   * The user's preferred username.\n   * @default - not mapped\n   */\n  readonly preferredUsername?: ProviderAttribute;\n\n  /**\n   * The URL to the user's profile page.\n   * @default - not mapped\n   */\n  readonly profilePage?: ProviderAttribute;\n\n  /**\n   * The user's time zone.\n   * @default - not mapped\n   */\n  readonly timezone?: ProviderAttribute;\n\n  /**\n   * Time, the user's information was last updated.\n   * @default - not mapped\n   */\n  readonly lastUpdateTime?: ProviderAttribute;\n\n  /**\n   * The URL to the user's web page or blog.\n   * @default - not mapped\n   */\n  readonly website?: ProviderAttribute;\n\n  /**\n   * Specify custom attribute mapping here and mapping for any standard attributes not supported yet.\n   * @default - no custom attribute mapping\n   */\n  readonly custom?: { [key: string]: ProviderAttribute };\n}\n\n/**\n * Properties to create a new instance of UserPoolIdentityProvider\n *\n */\nexport interface UserPoolIdentityProviderProps {\n  /**\n   * The user pool to which this construct provides identities.\n   */\n  readonly userPool: IUserPool;\n\n  /**\n   * Mapping attributes from the identity provider to standard and custom attributes of the user pool.\n   * @default - no attribute mapping\n   */\n  readonly attributeMapping?: AttributeMapping;\n}\n"],
  "mappings": "6JAKA,MAAa,iBAAiB,CAoE5B,YAAoB,cAAqB,CACvC,KAAK,cAAgB,oBART,OAAM,cAAqB,CACvC,MAAO,IAAI,mBAAkB,aAAa,GA9D9C,QAAA,kBAAA,iIAEyB,kBAAA,YAAc,GAAI,mBAAkB,OAAO,EAE3C,kBAAA,WAAa,GAAI,mBAAkB,MAAM,EAEzC,kBAAA,iBAAmB,GAAI,mBAAkB,WAAW,EAEpD,kBAAA,gBAAkB,GAAI,mBAAkB,UAAU,EAGlD,kBAAA,eAAiB,GAAI,mBAAkB,SAAS,EAEhD,kBAAA,aAAe,GAAI,mBAAkB,OAAO,EAE5C,kBAAA,YAAc,GAAI,mBAAkB,MAAM,EAE1C,kBAAA,mBAAqB,GAAI,mBAAkB,aAAa,EAGxD,kBAAA,YAAc,GAAI,mBAAkB,IAAI,EAExC,kBAAA,kBAAoB,GAAI,mBAAkB,UAAU,EAEpD,kBAAA,eAAiB,GAAI,mBAAkB,OAAO,EAE9C,kBAAA,cAAgB,GAAI,mBAAkB,MAAM,EAE5C,kBAAA,oBAAsB,GAAI,mBAAkB,YAAY,EAExD,kBAAA,mBAAqB,GAAI,mBAAkB,WAAW,EAEtD,kBAAA,qBAAuB,GAAI,mBAAkB,aAAa,EAE1D,kBAAA,gBAAkB,GAAI,mBAAkB,QAAQ,EAEhD,kBAAA,gBAAkB,GAAI,mBAAkB,QAAQ,EAGhD,kBAAA,aAAe,GAAI,mBAAkB,OAAO,EAE5C,kBAAA,cAAgB,GAAI,mBAAkB,QAAQ,EAE9C,kBAAA,iBAAmB,GAAI,mBAAkB,WAAW,EAEpD,kBAAA,qBAAuB,GAAI,mBAAkB,cAAc,EAE3D,kBAAA,aAAe,GAAI,mBAAkB,OAAO,EAE5C,kBAAA,YAAc,GAAI,mBAAkB,MAAM,EAE1C,kBAAA,eAAiB,GAAI,mBAAkB,SAAS,EAEhD,kBAAA,kBAAoB,GAAI,mBAAkB,YAAY,EAEtD,kBAAA,mBAAqB,GAAI,mBAAkB,aAAa",
  "names": []
}
