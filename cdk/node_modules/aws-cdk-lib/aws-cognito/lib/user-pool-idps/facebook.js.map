{
  "version": 3,
  "sources": ["facebook.ts"],
  "sourcesContent": ["import { Construct } from 'constructs';\nimport { CfnUserPoolIdentityProvider } from '../cognito.generated';\nimport { UserPoolIdentityProviderProps } from './base';\nimport { UserPoolIdentityProviderBase } from './private/user-pool-idp-base';\n\n/**\n * Properties to initialize UserPoolFacebookIdentityProvider\n */\nexport interface UserPoolIdentityProviderFacebookProps extends UserPoolIdentityProviderProps {\n  /**\n   * The client id recognized by Facebook APIs.\n   */\n  readonly clientId: string;\n  /**\n   * The client secret to be accompanied with clientUd for Facebook to authenticate the client.\n   * @see https://developers.facebook.com/docs/facebook-login/security#appsecret\n   */\n  readonly clientSecret: string;\n  /**\n   * The list of facebook permissions to obtain for getting access to the Facebook profile.\n   * @see https://developers.facebook.com/docs/facebook-login/permissions\n   * @default [ public_profile ]\n   */\n  readonly scopes?: string[];\n  /**\n   * The Facebook API version to use\n   * @default - to the oldest version supported by Facebook\n   */\n  readonly apiVersion?: string;\n}\n\n/**\n * Represents a identity provider that integrates with 'Facebook Login'\n * @resource AWS::Cognito::UserPoolIdentityProvider\n */\nexport class UserPoolIdentityProviderFacebook extends UserPoolIdentityProviderBase {\n  public readonly providerName: string;\n\n  constructor(scope: Construct, id: string, props: UserPoolIdentityProviderFacebookProps) {\n    super(scope, id, props);\n\n    const scopes = props.scopes ?? ['public_profile'];\n\n    const resource = new CfnUserPoolIdentityProvider(this, 'Resource', {\n      userPoolId: props.userPool.userPoolId,\n      providerName: 'Facebook', // must be 'Facebook' when the type is 'Facebook'\n      providerType: 'Facebook',\n      providerDetails: {\n        client_id: props.clientId,\n        client_secret: props.clientSecret,\n        authorize_scopes: scopes.join(','),\n        api_version: props.apiVersion,\n      },\n      attributeMapping: super.configureAttributeMapping(),\n    });\n\n    this.providerName = super.getResourceNameAttribute(resource.ref);\n  }\n}"],
  "mappings": "0OACA,oBAAA,QAAA,sBAAA,EAEA,qBAAA,QAAA,8BAAA,EAgCA,MAAa,wCAAyC,sBAAA,4BAA4B,CAGhF,YAAY,MAAkB,GAAY,MAA4C,QACpF,MAAM,MAAO,GAAI,KAAK,+FAEtB,KAAM,QAAM,IAAG,MAAM,UAAM,MAAA,KAAA,OAAA,GAAI,CAAC,gBAAgB,EAE1C,SAAW,GAAI,qBAAA,4BAA4B,KAAM,WAAY,CACjE,WAAY,MAAM,SAAS,WAC3B,aAAc,WACd,aAAc,WACd,gBAAiB,CACf,UAAW,MAAM,SACjB,cAAe,MAAM,aACrB,iBAAkB,OAAO,KAAK,GAAG,EACjC,YAAa,MAAM,YAErB,iBAAkB,MAAM,0BAAyB,EAClD,EAED,KAAK,aAAe,MAAM,yBAAyB,SAAS,GAAG,GArBnE,QAAA,iCAAA",
  "names": []
}
