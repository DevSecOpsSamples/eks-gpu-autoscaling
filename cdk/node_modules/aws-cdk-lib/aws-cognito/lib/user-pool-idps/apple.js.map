{
  "version": 3,
  "sources": ["apple.ts"],
  "sourcesContent": ["import { Construct } from 'constructs';\nimport { CfnUserPoolIdentityProvider } from '../cognito.generated';\nimport { UserPoolIdentityProviderProps } from './base';\nimport { UserPoolIdentityProviderBase } from './private/user-pool-idp-base';\n\n/**\n * Properties to initialize UserPoolAppleIdentityProvider\n */\nexport interface UserPoolIdentityProviderAppleProps extends UserPoolIdentityProviderProps {\n  /**\n   * The client id recognized by Apple APIs.\n   * @see https://developer.apple.com/documentation/sign_in_with_apple/clientconfigi/3230948-clientid\n   */\n  readonly clientId: string;\n  /**\n   * The teamId for Apple APIs to authenticate the client.\n   */\n  readonly teamId: string;\n  /**\n   * The keyId (of the same key, which content has to be later supplied as `privateKey`) for Apple APIs to authenticate the client.\n   */\n  readonly keyId: string;\n  /**\n   * The privateKey content for Apple APIs to authenticate the client.\n   */\n  readonly privateKey: string;\n  /**\n   * The list of apple permissions to obtain for getting access to the apple profile\n   * @see https://developer.apple.com/documentation/sign_in_with_apple/clientconfigi/3230955-scope\n   * @default [ name ]\n   */\n  readonly scopes?: string[];\n}\n\n/**\n * Represents a identity provider that integrates with 'Apple'\n * @resource AWS::Cognito::UserPoolIdentityProvider\n */\nexport class UserPoolIdentityProviderApple extends UserPoolIdentityProviderBase {\n  public readonly providerName: string;\n\n  constructor(scope: Construct, id: string, props: UserPoolIdentityProviderAppleProps) {\n    super(scope, id, props);\n\n    const scopes = props.scopes ?? ['name'];\n\n    const resource = new CfnUserPoolIdentityProvider(this, 'Resource', {\n      userPoolId: props.userPool.userPoolId,\n      providerName: 'SignInWithApple', // must be 'SignInWithApple' when the type is 'SignInWithApple'\n      providerType: 'SignInWithApple',\n      providerDetails: {\n        client_id: props.clientId,\n        team_id: props.teamId,\n        key_id: props.keyId,\n        private_key: props.privateKey,\n        authorize_scopes: scopes.join(' '),\n      },\n      attributeMapping: super.configureAttributeMapping(),\n    });\n\n    this.providerName = super.getResourceNameAttribute(resource.ref);\n  }\n}"],
  "mappings": "uOACA,oBAAA,QAAA,sBAAA,EAEA,qBAAA,QAAA,8BAAA,EAmCA,MAAa,qCAAsC,sBAAA,4BAA4B,CAG7E,YAAY,MAAkB,GAAY,MAAyC,QACjF,MAAM,MAAO,GAAI,KAAK,4FAEtB,KAAM,QAAM,IAAG,MAAM,UAAM,MAAA,KAAA,OAAA,GAAI,CAAC,MAAM,EAEhC,SAAW,GAAI,qBAAA,4BAA4B,KAAM,WAAY,CACjE,WAAY,MAAM,SAAS,WAC3B,aAAc,kBACd,aAAc,kBACd,gBAAiB,CACf,UAAW,MAAM,SACjB,QAAS,MAAM,OACf,OAAQ,MAAM,MACd,YAAa,MAAM,WACnB,iBAAkB,OAAO,KAAK,GAAG,GAEnC,iBAAkB,MAAM,0BAAyB,EAClD,EAED,KAAK,aAAe,MAAM,yBAAyB,SAAS,GAAG,GAtBnE,QAAA,8BAAA",
  "names": []
}
