{
  "version": 3,
  "sources": ["bucket-policy.ts"],
  "sourcesContent": ["import { PolicyDocument } from '../../aws-iam';\nimport { RemovalPolicy, Resource } from '../../core';\nimport { Construct } from 'constructs';\nimport { IBucket } from './bucket';\nimport { CfnBucketPolicy } from './s3.generated';\n\nexport interface BucketPolicyProps {\n  /**\n   * The Amazon S3 bucket that the policy applies to.\n   */\n  readonly bucket: IBucket;\n\n  /**\n   * Policy to apply when the policy is removed from this stack.\n   *\n   * @default - RemovalPolicy.DESTROY.\n   */\n  readonly removalPolicy?: RemovalPolicy;\n}\n\n/**\n * The bucket policy for an Amazon S3 bucket\n *\n * Policies define the operations that are allowed on this resource.\n *\n * You almost never need to define this construct directly.\n *\n * All AWS resources that support resource policies have a method called\n * `addToResourcePolicy()`, which will automatically create a new resource\n * policy if one doesn't exist yet, otherwise it will add to the existing\n * policy.\n *\n * Prefer to use `addToResourcePolicy()` instead.\n */\nexport class BucketPolicy extends Resource {\n\n  /**\n   * A policy document containing permissions to add to the specified bucket.\n   * For more information, see Access Policy Language Overview in the Amazon\n   * Simple Storage Service Developer Guide.\n   */\n  public readonly document = new PolicyDocument();\n\n  private resource: CfnBucketPolicy;\n\n  constructor(scope: Construct, id: string, props: BucketPolicyProps) {\n    super(scope, id);\n\n    if (!props.bucket.bucketName) {\n      throw new Error('Bucket doesn\\'t have a bucketName defined');\n    }\n\n    this.resource = new CfnBucketPolicy(this, 'Resource', {\n      bucket: props.bucket.bucketName,\n      policyDocument: this.document,\n    });\n\n    if (props.removalPolicy) {\n      this.resource.applyRemovalPolicy(props.removalPolicy);\n    }\n  }\n\n  /**\n   * Sets the removal policy for the BucketPolicy.\n   * @param removalPolicy the RemovalPolicy to set.\n   */\n  public applyRemovalPolicy(removalPolicy: RemovalPolicy) {\n    this.resource.applyRemovalPolicy(removalPolicy);\n  }\n\n}\n"],
  "mappings": "mNAAA,UAAA,QAAA,eAAA,EACA,OAAA,QAAA,YAAA,EAGA,eAAA,QAAA,gBAAA,EA8BA,MAAa,oBAAqB,QAAA,QAAQ,CAWxC,YAAY,MAAkB,GAAY,MAAwB,CAChE,MAAM,MAAO,EAAE,EAEf,GAPc,KAAA,SAAW,GAAI,WAAA,mFAOzB,CAAC,MAAM,OAAO,WAChB,KAAM,IAAI,OAAM,0CAA2C,EAG7D,KAAK,SAAW,GAAI,gBAAA,gBAAgB,KAAM,WAAY,CACpD,OAAQ,MAAM,OAAO,WACrB,eAAgB,KAAK,SACtB,EAEG,MAAM,eACR,KAAK,SAAS,mBAAmB,MAAM,aAAa,EAQjD,mBAAmB,cAA4B,kEACpD,KAAK,SAAS,mBAAmB,aAAa,GAjClD,QAAA,aAAA",
  "names": []
}
