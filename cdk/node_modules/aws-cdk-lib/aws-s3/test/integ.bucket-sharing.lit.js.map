{
  "version": 3,
  "sources": ["integ.bucket-sharing.lit.ts"],
  "sourcesContent": ["/// !cdk-integ *\nimport * as iam from '../../aws-iam';\nimport * as cdk from '../../core';\nimport * as s3 from '../lib';\n\nconst app = new cdk.App();\n\n/// !show\n\n/**\n * Stack that defines the bucket\n */\nclass Producer extends cdk.Stack {\n  public readonly myBucket: s3.Bucket;\n\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    const bucket = new s3.Bucket(this, 'MyBucket', {\n      removalPolicy: cdk.RemovalPolicy.DESTROY,\n    });\n    this.myBucket = bucket;\n  }\n}\n\ninterface ConsumerProps extends cdk.StackProps {\n  userBucket: s3.IBucket;\n}\n\n/**\n * Stack that consumes the bucket\n */\nclass Consumer extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props: ConsumerProps) {\n    super(scope, id, props);\n\n    const user = new iam.User(this, 'MyUser');\n    props.userBucket.grantReadWrite(user);\n  }\n}\n\nconst producer = new Producer(app, 'ProducerStack');\nnew Consumer(app, 'ConsumerStack', { userBucket: producer.myBucket });\n/// !hide\n\napp.synth();\n"],
  "mappings": "oEACA,KAAA,KAAA,QAAA,eAAA,EACA,IAAA,QAAA,YAAA,EACA,GAAA,QAAA,QAAA,EAEM,IAAM,GAAI,KAAI,IAOpB,MAAM,gBAAiB,KAAI,KAAK,CAG9B,YAAY,MAAgB,GAAY,MAAsB,CAC5D,MAAM,MAAO,GAAI,KAAK,EAEtB,KAAM,QAAS,GAAI,IAAG,OAAO,KAAM,WAAY,CAC7C,cAAe,IAAI,cAAc,QAClC,EACD,KAAK,SAAW,QAWpB,MAAM,gBAAiB,KAAI,KAAK,CAC9B,YAAY,MAAgB,GAAY,MAAoB,CAC1D,MAAM,MAAO,GAAI,KAAK,EAEtB,KAAM,MAAO,GAAI,KAAI,KAAK,KAAM,QAAQ,EACxC,MAAM,WAAW,eAAe,IAAI,GAIxC,KAAM,UAAW,GAAI,UAAS,IAAK,eAAe,EAClD,GAAI,UAAS,IAAK,gBAAiB,CAAE,WAAY,SAAS,QAAQ,CAAE,EAGpE,IAAI,MAAK",
  "names": []
}
