{
  "version": 3,
  "sources": ["auditmanager.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-04-07T10:53:53.256Z\",\"fingerprint\":\"loTNy3snhXtsd6TVQOAi3G8+nLEHlLEVN7dVgzkuFY0=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n/**\n * Properties for defining a `CfnAssessment`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html\n */\nexport interface CfnAssessmentProps {\n\n    /**\n     * The destination that evidence reports are stored in for the assessment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html#cfn-auditmanager-assessment-assessmentreportsdestination\n     */\n    readonly assessmentReportsDestination?: CfnAssessment.AssessmentReportsDestinationProperty | cdk.IResolvable;\n\n    /**\n     * The AWS account that's associated with the assessment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html#cfn-auditmanager-assessment-awsaccount\n     */\n    readonly awsAccount?: CfnAssessment.AWSAccountProperty | cdk.IResolvable;\n\n    /**\n     * The description of the assessment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html#cfn-auditmanager-assessment-description\n     */\n    readonly description?: string;\n\n    /**\n     * The unique identifier for the framework.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html#cfn-auditmanager-assessment-frameworkid\n     */\n    readonly frameworkId?: string;\n\n    /**\n     * The name of the assessment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html#cfn-auditmanager-assessment-name\n     */\n    readonly name?: string;\n\n    /**\n     * The roles that are associated with the assessment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html#cfn-auditmanager-assessment-roles\n     */\n    readonly roles?: Array<CfnAssessment.RoleProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * The wrapper of AWS accounts and services that are in scope for the assessment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html#cfn-auditmanager-assessment-scope\n     */\n    readonly scope?: CfnAssessment.ScopeProperty | cdk.IResolvable;\n\n    /**\n     * The overall status of the assessment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html#cfn-auditmanager-assessment-status\n     */\n    readonly status?: string;\n\n    /**\n     * The tags that are associated with the assessment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html#cfn-auditmanager-assessment-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnAssessmentProps`\n *\n * @param properties - the TypeScript properties of a `CfnAssessmentProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnAssessmentPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('assessmentReportsDestination', CfnAssessment_AssessmentReportsDestinationPropertyValidator)(properties.assessmentReportsDestination));\n    errors.collect(cdk.propertyValidator('awsAccount', CfnAssessment_AWSAccountPropertyValidator)(properties.awsAccount));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('frameworkId', cdk.validateString)(properties.frameworkId));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('roles', cdk.listValidator(CfnAssessment_RolePropertyValidator))(properties.roles));\n    errors.collect(cdk.propertyValidator('scope', CfnAssessment_ScopePropertyValidator)(properties.scope));\n    errors.collect(cdk.propertyValidator('status', cdk.validateString)(properties.status));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnAssessmentProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AuditManager::Assessment` resource\n *\n * @param properties - the TypeScript properties of a `CfnAssessmentProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AuditManager::Assessment` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAssessmentPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAssessmentPropsValidator(properties).assertSuccess();\n    return {\n        AssessmentReportsDestination: cfnAssessmentAssessmentReportsDestinationPropertyToCloudFormation(properties.assessmentReportsDestination),\n        AwsAccount: cfnAssessmentAWSAccountPropertyToCloudFormation(properties.awsAccount),\n        Description: cdk.stringToCloudFormation(properties.description),\n        FrameworkId: cdk.stringToCloudFormation(properties.frameworkId),\n        Name: cdk.stringToCloudFormation(properties.name),\n        Roles: cdk.listMapper(cfnAssessmentRolePropertyToCloudFormation)(properties.roles),\n        Scope: cfnAssessmentScopePropertyToCloudFormation(properties.scope),\n        Status: cdk.stringToCloudFormation(properties.status),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAssessmentPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAssessmentProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAssessmentProps>();\n    ret.addPropertyResult('assessmentReportsDestination', 'AssessmentReportsDestination', properties.AssessmentReportsDestination != null ? CfnAssessmentAssessmentReportsDestinationPropertyFromCloudFormation(properties.AssessmentReportsDestination) : undefined);\n    ret.addPropertyResult('awsAccount', 'AwsAccount', properties.AwsAccount != null ? CfnAssessmentAWSAccountPropertyFromCloudFormation(properties.AwsAccount) : undefined);\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('frameworkId', 'FrameworkId', properties.FrameworkId != null ? cfn_parse.FromCloudFormation.getString(properties.FrameworkId) : undefined);\n    ret.addPropertyResult('name', 'Name', properties.Name != null ? cfn_parse.FromCloudFormation.getString(properties.Name) : undefined);\n    ret.addPropertyResult('roles', 'Roles', properties.Roles != null ? cfn_parse.FromCloudFormation.getArray(CfnAssessmentRolePropertyFromCloudFormation)(properties.Roles) : undefined);\n    ret.addPropertyResult('scope', 'Scope', properties.Scope != null ? CfnAssessmentScopePropertyFromCloudFormation(properties.Scope) : undefined);\n    ret.addPropertyResult('status', 'Status', properties.Status != null ? cfn_parse.FromCloudFormation.getString(properties.Status) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::AuditManager::Assessment`\n *\n * The `AWS::AuditManager::Assessment` resource is an AWS Audit Manager resource type that defines the scope of audit evidence collected by Audit Manager . An Audit Manager assessment is an implementation of an Audit Manager framework.\n *\n * @cloudformationResource AWS::AuditManager::Assessment\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html\n */\nexport class CfnAssessment extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::AuditManager::Assessment\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnAssessment {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnAssessmentPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnAssessment(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The Amazon Resource Name (ARN) of the assessment. For example, `arn:aws:auditmanager:us-east-1:123456789012:assessment/111A1A1A-22B2-33C3-DDD4-55E5E5E555E5` .\n     * @cloudformationAttribute Arn\n     */\n    public readonly attrArn: string;\n\n    /**\n     * The unique identifier for the assessment. For example, `111A1A1A-22B2-33C3-DDD4-55E5E5E555E5` .\n     * @cloudformationAttribute AssessmentId\n     */\n    public readonly attrAssessmentId: string;\n\n    /**\n     * The time when the assessment was created. For example, `1607582033.373` .\n     * @cloudformationAttribute CreationTime\n     */\n    public readonly attrCreationTime: cdk.IResolvable;\n\n    /**\n     * The delegations associated with the assessment.\n     * @cloudformationAttribute Delegations\n     */\n    public readonly attrDelegations: cdk.IResolvable;\n\n    /**\n     * The destination that evidence reports are stored in for the assessment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html#cfn-auditmanager-assessment-assessmentreportsdestination\n     */\n    public assessmentReportsDestination: CfnAssessment.AssessmentReportsDestinationProperty | cdk.IResolvable | undefined;\n\n    /**\n     * The AWS account that's associated with the assessment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html#cfn-auditmanager-assessment-awsaccount\n     */\n    public awsAccount: CfnAssessment.AWSAccountProperty | cdk.IResolvable | undefined;\n\n    /**\n     * The description of the assessment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html#cfn-auditmanager-assessment-description\n     */\n    public description: string | undefined;\n\n    /**\n     * The unique identifier for the framework.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html#cfn-auditmanager-assessment-frameworkid\n     */\n    public frameworkId: string | undefined;\n\n    /**\n     * The name of the assessment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html#cfn-auditmanager-assessment-name\n     */\n    public name: string | undefined;\n\n    /**\n     * The roles that are associated with the assessment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html#cfn-auditmanager-assessment-roles\n     */\n    public roles: Array<CfnAssessment.RoleProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n    /**\n     * The wrapper of AWS accounts and services that are in scope for the assessment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html#cfn-auditmanager-assessment-scope\n     */\n    public scope: CfnAssessment.ScopeProperty | cdk.IResolvable | undefined;\n\n    /**\n     * The overall status of the assessment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html#cfn-auditmanager-assessment-status\n     */\n    public status: string | undefined;\n\n    /**\n     * The tags that are associated with the assessment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html#cfn-auditmanager-assessment-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::AuditManager::Assessment`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnAssessmentProps = {}) {\n        super(scope, id, { type: CfnAssessment.CFN_RESOURCE_TYPE_NAME, properties: props });\n        this.attrArn = cdk.Token.asString(this.getAtt('Arn'));\n        this.attrAssessmentId = cdk.Token.asString(this.getAtt('AssessmentId'));\n        this.attrCreationTime = this.getAtt('CreationTime');\n        this.attrDelegations = this.getAtt('Delegations');\n\n        this.assessmentReportsDestination = props.assessmentReportsDestination;\n        this.awsAccount = props.awsAccount;\n        this.description = props.description;\n        this.frameworkId = props.frameworkId;\n        this.name = props.name;\n        this.roles = props.roles;\n        this.scope = props.scope;\n        this.status = props.status;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::AuditManager::Assessment\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnAssessment.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            assessmentReportsDestination: this.assessmentReportsDestination,\n            awsAccount: this.awsAccount,\n            description: this.description,\n            frameworkId: this.frameworkId,\n            name: this.name,\n            roles: this.roles,\n            scope: this.scope,\n            status: this.status,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnAssessmentPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnAssessment {\n    /**\n     * The `AWSAccount` property type specifies the wrapper of the AWS account details, such as account ID, email address, and so on.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-auditmanager-assessment-awsaccount.html\n     */\n    export interface AWSAccountProperty {\n        /**\n         * The email address that's associated with the AWS account .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-auditmanager-assessment-awsaccount.html#cfn-auditmanager-assessment-awsaccount-emailaddress\n         */\n        readonly emailAddress?: string;\n        /**\n         * The identifier for the AWS account .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-auditmanager-assessment-awsaccount.html#cfn-auditmanager-assessment-awsaccount-id\n         */\n        readonly id?: string;\n        /**\n         * The name of the AWS account .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-auditmanager-assessment-awsaccount.html#cfn-auditmanager-assessment-awsaccount-name\n         */\n        readonly name?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AWSAccountProperty`\n *\n * @param properties - the TypeScript properties of a `AWSAccountProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnAssessment_AWSAccountPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('emailAddress', cdk.validateString)(properties.emailAddress));\n    errors.collect(cdk.propertyValidator('id', cdk.validateString)(properties.id));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    return errors.wrap('supplied properties not correct for \"AWSAccountProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AuditManager::Assessment.AWSAccount` resource\n *\n * @param properties - the TypeScript properties of a `AWSAccountProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AuditManager::Assessment.AWSAccount` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAssessmentAWSAccountPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAssessment_AWSAccountPropertyValidator(properties).assertSuccess();\n    return {\n        EmailAddress: cdk.stringToCloudFormation(properties.emailAddress),\n        Id: cdk.stringToCloudFormation(properties.id),\n        Name: cdk.stringToCloudFormation(properties.name),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAssessmentAWSAccountPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAssessment.AWSAccountProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAssessment.AWSAccountProperty>();\n    ret.addPropertyResult('emailAddress', 'EmailAddress', properties.EmailAddress != null ? cfn_parse.FromCloudFormation.getString(properties.EmailAddress) : undefined);\n    ret.addPropertyResult('id', 'Id', properties.Id != null ? cfn_parse.FromCloudFormation.getString(properties.Id) : undefined);\n    ret.addPropertyResult('name', 'Name', properties.Name != null ? cfn_parse.FromCloudFormation.getString(properties.Name) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnAssessment {\n    /**\n     * The `AWSService` property type specifies an AWS service such as Amazon S3 , AWS CloudTrail , and so on.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-auditmanager-assessment-awsservice.html\n     */\n    export interface AWSServiceProperty {\n        /**\n         * The name of the AWS service .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-auditmanager-assessment-awsservice.html#cfn-auditmanager-assessment-awsservice-servicename\n         */\n        readonly serviceName?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AWSServiceProperty`\n *\n * @param properties - the TypeScript properties of a `AWSServiceProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnAssessment_AWSServicePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('serviceName', cdk.validateString)(properties.serviceName));\n    return errors.wrap('supplied properties not correct for \"AWSServiceProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AuditManager::Assessment.AWSService` resource\n *\n * @param properties - the TypeScript properties of a `AWSServiceProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AuditManager::Assessment.AWSService` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAssessmentAWSServicePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAssessment_AWSServicePropertyValidator(properties).assertSuccess();\n    return {\n        ServiceName: cdk.stringToCloudFormation(properties.serviceName),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAssessmentAWSServicePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAssessment.AWSServiceProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAssessment.AWSServiceProperty>();\n    ret.addPropertyResult('serviceName', 'ServiceName', properties.ServiceName != null ? cfn_parse.FromCloudFormation.getString(properties.ServiceName) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnAssessment {\n    /**\n     * The `AssessmentReportsDestination` property type specifies the location in which AWS Audit Manager saves assessment reports for the given assessment.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-auditmanager-assessment-assessmentreportsdestination.html\n     */\n    export interface AssessmentReportsDestinationProperty {\n        /**\n         * The destination of the assessment report.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-auditmanager-assessment-assessmentreportsdestination.html#cfn-auditmanager-assessment-assessmentreportsdestination-destination\n         */\n        readonly destination?: string;\n        /**\n         * The destination type, such as Amazon S3.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-auditmanager-assessment-assessmentreportsdestination.html#cfn-auditmanager-assessment-assessmentreportsdestination-destinationtype\n         */\n        readonly destinationType?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AssessmentReportsDestinationProperty`\n *\n * @param properties - the TypeScript properties of a `AssessmentReportsDestinationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnAssessment_AssessmentReportsDestinationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('destination', cdk.validateString)(properties.destination));\n    errors.collect(cdk.propertyValidator('destinationType', cdk.validateString)(properties.destinationType));\n    return errors.wrap('supplied properties not correct for \"AssessmentReportsDestinationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AuditManager::Assessment.AssessmentReportsDestination` resource\n *\n * @param properties - the TypeScript properties of a `AssessmentReportsDestinationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AuditManager::Assessment.AssessmentReportsDestination` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAssessmentAssessmentReportsDestinationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAssessment_AssessmentReportsDestinationPropertyValidator(properties).assertSuccess();\n    return {\n        Destination: cdk.stringToCloudFormation(properties.destination),\n        DestinationType: cdk.stringToCloudFormation(properties.destinationType),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAssessmentAssessmentReportsDestinationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAssessment.AssessmentReportsDestinationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAssessment.AssessmentReportsDestinationProperty>();\n    ret.addPropertyResult('destination', 'Destination', properties.Destination != null ? cfn_parse.FromCloudFormation.getString(properties.Destination) : undefined);\n    ret.addPropertyResult('destinationType', 'DestinationType', properties.DestinationType != null ? cfn_parse.FromCloudFormation.getString(properties.DestinationType) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnAssessment {\n    /**\n     * The `Delegation` property type specifies the assignment of a control set to a delegate for review.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-auditmanager-assessment-delegation.html\n     */\n    export interface DelegationProperty {\n        /**\n         * The identifier for the assessment that's associated with the delegation.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-auditmanager-assessment-delegation.html#cfn-auditmanager-assessment-delegation-assessmentid\n         */\n        readonly assessmentId?: string;\n        /**\n         * The name of the assessment that's associated with the delegation.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-auditmanager-assessment-delegation.html#cfn-auditmanager-assessment-delegation-assessmentname\n         */\n        readonly assessmentName?: string;\n        /**\n         * The comment that's related to the delegation.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-auditmanager-assessment-delegation.html#cfn-auditmanager-assessment-delegation-comment\n         */\n        readonly comment?: string;\n        /**\n         * The identifier for the control set that's associated with the delegation.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-auditmanager-assessment-delegation.html#cfn-auditmanager-assessment-delegation-controlsetid\n         */\n        readonly controlSetId?: string;\n        /**\n         * The IAM user or role that created the delegation.\n         *\n         * *Minimum* : `1`\n         *\n         * *Maximum* : `100`\n         *\n         * *Pattern* : `^[a-zA-Z0-9-_()\\\\[\\\\]\\\\s]+$`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-auditmanager-assessment-delegation.html#cfn-auditmanager-assessment-delegation-createdby\n         */\n        readonly createdBy?: string;\n        /**\n         * Specifies when the delegation was created.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-auditmanager-assessment-delegation.html#cfn-auditmanager-assessment-delegation-creationtime\n         */\n        readonly creationTime?: number;\n        /**\n         * The unique identifier for the delegation.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-auditmanager-assessment-delegation.html#cfn-auditmanager-assessment-delegation-id\n         */\n        readonly id?: string;\n        /**\n         * Specifies when the delegation was last updated.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-auditmanager-assessment-delegation.html#cfn-auditmanager-assessment-delegation-lastupdated\n         */\n        readonly lastUpdated?: number;\n        /**\n         * The Amazon Resource Name (ARN) of the IAM role.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-auditmanager-assessment-delegation.html#cfn-auditmanager-assessment-delegation-rolearn\n         */\n        readonly roleArn?: string;\n        /**\n         * The type of customer persona.\n         *\n         * > In `CreateAssessment` , `roleType` can only be `PROCESS_OWNER` .\n         * >\n         * > In `UpdateSettings` , `roleType` can only be `PROCESS_OWNER` .\n         * >\n         * > In `BatchCreateDelegationByAssessment` , `roleType` can only be `RESOURCE_OWNER` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-auditmanager-assessment-delegation.html#cfn-auditmanager-assessment-delegation-roletype\n         */\n        readonly roleType?: string;\n        /**\n         * The status of the delegation.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-auditmanager-assessment-delegation.html#cfn-auditmanager-assessment-delegation-status\n         */\n        readonly status?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `DelegationProperty`\n *\n * @param properties - the TypeScript properties of a `DelegationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnAssessment_DelegationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('assessmentId', cdk.validateString)(properties.assessmentId));\n    errors.collect(cdk.propertyValidator('assessmentName', cdk.validateString)(properties.assessmentName));\n    errors.collect(cdk.propertyValidator('comment', cdk.validateString)(properties.comment));\n    errors.collect(cdk.propertyValidator('controlSetId', cdk.validateString)(properties.controlSetId));\n    errors.collect(cdk.propertyValidator('createdBy', cdk.validateString)(properties.createdBy));\n    errors.collect(cdk.propertyValidator('creationTime', cdk.validateNumber)(properties.creationTime));\n    errors.collect(cdk.propertyValidator('id', cdk.validateString)(properties.id));\n    errors.collect(cdk.propertyValidator('lastUpdated', cdk.validateNumber)(properties.lastUpdated));\n    errors.collect(cdk.propertyValidator('roleArn', cdk.validateString)(properties.roleArn));\n    errors.collect(cdk.propertyValidator('roleType', cdk.validateString)(properties.roleType));\n    errors.collect(cdk.propertyValidator('status', cdk.validateString)(properties.status));\n    return errors.wrap('supplied properties not correct for \"DelegationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AuditManager::Assessment.Delegation` resource\n *\n * @param properties - the TypeScript properties of a `DelegationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AuditManager::Assessment.Delegation` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAssessmentDelegationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAssessment_DelegationPropertyValidator(properties).assertSuccess();\n    return {\n        AssessmentId: cdk.stringToCloudFormation(properties.assessmentId),\n        AssessmentName: cdk.stringToCloudFormation(properties.assessmentName),\n        Comment: cdk.stringToCloudFormation(properties.comment),\n        ControlSetId: cdk.stringToCloudFormation(properties.controlSetId),\n        CreatedBy: cdk.stringToCloudFormation(properties.createdBy),\n        CreationTime: cdk.numberToCloudFormation(properties.creationTime),\n        Id: cdk.stringToCloudFormation(properties.id),\n        LastUpdated: cdk.numberToCloudFormation(properties.lastUpdated),\n        RoleArn: cdk.stringToCloudFormation(properties.roleArn),\n        RoleType: cdk.stringToCloudFormation(properties.roleType),\n        Status: cdk.stringToCloudFormation(properties.status),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAssessmentDelegationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAssessment.DelegationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAssessment.DelegationProperty>();\n    ret.addPropertyResult('assessmentId', 'AssessmentId', properties.AssessmentId != null ? cfn_parse.FromCloudFormation.getString(properties.AssessmentId) : undefined);\n    ret.addPropertyResult('assessmentName', 'AssessmentName', properties.AssessmentName != null ? cfn_parse.FromCloudFormation.getString(properties.AssessmentName) : undefined);\n    ret.addPropertyResult('comment', 'Comment', properties.Comment != null ? cfn_parse.FromCloudFormation.getString(properties.Comment) : undefined);\n    ret.addPropertyResult('controlSetId', 'ControlSetId', properties.ControlSetId != null ? cfn_parse.FromCloudFormation.getString(properties.ControlSetId) : undefined);\n    ret.addPropertyResult('createdBy', 'CreatedBy', properties.CreatedBy != null ? cfn_parse.FromCloudFormation.getString(properties.CreatedBy) : undefined);\n    ret.addPropertyResult('creationTime', 'CreationTime', properties.CreationTime != null ? cfn_parse.FromCloudFormation.getNumber(properties.CreationTime) : undefined);\n    ret.addPropertyResult('id', 'Id', properties.Id != null ? cfn_parse.FromCloudFormation.getString(properties.Id) : undefined);\n    ret.addPropertyResult('lastUpdated', 'LastUpdated', properties.LastUpdated != null ? cfn_parse.FromCloudFormation.getNumber(properties.LastUpdated) : undefined);\n    ret.addPropertyResult('roleArn', 'RoleArn', properties.RoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.RoleArn) : undefined);\n    ret.addPropertyResult('roleType', 'RoleType', properties.RoleType != null ? cfn_parse.FromCloudFormation.getString(properties.RoleType) : undefined);\n    ret.addPropertyResult('status', 'Status', properties.Status != null ? cfn_parse.FromCloudFormation.getString(properties.Status) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnAssessment {\n    /**\n     * The `Role` property type specifies the wrapper that contains AWS Audit Manager role information, such as the role type and IAM Amazon Resource Name (ARN).\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-auditmanager-assessment-role.html\n     */\n    export interface RoleProperty {\n        /**\n         * The Amazon Resource Name (ARN) of the IAM role.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-auditmanager-assessment-role.html#cfn-auditmanager-assessment-role-rolearn\n         */\n        readonly roleArn?: string;\n        /**\n         * The type of customer persona.\n         *\n         * > In `CreateAssessment` , `roleType` can only be `PROCESS_OWNER` .\n         * >\n         * > In `UpdateSettings` , `roleType` can only be `PROCESS_OWNER` .\n         * >\n         * > In `BatchCreateDelegationByAssessment` , `roleType` can only be `RESOURCE_OWNER` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-auditmanager-assessment-role.html#cfn-auditmanager-assessment-role-roletype\n         */\n        readonly roleType?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `RoleProperty`\n *\n * @param properties - the TypeScript properties of a `RoleProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnAssessment_RolePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('roleArn', cdk.validateString)(properties.roleArn));\n    errors.collect(cdk.propertyValidator('roleType', cdk.validateString)(properties.roleType));\n    return errors.wrap('supplied properties not correct for \"RoleProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AuditManager::Assessment.Role` resource\n *\n * @param properties - the TypeScript properties of a `RoleProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AuditManager::Assessment.Role` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAssessmentRolePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAssessment_RolePropertyValidator(properties).assertSuccess();\n    return {\n        RoleArn: cdk.stringToCloudFormation(properties.roleArn),\n        RoleType: cdk.stringToCloudFormation(properties.roleType),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAssessmentRolePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAssessment.RoleProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAssessment.RoleProperty>();\n    ret.addPropertyResult('roleArn', 'RoleArn', properties.RoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.RoleArn) : undefined);\n    ret.addPropertyResult('roleType', 'RoleType', properties.RoleType != null ? cfn_parse.FromCloudFormation.getString(properties.RoleType) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnAssessment {\n    /**\n     * The `Scope` property type specifies the wrapper that contains the AWS accounts and services in scope for the assessment.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-auditmanager-assessment-scope.html\n     */\n    export interface ScopeProperty {\n        /**\n         * The AWS accounts that are included in the scope of the assessment.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-auditmanager-assessment-scope.html#cfn-auditmanager-assessment-scope-awsaccounts\n         */\n        readonly awsAccounts?: Array<CfnAssessment.AWSAccountProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * The AWS services that are included in the scope of the assessment.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-auditmanager-assessment-scope.html#cfn-auditmanager-assessment-scope-awsservices\n         */\n        readonly awsServices?: Array<CfnAssessment.AWSServiceProperty | cdk.IResolvable> | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ScopeProperty`\n *\n * @param properties - the TypeScript properties of a `ScopeProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnAssessment_ScopePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('awsAccounts', cdk.listValidator(CfnAssessment_AWSAccountPropertyValidator))(properties.awsAccounts));\n    errors.collect(cdk.propertyValidator('awsServices', cdk.listValidator(CfnAssessment_AWSServicePropertyValidator))(properties.awsServices));\n    return errors.wrap('supplied properties not correct for \"ScopeProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AuditManager::Assessment.Scope` resource\n *\n * @param properties - the TypeScript properties of a `ScopeProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AuditManager::Assessment.Scope` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAssessmentScopePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAssessment_ScopePropertyValidator(properties).assertSuccess();\n    return {\n        AwsAccounts: cdk.listMapper(cfnAssessmentAWSAccountPropertyToCloudFormation)(properties.awsAccounts),\n        AwsServices: cdk.listMapper(cfnAssessmentAWSServicePropertyToCloudFormation)(properties.awsServices),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAssessmentScopePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAssessment.ScopeProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAssessment.ScopeProperty>();\n    ret.addPropertyResult('awsAccounts', 'AwsAccounts', properties.AwsAccounts != null ? cfn_parse.FromCloudFormation.getArray(CfnAssessmentAWSAccountPropertyFromCloudFormation)(properties.AwsAccounts) : undefined);\n    ret.addPropertyResult('awsServices', 'AwsServices', properties.AwsServices != null ? cfn_parse.FromCloudFormation.getArray(CfnAssessmentAWSServicePropertyFromCloudFormation)(properties.AwsServices) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n"],
  "mappings": "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",
  "names": []
}
