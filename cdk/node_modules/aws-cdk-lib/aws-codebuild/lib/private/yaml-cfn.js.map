{
  "version": 3,
  "sources": ["yaml-cfn.ts"],
  "sourcesContent": ["import * as yaml from 'yaml';\nimport * as yaml_types from 'yaml/types';\n\n/**\n * Serializes the given data structure into valid YAML.\n *\n * @param obj the data structure to serialize\n * @returns a string containing the YAML representation of {@param obj}\n */\nexport function serialize(obj: any): string {\n  const oldFold = yaml_types.strOptions.fold.lineWidth;\n  try {\n    yaml_types.strOptions.fold.lineWidth = 0;\n    return yaml.stringify(obj, { schema: 'yaml-1.1' });\n  } finally {\n    yaml_types.strOptions.fold.lineWidth = oldFold;\n  }\n}\n"],
  "mappings": "6FAAA,KAAA,MAAA,QAAA,MAAA,EACA,WAAA,QAAA,YAAA,EAQA,mBAA0B,IAAQ,CAChC,KAAM,SAAU,WAAW,WAAW,KAAK,UAC3C,GAAI,CACF,kBAAW,WAAW,KAAK,UAAY,EAChC,KAAK,UAAU,IAAK,CAAE,OAAQ,UAAU,CAAE,UAEjD,WAAW,WAAW,KAAK,UAAY,QAE3C,CARA,QAAA,UAAA",
  "names": []
}
