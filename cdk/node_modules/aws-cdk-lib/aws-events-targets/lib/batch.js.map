{
  "version": 3,
  "sources": ["batch.ts"],
  "sourcesContent": ["import * as events from '../../aws-events';\nimport * as iam from '../../aws-iam';\nimport { Names } from '../../core';\nimport { IConstruct } from 'constructs';\nimport { addToDeadLetterQueueResourcePolicy, bindBaseTargetConfig, singletonEventRole, TargetBaseProps } from './util';\n\n/**\n * Customize the Batch Job Event Target\n */\nexport interface BatchJobProps extends TargetBaseProps {\n  /**\n   * The event to send to the Lambda\n   *\n   * This will be the payload sent to the Lambda Function.\n   *\n   * @default the entire EventBridge event\n   */\n  readonly event?: events.RuleTargetInput;\n\n  /**\n   * The size of the array, if this is an array batch job.\n   *\n   * Valid values are integers between 2 and 10,000.\n   *\n   * @default no arrayProperties are set\n   */\n  readonly size?: number;\n\n  /**\n   * The number of times to attempt to retry, if the job fails. Valid values are 1\u201310.\n   *\n   * @default no retryStrategy is set\n   */\n  readonly attempts?: number;\n\n  /**\n   * The name of the submitted job\n   *\n   * @default - Automatically generated\n   */\n  readonly jobName?: string;\n}\n\n/**\n * Use an AWS Batch Job / Queue as an event rule target.\n * Most likely the code will look something like this:\n * `new BatchJob(jobQueue.jobQueueArn, jobQueue, jobDefinition.jobDefinitionArn, jobDefinition)`\n *\n * In the future this API will be improved to be fully typed\n */\nexport class BatchJob implements events.IRuleTarget {\n  constructor(\n    /**\n     * The JobQueue arn\n     */\n    private readonly jobQueueArn: string,\n\n    /**\n     * The JobQueue Resource\n     */\n    private readonly jobQueueScope: IConstruct,\n\n    /**\n     * The jobDefinition arn\n     */\n    private readonly jobDefinitionArn: string,\n\n    /**\n     * The JobQueue Resource\n     */\n    private readonly jobDefinitionScope: IConstruct,\n    private readonly props: BatchJobProps = {},\n  ) { }\n\n  /**\n   * Returns a RuleTarget that can be used to trigger queue this batch job as a\n   * result from an EventBridge event.\n   */\n  public bind(rule: events.IRule, _id?: string): events.RuleTargetConfig {\n    const batchParameters: events.CfnRule.BatchParametersProperty = {\n      jobDefinition: this.jobDefinitionArn,\n      jobName: this.props.jobName ?? Names.nodeUniqueId(rule.node),\n      arrayProperties: this.props.size ? { size: this.props.size } : undefined,\n      retryStrategy: this.props.attempts ? { attempts: this.props.attempts } : undefined,\n    };\n\n    if (this.props.deadLetterQueue) {\n      addToDeadLetterQueueResourcePolicy(rule, this.props.deadLetterQueue);\n    }\n\n    return {\n      ...bindBaseTargetConfig(this.props),\n      arn: this.jobQueueArn,\n      // When scoping resource-level access for job submission, you must provide both job queue and job definition resource types.\n      // https://docs.aws.amazon.com/batch/latest/userguide/ExamplePolicies_BATCH.html#iam-example-restrict-job-def\n      role: singletonEventRole(this.jobDefinitionScope, [\n        new iam.PolicyStatement({\n          actions: ['batch:SubmitJob'],\n          resources: [\n            this.jobDefinitionArn,\n            this.jobQueueArn,\n          ],\n        }),\n      ]),\n      input: this.props.event,\n      targetResource: this.jobQueueScope,\n      batchParameters,\n    };\n  }\n}\n"],
  "mappings": "+MACA,IAAA,QAAA,eAAA,EACA,OAAA,QAAA,YAAA,EAEA,OAAA,QAAA,QAAA,EA8CA,MAAa,QAAQ,CACnB,YAImB,YAKA,cAKA,iBAKA,mBACA,MAAuB,CAAA,EAAE,CAhBzB,KAAA,YAAA,YAKA,KAAA,cAAA,cAKA,KAAA,iBAAA,iBAKA,KAAA,mBAAA,mBACA,KAAA,MAAA,kFAOZ,KAAK,KAAoB,IAAY,mEAC1C,KAAM,iBAA0D,CAC9D,cAAe,KAAK,iBACpB,QAAO,IAAE,KAAK,MAAM,WAAO,MAAA,KAAA,OAAA,GAAI,OAAA,MAAM,aAAa,KAAK,IAAI,EAC3D,gBAAiB,KAAK,MAAM,KAAO,CAAE,KAAM,KAAK,MAAM,IAAI,EAAK,OAC/D,cAAe,KAAK,MAAM,SAAW,CAAE,SAAU,KAAK,MAAM,QAAQ,EAAK,QAG3E,MAAI,MAAK,MAAM,iBACb,OAAA,mCAAmC,KAAM,KAAK,MAAM,eAAe,EAG9D,IACF,OAAA,qBAAqB,KAAK,KAAK,EAClC,IAAK,KAAK,YAGV,KAAM,OAAA,mBAAmB,KAAK,mBAAoB,CAChD,GAAI,KAAI,gBAAgB,CACtB,QAAS,CAAC,iBAAiB,EAC3B,UAAW,CACT,KAAK,iBACL,KAAK,aAER,EACF,EACD,MAAO,KAAK,MAAM,MAClB,eAAgB,KAAK,cACrB,kBAxDN,QAAA,SAAA",
  "names": []
}
