{
  "version": 3,
  "sources": ["sns.ts"],
  "sourcesContent": ["import * as events from '../../aws-events';\nimport * as iam from '../../aws-iam';\nimport * as sns from '../../aws-sns';\n\n/**\n * Customize the SNS Topic Event Target\n */\nexport interface SnsTopicProps {\n  /**\n   * The message to send to the topic\n   *\n   * @default the entire EventBridge event\n   */\n  readonly message?: events.RuleTargetInput;\n}\n\n/**\n * Use an SNS topic as a target for Amazon EventBridge rules.\n *\n * @example\n *   /// fixture=withRepoAndTopic\n *   // publish to an SNS topic every time code is committed\n *   // to a CodeCommit repository\n *   repository.onCommit('onCommit', { target: new targets.SnsTopic(topic) });\n *\n */\nexport class SnsTopic implements events.IRuleTarget {\n  constructor(public readonly topic: sns.ITopic, private readonly props: SnsTopicProps = {}) {\n  }\n\n  /**\n   * Returns a RuleTarget that can be used to trigger this SNS topic as a\n   * result from an EventBridge event.\n   *\n   * @see https://docs.aws.amazon.com/eventbridge/latest/userguide/resource-based-policies-eventbridge.html#sns-permissions\n   */\n  public bind(_rule: events.IRule, _id?: string): events.RuleTargetConfig {\n    // deduplicated automatically\n    this.topic.grantPublish(new iam.ServicePrincipal('events.amazonaws.com'));\n\n    return {\n      arn: this.topic.topicArn,\n      input: this.props.message,\n      targetResource: this.topic,\n    };\n  }\n}\n"],
  "mappings": "+MACA,IAAA,QAAA,eAAA,EAyBA,MAAa,QAAQ,CACnB,YAA4B,MAAoC,MAAuB,CAAA,EAAE,CAA7D,KAAA,MAAA,MAAoC,KAAA,MAAA,4IASzD,KAAK,MAAqB,IAAY,oEAE3C,KAAK,MAAM,aAAa,GAAI,KAAI,iBAAiB,sBAAsB,CAAC,EAEjE,CACL,IAAK,KAAK,MAAM,SAChB,MAAO,KAAK,MAAM,QAClB,eAAgB,KAAK,QAjB3B,QAAA,SAAA",
  "names": []
}
