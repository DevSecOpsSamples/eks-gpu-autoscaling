{
  "version": 3,
  "sources": ["s3objectlambda.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-04-07T10:53:58.930Z\",\"fingerprint\":\"3n3kVWGo+O1mvxVLoE+tXZ1Hm0zWXmUMlgIihgc+3GY=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n/**\n * Properties for defining a `CfnAccessPoint`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspoint.html\n */\nexport interface CfnAccessPointProps {\n\n    /**\n     * A configuration used when creating an Object Lambda Access Point.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspoint.html#cfn-s3objectlambda-accesspoint-objectlambdaconfiguration\n     */\n    readonly objectLambdaConfiguration: CfnAccessPoint.ObjectLambdaConfigurationProperty | cdk.IResolvable;\n\n    /**\n     * The name of this access point.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspoint.html#cfn-s3objectlambda-accesspoint-name\n     */\n    readonly name?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnAccessPointProps`\n *\n * @param properties - the TypeScript properties of a `CfnAccessPointProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnAccessPointPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('objectLambdaConfiguration', cdk.requiredValidator)(properties.objectLambdaConfiguration));\n    errors.collect(cdk.propertyValidator('objectLambdaConfiguration', CfnAccessPoint_ObjectLambdaConfigurationPropertyValidator)(properties.objectLambdaConfiguration));\n    return errors.wrap('supplied properties not correct for \"CfnAccessPointProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::S3ObjectLambda::AccessPoint` resource\n *\n * @param properties - the TypeScript properties of a `CfnAccessPointProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::S3ObjectLambda::AccessPoint` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAccessPointPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAccessPointPropsValidator(properties).assertSuccess();\n    return {\n        ObjectLambdaConfiguration: cfnAccessPointObjectLambdaConfigurationPropertyToCloudFormation(properties.objectLambdaConfiguration),\n        Name: cdk.stringToCloudFormation(properties.name),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAccessPointPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAccessPointProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAccessPointProps>();\n    ret.addPropertyResult('objectLambdaConfiguration', 'ObjectLambdaConfiguration', CfnAccessPointObjectLambdaConfigurationPropertyFromCloudFormation(properties.ObjectLambdaConfiguration));\n    ret.addPropertyResult('name', 'Name', properties.Name != null ? cfn_parse.FromCloudFormation.getString(properties.Name) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::S3ObjectLambda::AccessPoint`\n *\n * The `AWS::S3ObjectLambda::AccessPoint` resource specifies an Object Lambda Access Point used to access a bucket.\n *\n * @cloudformationResource AWS::S3ObjectLambda::AccessPoint\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspoint.html\n */\nexport class CfnAccessPoint extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::S3ObjectLambda::AccessPoint\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnAccessPoint {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnAccessPointPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnAccessPoint(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * Specifies the ARN for the Object Lambda Access Point.\n     * @cloudformationAttribute Arn\n     */\n    public readonly attrArn: string;\n\n    /**\n     * The date and time when the specified Object Lambda Access Point was created.\n     * @cloudformationAttribute CreationDate\n     */\n    public readonly attrCreationDate: string;\n\n    /**\n     * A configuration used when creating an Object Lambda Access Point.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspoint.html#cfn-s3objectlambda-accesspoint-objectlambdaconfiguration\n     */\n    public objectLambdaConfiguration: CfnAccessPoint.ObjectLambdaConfigurationProperty | cdk.IResolvable;\n\n    /**\n     * The name of this access point.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspoint.html#cfn-s3objectlambda-accesspoint-name\n     */\n    public name: string | undefined;\n\n    /**\n     * Create a new `AWS::S3ObjectLambda::AccessPoint`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnAccessPointProps) {\n        super(scope, id, { type: CfnAccessPoint.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'objectLambdaConfiguration', this);\n        this.attrArn = cdk.Token.asString(this.getAtt('Arn'));\n        this.attrCreationDate = cdk.Token.asString(this.getAtt('CreationDate'));\n\n        this.objectLambdaConfiguration = props.objectLambdaConfiguration;\n        this.name = props.name;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnAccessPoint.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            objectLambdaConfiguration: this.objectLambdaConfiguration,\n            name: this.name,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnAccessPointPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnAccessPoint {\n    /**\n     * A configuration used when creating an Object Lambda Access Point.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3objectlambda-accesspoint-objectlambdaconfiguration.html\n     */\n    export interface ObjectLambdaConfigurationProperty {\n        /**\n         * A container for allowed features. Valid inputs are `GetObject-Range` and `GetObject-PartNumber` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3objectlambda-accesspoint-objectlambdaconfiguration.html#cfn-s3objectlambda-accesspoint-objectlambdaconfiguration-allowedfeatures\n         */\n        readonly allowedFeatures?: string[];\n        /**\n         * A container for whether the CloudWatch metrics configuration is enabled.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3objectlambda-accesspoint-objectlambdaconfiguration.html#cfn-s3objectlambda-accesspoint-objectlambdaconfiguration-cloudwatchmetricsenabled\n         */\n        readonly cloudWatchMetricsEnabled?: boolean | cdk.IResolvable;\n        /**\n         * Standard access point associated with the Object Lambda Access Point.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3objectlambda-accesspoint-objectlambdaconfiguration.html#cfn-s3objectlambda-accesspoint-objectlambdaconfiguration-supportingaccesspoint\n         */\n        readonly supportingAccessPoint: string;\n        /**\n         * A container for transformation configurations for an Object Lambda Access Point.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3objectlambda-accesspoint-objectlambdaconfiguration.html#cfn-s3objectlambda-accesspoint-objectlambdaconfiguration-transformationconfigurations\n         */\n        readonly transformationConfigurations: Array<CfnAccessPoint.TransformationConfigurationProperty | cdk.IResolvable> | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ObjectLambdaConfigurationProperty`\n *\n * @param properties - the TypeScript properties of a `ObjectLambdaConfigurationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnAccessPoint_ObjectLambdaConfigurationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('allowedFeatures', cdk.listValidator(cdk.validateString))(properties.allowedFeatures));\n    errors.collect(cdk.propertyValidator('cloudWatchMetricsEnabled', cdk.validateBoolean)(properties.cloudWatchMetricsEnabled));\n    errors.collect(cdk.propertyValidator('supportingAccessPoint', cdk.requiredValidator)(properties.supportingAccessPoint));\n    errors.collect(cdk.propertyValidator('supportingAccessPoint', cdk.validateString)(properties.supportingAccessPoint));\n    errors.collect(cdk.propertyValidator('transformationConfigurations', cdk.requiredValidator)(properties.transformationConfigurations));\n    errors.collect(cdk.propertyValidator('transformationConfigurations', cdk.listValidator(CfnAccessPoint_TransformationConfigurationPropertyValidator))(properties.transformationConfigurations));\n    return errors.wrap('supplied properties not correct for \"ObjectLambdaConfigurationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::S3ObjectLambda::AccessPoint.ObjectLambdaConfiguration` resource\n *\n * @param properties - the TypeScript properties of a `ObjectLambdaConfigurationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::S3ObjectLambda::AccessPoint.ObjectLambdaConfiguration` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAccessPointObjectLambdaConfigurationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAccessPoint_ObjectLambdaConfigurationPropertyValidator(properties).assertSuccess();\n    return {\n        AllowedFeatures: cdk.listMapper(cdk.stringToCloudFormation)(properties.allowedFeatures),\n        CloudWatchMetricsEnabled: cdk.booleanToCloudFormation(properties.cloudWatchMetricsEnabled),\n        SupportingAccessPoint: cdk.stringToCloudFormation(properties.supportingAccessPoint),\n        TransformationConfigurations: cdk.listMapper(cfnAccessPointTransformationConfigurationPropertyToCloudFormation)(properties.transformationConfigurations),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAccessPointObjectLambdaConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAccessPoint.ObjectLambdaConfigurationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAccessPoint.ObjectLambdaConfigurationProperty>();\n    ret.addPropertyResult('allowedFeatures', 'AllowedFeatures', properties.AllowedFeatures != null ? cfn_parse.FromCloudFormation.getStringArray(properties.AllowedFeatures) : undefined);\n    ret.addPropertyResult('cloudWatchMetricsEnabled', 'CloudWatchMetricsEnabled', properties.CloudWatchMetricsEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.CloudWatchMetricsEnabled) : undefined);\n    ret.addPropertyResult('supportingAccessPoint', 'SupportingAccessPoint', cfn_parse.FromCloudFormation.getString(properties.SupportingAccessPoint));\n    ret.addPropertyResult('transformationConfigurations', 'TransformationConfigurations', cfn_parse.FromCloudFormation.getArray(CfnAccessPointTransformationConfigurationPropertyFromCloudFormation)(properties.TransformationConfigurations));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnAccessPoint {\n    /**\n     * A configuration used when creating an Object Lambda Access Point transformation.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3objectlambda-accesspoint-transformationconfiguration.html\n     */\n    export interface TransformationConfigurationProperty {\n        /**\n         * A container for the action of an Object Lambda Access Point configuration. Valid input is `GetObject` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3objectlambda-accesspoint-transformationconfiguration.html#cfn-s3objectlambda-accesspoint-transformationconfiguration-actions\n         */\n        readonly actions: string[];\n        /**\n         * A container for the content transformation of an Object Lambda Access Point configuration. Can include the FunctionArn and FunctionPayload. For more information, see [AwsLambdaTransformation](https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_AwsLambdaTransformation.html) in the *Amazon S3 API Reference* .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3objectlambda-accesspoint-transformationconfiguration.html#cfn-s3objectlambda-accesspoint-transformationconfiguration-contenttransformation\n         */\n        readonly contentTransformation: any | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `TransformationConfigurationProperty`\n *\n * @param properties - the TypeScript properties of a `TransformationConfigurationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnAccessPoint_TransformationConfigurationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('actions', cdk.requiredValidator)(properties.actions));\n    errors.collect(cdk.propertyValidator('actions', cdk.listValidator(cdk.validateString))(properties.actions));\n    errors.collect(cdk.propertyValidator('contentTransformation', cdk.requiredValidator)(properties.contentTransformation));\n    errors.collect(cdk.propertyValidator('contentTransformation', cdk.validateObject)(properties.contentTransformation));\n    return errors.wrap('supplied properties not correct for \"TransformationConfigurationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::S3ObjectLambda::AccessPoint.TransformationConfiguration` resource\n *\n * @param properties - the TypeScript properties of a `TransformationConfigurationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::S3ObjectLambda::AccessPoint.TransformationConfiguration` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAccessPointTransformationConfigurationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAccessPoint_TransformationConfigurationPropertyValidator(properties).assertSuccess();\n    return {\n        Actions: cdk.listMapper(cdk.stringToCloudFormation)(properties.actions),\n        ContentTransformation: cdk.objectToCloudFormation(properties.contentTransformation),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAccessPointTransformationConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAccessPoint.TransformationConfigurationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAccessPoint.TransformationConfigurationProperty>();\n    ret.addPropertyResult('actions', 'Actions', cfn_parse.FromCloudFormation.getStringArray(properties.Actions));\n    ret.addPropertyResult('contentTransformation', 'ContentTransformation', cfn_parse.FromCloudFormation.getAny(properties.ContentTransformation));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnAccessPointPolicy`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspointpolicy.html\n */\nexport interface CfnAccessPointPolicyProps {\n\n    /**\n     * An access point with an attached AWS Lambda function used to access transformed data from an Amazon S3 bucket.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspointpolicy.html#cfn-s3objectlambda-accesspointpolicy-objectlambdaaccesspoint\n     */\n    readonly objectLambdaAccessPoint: string;\n\n    /**\n     * Object Lambda Access Point resource policy document.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspointpolicy.html#cfn-s3objectlambda-accesspointpolicy-policydocument\n     */\n    readonly policyDocument: any | cdk.IResolvable;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnAccessPointPolicyProps`\n *\n * @param properties - the TypeScript properties of a `CfnAccessPointPolicyProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnAccessPointPolicyPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('objectLambdaAccessPoint', cdk.requiredValidator)(properties.objectLambdaAccessPoint));\n    errors.collect(cdk.propertyValidator('objectLambdaAccessPoint', cdk.validateString)(properties.objectLambdaAccessPoint));\n    errors.collect(cdk.propertyValidator('policyDocument', cdk.requiredValidator)(properties.policyDocument));\n    errors.collect(cdk.propertyValidator('policyDocument', cdk.validateObject)(properties.policyDocument));\n    return errors.wrap('supplied properties not correct for \"CfnAccessPointPolicyProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::S3ObjectLambda::AccessPointPolicy` resource\n *\n * @param properties - the TypeScript properties of a `CfnAccessPointPolicyProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::S3ObjectLambda::AccessPointPolicy` resource.\n */\n// @ts-ignore TS6133\nfunction cfnAccessPointPolicyPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnAccessPointPolicyPropsValidator(properties).assertSuccess();\n    return {\n        ObjectLambdaAccessPoint: cdk.stringToCloudFormation(properties.objectLambdaAccessPoint),\n        PolicyDocument: cdk.objectToCloudFormation(properties.policyDocument),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnAccessPointPolicyPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnAccessPointPolicyProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnAccessPointPolicyProps>();\n    ret.addPropertyResult('objectLambdaAccessPoint', 'ObjectLambdaAccessPoint', cfn_parse.FromCloudFormation.getString(properties.ObjectLambdaAccessPoint));\n    ret.addPropertyResult('policyDocument', 'PolicyDocument', cfn_parse.FromCloudFormation.getAny(properties.PolicyDocument));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::S3ObjectLambda::AccessPointPolicy`\n *\n * The `AWS::S3ObjectLambda::AccessPointPolicy` resource specifies the Object Lambda Access Point resource policy document.\n *\n * @cloudformationResource AWS::S3ObjectLambda::AccessPointPolicy\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspointpolicy.html\n */\nexport class CfnAccessPointPolicy extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::S3ObjectLambda::AccessPointPolicy\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnAccessPointPolicy {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnAccessPointPolicyPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnAccessPointPolicy(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * An access point with an attached AWS Lambda function used to access transformed data from an Amazon S3 bucket.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspointpolicy.html#cfn-s3objectlambda-accesspointpolicy-objectlambdaaccesspoint\n     */\n    public objectLambdaAccessPoint: string;\n\n    /**\n     * Object Lambda Access Point resource policy document.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspointpolicy.html#cfn-s3objectlambda-accesspointpolicy-policydocument\n     */\n    public policyDocument: any | cdk.IResolvable;\n\n    /**\n     * Create a new `AWS::S3ObjectLambda::AccessPointPolicy`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnAccessPointPolicyProps) {\n        super(scope, id, { type: CfnAccessPointPolicy.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'objectLambdaAccessPoint', this);\n        cdk.requireProperty(props, 'policyDocument', this);\n\n        this.objectLambdaAccessPoint = props.objectLambdaAccessPoint;\n        this.policyDocument = props.policyDocument;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnAccessPointPolicy.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            objectLambdaAccessPoint: this.objectLambdaAccessPoint,\n            policyDocument: this.policyDocument,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnAccessPointPolicyPropsToCloudFormation(props);\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
