"use strict";var _a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnEnvironmentEC2=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/cfn-parse");function CfnEnvironmentEC2PropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("automaticStopTimeMinutes",cdk.validateNumber)(properties.automaticStopTimeMinutes)),errors.collect(cdk.propertyValidator("connectionType",cdk.validateString)(properties.connectionType)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("imageId",cdk.validateString)(properties.imageId)),errors.collect(cdk.propertyValidator("instanceType",cdk.requiredValidator)(properties.instanceType)),errors.collect(cdk.propertyValidator("instanceType",cdk.validateString)(properties.instanceType)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("ownerArn",cdk.validateString)(properties.ownerArn)),errors.collect(cdk.propertyValidator("repositories",cdk.listValidator(CfnEnvironmentEC2_RepositoryPropertyValidator))(properties.repositories)),errors.collect(cdk.propertyValidator("subnetId",cdk.validateString)(properties.subnetId)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnEnvironmentEC2Props"')}function cfnEnvironmentEC2PropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEnvironmentEC2PropsValidator(properties).assertSuccess(),{InstanceType:cdk.stringToCloudFormation(properties.instanceType),AutomaticStopTimeMinutes:cdk.numberToCloudFormation(properties.automaticStopTimeMinutes),ConnectionType:cdk.stringToCloudFormation(properties.connectionType),Description:cdk.stringToCloudFormation(properties.description),ImageId:cdk.stringToCloudFormation(properties.imageId),Name:cdk.stringToCloudFormation(properties.name),OwnerArn:cdk.stringToCloudFormation(properties.ownerArn),Repositories:cdk.listMapper(cfnEnvironmentEC2RepositoryPropertyToCloudFormation)(properties.repositories),SubnetId:cdk.stringToCloudFormation(properties.subnetId),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnEnvironmentEC2PropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("instanceType","InstanceType",cfn_parse.FromCloudFormation.getString(properties.InstanceType)),ret.addPropertyResult("automaticStopTimeMinutes","AutomaticStopTimeMinutes",properties.AutomaticStopTimeMinutes!=null?cfn_parse.FromCloudFormation.getNumber(properties.AutomaticStopTimeMinutes):void 0),ret.addPropertyResult("connectionType","ConnectionType",properties.ConnectionType!=null?cfn_parse.FromCloudFormation.getString(properties.ConnectionType):void 0),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("imageId","ImageId",properties.ImageId!=null?cfn_parse.FromCloudFormation.getString(properties.ImageId):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("ownerArn","OwnerArn",properties.OwnerArn!=null?cfn_parse.FromCloudFormation.getString(properties.OwnerArn):void 0),ret.addPropertyResult("repositories","Repositories",properties.Repositories!=null?cfn_parse.FromCloudFormation.getArray(CfnEnvironmentEC2RepositoryPropertyFromCloudFormation)(properties.Repositories):void 0),ret.addPropertyResult("subnetId","SubnetId",properties.SubnetId!=null?cfn_parse.FromCloudFormation.getString(properties.SubnetId):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnEnvironmentEC2 extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnEnvironmentEC2.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_cloud9_CfnEnvironmentEC2Props(props),cdk.requireProperty(props,"instanceType",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn")),this.attrName=cdk.Token.asString(this.getAtt("Name")),this.instanceType=props.instanceType,this.automaticStopTimeMinutes=props.automaticStopTimeMinutes,this.connectionType=props.connectionType,this.description=props.description,this.imageId=props.imageId,this.name=props.name,this.ownerArn=props.ownerArn,this.repositories=props.repositories,this.subnetId=props.subnetId,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Cloud9::EnvironmentEC2",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnEnvironmentEC2PropsFromCloudFormation(resourceProperties),ret=new CfnEnvironmentEC2(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnEnvironmentEC2.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{instanceType:this.instanceType,automaticStopTimeMinutes:this.automaticStopTimeMinutes,connectionType:this.connectionType,description:this.description,imageId:this.imageId,name:this.name,ownerArn:this.ownerArn,repositories:this.repositories,subnetId:this.subnetId,tags:this.tags.renderTags()}}renderProperties(props){return cfnEnvironmentEC2PropsToCloudFormation(props)}}exports.CfnEnvironmentEC2=CfnEnvironmentEC2,_a=JSII_RTTI_SYMBOL_1,CfnEnvironmentEC2[_a]={fqn:"aws-cdk-lib.aws_cloud9.CfnEnvironmentEC2",version:"2.20.0"},CfnEnvironmentEC2.CFN_RESOURCE_TYPE_NAME="AWS::Cloud9::EnvironmentEC2";function CfnEnvironmentEC2_RepositoryPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("pathComponent",cdk.requiredValidator)(properties.pathComponent)),errors.collect(cdk.propertyValidator("pathComponent",cdk.validateString)(properties.pathComponent)),errors.collect(cdk.propertyValidator("repositoryUrl",cdk.requiredValidator)(properties.repositoryUrl)),errors.collect(cdk.propertyValidator("repositoryUrl",cdk.validateString)(properties.repositoryUrl)),errors.wrap('supplied properties not correct for "RepositoryProperty"')}function cfnEnvironmentEC2RepositoryPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEnvironmentEC2_RepositoryPropertyValidator(properties).assertSuccess(),{PathComponent:cdk.stringToCloudFormation(properties.pathComponent),RepositoryUrl:cdk.stringToCloudFormation(properties.repositoryUrl)}):properties}function CfnEnvironmentEC2RepositoryPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("pathComponent","PathComponent",cfn_parse.FromCloudFormation.getString(properties.PathComponent)),ret.addPropertyResult("repositoryUrl","RepositoryUrl",cfn_parse.FromCloudFormation.getString(properties.RepositoryUrl)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
//# sourceMappingURL=cloud9.generated.js.map
