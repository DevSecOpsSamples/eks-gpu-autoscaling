{
  "version": 3,
  "sources": ["origin-group.ts"],
  "sourcesContent": ["import * as cloudfront from '../../aws-cloudfront';\nimport { Construct } from 'constructs';\n\n/** Construction properties for {@link OriginGroup}. */\nexport interface OriginGroupProps {\n  /**\n   * The primary origin that should serve requests for this group.\n   */\n  readonly primaryOrigin: cloudfront.IOrigin;\n\n  /**\n   * The fallback origin that should serve requests when the primary fails.\n   */\n  readonly fallbackOrigin: cloudfront.IOrigin;\n\n  /**\n   * The list of HTTP status codes that,\n   * when returned from the primary origin,\n   * would cause querying the fallback origin.\n   *\n   * @default - 500, 502, 503 and 504\n   */\n  readonly fallbackStatusCodes?: number[];\n}\n\n/**\n * An Origin that represents a group.\n * Consists of a primary Origin,\n * and a fallback Origin called when the primary returns one of the provided HTTP status codes.\n */\nexport class OriginGroup implements cloudfront.IOrigin {\n  public constructor(private readonly props: OriginGroupProps) {\n  }\n\n  public bind(scope: Construct, options: cloudfront.OriginBindOptions): cloudfront.OriginBindConfig {\n    const primaryOriginConfig = this.props.primaryOrigin.bind(scope, options);\n    if (primaryOriginConfig.failoverConfig) {\n      throw new Error('An OriginGroup cannot use an Origin with its own failover configuration as its primary origin!');\n    }\n\n    return {\n      originProperty: primaryOriginConfig.originProperty,\n      failoverConfig: {\n        failoverOrigin: this.props.fallbackOrigin,\n        statusCodes: this.props.fallbackStatusCodes,\n      },\n    };\n  }\n}\n"],
  "mappings": "kNA8BA,MAAa,WAAW,CACtB,YAAoC,MAAuB,CAAvB,KAAA,MAAA,yFAG7B,KAAK,MAAkB,QAAqC,+EACjE,KAAM,qBAAsB,KAAK,MAAM,cAAc,KAAK,MAAO,OAAO,EACxE,GAAI,oBAAoB,eACtB,KAAM,IAAI,OAAM,gGAAgG,EAGlH,MAAO,CACL,eAAgB,oBAAoB,eACpC,eAAgB,CACd,eAAgB,KAAK,MAAM,eAC3B,YAAa,KAAK,MAAM,uBAdhC,QAAA,YAAA",
  "names": []
}
