"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const cognito=require("../../aws-cognito"),ec2=require("../../aws-ec2"),elbv2=require("../../aws-elasticloadbalancingv2"),core_1=require("../../core"),actions=require("../lib");class CognitoStack extends core_1.Stack{constructor(scope,id){var _a;super(scope,id);const vpc=new ec2.Vpc(this,"Stack",{maxAzs:2}),certificate={certificateArn:(_a=process.env.SELF_SIGNED_CERT_ARN)!==null&&_a!==void 0?_a:""},lb=new elbv2.ApplicationLoadBalancer(this,"LB",{vpc,internetFacing:!0}),userPool=new cognito.UserPool(this,"UserPool"),userPoolClient=new cognito.UserPoolClient(this,"Client",{userPool,generateSecret:!0,authFlows:{userPassword:!0},oAuth:{flows:{authorizationCodeGrant:!0},scopes:[cognito.OAuthScope.EMAIL],callbackUrls:[`https://${lb.loadBalancerDnsName}/oauth2/idpresponse`]}}),cfnClient=userPoolClient.node.defaultChild;cfnClient.addPropertyOverride("RefreshTokenValidity",1),cfnClient.addPropertyOverride("SupportedIdentityProviders",["COGNITO"]);const userPoolDomain=new cognito.UserPoolDomain(this,"Domain",{userPool,cognitoDomain:{domainPrefix:"test-cdk-prefix"}});lb.addListener("Listener",{port:443,certificates:[certificate],defaultAction:new actions.AuthenticateCognitoAction({userPool,userPoolClient,userPoolDomain,next:elbv2.ListenerAction.fixedResponse(200,{contentType:"text/plain",messageBody:"Authenticated"})})}),new core_1.CfnOutput(this,"DNS",{value:lb.loadBalancerDnsName})}}const app=new core_1.App;new CognitoStack(app,"integ-cognito"),app.synth();
//# sourceMappingURL=integ.cognito.lit.js.map
