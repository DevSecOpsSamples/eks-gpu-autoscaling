{
  "version": 3,
  "sources": ["lambda.ts"],
  "sourcesContent": ["import * as iam from '../../aws-iam';\nimport * as lambda from '../../aws-lambda';\nimport * as s3 from '../../aws-s3';\nimport { CfnResource, Names, Stack } from '../../core';\n\n// keep this import separate from other imports to reduce chance for merge conflicts with v2-main\n// eslint-disable-next-line no-duplicate-imports, import/order\nimport { Construct } from 'constructs';\n\n/**\n * Use a Lambda function as a bucket notification destination\n */\nexport class LambdaDestination implements s3.IBucketNotificationDestination {\n  constructor(private readonly fn: lambda.IFunction) {\n  }\n\n  public bind(_scope: Construct, bucket: s3.IBucket): s3.BucketNotificationDestinationConfig {\n    const permissionId = `AllowBucketNotificationsTo${Names.nodeUniqueId(this.fn.permissionsNode)}`;\n\n    if (!(bucket instanceof Construct)) {\n      throw new Error(`LambdaDestination for function ${Names.nodeUniqueId(this.fn.permissionsNode)} can only be configured on a\n        bucket construct (Bucket ${bucket.bucketName})`);\n    }\n\n    if (bucket.node.tryFindChild(permissionId) === undefined) {\n      this.fn.addPermission(permissionId, {\n        sourceAccount: Stack.of(bucket).account,\n        principal: new iam.ServicePrincipal('s3.amazonaws.com'),\n        sourceArn: bucket.bucketArn,\n        // Placing the permissions node in the same scope as the s3 bucket.\n        // Otherwise, there is a circular dependency when the s3 bucket\n        // and lambda functions declared in different stacks.\n        scope: bucket,\n      });\n    }\n\n    // if we have a permission resource for this relationship, add it as a dependency\n    // to the bucket notifications resource, so it will be created first.\n    const permission = bucket.node.tryFindChild(permissionId) as CfnResource | undefined;\n\n    return {\n      type: s3.BucketNotificationDestinationType.LAMBDA,\n      arn: this.fn.functionArn,\n      dependencies: permission ? [permission] : undefined,\n    };\n  }\n}\n"],
  "mappings": "wNAAA,IAAA,QAAA,eAAA,EAEA,GAAA,QAAA,cAAA,EACA,OAAA,QAAA,YAAA,EAIA,aAAA,QAAA,YAAA,EAKA,MAAa,iBAAiB,CAC5B,YAA6B,GAAoB,CAApB,KAAA,GAAA,gEAGtB,KAAK,OAAmB,OAAkB,4DAC/C,KAAM,cAAe,6BAA6B,OAAA,MAAM,aAAa,KAAK,GAAG,eAAe,IAE5F,GAAI,CAAE,kBAAkB,cAAA,WACtB,KAAM,IAAI,OAAM,kCAAkC,OAAA,MAAM,aAAa,KAAK,GAAG,eAAe;mCAC/D,OAAO,aAAa,EAGnD,AAAI,OAAO,KAAK,aAAa,YAAY,IAAM,QAC7C,KAAK,GAAG,cAAc,aAAc,CAClC,cAAe,OAAA,MAAM,GAAG,MAAM,EAAE,QAChC,UAAW,GAAI,KAAI,iBAAiB,kBAAkB,EACtD,UAAW,OAAO,UAIlB,MAAO,OACR,EAKH,KAAM,YAAa,OAAO,KAAK,aAAa,YAAY,EAExD,MAAO,CACL,KAAM,GAAG,kCAAkC,OAC3C,IAAK,KAAK,GAAG,YACb,aAAc,WAAa,CAAC,UAAU,EAAI,SA/BhD,QAAA,kBAAA",
  "names": []
}
