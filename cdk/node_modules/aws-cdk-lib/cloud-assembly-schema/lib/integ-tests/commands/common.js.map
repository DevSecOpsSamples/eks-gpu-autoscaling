{
  "version": 3,
  "sources": ["common.ts"],
  "sourcesContent": ["/**\n * In what scenarios should the CLI ask for approval\n */\nexport enum RequireApproval {\n  /**\n   * Never ask for approval\n   */\n  NEVER = 'never',\n\n  /**\n   * Prompt for approval for any type  of change to the stack\n   */\n  ANYCHANGE = 'any-change',\n\n  /**\n   * Only prompt for approval if there are security related changes\n   */\n  BROADENING = 'broadening'\n}\n\n/**\n * Default CDK CLI options that apply to all commands\n */\nexport interface DefaultCdkOptions {\n  /**\n   * List of stacks to deploy\n   *\n   * Requried if `all` is not set\n   *\n   * @default - []\n   */\n  readonly stacks?: string[];\n\n  /**\n   * Deploy all stacks\n   *\n   * Requried if `stacks` is not set\n   *\n   * @default - false\n   */\n  readonly all?: boolean;\n\n  /**\n   * command-line for executing your app or a cloud assembly directory\n   * e.g. \"node bin/my-app.js\"\n   * or\n   * \"cdk.out\"\n   *\n   * @default - read from cdk.json\n   */\n  readonly app?: string;\n\n\n  /**\n   * Role to pass to CloudFormation for deployment\n   *\n   * @default - use the bootstrap cfn-exec role\n   */\n  readonly roleArn?: string;\n\n  /**\n   * Additional context\n   *\n   * @default - no additional context\n   */\n  readonly context?: { [name: string]: string };\n\n  /**\n   * Print trace for stack warnings\n   *\n   * @default false\n   */\n  readonly trace?: boolean;\n\n  /**\n   * Do not construct stacks with warnings\n   *\n   * @default false\n   */\n  readonly strict?: boolean;\n\n  /**\n   * Perform context lookups.\n   *\n   * Synthesis fails if this is disabled and context lookups need\n   * to be performed\n   *\n   * @default true\n   */\n  readonly lookups?: boolean;\n\n  /**\n    * Ignores synthesis errors, which will likely produce an invalid output\n   *\n   * @default false\n   */\n  readonly ignoreErrors?: boolean;\n\n  /**\n   * Use JSON output instead of YAML when templates are printed\n   * to STDOUT\n   *\n   * @default false\n   */\n  readonly json?: boolean;\n\n  /**\n   * show debug logs\n   *\n   * @default false\n   */\n  readonly verbose?: boolean;\n\n  /**\n   * enable emission of additional debugging information, such as creation stack\n   * traces of tokens\n   *\n   * @default false\n   */\n  readonly debug?: boolean;\n\n  /**\n   * Use the indicated AWS profile as the default environment\n   *\n   * @default - no profile is used\n   */\n  readonly profile?: string;\n\n  /**\n   * Use the indicated proxy. Will read from\n   * HTTPS_PROXY environment if specified\n   *\n   * @default - no proxy\n   */\n  readonly proxy?: string;\n\n  /**\n   * Path to CA certificate to use when validating HTTPS\n   * requests.\n   *\n   * @default - read from AWS_CA_BUNDLE environment variable\n   */\n  readonly caBundlePath?: string;\n\n  /**\n   * Force trying to fetch EC2 instance credentials\n   *\n   * @default - guess EC2 instance status\n   */\n  readonly ec2Creds?: boolean;\n\n  /**\n   * Include \"AWS::CDK::Metadata\" resource in synthesized templates\n   *\n   * @default true\n   */\n  readonly versionReporting?: boolean;\n\n  /**\n   * Include \"aws:cdk:path\" CloudFormation metadata for each resource\n   *\n   * @default true\n   */\n  readonly pathMetadata?: boolean;\n\n  /**\n   * Include \"aws:asset:*\" CloudFormation metadata for resources that use assets\n   *\n   * @default true\n   */\n  readonly assetMetadata?: boolean;\n\n  /**\n   * Copy assets to the output directory\n   *\n   * Needed for local debugging the source files with SAM CLI\n   *\n   * @default false\n   */\n  readonly staging?: boolean;\n\n  /**\n   * Emits the synthesized cloud assembly into a directory\n   *\n   * @default cdk.out\n   */\n  readonly output?: string;\n\n  /**\n   * Show relevant notices\n   *\n   * @default true\n   */\n  readonly notices?: boolean;\n\n  /**\n   * Show colors and other style from console output\n   *\n   * @default true\n   */\n  readonly color?: boolean;\n}\n"],
  "mappings": "mGAGA,GAAY,iBAAZ,AAAA,UAAY,iBAAe,CAIzB,iBAAA,MAAA,QAKA,iBAAA,UAAA,aAKA,iBAAA,WAAA,YACF,GAfY,gBAAA,QAAA,iBAAA,SAAA,gBAAe,CAAA,EAAA",
  "names": []
}
