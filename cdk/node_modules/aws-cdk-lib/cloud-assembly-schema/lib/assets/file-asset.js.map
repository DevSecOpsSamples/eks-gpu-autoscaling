{
  "version": 3,
  "sources": ["file-asset.ts"],
  "sourcesContent": ["import { AwsDestination } from './aws-destination';\n\n/**\n * A file asset\n */\nexport interface FileAsset {\n  /**\n   * Source description for file assets\n   */\n  readonly source: FileSource;\n\n  /**\n   * Destinations for this file asset\n   */\n  readonly destinations: { [id: string]: FileDestination };\n}\n\n/**\n * Packaging strategy for file assets\n */\nexport enum FileAssetPackaging {\n  /**\n   * Upload the given path as a file\n   */\n  FILE = 'file',\n\n  /**\n   * The given path is a directory, zip it and upload\n   */\n  ZIP_DIRECTORY = 'zip',\n}\n\n/**\n * Describe the source of a file asset\n */\nexport interface FileSource {\n  /**\n   * External command which will produce the file asset to upload.\n   *\n   * @default - Exactly one of `executable` and `path` is required.\n   */\n  readonly executable?: string[];\n\n  /**\n   * The filesystem object to upload\n   *\n   * This path is relative to the asset manifest location.\n   *\n   * @default - Exactly one of `executable` and `path` is required.\n   */\n  readonly path?: string;\n\n  /**\n   * Packaging method\n   *\n   * Only allowed when `path` is specified.\n   *\n   * @default FILE\n   */\n  readonly packaging?: FileAssetPackaging;\n}\n\n/**\n * Where in S3 a file asset needs to be published\n */\nexport interface FileDestination extends AwsDestination {\n  /**\n   * The name of the bucket\n   */\n  readonly bucketName: string;\n\n  /**\n   * The destination object key\n   */\n  readonly objectKey: string;\n}\n"],
  "mappings": "sGAoBA,GAAY,oBAAZ,AAAA,UAAY,oBAAkB,CAI5B,oBAAA,KAAA,OAKA,oBAAA,cAAA,KACF,GAVY,mBAAA,QAAA,oBAAA,SAAA,mBAAkB,CAAA,EAAA",
  "names": []
}
