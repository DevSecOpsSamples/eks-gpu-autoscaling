{
  "version": 3,
  "sources": ["opsworks-canned-metrics.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nexport class OpsWorksMetrics {\n  public static procsAverage(dimensions: { InstanceId: string }): MetricWithDims<{ InstanceId: string }>;\n  public static procsAverage(dimensions: { LayerId: string }): MetricWithDims<{ LayerId: string }>;\n  public static procsAverage(dimensions: { StackId: string }): MetricWithDims<{ StackId: string }>;\n  public static procsAverage(dimensions: any) {\n    return {\n      namespace: 'AWS/OpsWorks',\n      metricName: 'procs',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static memoryUsedAverage(dimensions: { InstanceId: string }): MetricWithDims<{ InstanceId: string }>;\n  public static memoryUsedAverage(dimensions: { LayerId: string }): MetricWithDims<{ LayerId: string }>;\n  public static memoryUsedAverage(dimensions: { StackId: string }): MetricWithDims<{ StackId: string }>;\n  public static memoryUsedAverage(dimensions: any) {\n    return {\n      namespace: 'AWS/OpsWorks',\n      metricName: 'memory_used',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static cpuIdleAverage(dimensions: { InstanceId: string }): MetricWithDims<{ InstanceId: string }>;\n  public static cpuIdleAverage(dimensions: { LayerId: string }): MetricWithDims<{ LayerId: string }>;\n  public static cpuIdleAverage(dimensions: { StackId: string }): MetricWithDims<{ StackId: string }>;\n  public static cpuIdleAverage(dimensions: any) {\n    return {\n      namespace: 'AWS/OpsWorks',\n      metricName: 'cpu_idle',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static cpuNiceAverage(dimensions: { InstanceId: string }): MetricWithDims<{ InstanceId: string }>;\n  public static cpuNiceAverage(dimensions: { LayerId: string }): MetricWithDims<{ LayerId: string }>;\n  public static cpuNiceAverage(dimensions: { StackId: string }): MetricWithDims<{ StackId: string }>;\n  public static cpuNiceAverage(dimensions: any) {\n    return {\n      namespace: 'AWS/OpsWorks',\n      metricName: 'cpu_nice',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static cpuStealAverage(dimensions: { InstanceId: string }): MetricWithDims<{ InstanceId: string }>;\n  public static cpuStealAverage(dimensions: { LayerId: string }): MetricWithDims<{ LayerId: string }>;\n  public static cpuStealAverage(dimensions: { StackId: string }): MetricWithDims<{ StackId: string }>;\n  public static cpuStealAverage(dimensions: any) {\n    return {\n      namespace: 'AWS/OpsWorks',\n      metricName: 'cpu_steal',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static cpuSystemAverage(dimensions: { InstanceId: string }): MetricWithDims<{ InstanceId: string }>;\n  public static cpuSystemAverage(dimensions: { LayerId: string }): MetricWithDims<{ LayerId: string }>;\n  public static cpuSystemAverage(dimensions: { StackId: string }): MetricWithDims<{ StackId: string }>;\n  public static cpuSystemAverage(dimensions: any) {\n    return {\n      namespace: 'AWS/OpsWorks',\n      metricName: 'cpu_system',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static cpuUserAverage(dimensions: { InstanceId: string }): MetricWithDims<{ InstanceId: string }>;\n  public static cpuUserAverage(dimensions: { LayerId: string }): MetricWithDims<{ LayerId: string }>;\n  public static cpuUserAverage(dimensions: { StackId: string }): MetricWithDims<{ StackId: string }>;\n  public static cpuUserAverage(dimensions: any) {\n    return {\n      namespace: 'AWS/OpsWorks',\n      metricName: 'cpu_user',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static cpuWaitioAverage(dimensions: { InstanceId: string }): MetricWithDims<{ InstanceId: string }>;\n  public static cpuWaitioAverage(dimensions: { LayerId: string }): MetricWithDims<{ LayerId: string }>;\n  public static cpuWaitioAverage(dimensions: { StackId: string }): MetricWithDims<{ StackId: string }>;\n  public static cpuWaitioAverage(dimensions: any) {\n    return {\n      namespace: 'AWS/OpsWorks',\n      metricName: 'cpu_waitio',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static load1Average(dimensions: { InstanceId: string }): MetricWithDims<{ InstanceId: string }>;\n  public static load1Average(dimensions: { LayerId: string }): MetricWithDims<{ LayerId: string }>;\n  public static load1Average(dimensions: { StackId: string }): MetricWithDims<{ StackId: string }>;\n  public static load1Average(dimensions: any) {\n    return {\n      namespace: 'AWS/OpsWorks',\n      metricName: 'load_1',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static load15Average(dimensions: { InstanceId: string }): MetricWithDims<{ InstanceId: string }>;\n  public static load15Average(dimensions: { LayerId: string }): MetricWithDims<{ LayerId: string }>;\n  public static load15Average(dimensions: { StackId: string }): MetricWithDims<{ StackId: string }>;\n  public static load15Average(dimensions: any) {\n    return {\n      namespace: 'AWS/OpsWorks',\n      metricName: 'load_15',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static load5Average(dimensions: { InstanceId: string }): MetricWithDims<{ InstanceId: string }>;\n  public static load5Average(dimensions: { LayerId: string }): MetricWithDims<{ LayerId: string }>;\n  public static load5Average(dimensions: { StackId: string }): MetricWithDims<{ StackId: string }>;\n  public static load5Average(dimensions: any) {\n    return {\n      namespace: 'AWS/OpsWorks',\n      metricName: 'load_5',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static memoryBuffersAverage(dimensions: { InstanceId: string }): MetricWithDims<{ InstanceId: string }>;\n  public static memoryBuffersAverage(dimensions: { LayerId: string }): MetricWithDims<{ LayerId: string }>;\n  public static memoryBuffersAverage(dimensions: { StackId: string }): MetricWithDims<{ StackId: string }>;\n  public static memoryBuffersAverage(dimensions: any) {\n    return {\n      namespace: 'AWS/OpsWorks',\n      metricName: 'memory_buffers',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static memoryCachedAverage(dimensions: { InstanceId: string }): MetricWithDims<{ InstanceId: string }>;\n  public static memoryCachedAverage(dimensions: { LayerId: string }): MetricWithDims<{ LayerId: string }>;\n  public static memoryCachedAverage(dimensions: { StackId: string }): MetricWithDims<{ StackId: string }>;\n  public static memoryCachedAverage(dimensions: any) {\n    return {\n      namespace: 'AWS/OpsWorks',\n      metricName: 'memory_cached',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static memoryFreeAverage(dimensions: { InstanceId: string }): MetricWithDims<{ InstanceId: string }>;\n  public static memoryFreeAverage(dimensions: { LayerId: string }): MetricWithDims<{ LayerId: string }>;\n  public static memoryFreeAverage(dimensions: { StackId: string }): MetricWithDims<{ StackId: string }>;\n  public static memoryFreeAverage(dimensions: any) {\n    return {\n      namespace: 'AWS/OpsWorks',\n      metricName: 'memory_free',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static memorySwapAverage(dimensions: { InstanceId: string }): MetricWithDims<{ InstanceId: string }>;\n  public static memorySwapAverage(dimensions: { LayerId: string }): MetricWithDims<{ LayerId: string }>;\n  public static memorySwapAverage(dimensions: { StackId: string }): MetricWithDims<{ StackId: string }>;\n  public static memorySwapAverage(dimensions: any) {\n    return {\n      namespace: 'AWS/OpsWorks',\n      metricName: 'memory_swap',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static memoryTotalAverage(dimensions: { InstanceId: string }): MetricWithDims<{ InstanceId: string }>;\n  public static memoryTotalAverage(dimensions: { LayerId: string }): MetricWithDims<{ LayerId: string }>;\n  public static memoryTotalAverage(dimensions: { StackId: string }): MetricWithDims<{ StackId: string }>;\n  public static memoryTotalAverage(dimensions: any) {\n    return {\n      namespace: 'AWS/OpsWorks',\n      metricName: 'memory_total',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n}\ntype MetricWithDims<D> = { namespace: string, metricName: string, statistic: string, dimensionsMap: D };\n"],
  "mappings": "mGAIA,MAAa,eAAe,OAIZ,cAAa,WAAe,CACxC,MAAO,CACL,UAAW,eACX,WAAY,QACZ,cAAe,WACf,UAAW,iBAMD,mBAAkB,WAAe,CAC7C,MAAO,CACL,UAAW,eACX,WAAY,cACZ,cAAe,WACf,UAAW,iBAMD,gBAAe,WAAe,CAC1C,MAAO,CACL,UAAW,eACX,WAAY,WACZ,cAAe,WACf,UAAW,iBAMD,gBAAe,WAAe,CAC1C,MAAO,CACL,UAAW,eACX,WAAY,WACZ,cAAe,WACf,UAAW,iBAMD,iBAAgB,WAAe,CAC3C,MAAO,CACL,UAAW,eACX,WAAY,YACZ,cAAe,WACf,UAAW,iBAMD,kBAAiB,WAAe,CAC5C,MAAO,CACL,UAAW,eACX,WAAY,aACZ,cAAe,WACf,UAAW,iBAMD,gBAAe,WAAe,CAC1C,MAAO,CACL,UAAW,eACX,WAAY,WACZ,cAAe,WACf,UAAW,iBAMD,kBAAiB,WAAe,CAC5C,MAAO,CACL,UAAW,eACX,WAAY,aACZ,cAAe,WACf,UAAW,iBAMD,cAAa,WAAe,CACxC,MAAO,CACL,UAAW,eACX,WAAY,SACZ,cAAe,WACf,UAAW,iBAMD,eAAc,WAAe,CACzC,MAAO,CACL,UAAW,eACX,WAAY,UACZ,cAAe,WACf,UAAW,iBAMD,cAAa,WAAe,CACxC,MAAO,CACL,UAAW,eACX,WAAY,SACZ,cAAe,WACf,UAAW,iBAMD,sBAAqB,WAAe,CAChD,MAAO,CACL,UAAW,eACX,WAAY,iBACZ,cAAe,WACf,UAAW,iBAMD,qBAAoB,WAAe,CAC/C,MAAO,CACL,UAAW,eACX,WAAY,gBACZ,cAAe,WACf,UAAW,iBAMD,mBAAkB,WAAe,CAC7C,MAAO,CACL,UAAW,eACX,WAAY,cACZ,cAAe,WACf,UAAW,iBAMD,mBAAkB,WAAe,CAC7C,MAAO,CACL,UAAW,eACX,WAAY,cACZ,cAAe,WACf,UAAW,iBAMD,oBAAmB,WAAe,CAC9C,MAAO,CACL,UAAW,eACX,WAAY,eACZ,cAAe,WACf,UAAW,YA9KjB,QAAA,gBAAA",
  "names": []
}
