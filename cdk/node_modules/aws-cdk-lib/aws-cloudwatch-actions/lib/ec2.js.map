{
  "version": 3,
  "sources": ["ec2.ts"],
  "sourcesContent": ["import * as cloudwatch from '../../aws-cloudwatch';\nimport { Stack } from '../../core';\n\n// keep this import separate from other imports to reduce chance for merge conflicts with v2-main\n// eslint-disable-next-line no-duplicate-imports, import/order\nimport { Construct } from 'constructs';\n\n/**\n * Types of EC2 actions available\n */\nexport enum Ec2InstanceAction {\n  /**\n   * Stop the instance\n   */\n  STOP = 'stop',\n  /**\n   * Terminatethe instance\n   */\n  TERMINATE = 'terminate',\n  /**\n   * Recover the instance\n   */\n  RECOVER = 'recover',\n  /**\n   * Reboot the instance\n   */\n  REBOOT = 'reboot'\n}\n\n/**\n * Use an EC2 action as an Alarm action\n */\nexport class Ec2Action implements cloudwatch.IAlarmAction {\n  private ec2Action: Ec2InstanceAction;\n\n  constructor(instanceAction: Ec2InstanceAction) {\n    this.ec2Action = instanceAction;\n  }\n\n  /**\n   * Returns an alarm action configuration to use an EC2 action as an alarm action\n   */\n  bind(_scope: Construct, _alarm: cloudwatch.IAlarm): cloudwatch.AlarmActionConfig {\n    return { alarmActionArn: `arn:aws:automate:${Stack.of(_scope).region}:ec2:${this.ec2Action}` };\n  }\n}\n\n"],
  "mappings": "0OACA,OAAA,QAAA,YAAA,EASA,GAAY,mBAAZ,AAAA,UAAY,mBAAiB,CAI3B,mBAAA,KAAA,OAIA,mBAAA,UAAA,YAIA,mBAAA,QAAA,UAIA,mBAAA,OAAA,QACF,GAjBY,kBAAA,QAAA,mBAAA,SAAA,kBAAiB,CAAA,EAAA,EAsB7B,MAAa,SAAS,CAGpB,YAAY,eAAiC,8FAC3C,KAAK,UAAY,eAMnB,KAAK,OAAmB,OAAyB,0EACxC,CAAE,eAAgB,oBAAoB,OAAA,MAAM,GAAG,MAAM,EAAE,cAAc,KAAK,WAAW,GAXhG,QAAA,UAAA",
  "names": []
}
