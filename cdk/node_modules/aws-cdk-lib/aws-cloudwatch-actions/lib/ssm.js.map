{
  "version": 3,
  "sources": ["ssm.ts"],
  "sourcesContent": ["import * as cloudwatch from '../../aws-cloudwatch';\nimport { Stack } from '../../core';\n\n// keep this import separate from other imports to reduce chance for merge conflicts with v2-main\n// eslint-disable-next-line no-duplicate-imports, import/order\nimport { Construct } from 'constructs';\n\n/**\n * Types of OpsItem severity available\n */\nexport enum OpsItemSeverity {\n  /**\n   * Set the severity to critical\n   */\n  CRITICAL = '1',\n  /**\n   * Set the severity to high\n   */\n  HIGH = '2',\n  /**\n   * Set the severity to medium\n   */\n  MEDIUM = '3',\n  /**\n   * Set the severity to low\n   */\n  LOW = '4'\n}\n\n/**\n * Types of OpsItem category available\n */\nexport enum OpsItemCategory {\n  /**\n   * Set the category to availability\n   */\n  AVAILABILITY = 'Availability',\n  /**\n   * Set the category to cost\n   */\n  COST = 'Cost',\n  /**\n   * Set the category to performance\n   */\n  PERFORMANCE = 'Performance',\n  /**\n   * Set the category to recovery\n   */\n  RECOVERY = 'Recovery',\n  /**\n   * Set the category to security\n   */\n  SECURITY = 'Security'\n}\n\n/**\n * Use an SSM OpsItem action as an Alarm action\n */\nexport class SsmAction implements cloudwatch.IAlarmAction {\n  private severity: OpsItemSeverity;\n  private category?: OpsItemCategory;\n\n  constructor(severity: OpsItemSeverity, category?: OpsItemCategory) {\n    this.severity = severity;\n    this.category = category;\n  }\n\n  /**\n   * Returns an alarm action configuration to use an SSM OpsItem action as an alarm action\n   */\n  bind(_scope: Construct, _alarm: cloudwatch.IAlarm): cloudwatch.AlarmActionConfig {\n    if (this.category === undefined) {\n      return { alarmActionArn: `arn:aws:ssm:${Stack.of(_scope).region}:${Stack.of(_scope).account}:opsitem:${this.severity}` };\n    } else {\n      return { alarmActionArn: `arn:aws:ssm:${Stack.of(_scope).region}:${Stack.of(_scope).account}:opsitem:${this.severity}#CATEGORY=${this.category}` };\n    }\n  }\n}\n\n"],
  "mappings": "gQACA,OAAA,QAAA,YAAA,EASA,GAAY,iBAAZ,AAAA,UAAY,iBAAe,CAIzB,iBAAA,SAAA,IAIA,iBAAA,KAAA,IAIA,iBAAA,OAAA,IAIA,iBAAA,IAAA,GACF,GAjBY,gBAAA,QAAA,iBAAA,SAAA,gBAAe,CAAA,EAAA,EAsB3B,GAAY,iBAAZ,AAAA,UAAY,iBAAe,CAIzB,iBAAA,aAAA,eAIA,iBAAA,KAAA,OAIA,iBAAA,YAAA,cAIA,iBAAA,SAAA,WAIA,iBAAA,SAAA,UACF,GArBY,gBAAA,QAAA,iBAAA,SAAA,gBAAe,CAAA,EAAA,EA0B3B,MAAa,SAAS,CAIpB,YAAY,SAA2B,SAA0B,2KAC/D,KAAK,SAAW,SAChB,KAAK,SAAW,SAMlB,KAAK,OAAmB,OAAyB,CAC/C,yEAAI,KAAK,WAAa,OACb,CAAE,eAAgB,eAAe,OAAA,MAAM,GAAG,MAAM,EAAE,UAAU,OAAA,MAAM,GAAG,MAAM,EAAE,mBAAmB,KAAK,UAAU,EAE/G,CAAE,eAAgB,eAAe,OAAA,MAAM,GAAG,MAAM,EAAE,UAAU,OAAA,MAAM,GAAG,MAAM,EAAE,mBAAmB,KAAK,qBAAqB,KAAK,UAAU,GAhBtJ,QAAA,UAAA",
  "names": []
}
