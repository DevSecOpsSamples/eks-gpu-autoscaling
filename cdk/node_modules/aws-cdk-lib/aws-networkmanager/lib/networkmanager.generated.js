"use strict";var _a,_b,_c,_d,_e,_f,_g;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnTransitGatewayRegistration=exports.CfnSite=exports.CfnLinkAssociation=exports.CfnLink=exports.CfnGlobalNetwork=exports.CfnDevice=exports.CfnCustomerGatewayAssociation=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/cfn-parse");function CfnCustomerGatewayAssociationPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("customerGatewayArn",cdk.requiredValidator)(properties.customerGatewayArn)),errors.collect(cdk.propertyValidator("customerGatewayArn",cdk.validateString)(properties.customerGatewayArn)),errors.collect(cdk.propertyValidator("deviceId",cdk.requiredValidator)(properties.deviceId)),errors.collect(cdk.propertyValidator("deviceId",cdk.validateString)(properties.deviceId)),errors.collect(cdk.propertyValidator("globalNetworkId",cdk.requiredValidator)(properties.globalNetworkId)),errors.collect(cdk.propertyValidator("globalNetworkId",cdk.validateString)(properties.globalNetworkId)),errors.collect(cdk.propertyValidator("linkId",cdk.validateString)(properties.linkId)),errors.wrap('supplied properties not correct for "CfnCustomerGatewayAssociationProps"')}function cfnCustomerGatewayAssociationPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnCustomerGatewayAssociationPropsValidator(properties).assertSuccess(),{CustomerGatewayArn:cdk.stringToCloudFormation(properties.customerGatewayArn),DeviceId:cdk.stringToCloudFormation(properties.deviceId),GlobalNetworkId:cdk.stringToCloudFormation(properties.globalNetworkId),LinkId:cdk.stringToCloudFormation(properties.linkId)}):properties}function CfnCustomerGatewayAssociationPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("customerGatewayArn","CustomerGatewayArn",cfn_parse.FromCloudFormation.getString(properties.CustomerGatewayArn)),ret.addPropertyResult("deviceId","DeviceId",cfn_parse.FromCloudFormation.getString(properties.DeviceId)),ret.addPropertyResult("globalNetworkId","GlobalNetworkId",cfn_parse.FromCloudFormation.getString(properties.GlobalNetworkId)),ret.addPropertyResult("linkId","LinkId",properties.LinkId!=null?cfn_parse.FromCloudFormation.getString(properties.LinkId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnCustomerGatewayAssociation extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnCustomerGatewayAssociation.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_networkmanager_CfnCustomerGatewayAssociationProps(props),cdk.requireProperty(props,"customerGatewayArn",this),cdk.requireProperty(props,"deviceId",this),cdk.requireProperty(props,"globalNetworkId",this),this.customerGatewayArn=props.customerGatewayArn,this.deviceId=props.deviceId,this.globalNetworkId=props.globalNetworkId,this.linkId=props.linkId}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnCustomerGatewayAssociationPropsFromCloudFormation(resourceProperties),ret=new CfnCustomerGatewayAssociation(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnCustomerGatewayAssociation.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{customerGatewayArn:this.customerGatewayArn,deviceId:this.deviceId,globalNetworkId:this.globalNetworkId,linkId:this.linkId}}renderProperties(props){return cfnCustomerGatewayAssociationPropsToCloudFormation(props)}}exports.CfnCustomerGatewayAssociation=CfnCustomerGatewayAssociation,_a=JSII_RTTI_SYMBOL_1,CfnCustomerGatewayAssociation[_a]={fqn:"aws-cdk-lib.aws_networkmanager.CfnCustomerGatewayAssociation",version:"2.20.0"},CfnCustomerGatewayAssociation.CFN_RESOURCE_TYPE_NAME="AWS::NetworkManager::CustomerGatewayAssociation";function CfnDevicePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("globalNetworkId",cdk.requiredValidator)(properties.globalNetworkId)),errors.collect(cdk.propertyValidator("globalNetworkId",cdk.validateString)(properties.globalNetworkId)),errors.collect(cdk.propertyValidator("location",CfnDevice_LocationPropertyValidator)(properties.location)),errors.collect(cdk.propertyValidator("model",cdk.validateString)(properties.model)),errors.collect(cdk.propertyValidator("serialNumber",cdk.validateString)(properties.serialNumber)),errors.collect(cdk.propertyValidator("siteId",cdk.validateString)(properties.siteId)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("type",cdk.validateString)(properties.type)),errors.collect(cdk.propertyValidator("vendor",cdk.validateString)(properties.vendor)),errors.wrap('supplied properties not correct for "CfnDeviceProps"')}function cfnDevicePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDevicePropsValidator(properties).assertSuccess(),{GlobalNetworkId:cdk.stringToCloudFormation(properties.globalNetworkId),Description:cdk.stringToCloudFormation(properties.description),Location:cfnDeviceLocationPropertyToCloudFormation(properties.location),Model:cdk.stringToCloudFormation(properties.model),SerialNumber:cdk.stringToCloudFormation(properties.serialNumber),SiteId:cdk.stringToCloudFormation(properties.siteId),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),Type:cdk.stringToCloudFormation(properties.type),Vendor:cdk.stringToCloudFormation(properties.vendor)}):properties}function CfnDevicePropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("globalNetworkId","GlobalNetworkId",cfn_parse.FromCloudFormation.getString(properties.GlobalNetworkId)),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("location","Location",properties.Location!=null?CfnDeviceLocationPropertyFromCloudFormation(properties.Location):void 0),ret.addPropertyResult("model","Model",properties.Model!=null?cfn_parse.FromCloudFormation.getString(properties.Model):void 0),ret.addPropertyResult("serialNumber","SerialNumber",properties.SerialNumber!=null?cfn_parse.FromCloudFormation.getString(properties.SerialNumber):void 0),ret.addPropertyResult("siteId","SiteId",properties.SiteId!=null?cfn_parse.FromCloudFormation.getString(properties.SiteId):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("type","Type",properties.Type!=null?cfn_parse.FromCloudFormation.getString(properties.Type):void 0),ret.addPropertyResult("vendor","Vendor",properties.Vendor!=null?cfn_parse.FromCloudFormation.getString(properties.Vendor):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnDevice extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnDevice.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_networkmanager_CfnDeviceProps(props),cdk.requireProperty(props,"globalNetworkId",this),this.attrDeviceArn=cdk.Token.asString(this.getAtt("DeviceArn")),this.attrDeviceId=cdk.Token.asString(this.getAtt("DeviceId")),this.globalNetworkId=props.globalNetworkId,this.description=props.description,this.location=props.location,this.model=props.model,this.serialNumber=props.serialNumber,this.siteId=props.siteId,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::NetworkManager::Device",props.tags,{tagPropertyName:"tags"}),this.type=props.type,this.vendor=props.vendor}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnDevicePropsFromCloudFormation(resourceProperties),ret=new CfnDevice(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnDevice.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{globalNetworkId:this.globalNetworkId,description:this.description,location:this.location,model:this.model,serialNumber:this.serialNumber,siteId:this.siteId,tags:this.tags.renderTags(),type:this.type,vendor:this.vendor}}renderProperties(props){return cfnDevicePropsToCloudFormation(props)}}exports.CfnDevice=CfnDevice,_b=JSII_RTTI_SYMBOL_1,CfnDevice[_b]={fqn:"aws-cdk-lib.aws_networkmanager.CfnDevice",version:"2.20.0"},CfnDevice.CFN_RESOURCE_TYPE_NAME="AWS::NetworkManager::Device";function CfnDevice_LocationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("address",cdk.validateString)(properties.address)),errors.collect(cdk.propertyValidator("latitude",cdk.validateString)(properties.latitude)),errors.collect(cdk.propertyValidator("longitude",cdk.validateString)(properties.longitude)),errors.wrap('supplied properties not correct for "LocationProperty"')}function cfnDeviceLocationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDevice_LocationPropertyValidator(properties).assertSuccess(),{Address:cdk.stringToCloudFormation(properties.address),Latitude:cdk.stringToCloudFormation(properties.latitude),Longitude:cdk.stringToCloudFormation(properties.longitude)}):properties}function CfnDeviceLocationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("address","Address",properties.Address!=null?cfn_parse.FromCloudFormation.getString(properties.Address):void 0),ret.addPropertyResult("latitude","Latitude",properties.Latitude!=null?cfn_parse.FromCloudFormation.getString(properties.Latitude):void 0),ret.addPropertyResult("longitude","Longitude",properties.Longitude!=null?cfn_parse.FromCloudFormation.getString(properties.Longitude):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnGlobalNetworkPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnGlobalNetworkProps"')}function cfnGlobalNetworkPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnGlobalNetworkPropsValidator(properties).assertSuccess(),{Description:cdk.stringToCloudFormation(properties.description),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnGlobalNetworkPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnGlobalNetwork extends cdk.CfnResource{constructor(scope,id,props={}){super(scope,id,{type:CfnGlobalNetwork.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_networkmanager_CfnGlobalNetworkProps(props),this.attrArn=cdk.Token.asString(this.getAtt("Arn")),this.attrId=cdk.Token.asString(this.getAtt("Id")),this.description=props.description,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::NetworkManager::GlobalNetwork",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnGlobalNetworkPropsFromCloudFormation(resourceProperties),ret=new CfnGlobalNetwork(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnGlobalNetwork.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{description:this.description,tags:this.tags.renderTags()}}renderProperties(props){return cfnGlobalNetworkPropsToCloudFormation(props)}}exports.CfnGlobalNetwork=CfnGlobalNetwork,_c=JSII_RTTI_SYMBOL_1,CfnGlobalNetwork[_c]={fqn:"aws-cdk-lib.aws_networkmanager.CfnGlobalNetwork",version:"2.20.0"},CfnGlobalNetwork.CFN_RESOURCE_TYPE_NAME="AWS::NetworkManager::GlobalNetwork";function CfnLinkPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("bandwidth",cdk.requiredValidator)(properties.bandwidth)),errors.collect(cdk.propertyValidator("bandwidth",CfnLink_BandwidthPropertyValidator)(properties.bandwidth)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("globalNetworkId",cdk.requiredValidator)(properties.globalNetworkId)),errors.collect(cdk.propertyValidator("globalNetworkId",cdk.validateString)(properties.globalNetworkId)),errors.collect(cdk.propertyValidator("provider",cdk.validateString)(properties.provider)),errors.collect(cdk.propertyValidator("siteId",cdk.requiredValidator)(properties.siteId)),errors.collect(cdk.propertyValidator("siteId",cdk.validateString)(properties.siteId)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("type",cdk.validateString)(properties.type)),errors.wrap('supplied properties not correct for "CfnLinkProps"')}function cfnLinkPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnLinkPropsValidator(properties).assertSuccess(),{Bandwidth:cfnLinkBandwidthPropertyToCloudFormation(properties.bandwidth),GlobalNetworkId:cdk.stringToCloudFormation(properties.globalNetworkId),SiteId:cdk.stringToCloudFormation(properties.siteId),Description:cdk.stringToCloudFormation(properties.description),Provider:cdk.stringToCloudFormation(properties.provider),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),Type:cdk.stringToCloudFormation(properties.type)}):properties}function CfnLinkPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("bandwidth","Bandwidth",CfnLinkBandwidthPropertyFromCloudFormation(properties.Bandwidth)),ret.addPropertyResult("globalNetworkId","GlobalNetworkId",cfn_parse.FromCloudFormation.getString(properties.GlobalNetworkId)),ret.addPropertyResult("siteId","SiteId",cfn_parse.FromCloudFormation.getString(properties.SiteId)),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("provider","Provider",properties.Provider!=null?cfn_parse.FromCloudFormation.getString(properties.Provider):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("type","Type",properties.Type!=null?cfn_parse.FromCloudFormation.getString(properties.Type):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnLink extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnLink.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_networkmanager_CfnLinkProps(props),cdk.requireProperty(props,"bandwidth",this),cdk.requireProperty(props,"globalNetworkId",this),cdk.requireProperty(props,"siteId",this),this.attrLinkArn=cdk.Token.asString(this.getAtt("LinkArn")),this.attrLinkId=cdk.Token.asString(this.getAtt("LinkId")),this.bandwidth=props.bandwidth,this.globalNetworkId=props.globalNetworkId,this.siteId=props.siteId,this.description=props.description,this.provider=props.provider,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::NetworkManager::Link",props.tags,{tagPropertyName:"tags"}),this.type=props.type}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnLinkPropsFromCloudFormation(resourceProperties),ret=new CfnLink(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnLink.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{bandwidth:this.bandwidth,globalNetworkId:this.globalNetworkId,siteId:this.siteId,description:this.description,provider:this.provider,tags:this.tags.renderTags(),type:this.type}}renderProperties(props){return cfnLinkPropsToCloudFormation(props)}}exports.CfnLink=CfnLink,_d=JSII_RTTI_SYMBOL_1,CfnLink[_d]={fqn:"aws-cdk-lib.aws_networkmanager.CfnLink",version:"2.20.0"},CfnLink.CFN_RESOURCE_TYPE_NAME="AWS::NetworkManager::Link";function CfnLink_BandwidthPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("downloadSpeed",cdk.validateNumber)(properties.downloadSpeed)),errors.collect(cdk.propertyValidator("uploadSpeed",cdk.validateNumber)(properties.uploadSpeed)),errors.wrap('supplied properties not correct for "BandwidthProperty"')}function cfnLinkBandwidthPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnLink_BandwidthPropertyValidator(properties).assertSuccess(),{DownloadSpeed:cdk.numberToCloudFormation(properties.downloadSpeed),UploadSpeed:cdk.numberToCloudFormation(properties.uploadSpeed)}):properties}function CfnLinkBandwidthPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("downloadSpeed","DownloadSpeed",properties.DownloadSpeed!=null?cfn_parse.FromCloudFormation.getNumber(properties.DownloadSpeed):void 0),ret.addPropertyResult("uploadSpeed","UploadSpeed",properties.UploadSpeed!=null?cfn_parse.FromCloudFormation.getNumber(properties.UploadSpeed):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnLinkAssociationPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("deviceId",cdk.requiredValidator)(properties.deviceId)),errors.collect(cdk.propertyValidator("deviceId",cdk.validateString)(properties.deviceId)),errors.collect(cdk.propertyValidator("globalNetworkId",cdk.requiredValidator)(properties.globalNetworkId)),errors.collect(cdk.propertyValidator("globalNetworkId",cdk.validateString)(properties.globalNetworkId)),errors.collect(cdk.propertyValidator("linkId",cdk.requiredValidator)(properties.linkId)),errors.collect(cdk.propertyValidator("linkId",cdk.validateString)(properties.linkId)),errors.wrap('supplied properties not correct for "CfnLinkAssociationProps"')}function cfnLinkAssociationPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnLinkAssociationPropsValidator(properties).assertSuccess(),{DeviceId:cdk.stringToCloudFormation(properties.deviceId),GlobalNetworkId:cdk.stringToCloudFormation(properties.globalNetworkId),LinkId:cdk.stringToCloudFormation(properties.linkId)}):properties}function CfnLinkAssociationPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("deviceId","DeviceId",cfn_parse.FromCloudFormation.getString(properties.DeviceId)),ret.addPropertyResult("globalNetworkId","GlobalNetworkId",cfn_parse.FromCloudFormation.getString(properties.GlobalNetworkId)),ret.addPropertyResult("linkId","LinkId",cfn_parse.FromCloudFormation.getString(properties.LinkId)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnLinkAssociation extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnLinkAssociation.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_networkmanager_CfnLinkAssociationProps(props),cdk.requireProperty(props,"deviceId",this),cdk.requireProperty(props,"globalNetworkId",this),cdk.requireProperty(props,"linkId",this),this.deviceId=props.deviceId,this.globalNetworkId=props.globalNetworkId,this.linkId=props.linkId}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnLinkAssociationPropsFromCloudFormation(resourceProperties),ret=new CfnLinkAssociation(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnLinkAssociation.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{deviceId:this.deviceId,globalNetworkId:this.globalNetworkId,linkId:this.linkId}}renderProperties(props){return cfnLinkAssociationPropsToCloudFormation(props)}}exports.CfnLinkAssociation=CfnLinkAssociation,_e=JSII_RTTI_SYMBOL_1,CfnLinkAssociation[_e]={fqn:"aws-cdk-lib.aws_networkmanager.CfnLinkAssociation",version:"2.20.0"},CfnLinkAssociation.CFN_RESOURCE_TYPE_NAME="AWS::NetworkManager::LinkAssociation";function CfnSitePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("globalNetworkId",cdk.requiredValidator)(properties.globalNetworkId)),errors.collect(cdk.propertyValidator("globalNetworkId",cdk.validateString)(properties.globalNetworkId)),errors.collect(cdk.propertyValidator("location",CfnSite_LocationPropertyValidator)(properties.location)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnSiteProps"')}function cfnSitePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnSitePropsValidator(properties).assertSuccess(),{GlobalNetworkId:cdk.stringToCloudFormation(properties.globalNetworkId),Description:cdk.stringToCloudFormation(properties.description),Location:cfnSiteLocationPropertyToCloudFormation(properties.location),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnSitePropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("globalNetworkId","GlobalNetworkId",cfn_parse.FromCloudFormation.getString(properties.GlobalNetworkId)),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("location","Location",properties.Location!=null?CfnSiteLocationPropertyFromCloudFormation(properties.Location):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnSite extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnSite.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_networkmanager_CfnSiteProps(props),cdk.requireProperty(props,"globalNetworkId",this),this.attrSiteArn=cdk.Token.asString(this.getAtt("SiteArn")),this.attrSiteId=cdk.Token.asString(this.getAtt("SiteId")),this.globalNetworkId=props.globalNetworkId,this.description=props.description,this.location=props.location,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::NetworkManager::Site",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnSitePropsFromCloudFormation(resourceProperties),ret=new CfnSite(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnSite.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{globalNetworkId:this.globalNetworkId,description:this.description,location:this.location,tags:this.tags.renderTags()}}renderProperties(props){return cfnSitePropsToCloudFormation(props)}}exports.CfnSite=CfnSite,_f=JSII_RTTI_SYMBOL_1,CfnSite[_f]={fqn:"aws-cdk-lib.aws_networkmanager.CfnSite",version:"2.20.0"},CfnSite.CFN_RESOURCE_TYPE_NAME="AWS::NetworkManager::Site";function CfnSite_LocationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("address",cdk.validateString)(properties.address)),errors.collect(cdk.propertyValidator("latitude",cdk.validateString)(properties.latitude)),errors.collect(cdk.propertyValidator("longitude",cdk.validateString)(properties.longitude)),errors.wrap('supplied properties not correct for "LocationProperty"')}function cfnSiteLocationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnSite_LocationPropertyValidator(properties).assertSuccess(),{Address:cdk.stringToCloudFormation(properties.address),Latitude:cdk.stringToCloudFormation(properties.latitude),Longitude:cdk.stringToCloudFormation(properties.longitude)}):properties}function CfnSiteLocationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("address","Address",properties.Address!=null?cfn_parse.FromCloudFormation.getString(properties.Address):void 0),ret.addPropertyResult("latitude","Latitude",properties.Latitude!=null?cfn_parse.FromCloudFormation.getString(properties.Latitude):void 0),ret.addPropertyResult("longitude","Longitude",properties.Longitude!=null?cfn_parse.FromCloudFormation.getString(properties.Longitude):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransitGatewayRegistrationPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("globalNetworkId",cdk.requiredValidator)(properties.globalNetworkId)),errors.collect(cdk.propertyValidator("globalNetworkId",cdk.validateString)(properties.globalNetworkId)),errors.collect(cdk.propertyValidator("transitGatewayArn",cdk.requiredValidator)(properties.transitGatewayArn)),errors.collect(cdk.propertyValidator("transitGatewayArn",cdk.validateString)(properties.transitGatewayArn)),errors.wrap('supplied properties not correct for "CfnTransitGatewayRegistrationProps"')}function cfnTransitGatewayRegistrationPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnTransitGatewayRegistrationPropsValidator(properties).assertSuccess(),{GlobalNetworkId:cdk.stringToCloudFormation(properties.globalNetworkId),TransitGatewayArn:cdk.stringToCloudFormation(properties.transitGatewayArn)}):properties}function CfnTransitGatewayRegistrationPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("globalNetworkId","GlobalNetworkId",cfn_parse.FromCloudFormation.getString(properties.GlobalNetworkId)),ret.addPropertyResult("transitGatewayArn","TransitGatewayArn",cfn_parse.FromCloudFormation.getString(properties.TransitGatewayArn)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnTransitGatewayRegistration extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnTransitGatewayRegistration.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_networkmanager_CfnTransitGatewayRegistrationProps(props),cdk.requireProperty(props,"globalNetworkId",this),cdk.requireProperty(props,"transitGatewayArn",this),this.globalNetworkId=props.globalNetworkId,this.transitGatewayArn=props.transitGatewayArn}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnTransitGatewayRegistrationPropsFromCloudFormation(resourceProperties),ret=new CfnTransitGatewayRegistration(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnTransitGatewayRegistration.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{globalNetworkId:this.globalNetworkId,transitGatewayArn:this.transitGatewayArn}}renderProperties(props){return cfnTransitGatewayRegistrationPropsToCloudFormation(props)}}exports.CfnTransitGatewayRegistration=CfnTransitGatewayRegistration,_g=JSII_RTTI_SYMBOL_1,CfnTransitGatewayRegistration[_g]={fqn:"aws-cdk-lib.aws_networkmanager.CfnTransitGatewayRegistration",version:"2.20.0"},CfnTransitGatewayRegistration.CFN_RESOURCE_TYPE_NAME="AWS::NetworkManager::TransitGatewayRegistration";
//# sourceMappingURL=networkmanager.generated.js.map
