{
  "version": 3,
  "sources": ["integ.import-default-vpc.lit.ts"],
  "sourcesContent": ["/// !cdk-integ *\nimport * as cdk from '../../core';\nimport * as ec2 from '../lib';\n\nconst app = new cdk.App();\n\n// we associate this stack with an explicit environment since this is required by the\n// environmental context provider used in `fromLookup`. CDK_INTEG_XXX are set\n// when producing the .expected file and CDK_DEFAULT_XXX is passed in through from\n// the CLI in actual deployment.\nconst env = {\n  account: process.env.CDK_INTEG_ACCOUNT || process.env.CDK_DEFAULT_ACCOUNT,\n  region: process.env.CDK_INTEG_REGION || process.env.CDK_DEFAULT_REGION,\n};\n\nconst stack = new cdk.Stack(app, 'aws-cdk-ec2-import', { env });\n\n/// !show\nconst vpc = ec2.Vpc.fromLookup(stack, 'VPC', {\n  // This imports the default VPC but you can also\n  // specify a 'vpcName' or 'tags'.\n  isDefault: true,\n});\n/// !hide\n\n// The only thing in this library that takes a VPC as an argument :)\nnew ec2.SecurityGroup(stack, 'SecurityGroup', {\n  vpc,\n});\n\n// Try subnet selection\nnew cdk.CfnOutput(stack, 'PublicSubnets', { value: 'ids:' + vpc.publicSubnets.map(s => s.subnetId).join(',') });\nnew cdk.CfnOutput(stack, 'PrivateSubnets', { value: 'ids:' + vpc.privateSubnets.map(s => s.subnetId).join(',') });\n\n// Route table IDs\nnew cdk.CfnOutput(stack, 'PublicRouteTables', { value: 'ids: ' + vpc.publicSubnets.map(s => s.routeTable.routeTableId).join(', ') });\n\napp.synth();\n"],
  "mappings": "oEACA,KAAA,KAAA,QAAA,YAAA,EACA,IAAA,QAAA,QAAA,EAEM,IAAM,GAAI,KAAI,IAMd,IAAM,CACV,QAAS,QAAQ,IAAI,mBAAqB,QAAQ,IAAI,oBACtD,OAAQ,QAAQ,IAAI,kBAAoB,QAAQ,IAAI,oBAGhD,MAAQ,GAAI,KAAI,MAAM,IAAK,qBAAsB,CAAE,GAAG,CAAE,EAGxD,IAAM,IAAI,IAAI,WAAW,MAAO,MAAO,CAG3C,UAAW,GACZ,EAID,GAAI,KAAI,cAAc,MAAO,gBAAiB,CAC5C,IACD,EAGD,GAAI,KAAI,UAAU,MAAO,gBAAiB,CAAE,MAAO,OAAS,IAAI,cAAc,IAAI,GAAK,EAAE,QAAQ,EAAE,KAAK,GAAG,CAAC,CAAE,EAC9G,GAAI,KAAI,UAAU,MAAO,iBAAkB,CAAE,MAAO,OAAS,IAAI,eAAe,IAAI,GAAK,EAAE,QAAQ,EAAE,KAAK,GAAG,CAAC,CAAE,EAGhH,GAAI,KAAI,UAAU,MAAO,oBAAqB,CAAE,MAAO,QAAU,IAAI,cAAc,IAAI,GAAK,EAAE,WAAW,YAAY,EAAE,KAAK,IAAI,CAAC,CAAE,EAEnI,IAAI,MAAK",
  "names": []
}
