{
  "version": 3,
  "sources": ["example.images.lit.ts"],
  "sourcesContent": ["import * as ec2 from '../lib';\n\n/// !show\n// Pick the right Amazon Linux edition. All arguments shown are optional\n// and will default to these values when omitted.\nconst amznLinux = ec2.MachineImage.latestAmazonLinux({\n  generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX,\n  edition: ec2.AmazonLinuxEdition.STANDARD,\n  virtualization: ec2.AmazonLinuxVirt.HVM,\n  storage: ec2.AmazonLinuxStorage.GENERAL_PURPOSE,\n  cpuType: ec2.AmazonLinuxCpuType.X86_64,\n});\n\n// Pick a Windows edition to use\nconst windows = ec2.MachineImage.latestWindows(ec2.WindowsVersion.WINDOWS_SERVER_2019_ENGLISH_FULL_BASE);\n\n// Read AMI id from SSM parameter store\nconst ssm = ec2.MachineImage.fromSsmParameter('/my/ami', { os: ec2.OperatingSystemType.LINUX });\n\n// Look up the most recent image matching a set of AMI filters.\n// In this case, look up the NAT instance AMI, by using a wildcard\n// in the 'name' field:\nconst natAmi = ec2.MachineImage.lookup({\n  name: 'amzn-ami-vpc-nat-*',\n  owners: ['amazon'],\n});\n\n// For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n// a map giving the AMI to in for each region:\nconst linux = ec2.MachineImage.genericLinux({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});\n\n// For other custom (Windows) images, instantiate a `GenericWindowsImage` with\n// a map giving the AMI to in for each region:\nconst genericWindows = ec2.MachineImage.genericWindows({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});\n/// !hide\n\nArray.isArray(windows);\nArray.isArray(amznLinux);\nArray.isArray(linux);\nArray.isArray(ssm);\nArray.isArray(genericWindows);\nArray.isArray(natAmi);\n"],
  "mappings": "oEAAA,KAAA,KAAA,QAAA,QAAA,EAKM,UAAY,IAAI,aAAa,kBAAkB,CACnD,WAAY,IAAI,sBAAsB,aACtC,QAAS,IAAI,mBAAmB,SAChC,eAAgB,IAAI,gBAAgB,IACpC,QAAS,IAAI,mBAAmB,gBAChC,QAAS,IAAI,mBAAmB,OACjC,EAGK,QAAU,IAAI,aAAa,cAAc,IAAI,eAAe,qCAAqC,EAGjG,IAAM,IAAI,aAAa,iBAAiB,UAAW,CAAE,GAAI,IAAI,oBAAoB,KAAK,CAAE,EAKxF,OAAS,IAAI,aAAa,OAAO,CACrC,KAAM,qBACN,OAAQ,CAAC,QAAQ,EAClB,EAIK,MAAQ,IAAI,aAAa,aAAa,CAC1C,YAAa,eACb,YAAa,eAEd,EAIK,eAAiB,IAAI,aAAa,eAAe,CACrD,YAAa,eACb,YAAa,eAEd,EAGD,MAAM,QAAQ,OAAO,EACrB,MAAM,QAAQ,SAAS,EACvB,MAAM,QAAQ,KAAK,EACnB,MAAM,QAAQ,GAAG,EACjB,MAAM,QAAQ,cAAc,EAC5B,MAAM,QAAQ,MAAM",
  "names": []
}
