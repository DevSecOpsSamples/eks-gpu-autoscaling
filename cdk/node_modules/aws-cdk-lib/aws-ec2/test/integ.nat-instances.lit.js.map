{
  "version": 3,
  "sources": ["integ.nat-instances.lit.ts"],
  "sourcesContent": ["import * as cdk from '../../core';\nimport * as ec2 from '../lib';\n\nclass NatInstanceStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    /// !show\n    // Configure the `natGatewayProvider` when defining a Vpc\n    const natGatewayProvider = ec2.NatProvider.instance({\n      instanceType: new ec2.InstanceType('t3.small'),\n    });\n\n    const vpc = new ec2.Vpc(this, 'MyVpc', {\n      natGatewayProvider,\n\n      // The 'natGateways' parameter now controls the number of NAT instances\n      natGateways: 2,\n    });\n    /// !hide\n\n    Array.isArray(vpc);\n    Array.isArray(natGatewayProvider.configuredGateways);\n  }\n}\n\nconst app = new cdk.App();\nnew NatInstanceStack(app, 'aws-cdk-vpc-nat-instances', {\n  env: {\n    account: process.env.CDK_INTEG_ACCOUNT || process.env.CDK_DEFAULT_ACCOUNT,\n    region: process.env.CDK_INTEG_REGION || process.env.CDK_DEFAULT_REGION,\n  },\n});\napp.synth();\n"],
  "mappings": "oEAAA,KAAA,KAAA,QAAA,YAAA,EACA,IAAA,QAAA,QAAA,EAEA,MAAM,wBAAyB,KAAI,KAAK,CACtC,YAAY,MAAgB,GAAY,MAAsB,CAC5D,MAAM,MAAO,GAAI,KAAK,EAItB,KAAM,oBAAqB,IAAI,YAAY,SAAS,CAClD,aAAc,GAAI,KAAI,aAAa,UAAU,EAC9C,EAEK,IAAM,GAAI,KAAI,IAAI,KAAM,QAAS,CACrC,mBAGA,YAAa,EACd,EAGD,MAAM,QAAQ,GAAG,EACjB,MAAM,QAAQ,mBAAmB,kBAAkB,GAIvD,KAAM,KAAM,GAAI,KAAI,IACpB,GAAI,kBAAiB,IAAK,4BAA6B,CACrD,IAAK,CACH,QAAS,QAAQ,IAAI,mBAAqB,QAAQ,IAAI,oBACtD,OAAQ,QAAQ,IAAI,kBAAoB,QAAQ,IAAI,oBAEvD,EACD,IAAI,MAAK",
  "names": []
}
