"use strict";var _a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.BastionHostLinux=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),aws_iam_1=require("../../aws-iam"),core_1=require("../../core"),_1=require("."),instance_1=require("./instance"),machine_image_1=require("./machine-image"),port_1=require("./port");class BastionHostLinux extends core_1.Resource{constructor(scope,id,props){var _b,_c,_d,_e,_f,_g;super(scope,id);jsiiDeprecationWarnings.aws_cdk_lib_aws_ec2_BastionHostLinuxProps(props),this.stack=core_1.Stack.of(scope);const instanceType=(_b=props.instanceType)!==null&&_b!==void 0?_b:_1.InstanceType.of(_1.InstanceClass.T3,_1.InstanceSize.NANO);this.instance=new instance_1.Instance(this,"Resource",{vpc:props.vpc,availabilityZone:props.availabilityZone,securityGroup:props.securityGroup,instanceName:(_c=props.instanceName)!==null&&_c!==void 0?_c:"BastionHost",instanceType,machineImage:(_d=props.machineImage)!==null&&_d!==void 0?_d:machine_image_1.MachineImage.latestAmazonLinux({generation:_1.AmazonLinuxGeneration.AMAZON_LINUX_2,cpuType:this.toAmazonLinuxCpuType(instanceType.architecture)}),vpcSubnets:(_e=props.subnetSelection)!==null&&_e!==void 0?_e:{},blockDevices:(_f=props.blockDevices)!==null&&_f!==void 0?_f:void 0,init:props.init,initOptions:props.initOptions,requireImdsv2:(_g=props.requireImdsv2)!==null&&_g!==void 0?_g:!1}),this.instance.addToRolePolicy(new aws_iam_1.PolicyStatement({actions:["ssmmessages:*","ssm:UpdateInstanceInformation","ec2messages:*"],resources:["*"]})),this.connections=this.instance.connections,this.role=this.instance.role,this.grantPrincipal=this.instance.role,this.instanceId=this.instance.instanceId,this.instancePrivateIp=this.instance.instancePrivateIp,this.instanceAvailabilityZone=this.instance.instanceAvailabilityZone,this.instancePrivateDnsName=this.instance.instancePrivateDnsName,this.instancePublicIp=this.instance.instancePublicIp,this.instancePublicDnsName=this.instance.instancePublicDnsName,new core_1.CfnOutput(this,"BastionHostId",{description:"Instance ID of the bastion host. Use this to connect via SSM Session Manager",value:this.instanceId})}toAmazonLinuxCpuType(architecture){if(architecture===_1.InstanceArchitecture.ARM_64)return machine_image_1.AmazonLinuxCpuType.ARM_64;if(architecture===_1.InstanceArchitecture.X86_64)return machine_image_1.AmazonLinuxCpuType.X86_64;throw new Error(`Unsupported instance architecture '${architecture}'`)}allowSshAccessFrom(...peer){jsiiDeprecationWarnings.aws_cdk_lib_aws_ec2_IPeer(peer),peer.forEach(p=>{this.connections.allowFrom(p,port_1.Port.tcp(22),"SSH access")})}}exports.BastionHostLinux=BastionHostLinux,_a=JSII_RTTI_SYMBOL_1,BastionHostLinux[_a]={fqn:"aws-cdk-lib.aws_ec2.BastionHostLinux",version:"2.20.0"};
//# sourceMappingURL=bastion-host.js.map
