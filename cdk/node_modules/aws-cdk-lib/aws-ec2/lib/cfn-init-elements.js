"use strict";var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k;Object.defineProperty(exports,"__esModule",{value:!0}),exports.InitSource=exports.InitService=exports.InitPackage=exports.InitUser=exports.InitGroup=exports.InitFile=exports.InitCommand=exports.InitCommandWaitDuration=exports.InitElement=exports.InitServiceRestartHandle=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),fs=require("fs"),s3_assets=require("../../aws-s3-assets"),core_1=require("../../core"),cfn_init_internal_1=require("./private/cfn-init-internal");class InitServiceRestartHandle{constructor(){this.commands=new Array,this.files=new Array,this.sources=new Array,this.packages={}}_addCommand(key){return this.commands.push(key)}_addFile(key){return this.files.push(key)}_addSource(key){return this.sources.push(key)}_addPackage(packageType,key){this.packages[packageType]||(this.packages[packageType]=[]),this.packages[packageType].push(key)}_renderRestartHandles(){const nonEmpty=x=>x.length>0?x:void 0;return{commands:nonEmpty(this.commands),files:nonEmpty(this.files),packages:Object.keys(this.packages).length>0?this.packages:void 0,sources:nonEmpty(this.sources)}}}exports.InitServiceRestartHandle=InitServiceRestartHandle,_a=JSII_RTTI_SYMBOL_1,InitServiceRestartHandle[_a]={fqn:"aws-cdk-lib.aws_ec2.InitServiceRestartHandle",version:"2.20.0"};class InitElement{}exports.InitElement=InitElement,_b=JSII_RTTI_SYMBOL_1,InitElement[_b]={fqn:"aws-cdk-lib.aws_ec2.InitElement",version:"2.20.0"};class InitCommandWaitDuration{static of(duration){return jsiiDeprecationWarnings.aws_cdk_lib_Duration(duration),new class extends InitCommandWaitDuration{_render(){return duration.toSeconds()}}}static none(){return InitCommandWaitDuration.of(core_1.Duration.seconds(0))}static forever(){return new class extends InitCommandWaitDuration{_render(){return"forever"}}}}exports.InitCommandWaitDuration=InitCommandWaitDuration,_c=JSII_RTTI_SYMBOL_1,InitCommandWaitDuration[_c]={fqn:"aws-cdk-lib.aws_ec2.InitCommandWaitDuration",version:"2.20.0"};class InitCommand extends InitElement{constructor(command,options){super();this.command=command,this.options=options,this.elementType=cfn_init_internal_1.InitElementType.COMMAND.toString()}static shellCommand(shellCommand,options={}){return jsiiDeprecationWarnings.aws_cdk_lib_aws_ec2_InitCommandOptions(options),new InitCommand(shellCommand,options)}static argvCommand(argv,options={}){if(jsiiDeprecationWarnings.aws_cdk_lib_aws_ec2_InitCommandOptions(options),argv.length===0)throw new Error("Cannot define argvCommand with an empty arguments");return new InitCommand(argv,options)}_bind(options){var _l,_m;const commandKey=this.options.key||`${options.index}`.padStart(3,"0");if(options.platform!==cfn_init_internal_1.InitPlatform.WINDOWS&&this.options.waitAfterCompletion!==void 0)throw new Error(`Command '${this.command}': 'waitAfterCompletion' is only valid for Windows systems.`);for(const handle of(_l=this.options.serviceRestartHandles)!==null&&_l!==void 0?_l:[])handle._addCommand(commandKey);return{config:{[commandKey]:{command:this.command,env:this.options.env,cwd:this.options.cwd,test:this.options.testCmd,ignoreErrors:this.options.ignoreErrors,waitAfterCompletion:(_m=this.options.waitAfterCompletion)===null||_m===void 0?void 0:_m._render()}}}}}exports.InitCommand=InitCommand,_d=JSII_RTTI_SYMBOL_1,InitCommand[_d]={fqn:"aws-cdk-lib.aws_ec2.InitCommand",version:"2.20.0"};class InitFile extends InitElement{constructor(fileName,options){super();this.fileName=fileName,this.options=options,this.elementType=cfn_init_internal_1.InitElementType.FILE.toString(),jsiiDeprecationWarnings.aws_cdk_lib_aws_ec2_InitFileOptions(options)}static fromString(fileName,content,options={}){if(jsiiDeprecationWarnings.aws_cdk_lib_aws_ec2_InitFileOptions(options),!content)throw new Error(`InitFile ${fileName}: cannot create empty file. Please supply at least one character of content.`);return new class extends InitFile{_doBind(bindOptions){return{config:this._standardConfig(options,bindOptions.platform,{content,encoding:this.options.base64Encoded?"base64":"plain"})}}}(fileName,options)}static symlink(fileName,target,options={}){jsiiDeprecationWarnings.aws_cdk_lib_aws_ec2_InitFileOptions(options);const{mode,...otherOptions}=options;if(mode&&mode.slice(0,3)!=="120")throw new Error("File mode for symlinks must begin with 120XXX");return InitFile.fromString(fileName,target,{mode:mode||"120644",...otherOptions})}static fromObject(fileName,obj,options={}){return jsiiDeprecationWarnings.aws_cdk_lib_aws_ec2_InitFileOptions(options),new class extends InitFile{_doBind(bindOptions){return{config:this._standardConfig(options,bindOptions.platform,{content:obj})}}}(fileName,options)}static fromFileInline(targetFileName,sourceFileName,options={}){jsiiDeprecationWarnings.aws_cdk_lib_aws_ec2_InitFileOptions(options);const encoding=options.base64Encoded?"base64":"utf8",fileContents=fs.readFileSync(sourceFileName).toString(encoding);return InitFile.fromString(targetFileName,fileContents,options)}static fromUrl(fileName,url,options={}){return jsiiDeprecationWarnings.aws_cdk_lib_aws_ec2_InitFileOptions(options),new class extends InitFile{_doBind(bindOptions){return{config:this._standardConfig(options,bindOptions.platform,{source:url})}}}(fileName,options)}static fromS3Object(fileName,bucket,key,options={}){return jsiiDeprecationWarnings.aws_cdk_lib_aws_s3_IBucket(bucket),jsiiDeprecationWarnings.aws_cdk_lib_aws_ec2_InitFileOptions(options),new class extends InitFile{_doBind(bindOptions){return bucket.grantRead(bindOptions.instanceRole,key),{config:this._standardConfig(options,bindOptions.platform,{source:bucket.urlForObject(key)}),authentication:standardS3Auth(bindOptions.instanceRole,bucket.bucketName)}}}(fileName,options)}static fromAsset(targetFileName,path,options={}){return jsiiDeprecationWarnings.aws_cdk_lib_aws_ec2_InitFileAssetOptions(options),new class extends InitFile{_doBind(bindOptions){const asset=new s3_assets.Asset(bindOptions.scope,`${targetFileName}Asset`,{path,...options});return asset.grantRead(bindOptions.instanceRole),{config:this._standardConfig(options,bindOptions.platform,{source:asset.httpUrl}),authentication:standardS3Auth(bindOptions.instanceRole,asset.s3BucketName),assetHash:asset.assetHash}}}(targetFileName,options)}static fromExistingAsset(targetFileName,asset,options={}){return jsiiDeprecationWarnings.aws_cdk_lib_aws_s3_assets_Asset(asset),jsiiDeprecationWarnings.aws_cdk_lib_aws_ec2_InitFileOptions(options),new class extends InitFile{_doBind(bindOptions){return asset.grantRead(bindOptions.instanceRole),{config:this._standardConfig(options,bindOptions.platform,{source:asset.httpUrl}),authentication:standardS3Auth(bindOptions.instanceRole,asset.s3BucketName),assetHash:asset.assetHash}}}(targetFileName,options)}_bind(bindOptions){var _l;for(const handle of(_l=this.options.serviceRestartHandles)!==null&&_l!==void 0?_l:[])handle._addFile(this.fileName);return this._doBind(bindOptions)}_standardConfig(fileOptions,platform,contentVars){if(platform===cfn_init_internal_1.InitPlatform.WINDOWS){if(fileOptions.group||fileOptions.owner||fileOptions.mode)throw new Error("Owner, group, and mode options not supported for Windows.");return{[this.fileName]:{...contentVars}}}return{[this.fileName]:{...contentVars,mode:fileOptions.mode||"000644",owner:fileOptions.owner||"root",group:fileOptions.group||"root"}}}}exports.InitFile=InitFile,_e=JSII_RTTI_SYMBOL_1,InitFile[_e]={fqn:"aws-cdk-lib.aws_ec2.InitFile",version:"2.20.0"};class InitGroup extends InitElement{constructor(groupName,groupId){super();this.groupName=groupName,this.groupId=groupId,this.elementType=cfn_init_internal_1.InitElementType.GROUP.toString()}static fromName(groupName,groupId){return new InitGroup(groupName,groupId)}_bind(options){if(options.platform===cfn_init_internal_1.InitPlatform.WINDOWS)throw new Error("Init groups are not supported on Windows");return{config:{[this.groupName]:this.groupId!==void 0?{gid:this.groupId}:{}}}}}exports.InitGroup=InitGroup,_f=JSII_RTTI_SYMBOL_1,InitGroup[_f]={fqn:"aws-cdk-lib.aws_ec2.InitGroup",version:"2.20.0"};class InitUser extends InitElement{constructor(userName,userOptions){super();this.userName=userName,this.userOptions=userOptions,this.elementType=cfn_init_internal_1.InitElementType.USER.toString(),jsiiDeprecationWarnings.aws_cdk_lib_aws_ec2_InitUserOptions(userOptions)}static fromName(userName,options={}){return jsiiDeprecationWarnings.aws_cdk_lib_aws_ec2_InitUserOptions(options),new InitUser(userName,options)}_bind(options){if(options.platform===cfn_init_internal_1.InitPlatform.WINDOWS)throw new Error("Init users are not supported on Windows");return{config:{[this.userName]:{uid:this.userOptions.userId,groups:this.userOptions.groups,homeDir:this.userOptions.homeDir}}}}}exports.InitUser=InitUser,_g=JSII_RTTI_SYMBOL_1,InitUser[_g]={fqn:"aws-cdk-lib.aws_ec2.InitUser",version:"2.20.0"};class InitPackage extends InitElement{constructor(type,versions,packageName,serviceHandles){super();this.type=type,this.versions=versions,this.packageName=packageName,this.serviceHandles=serviceHandles,this.elementType=cfn_init_internal_1.InitElementType.PACKAGE.toString()}static rpm(location,options={}){return jsiiDeprecationWarnings.aws_cdk_lib_aws_ec2_LocationPackageOptions(options),new InitPackage("rpm",[location],options.key,options.serviceRestartHandles)}static yum(packageName,options={}){var _l;return jsiiDeprecationWarnings.aws_cdk_lib_aws_ec2_NamedPackageOptions(options),new InitPackage("yum",(_l=options.version)!==null&&_l!==void 0?_l:[],packageName,options.serviceRestartHandles)}static rubyGem(gemName,options={}){var _l;return jsiiDeprecationWarnings.aws_cdk_lib_aws_ec2_NamedPackageOptions(options),new InitPackage("rubygems",(_l=options.version)!==null&&_l!==void 0?_l:[],gemName,options.serviceRestartHandles)}static python(packageName,options={}){var _l;return jsiiDeprecationWarnings.aws_cdk_lib_aws_ec2_NamedPackageOptions(options),new InitPackage("python",(_l=options.version)!==null&&_l!==void 0?_l:[],packageName,options.serviceRestartHandles)}static apt(packageName,options={}){var _l;return jsiiDeprecationWarnings.aws_cdk_lib_aws_ec2_NamedPackageOptions(options),new InitPackage("apt",(_l=options.version)!==null&&_l!==void 0?_l:[],packageName,options.serviceRestartHandles)}static msi(location,options={}){return jsiiDeprecationWarnings.aws_cdk_lib_aws_ec2_LocationPackageOptions(options),new class extends InitPackage{renderPackageVersions(){return location}}("msi",[location],options.key,options.serviceRestartHandles)}_bind(options){var _l;if(this.type==="msi"!=(options.platform===cfn_init_internal_1.InitPlatform.WINDOWS))throw this.type==="msi"?new Error("MSI installers are only supported on Windows systems."):new Error("Windows only supports the MSI package type");if(!this.packageName&&!["rpm","msi"].includes(this.type))throw new Error("Package name must be specified for all package types besides RPM and MSI.");const packageName=this.packageName||`${options.index}`.padStart(3,"0");for(const handle of(_l=this.serviceHandles)!==null&&_l!==void 0?_l:[])handle._addPackage(this.type,packageName);return{config:{[this.type]:{[packageName]:this.renderPackageVersions()}}}}renderPackageVersions(){return this.versions}}exports.InitPackage=InitPackage,_h=JSII_RTTI_SYMBOL_1,InitPackage[_h]={fqn:"aws-cdk-lib.aws_ec2.InitPackage",version:"2.20.0"};class InitService extends InitElement{constructor(serviceName,serviceOptions){super();this.serviceName=serviceName,this.serviceOptions=serviceOptions,this.elementType=cfn_init_internal_1.InitElementType.SERVICE.toString()}static enable(serviceName,options={}){var _l;jsiiDeprecationWarnings.aws_cdk_lib_aws_ec2_InitServiceOptions(options);const{enabled,ensureRunning,...otherOptions}=options;return new InitService(serviceName,{enabled:enabled!=null?enabled:!0,ensureRunning:(_l=ensureRunning!=null?ensureRunning:enabled)!==null&&_l!==void 0?_l:!0,...otherOptions})}static disable(serviceName){return new InitService(serviceName,{enabled:!1,ensureRunning:!1})}_bind(options){var _l;return{config:{[options.platform===cfn_init_internal_1.InitPlatform.LINUX?"sysvinit":"windows"]:{[this.serviceName]:{enabled:this.serviceOptions.enabled,ensureRunning:this.serviceOptions.ensureRunning,...(_l=this.serviceOptions.serviceRestartHandle)===null||_l===void 0?void 0:_l._renderRestartHandles()}}}}}}exports.InitService=InitService,_j=JSII_RTTI_SYMBOL_1,InitService[_j]={fqn:"aws-cdk-lib.aws_ec2.InitService",version:"2.20.0"};class InitSource extends InitElement{constructor(targetDirectory,serviceHandles){super();this.targetDirectory=targetDirectory,this.serviceHandles=serviceHandles,this.elementType=cfn_init_internal_1.InitElementType.SOURCE.toString()}static fromUrl(targetDirectory,url,options={}){return jsiiDeprecationWarnings.aws_cdk_lib_aws_ec2_InitSourceOptions(options),new class extends InitSource{_doBind(){return{config:{[this.targetDirectory]:url}}}}(targetDirectory,options.serviceRestartHandles)}static fromGitHub(targetDirectory,owner,repo,refSpec,options={}){return jsiiDeprecationWarnings.aws_cdk_lib_aws_ec2_InitSourceOptions(options),InitSource.fromUrl(targetDirectory,`https://github.com/${owner}/${repo}/tarball/${refSpec!=null?refSpec:"master"}`,options)}static fromS3Object(targetDirectory,bucket,key,options={}){return jsiiDeprecationWarnings.aws_cdk_lib_aws_s3_IBucket(bucket),jsiiDeprecationWarnings.aws_cdk_lib_aws_ec2_InitSourceOptions(options),new class extends InitSource{_doBind(bindOptions){return bucket.grantRead(bindOptions.instanceRole,key),{config:{[this.targetDirectory]:bucket.urlForObject(key)},authentication:standardS3Auth(bindOptions.instanceRole,bucket.bucketName)}}}(targetDirectory,options.serviceRestartHandles)}static fromAsset(targetDirectory,path,options={}){return jsiiDeprecationWarnings.aws_cdk_lib_aws_ec2_InitSourceAssetOptions(options),new class extends InitSource{_doBind(bindOptions){const asset=new s3_assets.Asset(bindOptions.scope,`${targetDirectory}Asset`,{path,...bindOptions});return asset.grantRead(bindOptions.instanceRole),{config:{[this.targetDirectory]:asset.httpUrl},authentication:standardS3Auth(bindOptions.instanceRole,asset.s3BucketName),assetHash:asset.assetHash}}}(targetDirectory,options.serviceRestartHandles)}static fromExistingAsset(targetDirectory,asset,options={}){return jsiiDeprecationWarnings.aws_cdk_lib_aws_s3_assets_Asset(asset),jsiiDeprecationWarnings.aws_cdk_lib_aws_ec2_InitSourceOptions(options),new class extends InitSource{_doBind(bindOptions){return asset.grantRead(bindOptions.instanceRole),{config:{[this.targetDirectory]:asset.httpUrl},authentication:standardS3Auth(bindOptions.instanceRole,asset.s3BucketName),assetHash:asset.assetHash}}}(targetDirectory,options.serviceRestartHandles)}_bind(options){var _l;for(const handle of(_l=this.serviceHandles)!==null&&_l!==void 0?_l:[])handle._addSource(this.targetDirectory);return this._doBind(options)}}exports.InitSource=InitSource,_k=JSII_RTTI_SYMBOL_1,InitSource[_k]={fqn:"aws-cdk-lib.aws_ec2.InitSource",version:"2.20.0"};function standardS3Auth(role,bucketName){return{S3AccessCreds:{type:"S3",roleName:role.roleName,buckets:[bucketName]}}}
//# sourceMappingURL=cfn-init-elements.js.map
