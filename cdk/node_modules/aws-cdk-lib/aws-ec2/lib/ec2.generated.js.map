{
  "version": 3,
  "sources": ["ec2.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-04-07T10:43:32.641Z\",\"fingerprint\":\"VhYcUHTvqe4dGEXlzWTjuDqSC574ZEUJTFci8B3SVWk=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n/**\n * Properties for defining a `CfnCapacityReservation`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html\n */\nexport interface CfnCapacityReservationProps {\n\n    /**\n     * The Availability Zone in which to create the Capacity Reservation.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-availabilityzone\n     */\n    readonly availabilityZone: string;\n\n    /**\n     * The number of instances for which to reserve capacity.\n     *\n     * Valid range: 1 - 1000\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancecount\n     */\n    readonly instanceCount: number;\n\n    /**\n     * The type of operating system for which to reserve capacity.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instanceplatform\n     */\n    readonly instancePlatform: string;\n\n    /**\n     * The instance type for which to reserve capacity. For more information, see [Instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the *Amazon EC2 User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancetype\n     */\n    readonly instanceType: string;\n\n    /**\n     * Indicates whether the Capacity Reservation supports EBS-optimized instances. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS- optimized instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-ebsoptimized\n     */\n    readonly ebsOptimized?: boolean | cdk.IResolvable;\n\n    /**\n     * The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. The Capacity Reservation's state changes to `expired` when it reaches its end date and time.\n     *\n     * You must provide an `EndDate` value if `EndDateType` is `limited` . Omit `EndDate` if `EndDateType` is `unlimited` .\n     *\n     * If the `EndDateType` is `limited` , the Capacity Reservation is cancelled within an hour from the specified time. For example, if you specify 5/31/2019, 13:30:55, the Capacity Reservation is guaranteed to end between 13:30:55 and 14:30:55 on 5/31/2019.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-enddate\n     */\n    readonly endDate?: string;\n\n    /**\n     * Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end types:\n     *\n     * - `unlimited` - The Capacity Reservation remains active until you explicitly cancel it. Do not provide an `EndDate` if the `EndDateType` is `unlimited` .\n     * - `limited` - The Capacity Reservation expires automatically at a specified date and time. You must provide an `EndDate` value if the `EndDateType` value is `limited` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-enddatetype\n     */\n    readonly endDateType?: string;\n\n    /**\n     * Indicates whether the Capacity Reservation supports instances with temporary, block-level storage.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-ephemeralstorage\n     */\n    readonly ephemeralStorage?: boolean | cdk.IResolvable;\n\n    /**\n     * Indicates the type of instance launches that the Capacity Reservation accepts. The options include:\n     *\n     * - `open` - The Capacity Reservation automatically matches all instances that have matching attributes (instance type, platform, and Availability Zone). Instances that have matching attributes run in the Capacity Reservation automatically without specifying any additional parameters.\n     * - `targeted` - The Capacity Reservation only accepts instances that have matching attributes (instance type, platform, and Availability Zone), and explicitly target the Capacity Reservation. This ensures that only permitted instances can use the reserved capacity.\n     *\n     * Default: `open`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancematchcriteria\n     */\n    readonly instanceMatchCriteria?: string;\n\n    /**\n     * The Amazon Resource Name (ARN) of the Outpost on which to create the Capacity Reservation.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-outpostarn\n     */\n    readonly outPostArn?: string;\n\n    /**\n     * The Amazon Resource Name (ARN) of the cluster placement group in which to create the Capacity Reservation. For more information, see [Capacity Reservations for cluster placement groups](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/cr-cpg.html) in the *Amazon EC2 User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-placementgrouparn\n     */\n    readonly placementGroupArn?: string;\n\n    /**\n     * The tags to apply to the Capacity Reservation during launch.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-tagspecifications\n     */\n    readonly tagSpecifications?: Array<CfnCapacityReservation.TagSpecificationProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * Indicates the tenancy of the Capacity Reservation. A Capacity Reservation can have one of the following tenancy settings:\n     *\n     * - `default` - The Capacity Reservation is created on hardware that is shared with other AWS accounts .\n     * - `dedicated` - The Capacity Reservation is created on single-tenant hardware that is dedicated to a single AWS account .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-tenancy\n     */\n    readonly tenancy?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnCapacityReservationProps`\n *\n * @param properties - the TypeScript properties of a `CfnCapacityReservationProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnCapacityReservationPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('availabilityZone', cdk.requiredValidator)(properties.availabilityZone));\n    errors.collect(cdk.propertyValidator('availabilityZone', cdk.validateString)(properties.availabilityZone));\n    errors.collect(cdk.propertyValidator('ebsOptimized', cdk.validateBoolean)(properties.ebsOptimized));\n    errors.collect(cdk.propertyValidator('endDate', cdk.validateString)(properties.endDate));\n    errors.collect(cdk.propertyValidator('endDateType', cdk.validateString)(properties.endDateType));\n    errors.collect(cdk.propertyValidator('ephemeralStorage', cdk.validateBoolean)(properties.ephemeralStorage));\n    errors.collect(cdk.propertyValidator('instanceCount', cdk.requiredValidator)(properties.instanceCount));\n    errors.collect(cdk.propertyValidator('instanceCount', cdk.validateNumber)(properties.instanceCount));\n    errors.collect(cdk.propertyValidator('instanceMatchCriteria', cdk.validateString)(properties.instanceMatchCriteria));\n    errors.collect(cdk.propertyValidator('instancePlatform', cdk.requiredValidator)(properties.instancePlatform));\n    errors.collect(cdk.propertyValidator('instancePlatform', cdk.validateString)(properties.instancePlatform));\n    errors.collect(cdk.propertyValidator('instanceType', cdk.requiredValidator)(properties.instanceType));\n    errors.collect(cdk.propertyValidator('instanceType', cdk.validateString)(properties.instanceType));\n    errors.collect(cdk.propertyValidator('outPostArn', cdk.validateString)(properties.outPostArn));\n    errors.collect(cdk.propertyValidator('placementGroupArn', cdk.validateString)(properties.placementGroupArn));\n    errors.collect(cdk.propertyValidator('tagSpecifications', cdk.listValidator(CfnCapacityReservation_TagSpecificationPropertyValidator))(properties.tagSpecifications));\n    errors.collect(cdk.propertyValidator('tenancy', cdk.validateString)(properties.tenancy));\n    return errors.wrap('supplied properties not correct for \"CfnCapacityReservationProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::CapacityReservation` resource\n *\n * @param properties - the TypeScript properties of a `CfnCapacityReservationProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::CapacityReservation` resource.\n */\n// @ts-ignore TS6133\nfunction cfnCapacityReservationPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnCapacityReservationPropsValidator(properties).assertSuccess();\n    return {\n        AvailabilityZone: cdk.stringToCloudFormation(properties.availabilityZone),\n        InstanceCount: cdk.numberToCloudFormation(properties.instanceCount),\n        InstancePlatform: cdk.stringToCloudFormation(properties.instancePlatform),\n        InstanceType: cdk.stringToCloudFormation(properties.instanceType),\n        EbsOptimized: cdk.booleanToCloudFormation(properties.ebsOptimized),\n        EndDate: cdk.stringToCloudFormation(properties.endDate),\n        EndDateType: cdk.stringToCloudFormation(properties.endDateType),\n        EphemeralStorage: cdk.booleanToCloudFormation(properties.ephemeralStorage),\n        InstanceMatchCriteria: cdk.stringToCloudFormation(properties.instanceMatchCriteria),\n        OutPostArn: cdk.stringToCloudFormation(properties.outPostArn),\n        PlacementGroupArn: cdk.stringToCloudFormation(properties.placementGroupArn),\n        TagSpecifications: cdk.listMapper(cfnCapacityReservationTagSpecificationPropertyToCloudFormation)(properties.tagSpecifications),\n        Tenancy: cdk.stringToCloudFormation(properties.tenancy),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnCapacityReservationPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnCapacityReservationProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnCapacityReservationProps>();\n    ret.addPropertyResult('availabilityZone', 'AvailabilityZone', cfn_parse.FromCloudFormation.getString(properties.AvailabilityZone));\n    ret.addPropertyResult('instanceCount', 'InstanceCount', cfn_parse.FromCloudFormation.getNumber(properties.InstanceCount));\n    ret.addPropertyResult('instancePlatform', 'InstancePlatform', cfn_parse.FromCloudFormation.getString(properties.InstancePlatform));\n    ret.addPropertyResult('instanceType', 'InstanceType', cfn_parse.FromCloudFormation.getString(properties.InstanceType));\n    ret.addPropertyResult('ebsOptimized', 'EbsOptimized', properties.EbsOptimized != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EbsOptimized) : undefined);\n    ret.addPropertyResult('endDate', 'EndDate', properties.EndDate != null ? cfn_parse.FromCloudFormation.getString(properties.EndDate) : undefined);\n    ret.addPropertyResult('endDateType', 'EndDateType', properties.EndDateType != null ? cfn_parse.FromCloudFormation.getString(properties.EndDateType) : undefined);\n    ret.addPropertyResult('ephemeralStorage', 'EphemeralStorage', properties.EphemeralStorage != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EphemeralStorage) : undefined);\n    ret.addPropertyResult('instanceMatchCriteria', 'InstanceMatchCriteria', properties.InstanceMatchCriteria != null ? cfn_parse.FromCloudFormation.getString(properties.InstanceMatchCriteria) : undefined);\n    ret.addPropertyResult('outPostArn', 'OutPostArn', properties.OutPostArn != null ? cfn_parse.FromCloudFormation.getString(properties.OutPostArn) : undefined);\n    ret.addPropertyResult('placementGroupArn', 'PlacementGroupArn', properties.PlacementGroupArn != null ? cfn_parse.FromCloudFormation.getString(properties.PlacementGroupArn) : undefined);\n    ret.addPropertyResult('tagSpecifications', 'TagSpecifications', properties.TagSpecifications != null ? cfn_parse.FromCloudFormation.getArray(CfnCapacityReservationTagSpecificationPropertyFromCloudFormation)(properties.TagSpecifications) : undefined);\n    ret.addPropertyResult('tenancy', 'Tenancy', properties.Tenancy != null ? cfn_parse.FromCloudFormation.getString(properties.Tenancy) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::CapacityReservation`\n *\n * Creates a new Capacity Reservation with the specified attributes. For more information, see [Capacity Reservations](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-capacity-reservations.html) in the *Amazon EC2 User Guide* .\n *\n * @cloudformationResource AWS::EC2::CapacityReservation\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html\n */\nexport class CfnCapacityReservation extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::CapacityReservation\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnCapacityReservation {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnCapacityReservationPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnCapacityReservation(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * Returns the Availability Zone in which the capacity is reserved. For example: `us-east-1a` .\n     * @cloudformationAttribute AvailabilityZone\n     */\n    public readonly attrAvailabilityZone: string;\n\n    /**\n     * Returns the remaining capacity, which indicates the number of instances that can be launched in the Capacity Reservation. For example: `9` .\n     * @cloudformationAttribute AvailableInstanceCount\n     */\n    public readonly attrAvailableInstanceCount: number;\n\n    /**\n     * Returns the type of instance for which the capacity is reserved. For example: `m4.large` .\n     * @cloudformationAttribute InstanceType\n     */\n    public readonly attrInstanceType: string;\n\n    /**\n     * Returns the tenancy of the Capacity Reservation. For example: `dedicated` .\n     * @cloudformationAttribute Tenancy\n     */\n    public readonly attrTenancy: string;\n\n    /**\n     * Returns the total number of instances for which the Capacity Reservation reserves capacity. For example: `15` .\n     * @cloudformationAttribute TotalInstanceCount\n     */\n    public readonly attrTotalInstanceCount: number;\n\n    /**\n     * The Availability Zone in which to create the Capacity Reservation.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-availabilityzone\n     */\n    public availabilityZone: string;\n\n    /**\n     * The number of instances for which to reserve capacity.\n     *\n     * Valid range: 1 - 1000\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancecount\n     */\n    public instanceCount: number;\n\n    /**\n     * The type of operating system for which to reserve capacity.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instanceplatform\n     */\n    public instancePlatform: string;\n\n    /**\n     * The instance type for which to reserve capacity. For more information, see [Instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the *Amazon EC2 User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancetype\n     */\n    public instanceType: string;\n\n    /**\n     * Indicates whether the Capacity Reservation supports EBS-optimized instances. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS- optimized instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-ebsoptimized\n     */\n    public ebsOptimized: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. The Capacity Reservation's state changes to `expired` when it reaches its end date and time.\n     *\n     * You must provide an `EndDate` value if `EndDateType` is `limited` . Omit `EndDate` if `EndDateType` is `unlimited` .\n     *\n     * If the `EndDateType` is `limited` , the Capacity Reservation is cancelled within an hour from the specified time. For example, if you specify 5/31/2019, 13:30:55, the Capacity Reservation is guaranteed to end between 13:30:55 and 14:30:55 on 5/31/2019.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-enddate\n     */\n    public endDate: string | undefined;\n\n    /**\n     * Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end types:\n     *\n     * - `unlimited` - The Capacity Reservation remains active until you explicitly cancel it. Do not provide an `EndDate` if the `EndDateType` is `unlimited` .\n     * - `limited` - The Capacity Reservation expires automatically at a specified date and time. You must provide an `EndDate` value if the `EndDateType` value is `limited` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-enddatetype\n     */\n    public endDateType: string | undefined;\n\n    /**\n     * Indicates whether the Capacity Reservation supports instances with temporary, block-level storage.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-ephemeralstorage\n     */\n    public ephemeralStorage: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * Indicates the type of instance launches that the Capacity Reservation accepts. The options include:\n     *\n     * - `open` - The Capacity Reservation automatically matches all instances that have matching attributes (instance type, platform, and Availability Zone). Instances that have matching attributes run in the Capacity Reservation automatically without specifying any additional parameters.\n     * - `targeted` - The Capacity Reservation only accepts instances that have matching attributes (instance type, platform, and Availability Zone), and explicitly target the Capacity Reservation. This ensures that only permitted instances can use the reserved capacity.\n     *\n     * Default: `open`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancematchcriteria\n     */\n    public instanceMatchCriteria: string | undefined;\n\n    /**\n     * The Amazon Resource Name (ARN) of the Outpost on which to create the Capacity Reservation.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-outpostarn\n     */\n    public outPostArn: string | undefined;\n\n    /**\n     * The Amazon Resource Name (ARN) of the cluster placement group in which to create the Capacity Reservation. For more information, see [Capacity Reservations for cluster placement groups](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/cr-cpg.html) in the *Amazon EC2 User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-placementgrouparn\n     */\n    public placementGroupArn: string | undefined;\n\n    /**\n     * The tags to apply to the Capacity Reservation during launch.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-tagspecifications\n     */\n    public tagSpecifications: Array<CfnCapacityReservation.TagSpecificationProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n    /**\n     * Indicates the tenancy of the Capacity Reservation. A Capacity Reservation can have one of the following tenancy settings:\n     *\n     * - `default` - The Capacity Reservation is created on hardware that is shared with other AWS accounts .\n     * - `dedicated` - The Capacity Reservation is created on single-tenant hardware that is dedicated to a single AWS account .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-tenancy\n     */\n    public tenancy: string | undefined;\n\n    /**\n     * Create a new `AWS::EC2::CapacityReservation`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnCapacityReservationProps) {\n        super(scope, id, { type: CfnCapacityReservation.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'availabilityZone', this);\n        cdk.requireProperty(props, 'instanceCount', this);\n        cdk.requireProperty(props, 'instancePlatform', this);\n        cdk.requireProperty(props, 'instanceType', this);\n        this.attrAvailabilityZone = cdk.Token.asString(this.getAtt('AvailabilityZone'));\n        this.attrAvailableInstanceCount = cdk.Token.asNumber(this.getAtt('AvailableInstanceCount'));\n        this.attrInstanceType = cdk.Token.asString(this.getAtt('InstanceType'));\n        this.attrTenancy = cdk.Token.asString(this.getAtt('Tenancy'));\n        this.attrTotalInstanceCount = cdk.Token.asNumber(this.getAtt('TotalInstanceCount'));\n\n        this.availabilityZone = props.availabilityZone;\n        this.instanceCount = props.instanceCount;\n        this.instancePlatform = props.instancePlatform;\n        this.instanceType = props.instanceType;\n        this.ebsOptimized = props.ebsOptimized;\n        this.endDate = props.endDate;\n        this.endDateType = props.endDateType;\n        this.ephemeralStorage = props.ephemeralStorage;\n        this.instanceMatchCriteria = props.instanceMatchCriteria;\n        this.outPostArn = props.outPostArn;\n        this.placementGroupArn = props.placementGroupArn;\n        this.tagSpecifications = props.tagSpecifications;\n        this.tenancy = props.tenancy;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnCapacityReservation.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            availabilityZone: this.availabilityZone,\n            instanceCount: this.instanceCount,\n            instancePlatform: this.instancePlatform,\n            instanceType: this.instanceType,\n            ebsOptimized: this.ebsOptimized,\n            endDate: this.endDate,\n            endDateType: this.endDateType,\n            ephemeralStorage: this.ephemeralStorage,\n            instanceMatchCriteria: this.instanceMatchCriteria,\n            outPostArn: this.outPostArn,\n            placementGroupArn: this.placementGroupArn,\n            tagSpecifications: this.tagSpecifications,\n            tenancy: this.tenancy,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnCapacityReservationPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnCapacityReservation {\n    /**\n     * An array of key-value pairs to apply to this resource.\n     *\n     * For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservation-tagspecification.html\n     */\n    export interface TagSpecificationProperty {\n        /**\n         * The type of resource to tag. Specify `capacity-reservation` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservation-tagspecification.html#cfn-ec2-capacityreservation-tagspecification-resourcetype\n         */\n        readonly resourceType?: string;\n        /**\n         * The tags to apply to the resource.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservation-tagspecification.html#cfn-ec2-capacityreservation-tagspecification-tags\n         */\n        readonly tags?: cdk.CfnTag[];\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `TagSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `TagSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnCapacityReservation_TagSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('resourceType', cdk.validateString)(properties.resourceType));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"TagSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::CapacityReservation.TagSpecification` resource\n *\n * @param properties - the TypeScript properties of a `TagSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::CapacityReservation.TagSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnCapacityReservationTagSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnCapacityReservation_TagSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        ResourceType: cdk.stringToCloudFormation(properties.resourceType),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnCapacityReservationTagSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnCapacityReservation.TagSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnCapacityReservation.TagSpecificationProperty>();\n    ret.addPropertyResult('resourceType', 'ResourceType', properties.ResourceType != null ? cfn_parse.FromCloudFormation.getString(properties.ResourceType) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnCapacityReservationFleet`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html\n */\nexport interface CfnCapacityReservationFleetProps {\n\n    /**\n     * The strategy used by the Capacity Reservation Fleet to determine which of the specified instance types to use. Currently, only the `prioritized` allocation strategy is supported. For more information, see [Allocation strategy](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/crfleet-concepts.html#allocation-strategy) in the Amazon EC2 User Guide.\n     *\n     * Valid values: `prioritized`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-allocationstrategy\n     */\n    readonly allocationStrategy?: string;\n\n    /**\n     * The date and time at which the Capacity Reservation Fleet expires. When the Capacity Reservation Fleet expires, its state changes to `expired` and all of the Capacity Reservations in the Fleet expire.\n     *\n     * The Capacity Reservation Fleet expires within an hour after the specified time. For example, if you specify `5/31/2019` , `13:30:55` , the Capacity Reservation Fleet is guaranteed to expire between `13:30:55` and `14:30:55` on `5/31/2019` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-enddate\n     */\n    readonly endDate?: string;\n\n    /**\n     * Indicates the type of instance launches that the Capacity Reservation Fleet accepts. All Capacity Reservations in the Fleet inherit this instance matching criteria.\n     *\n     * Currently, Capacity Reservation Fleets support `open` instance matching criteria only. This means that instances that have matching attributes (instance type, platform, and Availability Zone) run in the Capacity Reservations automatically. Instances do not need to explicitly target a Capacity Reservation Fleet to use its reserved capacity.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-instancematchcriteria\n     */\n    readonly instanceMatchCriteria?: string;\n\n    /**\n     * Information about the instance types for which to reserve the capacity.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-instancetypespecifications\n     */\n    readonly instanceTypeSpecifications?: Array<CfnCapacityReservationFleet.InstanceTypeSpecificationProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * `AWS::EC2::CapacityReservationFleet.NoRemoveEndDate`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-noremoveenddate\n     */\n    readonly noRemoveEndDate?: boolean | cdk.IResolvable;\n\n    /**\n     * `AWS::EC2::CapacityReservationFleet.RemoveEndDate`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-removeenddate\n     */\n    readonly removeEndDate?: boolean | cdk.IResolvable;\n\n    /**\n     * The tags to assign to the Capacity Reservation Fleet. The tags are automatically assigned to the Capacity Reservations in the Fleet.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-tagspecifications\n     */\n    readonly tagSpecifications?: Array<CfnCapacityReservationFleet.TagSpecificationProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * Indicates the tenancy of the Capacity Reservation Fleet. All Capacity Reservations in the Fleet inherit this tenancy. The Capacity Reservation Fleet can have one of the following tenancy settings:\n     *\n     * - `default` - The Capacity Reservation Fleet is created on hardware that is shared with other AWS accounts .\n     * - `dedicated` - The Capacity Reservations are created on single-tenant hardware that is dedicated to a single AWS account .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-tenancy\n     */\n    readonly tenancy?: string;\n\n    /**\n     * The total number of capacity units to be reserved by the Capacity Reservation Fleet. This value, together with the instance type weights that you assign to each instance type used by the Fleet determine the number of instances for which the Fleet reserves capacity. Both values are based on units that make sense for your workload. For more information, see [Total target capacity](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/crfleet-concepts.html#target-capacity) in the Amazon EC2 User Guide.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-totaltargetcapacity\n     */\n    readonly totalTargetCapacity?: number;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnCapacityReservationFleetProps`\n *\n * @param properties - the TypeScript properties of a `CfnCapacityReservationFleetProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnCapacityReservationFleetPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('allocationStrategy', cdk.validateString)(properties.allocationStrategy));\n    errors.collect(cdk.propertyValidator('endDate', cdk.validateString)(properties.endDate));\n    errors.collect(cdk.propertyValidator('instanceMatchCriteria', cdk.validateString)(properties.instanceMatchCriteria));\n    errors.collect(cdk.propertyValidator('instanceTypeSpecifications', cdk.listValidator(CfnCapacityReservationFleet_InstanceTypeSpecificationPropertyValidator))(properties.instanceTypeSpecifications));\n    errors.collect(cdk.propertyValidator('noRemoveEndDate', cdk.validateBoolean)(properties.noRemoveEndDate));\n    errors.collect(cdk.propertyValidator('removeEndDate', cdk.validateBoolean)(properties.removeEndDate));\n    errors.collect(cdk.propertyValidator('tagSpecifications', cdk.listValidator(CfnCapacityReservationFleet_TagSpecificationPropertyValidator))(properties.tagSpecifications));\n    errors.collect(cdk.propertyValidator('tenancy', cdk.validateString)(properties.tenancy));\n    errors.collect(cdk.propertyValidator('totalTargetCapacity', cdk.validateNumber)(properties.totalTargetCapacity));\n    return errors.wrap('supplied properties not correct for \"CfnCapacityReservationFleetProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::CapacityReservationFleet` resource\n *\n * @param properties - the TypeScript properties of a `CfnCapacityReservationFleetProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::CapacityReservationFleet` resource.\n */\n// @ts-ignore TS6133\nfunction cfnCapacityReservationFleetPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnCapacityReservationFleetPropsValidator(properties).assertSuccess();\n    return {\n        AllocationStrategy: cdk.stringToCloudFormation(properties.allocationStrategy),\n        EndDate: cdk.stringToCloudFormation(properties.endDate),\n        InstanceMatchCriteria: cdk.stringToCloudFormation(properties.instanceMatchCriteria),\n        InstanceTypeSpecifications: cdk.listMapper(cfnCapacityReservationFleetInstanceTypeSpecificationPropertyToCloudFormation)(properties.instanceTypeSpecifications),\n        NoRemoveEndDate: cdk.booleanToCloudFormation(properties.noRemoveEndDate),\n        RemoveEndDate: cdk.booleanToCloudFormation(properties.removeEndDate),\n        TagSpecifications: cdk.listMapper(cfnCapacityReservationFleetTagSpecificationPropertyToCloudFormation)(properties.tagSpecifications),\n        Tenancy: cdk.stringToCloudFormation(properties.tenancy),\n        TotalTargetCapacity: cdk.numberToCloudFormation(properties.totalTargetCapacity),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnCapacityReservationFleetPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnCapacityReservationFleetProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnCapacityReservationFleetProps>();\n    ret.addPropertyResult('allocationStrategy', 'AllocationStrategy', properties.AllocationStrategy != null ? cfn_parse.FromCloudFormation.getString(properties.AllocationStrategy) : undefined);\n    ret.addPropertyResult('endDate', 'EndDate', properties.EndDate != null ? cfn_parse.FromCloudFormation.getString(properties.EndDate) : undefined);\n    ret.addPropertyResult('instanceMatchCriteria', 'InstanceMatchCriteria', properties.InstanceMatchCriteria != null ? cfn_parse.FromCloudFormation.getString(properties.InstanceMatchCriteria) : undefined);\n    ret.addPropertyResult('instanceTypeSpecifications', 'InstanceTypeSpecifications', properties.InstanceTypeSpecifications != null ? cfn_parse.FromCloudFormation.getArray(CfnCapacityReservationFleetInstanceTypeSpecificationPropertyFromCloudFormation)(properties.InstanceTypeSpecifications) : undefined);\n    ret.addPropertyResult('noRemoveEndDate', 'NoRemoveEndDate', properties.NoRemoveEndDate != null ? cfn_parse.FromCloudFormation.getBoolean(properties.NoRemoveEndDate) : undefined);\n    ret.addPropertyResult('removeEndDate', 'RemoveEndDate', properties.RemoveEndDate != null ? cfn_parse.FromCloudFormation.getBoolean(properties.RemoveEndDate) : undefined);\n    ret.addPropertyResult('tagSpecifications', 'TagSpecifications', properties.TagSpecifications != null ? cfn_parse.FromCloudFormation.getArray(CfnCapacityReservationFleetTagSpecificationPropertyFromCloudFormation)(properties.TagSpecifications) : undefined);\n    ret.addPropertyResult('tenancy', 'Tenancy', properties.Tenancy != null ? cfn_parse.FromCloudFormation.getString(properties.Tenancy) : undefined);\n    ret.addPropertyResult('totalTargetCapacity', 'TotalTargetCapacity', properties.TotalTargetCapacity != null ? cfn_parse.FromCloudFormation.getNumber(properties.TotalTargetCapacity) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::CapacityReservationFleet`\n *\n * Creates a new Capacity Reservation Fleet with the specified attributes. For more information, see [Capacity Reservation Fleets](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/cr-fleets.html) in the *Amazon EC2 User Guide* .\n *\n * @cloudformationResource AWS::EC2::CapacityReservationFleet\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html\n */\nexport class CfnCapacityReservationFleet extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::CapacityReservationFleet\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnCapacityReservationFleet {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnCapacityReservationFleetPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnCapacityReservationFleet(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the Capacity Reservation Fleet.\n     * @cloudformationAttribute CapacityReservationFleetId\n     */\n    public readonly attrCapacityReservationFleetId: string;\n\n    /**\n     * The strategy used by the Capacity Reservation Fleet to determine which of the specified instance types to use. Currently, only the `prioritized` allocation strategy is supported. For more information, see [Allocation strategy](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/crfleet-concepts.html#allocation-strategy) in the Amazon EC2 User Guide.\n     *\n     * Valid values: `prioritized`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-allocationstrategy\n     */\n    public allocationStrategy: string | undefined;\n\n    /**\n     * The date and time at which the Capacity Reservation Fleet expires. When the Capacity Reservation Fleet expires, its state changes to `expired` and all of the Capacity Reservations in the Fleet expire.\n     *\n     * The Capacity Reservation Fleet expires within an hour after the specified time. For example, if you specify `5/31/2019` , `13:30:55` , the Capacity Reservation Fleet is guaranteed to expire between `13:30:55` and `14:30:55` on `5/31/2019` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-enddate\n     */\n    public endDate: string | undefined;\n\n    /**\n     * Indicates the type of instance launches that the Capacity Reservation Fleet accepts. All Capacity Reservations in the Fleet inherit this instance matching criteria.\n     *\n     * Currently, Capacity Reservation Fleets support `open` instance matching criteria only. This means that instances that have matching attributes (instance type, platform, and Availability Zone) run in the Capacity Reservations automatically. Instances do not need to explicitly target a Capacity Reservation Fleet to use its reserved capacity.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-instancematchcriteria\n     */\n    public instanceMatchCriteria: string | undefined;\n\n    /**\n     * Information about the instance types for which to reserve the capacity.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-instancetypespecifications\n     */\n    public instanceTypeSpecifications: Array<CfnCapacityReservationFleet.InstanceTypeSpecificationProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::EC2::CapacityReservationFleet.NoRemoveEndDate`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-noremoveenddate\n     */\n    public noRemoveEndDate: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::EC2::CapacityReservationFleet.RemoveEndDate`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-removeenddate\n     */\n    public removeEndDate: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * The tags to assign to the Capacity Reservation Fleet. The tags are automatically assigned to the Capacity Reservations in the Fleet.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-tagspecifications\n     */\n    public tagSpecifications: Array<CfnCapacityReservationFleet.TagSpecificationProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n    /**\n     * Indicates the tenancy of the Capacity Reservation Fleet. All Capacity Reservations in the Fleet inherit this tenancy. The Capacity Reservation Fleet can have one of the following tenancy settings:\n     *\n     * - `default` - The Capacity Reservation Fleet is created on hardware that is shared with other AWS accounts .\n     * - `dedicated` - The Capacity Reservations are created on single-tenant hardware that is dedicated to a single AWS account .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-tenancy\n     */\n    public tenancy: string | undefined;\n\n    /**\n     * The total number of capacity units to be reserved by the Capacity Reservation Fleet. This value, together with the instance type weights that you assign to each instance type used by the Fleet determine the number of instances for which the Fleet reserves capacity. Both values are based on units that make sense for your workload. For more information, see [Total target capacity](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/crfleet-concepts.html#target-capacity) in the Amazon EC2 User Guide.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-totaltargetcapacity\n     */\n    public totalTargetCapacity: number | undefined;\n\n    /**\n     * Create a new `AWS::EC2::CapacityReservationFleet`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnCapacityReservationFleetProps = {}) {\n        super(scope, id, { type: CfnCapacityReservationFleet.CFN_RESOURCE_TYPE_NAME, properties: props });\n        this.attrCapacityReservationFleetId = cdk.Token.asString(this.getAtt('CapacityReservationFleetId'));\n\n        this.allocationStrategy = props.allocationStrategy;\n        this.endDate = props.endDate;\n        this.instanceMatchCriteria = props.instanceMatchCriteria;\n        this.instanceTypeSpecifications = props.instanceTypeSpecifications;\n        this.noRemoveEndDate = props.noRemoveEndDate;\n        this.removeEndDate = props.removeEndDate;\n        this.tagSpecifications = props.tagSpecifications;\n        this.tenancy = props.tenancy;\n        this.totalTargetCapacity = props.totalTargetCapacity;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnCapacityReservationFleet.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            allocationStrategy: this.allocationStrategy,\n            endDate: this.endDate,\n            instanceMatchCriteria: this.instanceMatchCriteria,\n            instanceTypeSpecifications: this.instanceTypeSpecifications,\n            noRemoveEndDate: this.noRemoveEndDate,\n            removeEndDate: this.removeEndDate,\n            tagSpecifications: this.tagSpecifications,\n            tenancy: this.tenancy,\n            totalTargetCapacity: this.totalTargetCapacity,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnCapacityReservationFleetPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnCapacityReservationFleet {\n    /**\n     * Specifies information about an instance type to use in a Capacity Reservation Fleet.\n     *\n     * `InstanceTypeSpecification` is a property of the [AWS::EC2::CapacityReservationFleet](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html) resource.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-instancetypespecification.html\n     */\n    export interface InstanceTypeSpecificationProperty {\n        /**\n         * The Availability Zone in which the Capacity Reservation Fleet reserves the capacity. A Capacity Reservation Fleet can't span Availability Zones. All instance type specifications that you specify for the Fleet must use the same Availability Zone.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-instancetypespecification.html#cfn-ec2-capacityreservationfleet-instancetypespecification-availabilityzone\n         */\n        readonly availabilityZone?: string;\n        /**\n         * The ID of the Availability Zone in which the Capacity Reservation Fleet reserves the capacity. A Capacity Reservation Fleet can't span Availability Zones. All instance type specifications that you specify for the Fleet must use the same Availability Zone.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-instancetypespecification.html#cfn-ec2-capacityreservationfleet-instancetypespecification-availabilityzoneid\n         */\n        readonly availabilityZoneId?: string;\n        /**\n         * Indicates whether the Capacity Reservation Fleet supports EBS-optimized instances types. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using EBS-optimized instance types.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-instancetypespecification.html#cfn-ec2-capacityreservationfleet-instancetypespecification-ebsoptimized\n         */\n        readonly ebsOptimized?: boolean | cdk.IResolvable;\n        /**\n         * The type of operating system for which the Capacity Reservation Fleet reserves capacity.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-instancetypespecification.html#cfn-ec2-capacityreservationfleet-instancetypespecification-instanceplatform\n         */\n        readonly instancePlatform?: string;\n        /**\n         * The instance type for which the Capacity Reservation Fleet reserves capacity.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-instancetypespecification.html#cfn-ec2-capacityreservationfleet-instancetypespecification-instancetype\n         */\n        readonly instanceType?: string;\n        /**\n         * The priority to assign to the instance type. This value is used to determine which of the instance types specified for the Fleet should be prioritized for use. A lower value indicates a high priority. For more information, see [Instance type priority](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/crfleet-concepts.html#instance-priority) in the Amazon EC2 User Guide.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-instancetypespecification.html#cfn-ec2-capacityreservationfleet-instancetypespecification-priority\n         */\n        readonly priority?: number;\n        /**\n         * The number of capacity units provided by the specified instance type. This value, together with the total target capacity that you specify for the Fleet determine the number of instances for which the Fleet reserves capacity. Both values are based on units that make sense for your workload. For more information, see [Total target capacity](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/crfleet-concepts.html#target-capacity) in the Amazon EC2 User Guide.\n         *\n         * Valid Range: Minimum value of `0.001` . Maximum value of `99.999` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-instancetypespecification.html#cfn-ec2-capacityreservationfleet-instancetypespecification-weight\n         */\n        readonly weight?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `InstanceTypeSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `InstanceTypeSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnCapacityReservationFleet_InstanceTypeSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('availabilityZone', cdk.validateString)(properties.availabilityZone));\n    errors.collect(cdk.propertyValidator('availabilityZoneId', cdk.validateString)(properties.availabilityZoneId));\n    errors.collect(cdk.propertyValidator('ebsOptimized', cdk.validateBoolean)(properties.ebsOptimized));\n    errors.collect(cdk.propertyValidator('instancePlatform', cdk.validateString)(properties.instancePlatform));\n    errors.collect(cdk.propertyValidator('instanceType', cdk.validateString)(properties.instanceType));\n    errors.collect(cdk.propertyValidator('priority', cdk.validateNumber)(properties.priority));\n    errors.collect(cdk.propertyValidator('weight', cdk.validateNumber)(properties.weight));\n    return errors.wrap('supplied properties not correct for \"InstanceTypeSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::CapacityReservationFleet.InstanceTypeSpecification` resource\n *\n * @param properties - the TypeScript properties of a `InstanceTypeSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::CapacityReservationFleet.InstanceTypeSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnCapacityReservationFleetInstanceTypeSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnCapacityReservationFleet_InstanceTypeSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        AvailabilityZone: cdk.stringToCloudFormation(properties.availabilityZone),\n        AvailabilityZoneId: cdk.stringToCloudFormation(properties.availabilityZoneId),\n        EbsOptimized: cdk.booleanToCloudFormation(properties.ebsOptimized),\n        InstancePlatform: cdk.stringToCloudFormation(properties.instancePlatform),\n        InstanceType: cdk.stringToCloudFormation(properties.instanceType),\n        Priority: cdk.numberToCloudFormation(properties.priority),\n        Weight: cdk.numberToCloudFormation(properties.weight),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnCapacityReservationFleetInstanceTypeSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnCapacityReservationFleet.InstanceTypeSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnCapacityReservationFleet.InstanceTypeSpecificationProperty>();\n    ret.addPropertyResult('availabilityZone', 'AvailabilityZone', properties.AvailabilityZone != null ? cfn_parse.FromCloudFormation.getString(properties.AvailabilityZone) : undefined);\n    ret.addPropertyResult('availabilityZoneId', 'AvailabilityZoneId', properties.AvailabilityZoneId != null ? cfn_parse.FromCloudFormation.getString(properties.AvailabilityZoneId) : undefined);\n    ret.addPropertyResult('ebsOptimized', 'EbsOptimized', properties.EbsOptimized != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EbsOptimized) : undefined);\n    ret.addPropertyResult('instancePlatform', 'InstancePlatform', properties.InstancePlatform != null ? cfn_parse.FromCloudFormation.getString(properties.InstancePlatform) : undefined);\n    ret.addPropertyResult('instanceType', 'InstanceType', properties.InstanceType != null ? cfn_parse.FromCloudFormation.getString(properties.InstanceType) : undefined);\n    ret.addPropertyResult('priority', 'Priority', properties.Priority != null ? cfn_parse.FromCloudFormation.getNumber(properties.Priority) : undefined);\n    ret.addPropertyResult('weight', 'Weight', properties.Weight != null ? cfn_parse.FromCloudFormation.getNumber(properties.Weight) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnCapacityReservationFleet {\n    /**\n     * The tags to apply to a resource when the resource is being created.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-tagspecification.html\n     */\n    export interface TagSpecificationProperty {\n        /**\n         * The type of resource to tag on creation. Specify `capacity-reservation-fleet` .\n         *\n         * To tag a resource after it has been created, see [CreateTags](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html) .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-tagspecification.html#cfn-ec2-capacityreservationfleet-tagspecification-resourcetype\n         */\n        readonly resourceType?: string;\n        /**\n         * The tags to apply to the resource.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-tagspecification.html#cfn-ec2-capacityreservationfleet-tagspecification-tags\n         */\n        readonly tags?: cdk.CfnTag[];\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `TagSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `TagSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnCapacityReservationFleet_TagSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('resourceType', cdk.validateString)(properties.resourceType));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"TagSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::CapacityReservationFleet.TagSpecification` resource\n *\n * @param properties - the TypeScript properties of a `TagSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::CapacityReservationFleet.TagSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnCapacityReservationFleetTagSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnCapacityReservationFleet_TagSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        ResourceType: cdk.stringToCloudFormation(properties.resourceType),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnCapacityReservationFleetTagSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnCapacityReservationFleet.TagSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnCapacityReservationFleet.TagSpecificationProperty>();\n    ret.addPropertyResult('resourceType', 'ResourceType', properties.ResourceType != null ? cfn_parse.FromCloudFormation.getString(properties.ResourceType) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnCarrierGateway`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-carriergateway.html\n */\nexport interface CfnCarrierGatewayProps {\n\n    /**\n     * The ID of the VPC associated with the carrier gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-carriergateway.html#cfn-ec2-carriergateway-vpcid\n     */\n    readonly vpcId: string;\n\n    /**\n     * The tags assigned to the carrier gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-carriergateway.html#cfn-ec2-carriergateway-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnCarrierGatewayProps`\n *\n * @param properties - the TypeScript properties of a `CfnCarrierGatewayProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnCarrierGatewayPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.requiredValidator)(properties.vpcId));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.validateString)(properties.vpcId));\n    return errors.wrap('supplied properties not correct for \"CfnCarrierGatewayProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::CarrierGateway` resource\n *\n * @param properties - the TypeScript properties of a `CfnCarrierGatewayProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::CarrierGateway` resource.\n */\n// @ts-ignore TS6133\nfunction cfnCarrierGatewayPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnCarrierGatewayPropsValidator(properties).assertSuccess();\n    return {\n        VpcId: cdk.stringToCloudFormation(properties.vpcId),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnCarrierGatewayPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnCarrierGatewayProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnCarrierGatewayProps>();\n    ret.addPropertyResult('vpcId', 'VpcId', cfn_parse.FromCloudFormation.getString(properties.VpcId));\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::CarrierGateway`\n *\n * Creates a carrier gateway. For more information about carrier gateways, see [Carrier gateways](https://docs.aws.amazon.com/wavelength/latest/developerguide/how-wavelengths-work.html#wavelength-carrier-gateway) in the *AWS Wavelength Developer Guide* .\n *\n * @cloudformationResource AWS::EC2::CarrierGateway\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-carriergateway.html\n */\nexport class CfnCarrierGateway extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::CarrierGateway\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnCarrierGateway {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnCarrierGatewayPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnCarrierGateway(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the carrier gateway.\n     * @cloudformationAttribute CarrierGatewayId\n     */\n    public readonly attrCarrierGatewayId: string;\n\n    /**\n     * The AWS account ID of the owner of the carrier gateway.\n     * @cloudformationAttribute OwnerId\n     */\n    public readonly attrOwnerId: string;\n\n    /**\n     * The state of the carrier gateway.\n     * @cloudformationAttribute State\n     */\n    public readonly attrState: string;\n\n    /**\n     * The ID of the VPC associated with the carrier gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-carriergateway.html#cfn-ec2-carriergateway-vpcid\n     */\n    public vpcId: string;\n\n    /**\n     * The tags assigned to the carrier gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-carriergateway.html#cfn-ec2-carriergateway-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EC2::CarrierGateway`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnCarrierGatewayProps) {\n        super(scope, id, { type: CfnCarrierGateway.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'vpcId', this);\n        this.attrCarrierGatewayId = cdk.Token.asString(this.getAtt('CarrierGatewayId'));\n        this.attrOwnerId = cdk.Token.asString(this.getAtt('OwnerId'));\n        this.attrState = cdk.Token.asString(this.getAtt('State'));\n\n        this.vpcId = props.vpcId;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::CarrierGateway\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnCarrierGateway.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            vpcId: this.vpcId,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnCarrierGatewayPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnClientVpnAuthorizationRule`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html\n */\nexport interface CfnClientVpnAuthorizationRuleProps {\n\n    /**\n     * The ID of the Client VPN endpoint.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-clientvpnendpointid\n     */\n    readonly clientVpnEndpointId: string;\n\n    /**\n     * The IPv4 address range, in CIDR notation, of the network for which access is being authorized.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-targetnetworkcidr\n     */\n    readonly targetNetworkCidr: string;\n\n    /**\n     * The ID of the group to grant access to, for example, the Active Directory group or identity provider (IdP) group. Required if `AuthorizeAllGroups` is `false` or not specified.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-accessgroupid\n     */\n    readonly accessGroupId?: string;\n\n    /**\n     * Indicates whether to grant access to all clients. Specify `true` to grant all clients who successfully establish a VPN connection access to the network. Must be set to `true` if `AccessGroupId` is not specified.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-authorizeallgroups\n     */\n    readonly authorizeAllGroups?: boolean | cdk.IResolvable;\n\n    /**\n     * A brief description of the authorization rule.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-description\n     */\n    readonly description?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnClientVpnAuthorizationRuleProps`\n *\n * @param properties - the TypeScript properties of a `CfnClientVpnAuthorizationRuleProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnClientVpnAuthorizationRulePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('accessGroupId', cdk.validateString)(properties.accessGroupId));\n    errors.collect(cdk.propertyValidator('authorizeAllGroups', cdk.validateBoolean)(properties.authorizeAllGroups));\n    errors.collect(cdk.propertyValidator('clientVpnEndpointId', cdk.requiredValidator)(properties.clientVpnEndpointId));\n    errors.collect(cdk.propertyValidator('clientVpnEndpointId', cdk.validateString)(properties.clientVpnEndpointId));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('targetNetworkCidr', cdk.requiredValidator)(properties.targetNetworkCidr));\n    errors.collect(cdk.propertyValidator('targetNetworkCidr', cdk.validateString)(properties.targetNetworkCidr));\n    return errors.wrap('supplied properties not correct for \"CfnClientVpnAuthorizationRuleProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::ClientVpnAuthorizationRule` resource\n *\n * @param properties - the TypeScript properties of a `CfnClientVpnAuthorizationRuleProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::ClientVpnAuthorizationRule` resource.\n */\n// @ts-ignore TS6133\nfunction cfnClientVpnAuthorizationRulePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnClientVpnAuthorizationRulePropsValidator(properties).assertSuccess();\n    return {\n        ClientVpnEndpointId: cdk.stringToCloudFormation(properties.clientVpnEndpointId),\n        TargetNetworkCidr: cdk.stringToCloudFormation(properties.targetNetworkCidr),\n        AccessGroupId: cdk.stringToCloudFormation(properties.accessGroupId),\n        AuthorizeAllGroups: cdk.booleanToCloudFormation(properties.authorizeAllGroups),\n        Description: cdk.stringToCloudFormation(properties.description),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnClientVpnAuthorizationRulePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnClientVpnAuthorizationRuleProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnClientVpnAuthorizationRuleProps>();\n    ret.addPropertyResult('clientVpnEndpointId', 'ClientVpnEndpointId', cfn_parse.FromCloudFormation.getString(properties.ClientVpnEndpointId));\n    ret.addPropertyResult('targetNetworkCidr', 'TargetNetworkCidr', cfn_parse.FromCloudFormation.getString(properties.TargetNetworkCidr));\n    ret.addPropertyResult('accessGroupId', 'AccessGroupId', properties.AccessGroupId != null ? cfn_parse.FromCloudFormation.getString(properties.AccessGroupId) : undefined);\n    ret.addPropertyResult('authorizeAllGroups', 'AuthorizeAllGroups', properties.AuthorizeAllGroups != null ? cfn_parse.FromCloudFormation.getBoolean(properties.AuthorizeAllGroups) : undefined);\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::ClientVpnAuthorizationRule`\n *\n * Specifies an ingress authorization rule to add to a Client VPN endpoint. Ingress authorization rules act as firewall rules that grant access to networks. You must configure ingress authorization rules to enable clients to access resources in AWS or on-premises networks.\n *\n * @cloudformationResource AWS::EC2::ClientVpnAuthorizationRule\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html\n */\nexport class CfnClientVpnAuthorizationRule extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::ClientVpnAuthorizationRule\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnClientVpnAuthorizationRule {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnClientVpnAuthorizationRulePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnClientVpnAuthorizationRule(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the Client VPN endpoint.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-clientvpnendpointid\n     */\n    public clientVpnEndpointId: string;\n\n    /**\n     * The IPv4 address range, in CIDR notation, of the network for which access is being authorized.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-targetnetworkcidr\n     */\n    public targetNetworkCidr: string;\n\n    /**\n     * The ID of the group to grant access to, for example, the Active Directory group or identity provider (IdP) group. Required if `AuthorizeAllGroups` is `false` or not specified.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-accessgroupid\n     */\n    public accessGroupId: string | undefined;\n\n    /**\n     * Indicates whether to grant access to all clients. Specify `true` to grant all clients who successfully establish a VPN connection access to the network. Must be set to `true` if `AccessGroupId` is not specified.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-authorizeallgroups\n     */\n    public authorizeAllGroups: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * A brief description of the authorization rule.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-description\n     */\n    public description: string | undefined;\n\n    /**\n     * Create a new `AWS::EC2::ClientVpnAuthorizationRule`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnClientVpnAuthorizationRuleProps) {\n        super(scope, id, { type: CfnClientVpnAuthorizationRule.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'clientVpnEndpointId', this);\n        cdk.requireProperty(props, 'targetNetworkCidr', this);\n\n        this.clientVpnEndpointId = props.clientVpnEndpointId;\n        this.targetNetworkCidr = props.targetNetworkCidr;\n        this.accessGroupId = props.accessGroupId;\n        this.authorizeAllGroups = props.authorizeAllGroups;\n        this.description = props.description;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnClientVpnAuthorizationRule.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            clientVpnEndpointId: this.clientVpnEndpointId,\n            targetNetworkCidr: this.targetNetworkCidr,\n            accessGroupId: this.accessGroupId,\n            authorizeAllGroups: this.authorizeAllGroups,\n            description: this.description,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnClientVpnAuthorizationRulePropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnClientVpnEndpoint`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html\n */\nexport interface CfnClientVpnEndpointProps {\n\n    /**\n     * Information about the authentication method to be used to authenticate clients.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-authenticationoptions\n     */\n    readonly authenticationOptions: Array<CfnClientVpnEndpoint.ClientAuthenticationRequestProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * The IPv4 address range, in CIDR notation, from which to assign client IP addresses. The address range cannot overlap with the local CIDR of the VPC in which the associated subnet is located, or the routes that you add manually. The address range cannot be changed after the Client VPN endpoint has been created. The CIDR block should be /22 or greater.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-clientcidrblock\n     */\n    readonly clientCidrBlock: string;\n\n    /**\n     * Information about the client connection logging options.\n     *\n     * If you enable client connection logging, data about client connections is sent to a Cloudwatch Logs log stream. The following information is logged:\n     *\n     * - Client connection requests\n     * - Client connection results (successful and unsuccessful)\n     * - Reasons for unsuccessful client connection requests\n     * - Client connection termination time\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-connectionlogoptions\n     */\n    readonly connectionLogOptions: CfnClientVpnEndpoint.ConnectionLogOptionsProperty | cdk.IResolvable;\n\n    /**\n     * The ARN of the server certificate. For more information, see the [AWS Certificate Manager User Guide](https://docs.aws.amazon.com/acm/latest/userguide/) .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-servercertificatearn\n     */\n    readonly serverCertificateArn: string;\n\n    /**\n     * The options for managing connection authorization for new client connections.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-clientconnectoptions\n     */\n    readonly clientConnectOptions?: CfnClientVpnEndpoint.ClientConnectOptionsProperty | cdk.IResolvable;\n\n    /**\n     * Options for enabling a customizable text banner that will be displayed on AWS provided clients when a VPN session is established.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-clientloginbanneroptions\n     */\n    readonly clientLoginBannerOptions?: CfnClientVpnEndpoint.ClientLoginBannerOptionsProperty | cdk.IResolvable;\n\n    /**\n     * A brief description of the Client VPN endpoint.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-description\n     */\n    readonly description?: string;\n\n    /**\n     * Information about the DNS servers to be used for DNS resolution. A Client VPN endpoint can have up to two DNS servers. If no DNS server is specified, the DNS address configured on the device is used for the DNS server.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-dnsservers\n     */\n    readonly dnsServers?: string[];\n\n    /**\n     * The IDs of one or more security groups to apply to the target network. You must also specify the ID of the VPC that contains the security groups.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-securitygroupids\n     */\n    readonly securityGroupIds?: string[];\n\n    /**\n     * Specify whether to enable the self-service portal for the Client VPN endpoint.\n     *\n     * Default Value: `enabled`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-selfserviceportal\n     */\n    readonly selfServicePortal?: string;\n\n    /**\n     * The maximum VPN session duration time in hours.\n     *\n     * Valid values: `8 | 10 | 12 | 24`\n     *\n     * Default value: `24`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-sessiontimeouthours\n     */\n    readonly sessionTimeoutHours?: number;\n\n    /**\n     * Indicates whether split-tunnel is enabled on the AWS Client VPN endpoint.\n     *\n     * By default, split-tunnel on a VPN endpoint is disabled.\n     *\n     * For information about split-tunnel VPN endpoints, see [Split-tunnel AWS Client VPN endpoint](https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/split-tunnel-vpn.html) in the *AWS Client VPN Administrator Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-splittunnel\n     */\n    readonly splitTunnel?: boolean | cdk.IResolvable;\n\n    /**\n     * The tags to apply to the Client VPN endpoint during creation.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-tagspecifications\n     */\n    readonly tagSpecifications?: Array<CfnClientVpnEndpoint.TagSpecificationProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * The transport protocol to be used by the VPN session.\n     *\n     * Default value: `udp`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-transportprotocol\n     */\n    readonly transportProtocol?: string;\n\n    /**\n     * The ID of the VPC to associate with the Client VPN endpoint. If no security group IDs are specified in the request, the default security group for the VPC is applied.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-vpcid\n     */\n    readonly vpcId?: string;\n\n    /**\n     * The port number to assign to the Client VPN endpoint for TCP and UDP traffic.\n     *\n     * Valid Values: `443` | `1194`\n     *\n     * Default Value: `443`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-vpnport\n     */\n    readonly vpnPort?: number;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnClientVpnEndpointProps`\n *\n * @param properties - the TypeScript properties of a `CfnClientVpnEndpointProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnClientVpnEndpointPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('authenticationOptions', cdk.requiredValidator)(properties.authenticationOptions));\n    errors.collect(cdk.propertyValidator('authenticationOptions', cdk.listValidator(CfnClientVpnEndpoint_ClientAuthenticationRequestPropertyValidator))(properties.authenticationOptions));\n    errors.collect(cdk.propertyValidator('clientCidrBlock', cdk.requiredValidator)(properties.clientCidrBlock));\n    errors.collect(cdk.propertyValidator('clientCidrBlock', cdk.validateString)(properties.clientCidrBlock));\n    errors.collect(cdk.propertyValidator('clientConnectOptions', CfnClientVpnEndpoint_ClientConnectOptionsPropertyValidator)(properties.clientConnectOptions));\n    errors.collect(cdk.propertyValidator('clientLoginBannerOptions', CfnClientVpnEndpoint_ClientLoginBannerOptionsPropertyValidator)(properties.clientLoginBannerOptions));\n    errors.collect(cdk.propertyValidator('connectionLogOptions', cdk.requiredValidator)(properties.connectionLogOptions));\n    errors.collect(cdk.propertyValidator('connectionLogOptions', CfnClientVpnEndpoint_ConnectionLogOptionsPropertyValidator)(properties.connectionLogOptions));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('dnsServers', cdk.listValidator(cdk.validateString))(properties.dnsServers));\n    errors.collect(cdk.propertyValidator('securityGroupIds', cdk.listValidator(cdk.validateString))(properties.securityGroupIds));\n    errors.collect(cdk.propertyValidator('selfServicePortal', cdk.validateString)(properties.selfServicePortal));\n    errors.collect(cdk.propertyValidator('serverCertificateArn', cdk.requiredValidator)(properties.serverCertificateArn));\n    errors.collect(cdk.propertyValidator('serverCertificateArn', cdk.validateString)(properties.serverCertificateArn));\n    errors.collect(cdk.propertyValidator('sessionTimeoutHours', cdk.validateNumber)(properties.sessionTimeoutHours));\n    errors.collect(cdk.propertyValidator('splitTunnel', cdk.validateBoolean)(properties.splitTunnel));\n    errors.collect(cdk.propertyValidator('tagSpecifications', cdk.listValidator(CfnClientVpnEndpoint_TagSpecificationPropertyValidator))(properties.tagSpecifications));\n    errors.collect(cdk.propertyValidator('transportProtocol', cdk.validateString)(properties.transportProtocol));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.validateString)(properties.vpcId));\n    errors.collect(cdk.propertyValidator('vpnPort', cdk.validateNumber)(properties.vpnPort));\n    return errors.wrap('supplied properties not correct for \"CfnClientVpnEndpointProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::ClientVpnEndpoint` resource\n *\n * @param properties - the TypeScript properties of a `CfnClientVpnEndpointProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::ClientVpnEndpoint` resource.\n */\n// @ts-ignore TS6133\nfunction cfnClientVpnEndpointPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnClientVpnEndpointPropsValidator(properties).assertSuccess();\n    return {\n        AuthenticationOptions: cdk.listMapper(cfnClientVpnEndpointClientAuthenticationRequestPropertyToCloudFormation)(properties.authenticationOptions),\n        ClientCidrBlock: cdk.stringToCloudFormation(properties.clientCidrBlock),\n        ConnectionLogOptions: cfnClientVpnEndpointConnectionLogOptionsPropertyToCloudFormation(properties.connectionLogOptions),\n        ServerCertificateArn: cdk.stringToCloudFormation(properties.serverCertificateArn),\n        ClientConnectOptions: cfnClientVpnEndpointClientConnectOptionsPropertyToCloudFormation(properties.clientConnectOptions),\n        ClientLoginBannerOptions: cfnClientVpnEndpointClientLoginBannerOptionsPropertyToCloudFormation(properties.clientLoginBannerOptions),\n        Description: cdk.stringToCloudFormation(properties.description),\n        DnsServers: cdk.listMapper(cdk.stringToCloudFormation)(properties.dnsServers),\n        SecurityGroupIds: cdk.listMapper(cdk.stringToCloudFormation)(properties.securityGroupIds),\n        SelfServicePortal: cdk.stringToCloudFormation(properties.selfServicePortal),\n        SessionTimeoutHours: cdk.numberToCloudFormation(properties.sessionTimeoutHours),\n        SplitTunnel: cdk.booleanToCloudFormation(properties.splitTunnel),\n        TagSpecifications: cdk.listMapper(cfnClientVpnEndpointTagSpecificationPropertyToCloudFormation)(properties.tagSpecifications),\n        TransportProtocol: cdk.stringToCloudFormation(properties.transportProtocol),\n        VpcId: cdk.stringToCloudFormation(properties.vpcId),\n        VpnPort: cdk.numberToCloudFormation(properties.vpnPort),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnClientVpnEndpointPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnClientVpnEndpointProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnClientVpnEndpointProps>();\n    ret.addPropertyResult('authenticationOptions', 'AuthenticationOptions', cfn_parse.FromCloudFormation.getArray(CfnClientVpnEndpointClientAuthenticationRequestPropertyFromCloudFormation)(properties.AuthenticationOptions));\n    ret.addPropertyResult('clientCidrBlock', 'ClientCidrBlock', cfn_parse.FromCloudFormation.getString(properties.ClientCidrBlock));\n    ret.addPropertyResult('connectionLogOptions', 'ConnectionLogOptions', CfnClientVpnEndpointConnectionLogOptionsPropertyFromCloudFormation(properties.ConnectionLogOptions));\n    ret.addPropertyResult('serverCertificateArn', 'ServerCertificateArn', cfn_parse.FromCloudFormation.getString(properties.ServerCertificateArn));\n    ret.addPropertyResult('clientConnectOptions', 'ClientConnectOptions', properties.ClientConnectOptions != null ? CfnClientVpnEndpointClientConnectOptionsPropertyFromCloudFormation(properties.ClientConnectOptions) : undefined);\n    ret.addPropertyResult('clientLoginBannerOptions', 'ClientLoginBannerOptions', properties.ClientLoginBannerOptions != null ? CfnClientVpnEndpointClientLoginBannerOptionsPropertyFromCloudFormation(properties.ClientLoginBannerOptions) : undefined);\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('dnsServers', 'DnsServers', properties.DnsServers != null ? cfn_parse.FromCloudFormation.getStringArray(properties.DnsServers) : undefined);\n    ret.addPropertyResult('securityGroupIds', 'SecurityGroupIds', properties.SecurityGroupIds != null ? cfn_parse.FromCloudFormation.getStringArray(properties.SecurityGroupIds) : undefined);\n    ret.addPropertyResult('selfServicePortal', 'SelfServicePortal', properties.SelfServicePortal != null ? cfn_parse.FromCloudFormation.getString(properties.SelfServicePortal) : undefined);\n    ret.addPropertyResult('sessionTimeoutHours', 'SessionTimeoutHours', properties.SessionTimeoutHours != null ? cfn_parse.FromCloudFormation.getNumber(properties.SessionTimeoutHours) : undefined);\n    ret.addPropertyResult('splitTunnel', 'SplitTunnel', properties.SplitTunnel != null ? cfn_parse.FromCloudFormation.getBoolean(properties.SplitTunnel) : undefined);\n    ret.addPropertyResult('tagSpecifications', 'TagSpecifications', properties.TagSpecifications != null ? cfn_parse.FromCloudFormation.getArray(CfnClientVpnEndpointTagSpecificationPropertyFromCloudFormation)(properties.TagSpecifications) : undefined);\n    ret.addPropertyResult('transportProtocol', 'TransportProtocol', properties.TransportProtocol != null ? cfn_parse.FromCloudFormation.getString(properties.TransportProtocol) : undefined);\n    ret.addPropertyResult('vpcId', 'VpcId', properties.VpcId != null ? cfn_parse.FromCloudFormation.getString(properties.VpcId) : undefined);\n    ret.addPropertyResult('vpnPort', 'VpnPort', properties.VpnPort != null ? cfn_parse.FromCloudFormation.getNumber(properties.VpnPort) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::ClientVpnEndpoint`\n *\n * Specifies a Client VPN endpoint. A Client VPN endpoint is the resource you create and configure to enable and manage client VPN sessions. It is the destination endpoint at which all client VPN sessions are terminated.\n *\n * @cloudformationResource AWS::EC2::ClientVpnEndpoint\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html\n */\nexport class CfnClientVpnEndpoint extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::ClientVpnEndpoint\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnClientVpnEndpoint {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnClientVpnEndpointPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnClientVpnEndpoint(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * Information about the authentication method to be used to authenticate clients.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-authenticationoptions\n     */\n    public authenticationOptions: Array<CfnClientVpnEndpoint.ClientAuthenticationRequestProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * The IPv4 address range, in CIDR notation, from which to assign client IP addresses. The address range cannot overlap with the local CIDR of the VPC in which the associated subnet is located, or the routes that you add manually. The address range cannot be changed after the Client VPN endpoint has been created. The CIDR block should be /22 or greater.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-clientcidrblock\n     */\n    public clientCidrBlock: string;\n\n    /**\n     * Information about the client connection logging options.\n     *\n     * If you enable client connection logging, data about client connections is sent to a Cloudwatch Logs log stream. The following information is logged:\n     *\n     * - Client connection requests\n     * - Client connection results (successful and unsuccessful)\n     * - Reasons for unsuccessful client connection requests\n     * - Client connection termination time\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-connectionlogoptions\n     */\n    public connectionLogOptions: CfnClientVpnEndpoint.ConnectionLogOptionsProperty | cdk.IResolvable;\n\n    /**\n     * The ARN of the server certificate. For more information, see the [AWS Certificate Manager User Guide](https://docs.aws.amazon.com/acm/latest/userguide/) .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-servercertificatearn\n     */\n    public serverCertificateArn: string;\n\n    /**\n     * The options for managing connection authorization for new client connections.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-clientconnectoptions\n     */\n    public clientConnectOptions: CfnClientVpnEndpoint.ClientConnectOptionsProperty | cdk.IResolvable | undefined;\n\n    /**\n     * Options for enabling a customizable text banner that will be displayed on AWS provided clients when a VPN session is established.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-clientloginbanneroptions\n     */\n    public clientLoginBannerOptions: CfnClientVpnEndpoint.ClientLoginBannerOptionsProperty | cdk.IResolvable | undefined;\n\n    /**\n     * A brief description of the Client VPN endpoint.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-description\n     */\n    public description: string | undefined;\n\n    /**\n     * Information about the DNS servers to be used for DNS resolution. A Client VPN endpoint can have up to two DNS servers. If no DNS server is specified, the DNS address configured on the device is used for the DNS server.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-dnsservers\n     */\n    public dnsServers: string[] | undefined;\n\n    /**\n     * The IDs of one or more security groups to apply to the target network. You must also specify the ID of the VPC that contains the security groups.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-securitygroupids\n     */\n    public securityGroupIds: string[] | undefined;\n\n    /**\n     * Specify whether to enable the self-service portal for the Client VPN endpoint.\n     *\n     * Default Value: `enabled`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-selfserviceportal\n     */\n    public selfServicePortal: string | undefined;\n\n    /**\n     * The maximum VPN session duration time in hours.\n     *\n     * Valid values: `8 | 10 | 12 | 24`\n     *\n     * Default value: `24`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-sessiontimeouthours\n     */\n    public sessionTimeoutHours: number | undefined;\n\n    /**\n     * Indicates whether split-tunnel is enabled on the AWS Client VPN endpoint.\n     *\n     * By default, split-tunnel on a VPN endpoint is disabled.\n     *\n     * For information about split-tunnel VPN endpoints, see [Split-tunnel AWS Client VPN endpoint](https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/split-tunnel-vpn.html) in the *AWS Client VPN Administrator Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-splittunnel\n     */\n    public splitTunnel: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * The tags to apply to the Client VPN endpoint during creation.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-tagspecifications\n     */\n    public tagSpecifications: Array<CfnClientVpnEndpoint.TagSpecificationProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n    /**\n     * The transport protocol to be used by the VPN session.\n     *\n     * Default value: `udp`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-transportprotocol\n     */\n    public transportProtocol: string | undefined;\n\n    /**\n     * The ID of the VPC to associate with the Client VPN endpoint. If no security group IDs are specified in the request, the default security group for the VPC is applied.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-vpcid\n     */\n    public vpcId: string | undefined;\n\n    /**\n     * The port number to assign to the Client VPN endpoint for TCP and UDP traffic.\n     *\n     * Valid Values: `443` | `1194`\n     *\n     * Default Value: `443`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-vpnport\n     */\n    public vpnPort: number | undefined;\n\n    /**\n     * Create a new `AWS::EC2::ClientVpnEndpoint`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnClientVpnEndpointProps) {\n        super(scope, id, { type: CfnClientVpnEndpoint.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'authenticationOptions', this);\n        cdk.requireProperty(props, 'clientCidrBlock', this);\n        cdk.requireProperty(props, 'connectionLogOptions', this);\n        cdk.requireProperty(props, 'serverCertificateArn', this);\n\n        this.authenticationOptions = props.authenticationOptions;\n        this.clientCidrBlock = props.clientCidrBlock;\n        this.connectionLogOptions = props.connectionLogOptions;\n        this.serverCertificateArn = props.serverCertificateArn;\n        this.clientConnectOptions = props.clientConnectOptions;\n        this.clientLoginBannerOptions = props.clientLoginBannerOptions;\n        this.description = props.description;\n        this.dnsServers = props.dnsServers;\n        this.securityGroupIds = props.securityGroupIds;\n        this.selfServicePortal = props.selfServicePortal;\n        this.sessionTimeoutHours = props.sessionTimeoutHours;\n        this.splitTunnel = props.splitTunnel;\n        this.tagSpecifications = props.tagSpecifications;\n        this.transportProtocol = props.transportProtocol;\n        this.vpcId = props.vpcId;\n        this.vpnPort = props.vpnPort;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnClientVpnEndpoint.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            authenticationOptions: this.authenticationOptions,\n            clientCidrBlock: this.clientCidrBlock,\n            connectionLogOptions: this.connectionLogOptions,\n            serverCertificateArn: this.serverCertificateArn,\n            clientConnectOptions: this.clientConnectOptions,\n            clientLoginBannerOptions: this.clientLoginBannerOptions,\n            description: this.description,\n            dnsServers: this.dnsServers,\n            securityGroupIds: this.securityGroupIds,\n            selfServicePortal: this.selfServicePortal,\n            sessionTimeoutHours: this.sessionTimeoutHours,\n            splitTunnel: this.splitTunnel,\n            tagSpecifications: this.tagSpecifications,\n            transportProtocol: this.transportProtocol,\n            vpcId: this.vpcId,\n            vpnPort: this.vpnPort,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnClientVpnEndpointPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnClientVpnEndpoint {\n    /**\n     * Information about the client certificate to be used for authentication.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-certificateauthenticationrequest.html\n     */\n    export interface CertificateAuthenticationRequestProperty {\n        /**\n         * The ARN of the client certificate. The certificate must be signed by a certificate authority (CA) and it must be provisioned in AWS Certificate Manager (ACM).\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-certificateauthenticationrequest.html#cfn-ec2-clientvpnendpoint-certificateauthenticationrequest-clientrootcertificatechainarn\n         */\n        readonly clientRootCertificateChainArn: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `CertificateAuthenticationRequestProperty`\n *\n * @param properties - the TypeScript properties of a `CertificateAuthenticationRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnClientVpnEndpoint_CertificateAuthenticationRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('clientRootCertificateChainArn', cdk.requiredValidator)(properties.clientRootCertificateChainArn));\n    errors.collect(cdk.propertyValidator('clientRootCertificateChainArn', cdk.validateString)(properties.clientRootCertificateChainArn));\n    return errors.wrap('supplied properties not correct for \"CertificateAuthenticationRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::ClientVpnEndpoint.CertificateAuthenticationRequest` resource\n *\n * @param properties - the TypeScript properties of a `CertificateAuthenticationRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::ClientVpnEndpoint.CertificateAuthenticationRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnClientVpnEndpointCertificateAuthenticationRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnClientVpnEndpoint_CertificateAuthenticationRequestPropertyValidator(properties).assertSuccess();\n    return {\n        ClientRootCertificateChainArn: cdk.stringToCloudFormation(properties.clientRootCertificateChainArn),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnClientVpnEndpointCertificateAuthenticationRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnClientVpnEndpoint.CertificateAuthenticationRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnClientVpnEndpoint.CertificateAuthenticationRequestProperty>();\n    ret.addPropertyResult('clientRootCertificateChainArn', 'ClientRootCertificateChainArn', cfn_parse.FromCloudFormation.getString(properties.ClientRootCertificateChainArn));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnClientVpnEndpoint {\n    /**\n     * Describes the authentication method to be used by a Client VPN endpoint. For more information, see [Authentication](https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/authentication-authrization.html#client-authentication) in the *AWS Client VPN Administrator Guide* .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientauthenticationrequest.html\n     */\n    export interface ClientAuthenticationRequestProperty {\n        /**\n         * Information about the Active Directory to be used, if applicable. You must provide this information if *Type* is `directory-service-authentication` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientauthenticationrequest.html#cfn-ec2-clientvpnendpoint-clientauthenticationrequest-activedirectory\n         */\n        readonly activeDirectory?: CfnClientVpnEndpoint.DirectoryServiceAuthenticationRequestProperty | cdk.IResolvable;\n        /**\n         * Information about the IAM SAML identity provider, if applicable.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientauthenticationrequest.html#cfn-ec2-clientvpnendpoint-clientauthenticationrequest-federatedauthentication\n         */\n        readonly federatedAuthentication?: CfnClientVpnEndpoint.FederatedAuthenticationRequestProperty | cdk.IResolvable;\n        /**\n         * Information about the authentication certificates to be used, if applicable. You must provide this information if *Type* is `certificate-authentication` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientauthenticationrequest.html#cfn-ec2-clientvpnendpoint-clientauthenticationrequest-mutualauthentication\n         */\n        readonly mutualAuthentication?: CfnClientVpnEndpoint.CertificateAuthenticationRequestProperty | cdk.IResolvable;\n        /**\n         * The type of client authentication to be used.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientauthenticationrequest.html#cfn-ec2-clientvpnendpoint-clientauthenticationrequest-type\n         */\n        readonly type: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ClientAuthenticationRequestProperty`\n *\n * @param properties - the TypeScript properties of a `ClientAuthenticationRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnClientVpnEndpoint_ClientAuthenticationRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('activeDirectory', CfnClientVpnEndpoint_DirectoryServiceAuthenticationRequestPropertyValidator)(properties.activeDirectory));\n    errors.collect(cdk.propertyValidator('federatedAuthentication', CfnClientVpnEndpoint_FederatedAuthenticationRequestPropertyValidator)(properties.federatedAuthentication));\n    errors.collect(cdk.propertyValidator('mutualAuthentication', CfnClientVpnEndpoint_CertificateAuthenticationRequestPropertyValidator)(properties.mutualAuthentication));\n    errors.collect(cdk.propertyValidator('type', cdk.requiredValidator)(properties.type));\n    errors.collect(cdk.propertyValidator('type', cdk.validateString)(properties.type));\n    return errors.wrap('supplied properties not correct for \"ClientAuthenticationRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::ClientVpnEndpoint.ClientAuthenticationRequest` resource\n *\n * @param properties - the TypeScript properties of a `ClientAuthenticationRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::ClientVpnEndpoint.ClientAuthenticationRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnClientVpnEndpointClientAuthenticationRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnClientVpnEndpoint_ClientAuthenticationRequestPropertyValidator(properties).assertSuccess();\n    return {\n        ActiveDirectory: cfnClientVpnEndpointDirectoryServiceAuthenticationRequestPropertyToCloudFormation(properties.activeDirectory),\n        FederatedAuthentication: cfnClientVpnEndpointFederatedAuthenticationRequestPropertyToCloudFormation(properties.federatedAuthentication),\n        MutualAuthentication: cfnClientVpnEndpointCertificateAuthenticationRequestPropertyToCloudFormation(properties.mutualAuthentication),\n        Type: cdk.stringToCloudFormation(properties.type),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnClientVpnEndpointClientAuthenticationRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnClientVpnEndpoint.ClientAuthenticationRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnClientVpnEndpoint.ClientAuthenticationRequestProperty>();\n    ret.addPropertyResult('activeDirectory', 'ActiveDirectory', properties.ActiveDirectory != null ? CfnClientVpnEndpointDirectoryServiceAuthenticationRequestPropertyFromCloudFormation(properties.ActiveDirectory) : undefined);\n    ret.addPropertyResult('federatedAuthentication', 'FederatedAuthentication', properties.FederatedAuthentication != null ? CfnClientVpnEndpointFederatedAuthenticationRequestPropertyFromCloudFormation(properties.FederatedAuthentication) : undefined);\n    ret.addPropertyResult('mutualAuthentication', 'MutualAuthentication', properties.MutualAuthentication != null ? CfnClientVpnEndpointCertificateAuthenticationRequestPropertyFromCloudFormation(properties.MutualAuthentication) : undefined);\n    ret.addPropertyResult('type', 'Type', cfn_parse.FromCloudFormation.getString(properties.Type));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnClientVpnEndpoint {\n    /**\n     * Indicates whether client connect options are enabled. The default is `false` (not enabled).\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientconnectoptions.html\n     */\n    export interface ClientConnectOptionsProperty {\n        /**\n         * Indicates whether client connect options are enabled. The default is `false` (not enabled).\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientconnectoptions.html#cfn-ec2-clientvpnendpoint-clientconnectoptions-enabled\n         */\n        readonly enabled: boolean | cdk.IResolvable;\n        /**\n         * The Amazon Resource Name (ARN) of the AWS Lambda function used for connection authorization.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientconnectoptions.html#cfn-ec2-clientvpnendpoint-clientconnectoptions-lambdafunctionarn\n         */\n        readonly lambdaFunctionArn?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ClientConnectOptionsProperty`\n *\n * @param properties - the TypeScript properties of a `ClientConnectOptionsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnClientVpnEndpoint_ClientConnectOptionsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('enabled', cdk.requiredValidator)(properties.enabled));\n    errors.collect(cdk.propertyValidator('enabled', cdk.validateBoolean)(properties.enabled));\n    errors.collect(cdk.propertyValidator('lambdaFunctionArn', cdk.validateString)(properties.lambdaFunctionArn));\n    return errors.wrap('supplied properties not correct for \"ClientConnectOptionsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::ClientVpnEndpoint.ClientConnectOptions` resource\n *\n * @param properties - the TypeScript properties of a `ClientConnectOptionsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::ClientVpnEndpoint.ClientConnectOptions` resource.\n */\n// @ts-ignore TS6133\nfunction cfnClientVpnEndpointClientConnectOptionsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnClientVpnEndpoint_ClientConnectOptionsPropertyValidator(properties).assertSuccess();\n    return {\n        Enabled: cdk.booleanToCloudFormation(properties.enabled),\n        LambdaFunctionArn: cdk.stringToCloudFormation(properties.lambdaFunctionArn),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnClientVpnEndpointClientConnectOptionsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnClientVpnEndpoint.ClientConnectOptionsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnClientVpnEndpoint.ClientConnectOptionsProperty>();\n    ret.addPropertyResult('enabled', 'Enabled', cfn_parse.FromCloudFormation.getBoolean(properties.Enabled));\n    ret.addPropertyResult('lambdaFunctionArn', 'LambdaFunctionArn', properties.LambdaFunctionArn != null ? cfn_parse.FromCloudFormation.getString(properties.LambdaFunctionArn) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnClientVpnEndpoint {\n    /**\n     * Options for enabling a customizable text banner that will be displayed on AWS provided clients when a VPN session is established.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientloginbanneroptions.html\n     */\n    export interface ClientLoginBannerOptionsProperty {\n        /**\n         * Customizable text that will be displayed in a banner on AWS provided clients when a VPN session is established. UTF-8 encoded characters only. Maximum of 1400 characters.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientloginbanneroptions.html#cfn-ec2-clientvpnendpoint-clientloginbanneroptions-bannertext\n         */\n        readonly bannerText?: string;\n        /**\n         * Enable or disable a customizable text banner that will be displayed on AWS provided clients when a VPN session is established.\n         *\n         * Valid values: `true | false`\n         *\n         * Default value: `false`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientloginbanneroptions.html#cfn-ec2-clientvpnendpoint-clientloginbanneroptions-enabled\n         */\n        readonly enabled: boolean | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ClientLoginBannerOptionsProperty`\n *\n * @param properties - the TypeScript properties of a `ClientLoginBannerOptionsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnClientVpnEndpoint_ClientLoginBannerOptionsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('bannerText', cdk.validateString)(properties.bannerText));\n    errors.collect(cdk.propertyValidator('enabled', cdk.requiredValidator)(properties.enabled));\n    errors.collect(cdk.propertyValidator('enabled', cdk.validateBoolean)(properties.enabled));\n    return errors.wrap('supplied properties not correct for \"ClientLoginBannerOptionsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::ClientVpnEndpoint.ClientLoginBannerOptions` resource\n *\n * @param properties - the TypeScript properties of a `ClientLoginBannerOptionsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::ClientVpnEndpoint.ClientLoginBannerOptions` resource.\n */\n// @ts-ignore TS6133\nfunction cfnClientVpnEndpointClientLoginBannerOptionsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnClientVpnEndpoint_ClientLoginBannerOptionsPropertyValidator(properties).assertSuccess();\n    return {\n        BannerText: cdk.stringToCloudFormation(properties.bannerText),\n        Enabled: cdk.booleanToCloudFormation(properties.enabled),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnClientVpnEndpointClientLoginBannerOptionsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnClientVpnEndpoint.ClientLoginBannerOptionsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnClientVpnEndpoint.ClientLoginBannerOptionsProperty>();\n    ret.addPropertyResult('bannerText', 'BannerText', properties.BannerText != null ? cfn_parse.FromCloudFormation.getString(properties.BannerText) : undefined);\n    ret.addPropertyResult('enabled', 'Enabled', cfn_parse.FromCloudFormation.getBoolean(properties.Enabled));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnClientVpnEndpoint {\n    /**\n     * Describes the client connection logging options for the Client VPN endpoint.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-connectionlogoptions.html\n     */\n    export interface ConnectionLogOptionsProperty {\n        /**\n         * The name of the CloudWatch Logs log group. Required if connection logging is enabled.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-connectionlogoptions.html#cfn-ec2-clientvpnendpoint-connectionlogoptions-cloudwatchloggroup\n         */\n        readonly cloudwatchLogGroup?: string;\n        /**\n         * The name of the CloudWatch Logs log stream to which the connection data is published.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-connectionlogoptions.html#cfn-ec2-clientvpnendpoint-connectionlogoptions-cloudwatchlogstream\n         */\n        readonly cloudwatchLogStream?: string;\n        /**\n         * Indicates whether connection logging is enabled.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-connectionlogoptions.html#cfn-ec2-clientvpnendpoint-connectionlogoptions-enabled\n         */\n        readonly enabled: boolean | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ConnectionLogOptionsProperty`\n *\n * @param properties - the TypeScript properties of a `ConnectionLogOptionsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnClientVpnEndpoint_ConnectionLogOptionsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('cloudwatchLogGroup', cdk.validateString)(properties.cloudwatchLogGroup));\n    errors.collect(cdk.propertyValidator('cloudwatchLogStream', cdk.validateString)(properties.cloudwatchLogStream));\n    errors.collect(cdk.propertyValidator('enabled', cdk.requiredValidator)(properties.enabled));\n    errors.collect(cdk.propertyValidator('enabled', cdk.validateBoolean)(properties.enabled));\n    return errors.wrap('supplied properties not correct for \"ConnectionLogOptionsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::ClientVpnEndpoint.ConnectionLogOptions` resource\n *\n * @param properties - the TypeScript properties of a `ConnectionLogOptionsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::ClientVpnEndpoint.ConnectionLogOptions` resource.\n */\n// @ts-ignore TS6133\nfunction cfnClientVpnEndpointConnectionLogOptionsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnClientVpnEndpoint_ConnectionLogOptionsPropertyValidator(properties).assertSuccess();\n    return {\n        CloudwatchLogGroup: cdk.stringToCloudFormation(properties.cloudwatchLogGroup),\n        CloudwatchLogStream: cdk.stringToCloudFormation(properties.cloudwatchLogStream),\n        Enabled: cdk.booleanToCloudFormation(properties.enabled),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnClientVpnEndpointConnectionLogOptionsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnClientVpnEndpoint.ConnectionLogOptionsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnClientVpnEndpoint.ConnectionLogOptionsProperty>();\n    ret.addPropertyResult('cloudwatchLogGroup', 'CloudwatchLogGroup', properties.CloudwatchLogGroup != null ? cfn_parse.FromCloudFormation.getString(properties.CloudwatchLogGroup) : undefined);\n    ret.addPropertyResult('cloudwatchLogStream', 'CloudwatchLogStream', properties.CloudwatchLogStream != null ? cfn_parse.FromCloudFormation.getString(properties.CloudwatchLogStream) : undefined);\n    ret.addPropertyResult('enabled', 'Enabled', cfn_parse.FromCloudFormation.getBoolean(properties.Enabled));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnClientVpnEndpoint {\n    /**\n     * Describes the Active Directory to be used for client authentication.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-directoryserviceauthenticationrequest.html\n     */\n    export interface DirectoryServiceAuthenticationRequestProperty {\n        /**\n         * The ID of the Active Directory to be used for authentication.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-directoryserviceauthenticationrequest.html#cfn-ec2-clientvpnendpoint-directoryserviceauthenticationrequest-directoryid\n         */\n        readonly directoryId: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `DirectoryServiceAuthenticationRequestProperty`\n *\n * @param properties - the TypeScript properties of a `DirectoryServiceAuthenticationRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnClientVpnEndpoint_DirectoryServiceAuthenticationRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('directoryId', cdk.requiredValidator)(properties.directoryId));\n    errors.collect(cdk.propertyValidator('directoryId', cdk.validateString)(properties.directoryId));\n    return errors.wrap('supplied properties not correct for \"DirectoryServiceAuthenticationRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::ClientVpnEndpoint.DirectoryServiceAuthenticationRequest` resource\n *\n * @param properties - the TypeScript properties of a `DirectoryServiceAuthenticationRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::ClientVpnEndpoint.DirectoryServiceAuthenticationRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnClientVpnEndpointDirectoryServiceAuthenticationRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnClientVpnEndpoint_DirectoryServiceAuthenticationRequestPropertyValidator(properties).assertSuccess();\n    return {\n        DirectoryId: cdk.stringToCloudFormation(properties.directoryId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnClientVpnEndpointDirectoryServiceAuthenticationRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnClientVpnEndpoint.DirectoryServiceAuthenticationRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnClientVpnEndpoint.DirectoryServiceAuthenticationRequestProperty>();\n    ret.addPropertyResult('directoryId', 'DirectoryId', cfn_parse.FromCloudFormation.getString(properties.DirectoryId));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnClientVpnEndpoint {\n    /**\n     * The IAM SAML identity provider used for federated authentication.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-federatedauthenticationrequest.html\n     */\n    export interface FederatedAuthenticationRequestProperty {\n        /**\n         * The Amazon Resource Name (ARN) of the IAM SAML identity provider.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-federatedauthenticationrequest.html#cfn-ec2-clientvpnendpoint-federatedauthenticationrequest-samlproviderarn\n         */\n        readonly samlProviderArn: string;\n        /**\n         * The Amazon Resource Name (ARN) of the IAM SAML identity provider for the self-service portal.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-federatedauthenticationrequest.html#cfn-ec2-clientvpnendpoint-federatedauthenticationrequest-selfservicesamlproviderarn\n         */\n        readonly selfServiceSamlProviderArn?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `FederatedAuthenticationRequestProperty`\n *\n * @param properties - the TypeScript properties of a `FederatedAuthenticationRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnClientVpnEndpoint_FederatedAuthenticationRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('samlProviderArn', cdk.requiredValidator)(properties.samlProviderArn));\n    errors.collect(cdk.propertyValidator('samlProviderArn', cdk.validateString)(properties.samlProviderArn));\n    errors.collect(cdk.propertyValidator('selfServiceSamlProviderArn', cdk.validateString)(properties.selfServiceSamlProviderArn));\n    return errors.wrap('supplied properties not correct for \"FederatedAuthenticationRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::ClientVpnEndpoint.FederatedAuthenticationRequest` resource\n *\n * @param properties - the TypeScript properties of a `FederatedAuthenticationRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::ClientVpnEndpoint.FederatedAuthenticationRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnClientVpnEndpointFederatedAuthenticationRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnClientVpnEndpoint_FederatedAuthenticationRequestPropertyValidator(properties).assertSuccess();\n    return {\n        SAMLProviderArn: cdk.stringToCloudFormation(properties.samlProviderArn),\n        SelfServiceSAMLProviderArn: cdk.stringToCloudFormation(properties.selfServiceSamlProviderArn),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnClientVpnEndpointFederatedAuthenticationRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnClientVpnEndpoint.FederatedAuthenticationRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnClientVpnEndpoint.FederatedAuthenticationRequestProperty>();\n    ret.addPropertyResult('samlProviderArn', 'SAMLProviderArn', cfn_parse.FromCloudFormation.getString(properties.SAMLProviderArn));\n    ret.addPropertyResult('selfServiceSamlProviderArn', 'SelfServiceSAMLProviderArn', properties.SelfServiceSAMLProviderArn != null ? cfn_parse.FromCloudFormation.getString(properties.SelfServiceSAMLProviderArn) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnClientVpnEndpoint {\n    /**\n     * The tags to apply to a resource when the resource is being created.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-tagspecification.html\n     */\n    export interface TagSpecificationProperty {\n        /**\n         * The type of resource to tag.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-tagspecification.html#cfn-ec2-clientvpnendpoint-tagspecification-resourcetype\n         */\n        readonly resourceType: string;\n        /**\n         * The tags to apply to the resource.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-tagspecification.html#cfn-ec2-clientvpnendpoint-tagspecification-tags\n         */\n        readonly tags: cdk.CfnTag[];\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `TagSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `TagSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnClientVpnEndpoint_TagSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('resourceType', cdk.requiredValidator)(properties.resourceType));\n    errors.collect(cdk.propertyValidator('resourceType', cdk.validateString)(properties.resourceType));\n    errors.collect(cdk.propertyValidator('tags', cdk.requiredValidator)(properties.tags));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"TagSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::ClientVpnEndpoint.TagSpecification` resource\n *\n * @param properties - the TypeScript properties of a `TagSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::ClientVpnEndpoint.TagSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnClientVpnEndpointTagSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnClientVpnEndpoint_TagSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        ResourceType: cdk.stringToCloudFormation(properties.resourceType),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnClientVpnEndpointTagSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnClientVpnEndpoint.TagSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnClientVpnEndpoint.TagSpecificationProperty>();\n    ret.addPropertyResult('resourceType', 'ResourceType', cfn_parse.FromCloudFormation.getString(properties.ResourceType));\n    ret.addPropertyResult('tags', 'Tags', cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnClientVpnRoute`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html\n */\nexport interface CfnClientVpnRouteProps {\n\n    /**\n     * The ID of the Client VPN endpoint to which to add the route.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-clientvpnendpointid\n     */\n    readonly clientVpnEndpointId: string;\n\n    /**\n     * The IPv4 address range, in CIDR notation, of the route destination. For example:\n     *\n     * - To add a route for Internet access, enter `0.0.0.0/0`\n     * - To add a route for a peered VPC, enter the peered VPC's IPv4 CIDR range\n     * - To add a route for an on-premises network, enter the AWS Site-to-Site VPN connection's IPv4 CIDR range\n     * - To add a route for the local network, enter the client CIDR range\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-destinationcidrblock\n     */\n    readonly destinationCidrBlock: string;\n\n    /**\n     * The ID of the subnet through which you want to route traffic. The specified subnet must be an existing target network of the Client VPN endpoint.\n     *\n     * Alternatively, if you're adding a route for the local network, specify `local` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-targetvpcsubnetid\n     */\n    readonly targetVpcSubnetId: string;\n\n    /**\n     * A brief description of the route.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-description\n     */\n    readonly description?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnClientVpnRouteProps`\n *\n * @param properties - the TypeScript properties of a `CfnClientVpnRouteProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnClientVpnRoutePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('clientVpnEndpointId', cdk.requiredValidator)(properties.clientVpnEndpointId));\n    errors.collect(cdk.propertyValidator('clientVpnEndpointId', cdk.validateString)(properties.clientVpnEndpointId));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('destinationCidrBlock', cdk.requiredValidator)(properties.destinationCidrBlock));\n    errors.collect(cdk.propertyValidator('destinationCidrBlock', cdk.validateString)(properties.destinationCidrBlock));\n    errors.collect(cdk.propertyValidator('targetVpcSubnetId', cdk.requiredValidator)(properties.targetVpcSubnetId));\n    errors.collect(cdk.propertyValidator('targetVpcSubnetId', cdk.validateString)(properties.targetVpcSubnetId));\n    return errors.wrap('supplied properties not correct for \"CfnClientVpnRouteProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::ClientVpnRoute` resource\n *\n * @param properties - the TypeScript properties of a `CfnClientVpnRouteProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::ClientVpnRoute` resource.\n */\n// @ts-ignore TS6133\nfunction cfnClientVpnRoutePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnClientVpnRoutePropsValidator(properties).assertSuccess();\n    return {\n        ClientVpnEndpointId: cdk.stringToCloudFormation(properties.clientVpnEndpointId),\n        DestinationCidrBlock: cdk.stringToCloudFormation(properties.destinationCidrBlock),\n        TargetVpcSubnetId: cdk.stringToCloudFormation(properties.targetVpcSubnetId),\n        Description: cdk.stringToCloudFormation(properties.description),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnClientVpnRoutePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnClientVpnRouteProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnClientVpnRouteProps>();\n    ret.addPropertyResult('clientVpnEndpointId', 'ClientVpnEndpointId', cfn_parse.FromCloudFormation.getString(properties.ClientVpnEndpointId));\n    ret.addPropertyResult('destinationCidrBlock', 'DestinationCidrBlock', cfn_parse.FromCloudFormation.getString(properties.DestinationCidrBlock));\n    ret.addPropertyResult('targetVpcSubnetId', 'TargetVpcSubnetId', cfn_parse.FromCloudFormation.getString(properties.TargetVpcSubnetId));\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::ClientVpnRoute`\n *\n * Specifies a network route to add to a Client VPN endpoint. Each Client VPN endpoint has a route table that describes the available destination network routes. Each route in the route table specifies the path for traffic to specific resources or networks.\n *\n * A target network association must be created before you can specify a route. If you're setting up all the components of a Client VPN endpoint at the same time, you must use the [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) to declare a dependency on the `AWS::EC2::ClientVpnTargetNetworkAssociation` resource.\n *\n * @cloudformationResource AWS::EC2::ClientVpnRoute\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html\n */\nexport class CfnClientVpnRoute extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::ClientVpnRoute\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnClientVpnRoute {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnClientVpnRoutePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnClientVpnRoute(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the Client VPN endpoint to which to add the route.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-clientvpnendpointid\n     */\n    public clientVpnEndpointId: string;\n\n    /**\n     * The IPv4 address range, in CIDR notation, of the route destination. For example:\n     *\n     * - To add a route for Internet access, enter `0.0.0.0/0`\n     * - To add a route for a peered VPC, enter the peered VPC's IPv4 CIDR range\n     * - To add a route for an on-premises network, enter the AWS Site-to-Site VPN connection's IPv4 CIDR range\n     * - To add a route for the local network, enter the client CIDR range\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-destinationcidrblock\n     */\n    public destinationCidrBlock: string;\n\n    /**\n     * The ID of the subnet through which you want to route traffic. The specified subnet must be an existing target network of the Client VPN endpoint.\n     *\n     * Alternatively, if you're adding a route for the local network, specify `local` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-targetvpcsubnetid\n     */\n    public targetVpcSubnetId: string;\n\n    /**\n     * A brief description of the route.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-description\n     */\n    public description: string | undefined;\n\n    /**\n     * Create a new `AWS::EC2::ClientVpnRoute`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnClientVpnRouteProps) {\n        super(scope, id, { type: CfnClientVpnRoute.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'clientVpnEndpointId', this);\n        cdk.requireProperty(props, 'destinationCidrBlock', this);\n        cdk.requireProperty(props, 'targetVpcSubnetId', this);\n\n        this.clientVpnEndpointId = props.clientVpnEndpointId;\n        this.destinationCidrBlock = props.destinationCidrBlock;\n        this.targetVpcSubnetId = props.targetVpcSubnetId;\n        this.description = props.description;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnClientVpnRoute.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            clientVpnEndpointId: this.clientVpnEndpointId,\n            destinationCidrBlock: this.destinationCidrBlock,\n            targetVpcSubnetId: this.targetVpcSubnetId,\n            description: this.description,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnClientVpnRoutePropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnClientVpnTargetNetworkAssociation`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html\n */\nexport interface CfnClientVpnTargetNetworkAssociationProps {\n\n    /**\n     * The ID of the Client VPN endpoint.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html#cfn-ec2-clientvpntargetnetworkassociation-clientvpnendpointid\n     */\n    readonly clientVpnEndpointId: string;\n\n    /**\n     * The ID of the subnet to associate with the Client VPN endpoint.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html#cfn-ec2-clientvpntargetnetworkassociation-subnetid\n     */\n    readonly subnetId: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnClientVpnTargetNetworkAssociationProps`\n *\n * @param properties - the TypeScript properties of a `CfnClientVpnTargetNetworkAssociationProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnClientVpnTargetNetworkAssociationPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('clientVpnEndpointId', cdk.requiredValidator)(properties.clientVpnEndpointId));\n    errors.collect(cdk.propertyValidator('clientVpnEndpointId', cdk.validateString)(properties.clientVpnEndpointId));\n    errors.collect(cdk.propertyValidator('subnetId', cdk.requiredValidator)(properties.subnetId));\n    errors.collect(cdk.propertyValidator('subnetId', cdk.validateString)(properties.subnetId));\n    return errors.wrap('supplied properties not correct for \"CfnClientVpnTargetNetworkAssociationProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::ClientVpnTargetNetworkAssociation` resource\n *\n * @param properties - the TypeScript properties of a `CfnClientVpnTargetNetworkAssociationProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::ClientVpnTargetNetworkAssociation` resource.\n */\n// @ts-ignore TS6133\nfunction cfnClientVpnTargetNetworkAssociationPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnClientVpnTargetNetworkAssociationPropsValidator(properties).assertSuccess();\n    return {\n        ClientVpnEndpointId: cdk.stringToCloudFormation(properties.clientVpnEndpointId),\n        SubnetId: cdk.stringToCloudFormation(properties.subnetId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnClientVpnTargetNetworkAssociationPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnClientVpnTargetNetworkAssociationProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnClientVpnTargetNetworkAssociationProps>();\n    ret.addPropertyResult('clientVpnEndpointId', 'ClientVpnEndpointId', cfn_parse.FromCloudFormation.getString(properties.ClientVpnEndpointId));\n    ret.addPropertyResult('subnetId', 'SubnetId', cfn_parse.FromCloudFormation.getString(properties.SubnetId));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::ClientVpnTargetNetworkAssociation`\n *\n * Specifies a target network to associate with a Client VPN endpoint. A target network is a subnet in a VPC. You can associate multiple subnets from the same VPC with a Client VPN endpoint. You can associate only one subnet in each Availability Zone. We recommend that you associate at least two subnets to provide Availability Zone redundancy.\n *\n * @cloudformationResource AWS::EC2::ClientVpnTargetNetworkAssociation\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html\n */\nexport class CfnClientVpnTargetNetworkAssociation extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::ClientVpnTargetNetworkAssociation\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnClientVpnTargetNetworkAssociation {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnClientVpnTargetNetworkAssociationPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnClientVpnTargetNetworkAssociation(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the Client VPN endpoint.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html#cfn-ec2-clientvpntargetnetworkassociation-clientvpnendpointid\n     */\n    public clientVpnEndpointId: string;\n\n    /**\n     * The ID of the subnet to associate with the Client VPN endpoint.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html#cfn-ec2-clientvpntargetnetworkassociation-subnetid\n     */\n    public subnetId: string;\n\n    /**\n     * Create a new `AWS::EC2::ClientVpnTargetNetworkAssociation`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnClientVpnTargetNetworkAssociationProps) {\n        super(scope, id, { type: CfnClientVpnTargetNetworkAssociation.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'clientVpnEndpointId', this);\n        cdk.requireProperty(props, 'subnetId', this);\n\n        this.clientVpnEndpointId = props.clientVpnEndpointId;\n        this.subnetId = props.subnetId;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnClientVpnTargetNetworkAssociation.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            clientVpnEndpointId: this.clientVpnEndpointId,\n            subnetId: this.subnetId,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnClientVpnTargetNetworkAssociationPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnCustomerGateway`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html\n */\nexport interface CfnCustomerGatewayProps {\n\n    /**\n     * For devices that support BGP, the customer gateway's BGP ASN.\n     *\n     * Default: 65000\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-bgpasn\n     */\n    readonly bgpAsn: number;\n\n    /**\n     * The Internet-routable IP address for the customer gateway's outside interface. The address must be static.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-ipaddress\n     */\n    readonly ipAddress: string;\n\n    /**\n     * The type of VPN connection that this customer gateway supports ( `ipsec.1` ).\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-type\n     */\n    readonly type: string;\n\n    /**\n     * One or more tags for the customer gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnCustomerGatewayProps`\n *\n * @param properties - the TypeScript properties of a `CfnCustomerGatewayProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnCustomerGatewayPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('bgpAsn', cdk.requiredValidator)(properties.bgpAsn));\n    errors.collect(cdk.propertyValidator('bgpAsn', cdk.validateNumber)(properties.bgpAsn));\n    errors.collect(cdk.propertyValidator('ipAddress', cdk.requiredValidator)(properties.ipAddress));\n    errors.collect(cdk.propertyValidator('ipAddress', cdk.validateString)(properties.ipAddress));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('type', cdk.requiredValidator)(properties.type));\n    errors.collect(cdk.propertyValidator('type', cdk.validateString)(properties.type));\n    return errors.wrap('supplied properties not correct for \"CfnCustomerGatewayProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::CustomerGateway` resource\n *\n * @param properties - the TypeScript properties of a `CfnCustomerGatewayProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::CustomerGateway` resource.\n */\n// @ts-ignore TS6133\nfunction cfnCustomerGatewayPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnCustomerGatewayPropsValidator(properties).assertSuccess();\n    return {\n        BgpAsn: cdk.numberToCloudFormation(properties.bgpAsn),\n        IpAddress: cdk.stringToCloudFormation(properties.ipAddress),\n        Type: cdk.stringToCloudFormation(properties.type),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnCustomerGatewayPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnCustomerGatewayProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnCustomerGatewayProps>();\n    ret.addPropertyResult('bgpAsn', 'BgpAsn', cfn_parse.FromCloudFormation.getNumber(properties.BgpAsn));\n    ret.addPropertyResult('ipAddress', 'IpAddress', cfn_parse.FromCloudFormation.getString(properties.IpAddress));\n    ret.addPropertyResult('type', 'Type', cfn_parse.FromCloudFormation.getString(properties.Type));\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::CustomerGateway`\n *\n * Specifies a customer gateway.\n *\n * @cloudformationResource AWS::EC2::CustomerGateway\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html\n */\nexport class CfnCustomerGateway extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::CustomerGateway\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnCustomerGateway {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnCustomerGatewayPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnCustomerGateway(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * For devices that support BGP, the customer gateway's BGP ASN.\n     *\n     * Default: 65000\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-bgpasn\n     */\n    public bgpAsn: number;\n\n    /**\n     * The Internet-routable IP address for the customer gateway's outside interface. The address must be static.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-ipaddress\n     */\n    public ipAddress: string;\n\n    /**\n     * The type of VPN connection that this customer gateway supports ( `ipsec.1` ).\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-type\n     */\n    public type: string;\n\n    /**\n     * One or more tags for the customer gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EC2::CustomerGateway`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnCustomerGatewayProps) {\n        super(scope, id, { type: CfnCustomerGateway.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'bgpAsn', this);\n        cdk.requireProperty(props, 'ipAddress', this);\n        cdk.requireProperty(props, 'type', this);\n\n        this.bgpAsn = props.bgpAsn;\n        this.ipAddress = props.ipAddress;\n        this.type = props.type;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::CustomerGateway\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnCustomerGateway.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            bgpAsn: this.bgpAsn,\n            ipAddress: this.ipAddress,\n            type: this.type,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnCustomerGatewayPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnDHCPOptions`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html\n */\nexport interface CfnDHCPOptionsProps {\n\n    /**\n     * This value is used to complete unqualified DNS hostnames. If you're using AmazonProvidedDNS in `us-east-1` , specify `ec2.internal` . If you're using AmazonProvidedDNS in another Region, specify *region* . `compute.internal` (for example, `ap-northeast-1.compute.internal` ). Otherwise, specify a domain name (for example, *MyCompany.com* ).\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-domainname\n     */\n    readonly domainName?: string;\n\n    /**\n     * The IPv4 addresses of up to four domain name servers, or `AmazonProvidedDNS` . The default is `AmazonProvidedDNS` . To have your instance receive a custom DNS hostname as specified in `DomainName` , you must set this property to a custom DNS server.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-domainnameservers\n     */\n    readonly domainNameServers?: string[];\n\n    /**\n     * The IPv4 addresses of up to four NetBIOS name servers.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-netbiosnameservers\n     */\n    readonly netbiosNameServers?: string[];\n\n    /**\n     * The NetBIOS node type (1, 2, 4, or 8). We recommend that you specify 2 (broadcast and multicast are not currently supported).\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-netbiosnodetype\n     */\n    readonly netbiosNodeType?: number;\n\n    /**\n     * The IPv4 addresses of up to four Network Time Protocol (NTP) servers.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-ntpservers\n     */\n    readonly ntpServers?: string[];\n\n    /**\n     * Any tags assigned to the DHCP options set.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnDHCPOptionsProps`\n *\n * @param properties - the TypeScript properties of a `CfnDHCPOptionsProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnDHCPOptionsPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('domainName', cdk.validateString)(properties.domainName));\n    errors.collect(cdk.propertyValidator('domainNameServers', cdk.listValidator(cdk.validateString))(properties.domainNameServers));\n    errors.collect(cdk.propertyValidator('netbiosNameServers', cdk.listValidator(cdk.validateString))(properties.netbiosNameServers));\n    errors.collect(cdk.propertyValidator('netbiosNodeType', cdk.validateNumber)(properties.netbiosNodeType));\n    errors.collect(cdk.propertyValidator('ntpServers', cdk.listValidator(cdk.validateString))(properties.ntpServers));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnDHCPOptionsProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::DHCPOptions` resource\n *\n * @param properties - the TypeScript properties of a `CfnDHCPOptionsProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::DHCPOptions` resource.\n */\n// @ts-ignore TS6133\nfunction cfnDHCPOptionsPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnDHCPOptionsPropsValidator(properties).assertSuccess();\n    return {\n        DomainName: cdk.stringToCloudFormation(properties.domainName),\n        DomainNameServers: cdk.listMapper(cdk.stringToCloudFormation)(properties.domainNameServers),\n        NetbiosNameServers: cdk.listMapper(cdk.stringToCloudFormation)(properties.netbiosNameServers),\n        NetbiosNodeType: cdk.numberToCloudFormation(properties.netbiosNodeType),\n        NtpServers: cdk.listMapper(cdk.stringToCloudFormation)(properties.ntpServers),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnDHCPOptionsPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnDHCPOptionsProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDHCPOptionsProps>();\n    ret.addPropertyResult('domainName', 'DomainName', properties.DomainName != null ? cfn_parse.FromCloudFormation.getString(properties.DomainName) : undefined);\n    ret.addPropertyResult('domainNameServers', 'DomainNameServers', properties.DomainNameServers != null ? cfn_parse.FromCloudFormation.getStringArray(properties.DomainNameServers) : undefined);\n    ret.addPropertyResult('netbiosNameServers', 'NetbiosNameServers', properties.NetbiosNameServers != null ? cfn_parse.FromCloudFormation.getStringArray(properties.NetbiosNameServers) : undefined);\n    ret.addPropertyResult('netbiosNodeType', 'NetbiosNodeType', properties.NetbiosNodeType != null ? cfn_parse.FromCloudFormation.getNumber(properties.NetbiosNodeType) : undefined);\n    ret.addPropertyResult('ntpServers', 'NtpServers', properties.NtpServers != null ? cfn_parse.FromCloudFormation.getStringArray(properties.NtpServers) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::DHCPOptions`\n *\n * Specifies a set of DHCP options for your VPC.\n *\n * You must specify at least one of the following properties: `DomainNameServers` , `NetbiosNameServers` , `NtpServers` . If you specify `NetbiosNameServers` , you must specify `NetbiosNodeType` .\n *\n * @cloudformationResource AWS::EC2::DHCPOptions\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html\n */\nexport class CfnDHCPOptions extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::DHCPOptions\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnDHCPOptions {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnDHCPOptionsPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnDHCPOptions(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the DHCP options set.\n     * @cloudformationAttribute DhcpOptionsId\n     */\n    public readonly attrDhcpOptionsId: string;\n\n    /**\n     * This value is used to complete unqualified DNS hostnames. If you're using AmazonProvidedDNS in `us-east-1` , specify `ec2.internal` . If you're using AmazonProvidedDNS in another Region, specify *region* . `compute.internal` (for example, `ap-northeast-1.compute.internal` ). Otherwise, specify a domain name (for example, *MyCompany.com* ).\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-domainname\n     */\n    public domainName: string | undefined;\n\n    /**\n     * The IPv4 addresses of up to four domain name servers, or `AmazonProvidedDNS` . The default is `AmazonProvidedDNS` . To have your instance receive a custom DNS hostname as specified in `DomainName` , you must set this property to a custom DNS server.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-domainnameservers\n     */\n    public domainNameServers: string[] | undefined;\n\n    /**\n     * The IPv4 addresses of up to four NetBIOS name servers.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-netbiosnameservers\n     */\n    public netbiosNameServers: string[] | undefined;\n\n    /**\n     * The NetBIOS node type (1, 2, 4, or 8). We recommend that you specify 2 (broadcast and multicast are not currently supported).\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-netbiosnodetype\n     */\n    public netbiosNodeType: number | undefined;\n\n    /**\n     * The IPv4 addresses of up to four Network Time Protocol (NTP) servers.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-ntpservers\n     */\n    public ntpServers: string[] | undefined;\n\n    /**\n     * Any tags assigned to the DHCP options set.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EC2::DHCPOptions`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnDHCPOptionsProps = {}) {\n        super(scope, id, { type: CfnDHCPOptions.CFN_RESOURCE_TYPE_NAME, properties: props });\n        this.attrDhcpOptionsId = cdk.Token.asString(this.getAtt('DhcpOptionsId'));\n\n        this.domainName = props.domainName;\n        this.domainNameServers = props.domainNameServers;\n        this.netbiosNameServers = props.netbiosNameServers;\n        this.netbiosNodeType = props.netbiosNodeType;\n        this.ntpServers = props.ntpServers;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::DHCPOptions\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnDHCPOptions.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            domainName: this.domainName,\n            domainNameServers: this.domainNameServers,\n            netbiosNameServers: this.netbiosNameServers,\n            netbiosNodeType: this.netbiosNodeType,\n            ntpServers: this.ntpServers,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnDHCPOptionsPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnEC2Fleet`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html\n */\nexport interface CfnEC2FleetProps {\n\n    /**\n     * The configuration for the EC2 Fleet.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-launchtemplateconfigs\n     */\n    readonly launchTemplateConfigs: Array<CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * The number of units to request.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-targetcapacityspecification\n     */\n    readonly targetCapacitySpecification: CfnEC2Fleet.TargetCapacitySpecificationRequestProperty | cdk.IResolvable;\n\n    /**\n     * Reserved.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-context\n     */\n    readonly context?: string;\n\n    /**\n     * Indicates whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2 Fleet.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-excesscapacityterminationpolicy\n     */\n    readonly excessCapacityTerminationPolicy?: string;\n\n    /**\n     * Describes the configuration of On-Demand Instances in an EC2 Fleet.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-ondemandoptions\n     */\n    readonly onDemandOptions?: CfnEC2Fleet.OnDemandOptionsRequestProperty | cdk.IResolvable;\n\n    /**\n     * Indicates whether EC2 Fleet should replace unhealthy Spot Instances. Supported only for fleets of type `maintain` . For more information, see [EC2 Fleet health checks](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/manage-ec2-fleet.html#ec2-fleet-health-checks) in the *Amazon EC2 User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-replaceunhealthyinstances\n     */\n    readonly replaceUnhealthyInstances?: boolean | cdk.IResolvable;\n\n    /**\n     * Describes the configuration of Spot Instances in an EC2 Fleet.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-spotoptions\n     */\n    readonly spotOptions?: CfnEC2Fleet.SpotOptionsRequestProperty | cdk.IResolvable;\n\n    /**\n     * The key-value pair for tagging the EC2 Fleet request on creation. For more information, see [Tagging your resources](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#tag-resources) .\n     *\n     * If the fleet type is `instant` , specify a resource type of `fleet` to tag the fleet or `instance` to tag the instances at launch.\n     *\n     * If the fleet type is `maintain` or `request` , specify a resource type of `fleet` to tag the fleet. You cannot specify a resource type of `instance` . To tag instances at launch, specify the tags in a [launch template](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html#create-launch-template) .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-tagspecifications\n     */\n    readonly tagSpecifications?: Array<CfnEC2Fleet.TagSpecificationProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * Indicates whether running instances should be terminated when the EC2 Fleet expires.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-terminateinstanceswithexpiration\n     */\n    readonly terminateInstancesWithExpiration?: boolean | cdk.IResolvable;\n\n    /**\n     * The fleet type. The default value is `maintain` .\n     *\n     * - `maintain` - The EC2 Fleet places an asynchronous request for your desired capacity, and continues to maintain your desired Spot capacity by replenishing interrupted Spot Instances.\n     * - `request` - The EC2 Fleet places an asynchronous one-time request for your desired capacity, but does submit Spot requests in alternative capacity pools if Spot capacity is unavailable, and does not maintain Spot capacity if Spot Instances are interrupted.\n     * - `instant` - The EC2 Fleet places a synchronous one-time request for your desired capacity, and returns errors for any instances that could not be launched.\n     *\n     * For more information, see [EC2 Fleet request types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-request-type.html) in the *Amazon EC2 User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-type\n     */\n    readonly type?: string;\n\n    /**\n     * The start date and time of the request, in UTC format (for example, *YYYY* - *MM* - *DD* T *HH* : *MM* : *SS* Z). The default is to start fulfilling the request immediately.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-validfrom\n     */\n    readonly validFrom?: string;\n\n    /**\n     * The end date and time of the request, in UTC format (for example, *YYYY* - *MM* - *DD* T *HH* : *MM* : *SS* Z). At this point, no new EC2 Fleet requests are placed or able to fulfill the request. If no value is specified, the request remains until you cancel it.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-validuntil\n     */\n    readonly validUntil?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnEC2FleetProps`\n *\n * @param properties - the TypeScript properties of a `CfnEC2FleetProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnEC2FleetPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('context', cdk.validateString)(properties.context));\n    errors.collect(cdk.propertyValidator('excessCapacityTerminationPolicy', cdk.validateString)(properties.excessCapacityTerminationPolicy));\n    errors.collect(cdk.propertyValidator('launchTemplateConfigs', cdk.requiredValidator)(properties.launchTemplateConfigs));\n    errors.collect(cdk.propertyValidator('launchTemplateConfigs', cdk.listValidator(CfnEC2Fleet_FleetLaunchTemplateConfigRequestPropertyValidator))(properties.launchTemplateConfigs));\n    errors.collect(cdk.propertyValidator('onDemandOptions', CfnEC2Fleet_OnDemandOptionsRequestPropertyValidator)(properties.onDemandOptions));\n    errors.collect(cdk.propertyValidator('replaceUnhealthyInstances', cdk.validateBoolean)(properties.replaceUnhealthyInstances));\n    errors.collect(cdk.propertyValidator('spotOptions', CfnEC2Fleet_SpotOptionsRequestPropertyValidator)(properties.spotOptions));\n    errors.collect(cdk.propertyValidator('tagSpecifications', cdk.listValidator(CfnEC2Fleet_TagSpecificationPropertyValidator))(properties.tagSpecifications));\n    errors.collect(cdk.propertyValidator('targetCapacitySpecification', cdk.requiredValidator)(properties.targetCapacitySpecification));\n    errors.collect(cdk.propertyValidator('targetCapacitySpecification', CfnEC2Fleet_TargetCapacitySpecificationRequestPropertyValidator)(properties.targetCapacitySpecification));\n    errors.collect(cdk.propertyValidator('terminateInstancesWithExpiration', cdk.validateBoolean)(properties.terminateInstancesWithExpiration));\n    errors.collect(cdk.propertyValidator('type', cdk.validateString)(properties.type));\n    errors.collect(cdk.propertyValidator('validFrom', cdk.validateString)(properties.validFrom));\n    errors.collect(cdk.propertyValidator('validUntil', cdk.validateString)(properties.validUntil));\n    return errors.wrap('supplied properties not correct for \"CfnEC2FleetProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet` resource\n *\n * @param properties - the TypeScript properties of a `CfnEC2FleetProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEC2FleetPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEC2FleetPropsValidator(properties).assertSuccess();\n    return {\n        LaunchTemplateConfigs: cdk.listMapper(cfnEC2FleetFleetLaunchTemplateConfigRequestPropertyToCloudFormation)(properties.launchTemplateConfigs),\n        TargetCapacitySpecification: cfnEC2FleetTargetCapacitySpecificationRequestPropertyToCloudFormation(properties.targetCapacitySpecification),\n        Context: cdk.stringToCloudFormation(properties.context),\n        ExcessCapacityTerminationPolicy: cdk.stringToCloudFormation(properties.excessCapacityTerminationPolicy),\n        OnDemandOptions: cfnEC2FleetOnDemandOptionsRequestPropertyToCloudFormation(properties.onDemandOptions),\n        ReplaceUnhealthyInstances: cdk.booleanToCloudFormation(properties.replaceUnhealthyInstances),\n        SpotOptions: cfnEC2FleetSpotOptionsRequestPropertyToCloudFormation(properties.spotOptions),\n        TagSpecifications: cdk.listMapper(cfnEC2FleetTagSpecificationPropertyToCloudFormation)(properties.tagSpecifications),\n        TerminateInstancesWithExpiration: cdk.booleanToCloudFormation(properties.terminateInstancesWithExpiration),\n        Type: cdk.stringToCloudFormation(properties.type),\n        ValidFrom: cdk.stringToCloudFormation(properties.validFrom),\n        ValidUntil: cdk.stringToCloudFormation(properties.validUntil),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEC2FleetPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEC2FleetProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEC2FleetProps>();\n    ret.addPropertyResult('launchTemplateConfigs', 'LaunchTemplateConfigs', cfn_parse.FromCloudFormation.getArray(CfnEC2FleetFleetLaunchTemplateConfigRequestPropertyFromCloudFormation)(properties.LaunchTemplateConfigs));\n    ret.addPropertyResult('targetCapacitySpecification', 'TargetCapacitySpecification', CfnEC2FleetTargetCapacitySpecificationRequestPropertyFromCloudFormation(properties.TargetCapacitySpecification));\n    ret.addPropertyResult('context', 'Context', properties.Context != null ? cfn_parse.FromCloudFormation.getString(properties.Context) : undefined);\n    ret.addPropertyResult('excessCapacityTerminationPolicy', 'ExcessCapacityTerminationPolicy', properties.ExcessCapacityTerminationPolicy != null ? cfn_parse.FromCloudFormation.getString(properties.ExcessCapacityTerminationPolicy) : undefined);\n    ret.addPropertyResult('onDemandOptions', 'OnDemandOptions', properties.OnDemandOptions != null ? CfnEC2FleetOnDemandOptionsRequestPropertyFromCloudFormation(properties.OnDemandOptions) : undefined);\n    ret.addPropertyResult('replaceUnhealthyInstances', 'ReplaceUnhealthyInstances', properties.ReplaceUnhealthyInstances != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ReplaceUnhealthyInstances) : undefined);\n    ret.addPropertyResult('spotOptions', 'SpotOptions', properties.SpotOptions != null ? CfnEC2FleetSpotOptionsRequestPropertyFromCloudFormation(properties.SpotOptions) : undefined);\n    ret.addPropertyResult('tagSpecifications', 'TagSpecifications', properties.TagSpecifications != null ? cfn_parse.FromCloudFormation.getArray(CfnEC2FleetTagSpecificationPropertyFromCloudFormation)(properties.TagSpecifications) : undefined);\n    ret.addPropertyResult('terminateInstancesWithExpiration', 'TerminateInstancesWithExpiration', properties.TerminateInstancesWithExpiration != null ? cfn_parse.FromCloudFormation.getBoolean(properties.TerminateInstancesWithExpiration) : undefined);\n    ret.addPropertyResult('type', 'Type', properties.Type != null ? cfn_parse.FromCloudFormation.getString(properties.Type) : undefined);\n    ret.addPropertyResult('validFrom', 'ValidFrom', properties.ValidFrom != null ? cfn_parse.FromCloudFormation.getString(properties.ValidFrom) : undefined);\n    ret.addPropertyResult('validUntil', 'ValidUntil', properties.ValidUntil != null ? cfn_parse.FromCloudFormation.getString(properties.ValidUntil) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::EC2Fleet`\n *\n * Specifies the configuration information to launch a fleet--or group--of instances. An EC2 Fleet can launch multiple instance types across multiple Availability Zones, using the On-Demand Instance, Reserved Instance, and Spot Instance purchasing models together. Using EC2 Fleet, you can define separate On-Demand and Spot capacity targets, specify the instance types that work best for your applications, and specify how Amazon EC2 should distribute your fleet capacity within each purchasing model. For more information, see [Launching an EC2 Fleet](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet.html) in the *Amazon EC2 User Guide for Linux Instances* .\n *\n * @cloudformationResource AWS::EC2::EC2Fleet\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html\n */\nexport class CfnEC2Fleet extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::EC2Fleet\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnEC2Fleet {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnEC2FleetPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnEC2Fleet(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the EC2 Fleet.\n     * @cloudformationAttribute FleetId\n     */\n    public readonly attrFleetId: string;\n\n    /**\n     * The configuration for the EC2 Fleet.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-launchtemplateconfigs\n     */\n    public launchTemplateConfigs: Array<CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * The number of units to request.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-targetcapacityspecification\n     */\n    public targetCapacitySpecification: CfnEC2Fleet.TargetCapacitySpecificationRequestProperty | cdk.IResolvable;\n\n    /**\n     * Reserved.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-context\n     */\n    public context: string | undefined;\n\n    /**\n     * Indicates whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2 Fleet.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-excesscapacityterminationpolicy\n     */\n    public excessCapacityTerminationPolicy: string | undefined;\n\n    /**\n     * Describes the configuration of On-Demand Instances in an EC2 Fleet.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-ondemandoptions\n     */\n    public onDemandOptions: CfnEC2Fleet.OnDemandOptionsRequestProperty | cdk.IResolvable | undefined;\n\n    /**\n     * Indicates whether EC2 Fleet should replace unhealthy Spot Instances. Supported only for fleets of type `maintain` . For more information, see [EC2 Fleet health checks](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/manage-ec2-fleet.html#ec2-fleet-health-checks) in the *Amazon EC2 User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-replaceunhealthyinstances\n     */\n    public replaceUnhealthyInstances: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * Describes the configuration of Spot Instances in an EC2 Fleet.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-spotoptions\n     */\n    public spotOptions: CfnEC2Fleet.SpotOptionsRequestProperty | cdk.IResolvable | undefined;\n\n    /**\n     * The key-value pair for tagging the EC2 Fleet request on creation. For more information, see [Tagging your resources](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#tag-resources) .\n     *\n     * If the fleet type is `instant` , specify a resource type of `fleet` to tag the fleet or `instance` to tag the instances at launch.\n     *\n     * If the fleet type is `maintain` or `request` , specify a resource type of `fleet` to tag the fleet. You cannot specify a resource type of `instance` . To tag instances at launch, specify the tags in a [launch template](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html#create-launch-template) .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-tagspecifications\n     */\n    public tagSpecifications: Array<CfnEC2Fleet.TagSpecificationProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n    /**\n     * Indicates whether running instances should be terminated when the EC2 Fleet expires.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-terminateinstanceswithexpiration\n     */\n    public terminateInstancesWithExpiration: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * The fleet type. The default value is `maintain` .\n     *\n     * - `maintain` - The EC2 Fleet places an asynchronous request for your desired capacity, and continues to maintain your desired Spot capacity by replenishing interrupted Spot Instances.\n     * - `request` - The EC2 Fleet places an asynchronous one-time request for your desired capacity, but does submit Spot requests in alternative capacity pools if Spot capacity is unavailable, and does not maintain Spot capacity if Spot Instances are interrupted.\n     * - `instant` - The EC2 Fleet places a synchronous one-time request for your desired capacity, and returns errors for any instances that could not be launched.\n     *\n     * For more information, see [EC2 Fleet request types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-request-type.html) in the *Amazon EC2 User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-type\n     */\n    public type: string | undefined;\n\n    /**\n     * The start date and time of the request, in UTC format (for example, *YYYY* - *MM* - *DD* T *HH* : *MM* : *SS* Z). The default is to start fulfilling the request immediately.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-validfrom\n     */\n    public validFrom: string | undefined;\n\n    /**\n     * The end date and time of the request, in UTC format (for example, *YYYY* - *MM* - *DD* T *HH* : *MM* : *SS* Z). At this point, no new EC2 Fleet requests are placed or able to fulfill the request. If no value is specified, the request remains until you cancel it.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-validuntil\n     */\n    public validUntil: string | undefined;\n\n    /**\n     * Create a new `AWS::EC2::EC2Fleet`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnEC2FleetProps) {\n        super(scope, id, { type: CfnEC2Fleet.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'launchTemplateConfigs', this);\n        cdk.requireProperty(props, 'targetCapacitySpecification', this);\n        this.attrFleetId = cdk.Token.asString(this.getAtt('FleetId'));\n\n        this.launchTemplateConfigs = props.launchTemplateConfigs;\n        this.targetCapacitySpecification = props.targetCapacitySpecification;\n        this.context = props.context;\n        this.excessCapacityTerminationPolicy = props.excessCapacityTerminationPolicy;\n        this.onDemandOptions = props.onDemandOptions;\n        this.replaceUnhealthyInstances = props.replaceUnhealthyInstances;\n        this.spotOptions = props.spotOptions;\n        this.tagSpecifications = props.tagSpecifications;\n        this.terminateInstancesWithExpiration = props.terminateInstancesWithExpiration;\n        this.type = props.type;\n        this.validFrom = props.validFrom;\n        this.validUntil = props.validUntil;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnEC2Fleet.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            launchTemplateConfigs: this.launchTemplateConfigs,\n            targetCapacitySpecification: this.targetCapacitySpecification,\n            context: this.context,\n            excessCapacityTerminationPolicy: this.excessCapacityTerminationPolicy,\n            onDemandOptions: this.onDemandOptions,\n            replaceUnhealthyInstances: this.replaceUnhealthyInstances,\n            spotOptions: this.spotOptions,\n            tagSpecifications: this.tagSpecifications,\n            terminateInstancesWithExpiration: this.terminateInstancesWithExpiration,\n            type: this.type,\n            validFrom: this.validFrom,\n            validUntil: this.validUntil,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnEC2FleetPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnEC2Fleet {\n    /**\n     * The minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips) on an instance. To exclude accelerator-enabled instance types, set `Max` to `0` .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-acceleratorcountrequest.html\n     */\n    export interface AcceleratorCountRequestProperty {\n        /**\n         * The maximum number of accelerators. To specify no maximum limit, omit this parameter. To exclude accelerator-enabled instance types, set `Max` to `0` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-acceleratorcountrequest.html#cfn-ec2-ec2fleet-acceleratorcountrequest-max\n         */\n        readonly max?: number;\n        /**\n         * The minimum number of accelerators. To specify no minimum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-acceleratorcountrequest.html#cfn-ec2-ec2fleet-acceleratorcountrequest-min\n         */\n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AcceleratorCountRequestProperty`\n *\n * @param properties - the TypeScript properties of a `AcceleratorCountRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEC2Fleet_AcceleratorCountRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"AcceleratorCountRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.AcceleratorCountRequest` resource\n *\n * @param properties - the TypeScript properties of a `AcceleratorCountRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.AcceleratorCountRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEC2FleetAcceleratorCountRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEC2Fleet_AcceleratorCountRequestPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEC2FleetAcceleratorCountRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEC2Fleet.AcceleratorCountRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEC2Fleet.AcceleratorCountRequestProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEC2Fleet {\n    /**\n     * The minimum and maximum amount of total accelerator memory, in MiB.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-acceleratortotalmemorymibrequest.html\n     */\n    export interface AcceleratorTotalMemoryMiBRequestProperty {\n        /**\n         * The maximum amount of accelerator memory, in MiB. To specify no maximum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-acceleratortotalmemorymibrequest.html#cfn-ec2-ec2fleet-acceleratortotalmemorymibrequest-max\n         */\n        readonly max?: number;\n        /**\n         * The minimum amount of accelerator memory, in MiB. To specify no minimum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-acceleratortotalmemorymibrequest.html#cfn-ec2-ec2fleet-acceleratortotalmemorymibrequest-min\n         */\n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AcceleratorTotalMemoryMiBRequestProperty`\n *\n * @param properties - the TypeScript properties of a `AcceleratorTotalMemoryMiBRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEC2Fleet_AcceleratorTotalMemoryMiBRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"AcceleratorTotalMemoryMiBRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.AcceleratorTotalMemoryMiBRequest` resource\n *\n * @param properties - the TypeScript properties of a `AcceleratorTotalMemoryMiBRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.AcceleratorTotalMemoryMiBRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEC2FleetAcceleratorTotalMemoryMiBRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEC2Fleet_AcceleratorTotalMemoryMiBRequestPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEC2FleetAcceleratorTotalMemoryMiBRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEC2Fleet.AcceleratorTotalMemoryMiBRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEC2Fleet.AcceleratorTotalMemoryMiBRequestProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEC2Fleet {\n    /**\n     * The minimum and maximum baseline bandwidth to Amazon EBS, in Mbps. For more information, see [Amazon EBS\u2013optimized instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html) in the *Amazon EC2 User Guide* .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-baselineebsbandwidthmbpsrequest.html\n     */\n    export interface BaselineEbsBandwidthMbpsRequestProperty {\n        /**\n         * The maximum baseline bandwidth, in Mbps. To specify no maximum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-baselineebsbandwidthmbpsrequest.html#cfn-ec2-ec2fleet-baselineebsbandwidthmbpsrequest-max\n         */\n        readonly max?: number;\n        /**\n         * The minimum baseline bandwidth, in Mbps. To specify no minimum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-baselineebsbandwidthmbpsrequest.html#cfn-ec2-ec2fleet-baselineebsbandwidthmbpsrequest-min\n         */\n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `BaselineEbsBandwidthMbpsRequestProperty`\n *\n * @param properties - the TypeScript properties of a `BaselineEbsBandwidthMbpsRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEC2Fleet_BaselineEbsBandwidthMbpsRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"BaselineEbsBandwidthMbpsRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.BaselineEbsBandwidthMbpsRequest` resource\n *\n * @param properties - the TypeScript properties of a `BaselineEbsBandwidthMbpsRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.BaselineEbsBandwidthMbpsRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEC2FleetBaselineEbsBandwidthMbpsRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEC2Fleet_BaselineEbsBandwidthMbpsRequestPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEC2FleetBaselineEbsBandwidthMbpsRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEC2Fleet.BaselineEbsBandwidthMbpsRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEC2Fleet.BaselineEbsBandwidthMbpsRequestProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEC2Fleet {\n    /**\n     * The Spot Instance replacement strategy to use when Amazon EC2 emits a rebalance notification signal that your Spot Instance is at an elevated risk of being interrupted. For more information, see [Capacity rebalancing](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-capacity-rebalance.html) in the *Amazon EC2 User Guide* .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-capacityrebalance.html\n     */\n    export interface CapacityRebalanceProperty {\n        /**\n         * The replacement strategy to use. Only available for fleets of type `maintain` .\n         *\n         * `launch` - EC2 Fleet launches a replacement Spot Instance when a rebalance notification is emitted for an existing Spot Instance in the fleet. EC2 Fleet does not terminate the instances that receive a rebalance notification. You can terminate the old instances, or you can leave them running. You are charged for all instances while they are running.\n         *\n         * `launch-before-terminate` - EC2 Fleet launches a replacement Spot Instance when a rebalance notification is emitted for an existing Spot Instance in the fleet, and then, after a delay that you specify (in `TerminationDelay` ), terminates the instances that received a rebalance notification.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-capacityrebalance.html#cfn-ec2-ec2fleet-capacityrebalance-replacementstrategy\n         */\n        readonly replacementStrategy?: string;\n        /**\n         * The amount of time (in seconds) that Amazon EC2 waits before terminating the old Spot Instance after launching a new replacement Spot Instance.\n         *\n         * Required when `ReplacementStrategy` is set to `launch-before-terminate` .\n         *\n         * Not valid when `ReplacementStrategy` is set to `launch` .\n         *\n         * Valid values: Minimum value of `120` seconds. Maximum value of `7200` seconds.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-capacityrebalance.html#cfn-ec2-ec2fleet-capacityrebalance-terminationdelay\n         */\n        readonly terminationDelay?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `CapacityRebalanceProperty`\n *\n * @param properties - the TypeScript properties of a `CapacityRebalanceProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEC2Fleet_CapacityRebalancePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('replacementStrategy', cdk.validateString)(properties.replacementStrategy));\n    errors.collect(cdk.propertyValidator('terminationDelay', cdk.validateNumber)(properties.terminationDelay));\n    return errors.wrap('supplied properties not correct for \"CapacityRebalanceProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.CapacityRebalance` resource\n *\n * @param properties - the TypeScript properties of a `CapacityRebalanceProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.CapacityRebalance` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEC2FleetCapacityRebalancePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEC2Fleet_CapacityRebalancePropertyValidator(properties).assertSuccess();\n    return {\n        ReplacementStrategy: cdk.stringToCloudFormation(properties.replacementStrategy),\n        TerminationDelay: cdk.numberToCloudFormation(properties.terminationDelay),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEC2FleetCapacityRebalancePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEC2Fleet.CapacityRebalanceProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEC2Fleet.CapacityRebalanceProperty>();\n    ret.addPropertyResult('replacementStrategy', 'ReplacementStrategy', properties.ReplacementStrategy != null ? cfn_parse.FromCloudFormation.getString(properties.ReplacementStrategy) : undefined);\n    ret.addPropertyResult('terminationDelay', 'TerminationDelay', properties.TerminationDelay != null ? cfn_parse.FromCloudFormation.getNumber(properties.TerminationDelay) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEC2Fleet {\n    /**\n     * Describes the strategy for using unused Capacity Reservations for fulfilling On-Demand capacity.\n     *\n     * > This strategy can only be used if the EC2 Fleet is of type `instant` .\n     *\n     * For more information about Capacity Reservations, see [On-Demand Capacity Reservations](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-capacity-reservations.html) in the *Amazon EC2 User Guide* . For examples of using Capacity Reservations in an EC2 Fleet, see [EC2 Fleet example configurations](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-examples.html) in the *Amazon EC2 User Guide* .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-capacityreservationoptionsrequest.html\n     */\n    export interface CapacityReservationOptionsRequestProperty {\n        /**\n         * Indicates whether to use unused Capacity Reservations for fulfilling On-Demand capacity.\n         *\n         * If you specify `use-capacity-reservations-first` , the fleet uses unused Capacity Reservations to fulfill On-Demand capacity up to the target On-Demand capacity. If multiple instance pools have unused Capacity Reservations, the On-Demand allocation strategy ( `lowest-price` or `prioritized` ) is applied. If the number of unused Capacity Reservations is less than the On-Demand target capacity, the remaining On-Demand target capacity is launched according to the On-Demand allocation strategy ( `lowest-price` or `prioritized` ).\n         *\n         * If you do not specify a value, the fleet fulfils the On-Demand capacity according to the chosen On-Demand allocation strategy.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-capacityreservationoptionsrequest.html#cfn-ec2-ec2fleet-capacityreservationoptionsrequest-usagestrategy\n         */\n        readonly usageStrategy?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `CapacityReservationOptionsRequestProperty`\n *\n * @param properties - the TypeScript properties of a `CapacityReservationOptionsRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEC2Fleet_CapacityReservationOptionsRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('usageStrategy', cdk.validateString)(properties.usageStrategy));\n    return errors.wrap('supplied properties not correct for \"CapacityReservationOptionsRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.CapacityReservationOptionsRequest` resource\n *\n * @param properties - the TypeScript properties of a `CapacityReservationOptionsRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.CapacityReservationOptionsRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEC2FleetCapacityReservationOptionsRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEC2Fleet_CapacityReservationOptionsRequestPropertyValidator(properties).assertSuccess();\n    return {\n        UsageStrategy: cdk.stringToCloudFormation(properties.usageStrategy),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEC2FleetCapacityReservationOptionsRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEC2Fleet.CapacityReservationOptionsRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEC2Fleet.CapacityReservationOptionsRequestProperty>();\n    ret.addPropertyResult('usageStrategy', 'UsageStrategy', properties.UsageStrategy != null ? cfn_parse.FromCloudFormation.getString(properties.UsageStrategy) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEC2Fleet {\n    /**\n     * Specifies a launch template and overrides for an EC2 Fleet.\n     *\n     * `FleetLaunchTemplateConfigRequest` is a property of the [AWS::EC2::EC2Fleet](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html) resource.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateconfigrequest.html\n     */\n    export interface FleetLaunchTemplateConfigRequestProperty {\n        /**\n         * The launch template to use. You must specify either the launch template ID or launch template name in the request.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateconfigrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateconfigrequest-launchtemplatespecification\n         */\n        readonly launchTemplateSpecification?: CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty | cdk.IResolvable;\n        /**\n         * Any parameters that you specify override the same parameters in the launch template.\n         *\n         * For fleets of type `request` and `maintain` , a maximum of 300 items is allowed across all launch templates.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateconfigrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateconfigrequest-overrides\n         */\n        readonly overrides?: Array<CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty | cdk.IResolvable> | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `FleetLaunchTemplateConfigRequestProperty`\n *\n * @param properties - the TypeScript properties of a `FleetLaunchTemplateConfigRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEC2Fleet_FleetLaunchTemplateConfigRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('launchTemplateSpecification', CfnEC2Fleet_FleetLaunchTemplateSpecificationRequestPropertyValidator)(properties.launchTemplateSpecification));\n    errors.collect(cdk.propertyValidator('overrides', cdk.listValidator(CfnEC2Fleet_FleetLaunchTemplateOverridesRequestPropertyValidator))(properties.overrides));\n    return errors.wrap('supplied properties not correct for \"FleetLaunchTemplateConfigRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.FleetLaunchTemplateConfigRequest` resource\n *\n * @param properties - the TypeScript properties of a `FleetLaunchTemplateConfigRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.FleetLaunchTemplateConfigRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEC2FleetFleetLaunchTemplateConfigRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEC2Fleet_FleetLaunchTemplateConfigRequestPropertyValidator(properties).assertSuccess();\n    return {\n        LaunchTemplateSpecification: cfnEC2FleetFleetLaunchTemplateSpecificationRequestPropertyToCloudFormation(properties.launchTemplateSpecification),\n        Overrides: cdk.listMapper(cfnEC2FleetFleetLaunchTemplateOverridesRequestPropertyToCloudFormation)(properties.overrides),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEC2FleetFleetLaunchTemplateConfigRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty>();\n    ret.addPropertyResult('launchTemplateSpecification', 'LaunchTemplateSpecification', properties.LaunchTemplateSpecification != null ? CfnEC2FleetFleetLaunchTemplateSpecificationRequestPropertyFromCloudFormation(properties.LaunchTemplateSpecification) : undefined);\n    ret.addPropertyResult('overrides', 'Overrides', properties.Overrides != null ? cfn_parse.FromCloudFormation.getArray(CfnEC2FleetFleetLaunchTemplateOverridesRequestPropertyFromCloudFormation)(properties.Overrides) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEC2Fleet {\n    /**\n     * Specifies overrides for a launch template for an EC2 Fleet.\n     *\n     * `FleetLaunchTemplateOverridesRequest` is a property of the [FleetLaunchTemplateConfigRequest](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateconfigrequest.html) property type.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html\n     */\n    export interface FleetLaunchTemplateOverridesRequestProperty {\n        /**\n         * The Availability Zone in which to launch the instances.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-availabilityzone\n         */\n        readonly availabilityZone?: string;\n        /**\n         * The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with those attributes.\n         *\n         * > If you specify `InstanceRequirements` , you can't specify `InstanceTypes` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-instancerequirements\n         */\n        readonly instanceRequirements?: CfnEC2Fleet.InstanceRequirementsRequestProperty | cdk.IResolvable;\n        /**\n         * The instance type.\n         *\n         * > If you specify `InstanceTypes` , you can't specify `InstanceRequirements` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-instancetype\n         */\n        readonly instanceType?: string;\n        /**\n         * The maximum price per unit hour that you are willing to pay for a Spot Instance.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-maxprice\n         */\n        readonly maxPrice?: string;\n        /**\n         * The location where the instance launched, if applicable.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-placement\n         */\n        readonly placement?: CfnEC2Fleet.PlacementProperty | cdk.IResolvable;\n        /**\n         * The priority for the launch template override. The highest priority is launched first.\n         *\n         * If the On-Demand `AllocationStrategy` is set to `prioritized` , EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity.\n         *\n         * If the Spot `AllocationStrategy` is set to `capacity-optimized-prioritized` , EC2 Fleet uses priority on a best-effort basis to determine which launch template override to use in fulfilling Spot capacity, but optimizes for capacity first.\n         *\n         * Valid values are whole numbers starting at `0` . The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. You can set the same priority for different launch template overrides.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-priority\n         */\n        readonly priority?: number;\n        /**\n         * The IDs of the subnets in which to launch the instances. Separate multiple subnet IDs using commas (for example, `subnet-1234abcdeexample1, subnet-0987cdef6example2` ). A request of type `instant` can have only one subnet ID.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-subnetid\n         */\n        readonly subnetId?: string;\n        /**\n         * The number of units provided by the specified instance type.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-weightedcapacity\n         */\n        readonly weightedCapacity?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `FleetLaunchTemplateOverridesRequestProperty`\n *\n * @param properties - the TypeScript properties of a `FleetLaunchTemplateOverridesRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEC2Fleet_FleetLaunchTemplateOverridesRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('availabilityZone', cdk.validateString)(properties.availabilityZone));\n    errors.collect(cdk.propertyValidator('instanceRequirements', CfnEC2Fleet_InstanceRequirementsRequestPropertyValidator)(properties.instanceRequirements));\n    errors.collect(cdk.propertyValidator('instanceType', cdk.validateString)(properties.instanceType));\n    errors.collect(cdk.propertyValidator('maxPrice', cdk.validateString)(properties.maxPrice));\n    errors.collect(cdk.propertyValidator('placement', CfnEC2Fleet_PlacementPropertyValidator)(properties.placement));\n    errors.collect(cdk.propertyValidator('priority', cdk.validateNumber)(properties.priority));\n    errors.collect(cdk.propertyValidator('subnetId', cdk.validateString)(properties.subnetId));\n    errors.collect(cdk.propertyValidator('weightedCapacity', cdk.validateNumber)(properties.weightedCapacity));\n    return errors.wrap('supplied properties not correct for \"FleetLaunchTemplateOverridesRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.FleetLaunchTemplateOverridesRequest` resource\n *\n * @param properties - the TypeScript properties of a `FleetLaunchTemplateOverridesRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.FleetLaunchTemplateOverridesRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEC2FleetFleetLaunchTemplateOverridesRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEC2Fleet_FleetLaunchTemplateOverridesRequestPropertyValidator(properties).assertSuccess();\n    return {\n        AvailabilityZone: cdk.stringToCloudFormation(properties.availabilityZone),\n        InstanceRequirements: cfnEC2FleetInstanceRequirementsRequestPropertyToCloudFormation(properties.instanceRequirements),\n        InstanceType: cdk.stringToCloudFormation(properties.instanceType),\n        MaxPrice: cdk.stringToCloudFormation(properties.maxPrice),\n        Placement: cfnEC2FleetPlacementPropertyToCloudFormation(properties.placement),\n        Priority: cdk.numberToCloudFormation(properties.priority),\n        SubnetId: cdk.stringToCloudFormation(properties.subnetId),\n        WeightedCapacity: cdk.numberToCloudFormation(properties.weightedCapacity),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEC2FleetFleetLaunchTemplateOverridesRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty>();\n    ret.addPropertyResult('availabilityZone', 'AvailabilityZone', properties.AvailabilityZone != null ? cfn_parse.FromCloudFormation.getString(properties.AvailabilityZone) : undefined);\n    ret.addPropertyResult('instanceRequirements', 'InstanceRequirements', properties.InstanceRequirements != null ? CfnEC2FleetInstanceRequirementsRequestPropertyFromCloudFormation(properties.InstanceRequirements) : undefined);\n    ret.addPropertyResult('instanceType', 'InstanceType', properties.InstanceType != null ? cfn_parse.FromCloudFormation.getString(properties.InstanceType) : undefined);\n    ret.addPropertyResult('maxPrice', 'MaxPrice', properties.MaxPrice != null ? cfn_parse.FromCloudFormation.getString(properties.MaxPrice) : undefined);\n    ret.addPropertyResult('placement', 'Placement', properties.Placement != null ? CfnEC2FleetPlacementPropertyFromCloudFormation(properties.Placement) : undefined);\n    ret.addPropertyResult('priority', 'Priority', properties.Priority != null ? cfn_parse.FromCloudFormation.getNumber(properties.Priority) : undefined);\n    ret.addPropertyResult('subnetId', 'SubnetId', properties.SubnetId != null ? cfn_parse.FromCloudFormation.getString(properties.SubnetId) : undefined);\n    ret.addPropertyResult('weightedCapacity', 'WeightedCapacity', properties.WeightedCapacity != null ? cfn_parse.FromCloudFormation.getNumber(properties.WeightedCapacity) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEC2Fleet {\n    /**\n     * Specifies the launch template to use for an EC2 Fleet. You must specify either the launch template ID or launch template name in the request.\n     *\n     * `FleetLaunchTemplateSpecificationRequest` is a property of the [FleetLaunchTemplateConfigRequest](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateconfigrequest.html) property type.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest.html\n     */\n    export interface FleetLaunchTemplateSpecificationRequestProperty {\n        /**\n         * The ID of the launch template. If you specify the template ID, you can't specify the template name.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest-launchtemplateid\n         */\n        readonly launchTemplateId?: string;\n        /**\n         * The name of the launch template. If you specify the template name, you can't specify the template ID.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest-launchtemplatename\n         */\n        readonly launchTemplateName?: string;\n        /**\n         * The launch template version number, `$Latest` , or `$Default` . You must specify a value, otherwise the request fails.\n         *\n         * If the value is `$Latest` , Amazon EC2 uses the latest version of the launch template.\n         *\n         * If the value is `$Default` , Amazon EC2 uses the default version of the launch template.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest-version\n         */\n        readonly version?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `FleetLaunchTemplateSpecificationRequestProperty`\n *\n * @param properties - the TypeScript properties of a `FleetLaunchTemplateSpecificationRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEC2Fleet_FleetLaunchTemplateSpecificationRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('launchTemplateId', cdk.validateString)(properties.launchTemplateId));\n    errors.collect(cdk.propertyValidator('launchTemplateName', cdk.validateString)(properties.launchTemplateName));\n    errors.collect(cdk.propertyValidator('version', cdk.validateString)(properties.version));\n    return errors.wrap('supplied properties not correct for \"FleetLaunchTemplateSpecificationRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.FleetLaunchTemplateSpecificationRequest` resource\n *\n * @param properties - the TypeScript properties of a `FleetLaunchTemplateSpecificationRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.FleetLaunchTemplateSpecificationRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEC2FleetFleetLaunchTemplateSpecificationRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEC2Fleet_FleetLaunchTemplateSpecificationRequestPropertyValidator(properties).assertSuccess();\n    return {\n        LaunchTemplateId: cdk.stringToCloudFormation(properties.launchTemplateId),\n        LaunchTemplateName: cdk.stringToCloudFormation(properties.launchTemplateName),\n        Version: cdk.stringToCloudFormation(properties.version),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEC2FleetFleetLaunchTemplateSpecificationRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty>();\n    ret.addPropertyResult('launchTemplateId', 'LaunchTemplateId', properties.LaunchTemplateId != null ? cfn_parse.FromCloudFormation.getString(properties.LaunchTemplateId) : undefined);\n    ret.addPropertyResult('launchTemplateName', 'LaunchTemplateName', properties.LaunchTemplateName != null ? cfn_parse.FromCloudFormation.getString(properties.LaunchTemplateName) : undefined);\n    ret.addPropertyResult('version', 'Version', properties.Version != null ? cfn_parse.FromCloudFormation.getString(properties.Version) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEC2Fleet {\n    /**\n     * The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with these attributes.\n     *\n     * When you specify multiple parameters, you get instance types that satisfy all of the specified parameters. If you specify multiple values for a parameter, you get instance types that satisfy any of the specified values.\n     *\n     * > You must specify `VCpuCount` and `MemoryMiB` . All other parameters are optional. Any unspecified optional parameter is set to its default.\n     *\n     * For more information, see [Attribute-based instance type selection for EC2 Fleet](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html) , [Attribute-based instance type selection for Spot Fleet](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-attribute-based-instance-type-selection.html) , and [Spot placement score](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-placement-score.html) in the *Amazon EC2 User Guide* .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html\n     */\n    export interface InstanceRequirementsRequestProperty {\n        /**\n         * The minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips) on an instance.\n         *\n         * To exclude accelerator-enabled instance types, set `Max` to `0` .\n         *\n         * Default: No minimum or maximum limits\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-acceleratorcount\n         */\n        readonly acceleratorCount?: CfnEC2Fleet.AcceleratorCountRequestProperty | cdk.IResolvable;\n        /**\n         * Indicates whether instance types must have accelerators by specific manufacturers.\n         *\n         * - For instance types with NVIDIA devices, specify `nvidia` .\n         * - For instance types with AMD devices, specify `amd` .\n         * - For instance types with AWS devices, specify `amazon-web-services` .\n         * - For instance types with Xilinx devices, specify `xilinx` .\n         *\n         * Default: Any manufacturer\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-acceleratormanufacturers\n         */\n        readonly acceleratorManufacturers?: string[];\n        /**\n         * The accelerators that must be on the instance type.\n         *\n         * - For instance types with NVIDIA A100 GPUs, specify `a100` .\n         * - For instance types with NVIDIA V100 GPUs, specify `v100` .\n         * - For instance types with NVIDIA K80 GPUs, specify `k80` .\n         * - For instance types with NVIDIA T4 GPUs, specify `t4` .\n         * - For instance types with NVIDIA M60 GPUs, specify `m60` .\n         * - For instance types with AMD Radeon Pro V520 GPUs, specify `radeon-pro-v520` .\n         * - For instance types with Xilinx VU9P FPGAs, specify `vu9p` .\n         *\n         * Default: Any accelerator\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-acceleratornames\n         */\n        readonly acceleratorNames?: string[];\n        /**\n         * The minimum and maximum amount of total accelerator memory, in MiB.\n         *\n         * Default: No minimum or maximum limits\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-acceleratortotalmemorymib\n         */\n        readonly acceleratorTotalMemoryMiB?: CfnEC2Fleet.AcceleratorTotalMemoryMiBRequestProperty | cdk.IResolvable;\n        /**\n         * The accelerator types that must be on the instance type.\n         *\n         * - To include instance types with GPU hardware, specify `gpu` .\n         * - To include instance types with FPGA hardware, specify `fpga` .\n         * - To include instance types with inference hardware, specify `inference` .\n         *\n         * Default: Any accelerator type\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-acceleratortypes\n         */\n        readonly acceleratorTypes?: string[];\n        /**\n         * Indicates whether bare metal instance types must be included, excluded, or required.\n         *\n         * - To include bare metal instance types, specify `included` .\n         * - To require only bare metal instance types, specify `required` .\n         * - To exclude bare metal instance types, specify `excluded` .\n         *\n         * Default: `excluded`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-baremetal\n         */\n        readonly bareMetal?: string;\n        /**\n         * The minimum and maximum baseline bandwidth to Amazon EBS, in Mbps. For more information, see [Amazon EBS\u2013optimized instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html) in the *Amazon EC2 User Guide* .\n         *\n         * Default: No minimum or maximum limits\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-baselineebsbandwidthmbps\n         */\n        readonly baselineEbsBandwidthMbps?: CfnEC2Fleet.BaselineEbsBandwidthMbpsRequestProperty | cdk.IResolvable;\n        /**\n         * Indicates whether burstable performance T instance types are included, excluded, or required. For more information, see [Burstable performance instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html) .\n         *\n         * - To include burstable performance instance types, specify `included` .\n         * - To require only burstable performance instance types, specify `required` .\n         * - To exclude burstable performance instance types, specify `excluded` .\n         *\n         * Default: `excluded`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-burstableperformance\n         */\n        readonly burstablePerformance?: string;\n        /**\n         * The CPU manufacturers to include.\n         *\n         * - For instance types with Intel CPUs, specify `intel` .\n         * - For instance types with AMD CPUs, specify `amd` .\n         * - For instance types with AWS CPUs, specify `amazon-web-services` .\n         *\n         * > Don't confuse the CPU manufacturer with the CPU architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you specify in your launch template.\n         *\n         * Default: Any manufacturer\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-cpumanufacturers\n         */\n        readonly cpuManufacturers?: string[];\n        /**\n         * The instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk ( `*` ), to exclude an instance family, type, size, or generation. The following are examples: `m5.8xlarge` , `c5*.*` , `m5a.*` , `r*` , `*3*` .\n         *\n         * For example, if you specify `c5*` ,Amazon EC2 will exclude the entire C5 instance family, which includes all C5a and C5n instance types. If you specify `m5a.*` , Amazon EC2 will exclude all the M5a instance types, but not the M5n instance types.\n         *\n         * Default: No excluded instance types\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-excludedinstancetypes\n         */\n        readonly excludedInstanceTypes?: string[];\n        /**\n         * Indicates whether current or previous generation instance types are included. The current generation instance types are recommended for use. Current generation instance types are typically the latest two to three generations in each instance family. For more information, see [Instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the *Amazon EC2 User Guide* .\n         *\n         * For current generation instance types, specify `current` .\n         *\n         * For previous generation instance types, specify `previous` .\n         *\n         * Default: Current and previous generation instance types\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-instancegenerations\n         */\n        readonly instanceGenerations?: string[];\n        /**\n         * Indicates whether instance types with instance store volumes are included, excluded, or required. For more information, [Amazon EC2 instance store](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html) in the *Amazon EC2 User Guide* .\n         *\n         * - To include instance types with instance store volumes, specify `included` .\n         * - To require only instance types with instance store volumes, specify `required` .\n         * - To exclude instance types with instance store volumes, specify `excluded` .\n         *\n         * Default: `included`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-localstorage\n         */\n        readonly localStorage?: string;\n        /**\n         * The type of local storage that is required.\n         *\n         * - For instance types with hard disk drive (HDD) storage, specify `hdd` .\n         * - For instance types with solid state drive (SDD) storage, specify `sdd` .\n         *\n         * Default: `hdd` and `sdd`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-localstoragetypes\n         */\n        readonly localStorageTypes?: string[];\n        /**\n         * The minimum and maximum amount of memory per vCPU, in GiB.\n         *\n         * Default: No minimum or maximum limits\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-memorygibpervcpu\n         */\n        readonly memoryGiBPerVCpu?: CfnEC2Fleet.MemoryGiBPerVCpuRequestProperty | cdk.IResolvable;\n        /**\n         * The minimum and maximum amount of memory, in MiB.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-memorymib\n         */\n        readonly memoryMiB?: CfnEC2Fleet.MemoryMiBRequestProperty | cdk.IResolvable;\n        /**\n         * The minimum and maximum number of network interfaces.\n         *\n         * Default: No minimum or maximum limits\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-networkinterfacecount\n         */\n        readonly networkInterfaceCount?: CfnEC2Fleet.NetworkInterfaceCountRequestProperty | cdk.IResolvable;\n        /**\n         * The price protection threshold for On-Demand Instances. This is the maximum you\u2019ll pay for an On-Demand Instance, expressed as a percentage above the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 selects instance types with your attributes, it excludes instance types priced above your threshold.\n         *\n         * The parameter accepts an integer, which Amazon EC2 interprets as a percentage.\n         *\n         * To turn off price protection, specify a high value, such as `999999` .\n         *\n         * This parameter is not supported for [GetSpotPlacementScores](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html) and [GetInstanceTypesFromInstanceRequirements](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceTypesFromInstanceRequirements.html) .\n         *\n         * > If you set `TargetCapacityUnitType` to `vcpu` or `memory-mib` , the price protection threshold is applied based on the per-vCPU or per-memory price instead of the per-instance price.\n         *\n         * Default: `20`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-ondemandmaxpricepercentageoverlowestprice\n         */\n        readonly onDemandMaxPricePercentageOverLowestPrice?: number;\n        /**\n         * Indicates whether instance types must support hibernation for On-Demand Instances.\n         *\n         * This parameter is not supported for [GetSpotPlacementScores](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html) .\n         *\n         * Default: `false`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-requirehibernatesupport\n         */\n        readonly requireHibernateSupport?: boolean | cdk.IResolvable;\n        /**\n         * The price protection threshold for Spot Instance. This is the maximum you\u2019ll pay for an Spot Instance, expressed as a percentage above the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 selects instance types with your attributes, it excludes instance types priced above your threshold.\n         *\n         * The parameter accepts an integer, which Amazon EC2 interprets as a percentage.\n         *\n         * To turn off price protection, specify a high value, such as `999999` .\n         *\n         * This parameter is not supported for [GetSpotPlacementScores](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html) and [GetInstanceTypesFromInstanceRequirements](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceTypesFromInstanceRequirements.html) .\n         *\n         * > If you set `TargetCapacityUnitType` to `vcpu` or `memory-mib` , the price protection threshold is applied based on the per-vCPU or per-memory price instead of the per-instance price.\n         *\n         * Default: `100`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-spotmaxpricepercentageoverlowestprice\n         */\n        readonly spotMaxPricePercentageOverLowestPrice?: number;\n        /**\n         * The minimum and maximum amount of total local storage, in GB.\n         *\n         * Default: No minimum or maximum limits\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-totallocalstoragegb\n         */\n        readonly totalLocalStorageGb?: CfnEC2Fleet.TotalLocalStorageGBRequestProperty | cdk.IResolvable;\n        /**\n         * The minimum and maximum number of vCPUs.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-vcpucount\n         */\n        readonly vCpuCount?: CfnEC2Fleet.VCpuCountRangeRequestProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `InstanceRequirementsRequestProperty`\n *\n * @param properties - the TypeScript properties of a `InstanceRequirementsRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEC2Fleet_InstanceRequirementsRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('acceleratorCount', CfnEC2Fleet_AcceleratorCountRequestPropertyValidator)(properties.acceleratorCount));\n    errors.collect(cdk.propertyValidator('acceleratorManufacturers', cdk.listValidator(cdk.validateString))(properties.acceleratorManufacturers));\n    errors.collect(cdk.propertyValidator('acceleratorNames', cdk.listValidator(cdk.validateString))(properties.acceleratorNames));\n    errors.collect(cdk.propertyValidator('acceleratorTotalMemoryMiB', CfnEC2Fleet_AcceleratorTotalMemoryMiBRequestPropertyValidator)(properties.acceleratorTotalMemoryMiB));\n    errors.collect(cdk.propertyValidator('acceleratorTypes', cdk.listValidator(cdk.validateString))(properties.acceleratorTypes));\n    errors.collect(cdk.propertyValidator('bareMetal', cdk.validateString)(properties.bareMetal));\n    errors.collect(cdk.propertyValidator('baselineEbsBandwidthMbps', CfnEC2Fleet_BaselineEbsBandwidthMbpsRequestPropertyValidator)(properties.baselineEbsBandwidthMbps));\n    errors.collect(cdk.propertyValidator('burstablePerformance', cdk.validateString)(properties.burstablePerformance));\n    errors.collect(cdk.propertyValidator('cpuManufacturers', cdk.listValidator(cdk.validateString))(properties.cpuManufacturers));\n    errors.collect(cdk.propertyValidator('excludedInstanceTypes', cdk.listValidator(cdk.validateString))(properties.excludedInstanceTypes));\n    errors.collect(cdk.propertyValidator('instanceGenerations', cdk.listValidator(cdk.validateString))(properties.instanceGenerations));\n    errors.collect(cdk.propertyValidator('localStorage', cdk.validateString)(properties.localStorage));\n    errors.collect(cdk.propertyValidator('localStorageTypes', cdk.listValidator(cdk.validateString))(properties.localStorageTypes));\n    errors.collect(cdk.propertyValidator('memoryGiBPerVCpu', CfnEC2Fleet_MemoryGiBPerVCpuRequestPropertyValidator)(properties.memoryGiBPerVCpu));\n    errors.collect(cdk.propertyValidator('memoryMiB', CfnEC2Fleet_MemoryMiBRequestPropertyValidator)(properties.memoryMiB));\n    errors.collect(cdk.propertyValidator('networkInterfaceCount', CfnEC2Fleet_NetworkInterfaceCountRequestPropertyValidator)(properties.networkInterfaceCount));\n    errors.collect(cdk.propertyValidator('onDemandMaxPricePercentageOverLowestPrice', cdk.validateNumber)(properties.onDemandMaxPricePercentageOverLowestPrice));\n    errors.collect(cdk.propertyValidator('requireHibernateSupport', cdk.validateBoolean)(properties.requireHibernateSupport));\n    errors.collect(cdk.propertyValidator('spotMaxPricePercentageOverLowestPrice', cdk.validateNumber)(properties.spotMaxPricePercentageOverLowestPrice));\n    errors.collect(cdk.propertyValidator('totalLocalStorageGb', CfnEC2Fleet_TotalLocalStorageGBRequestPropertyValidator)(properties.totalLocalStorageGb));\n    errors.collect(cdk.propertyValidator('vCpuCount', CfnEC2Fleet_VCpuCountRangeRequestPropertyValidator)(properties.vCpuCount));\n    return errors.wrap('supplied properties not correct for \"InstanceRequirementsRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.InstanceRequirementsRequest` resource\n *\n * @param properties - the TypeScript properties of a `InstanceRequirementsRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.InstanceRequirementsRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEC2FleetInstanceRequirementsRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEC2Fleet_InstanceRequirementsRequestPropertyValidator(properties).assertSuccess();\n    return {\n        AcceleratorCount: cfnEC2FleetAcceleratorCountRequestPropertyToCloudFormation(properties.acceleratorCount),\n        AcceleratorManufacturers: cdk.listMapper(cdk.stringToCloudFormation)(properties.acceleratorManufacturers),\n        AcceleratorNames: cdk.listMapper(cdk.stringToCloudFormation)(properties.acceleratorNames),\n        AcceleratorTotalMemoryMiB: cfnEC2FleetAcceleratorTotalMemoryMiBRequestPropertyToCloudFormation(properties.acceleratorTotalMemoryMiB),\n        AcceleratorTypes: cdk.listMapper(cdk.stringToCloudFormation)(properties.acceleratorTypes),\n        BareMetal: cdk.stringToCloudFormation(properties.bareMetal),\n        BaselineEbsBandwidthMbps: cfnEC2FleetBaselineEbsBandwidthMbpsRequestPropertyToCloudFormation(properties.baselineEbsBandwidthMbps),\n        BurstablePerformance: cdk.stringToCloudFormation(properties.burstablePerformance),\n        CpuManufacturers: cdk.listMapper(cdk.stringToCloudFormation)(properties.cpuManufacturers),\n        ExcludedInstanceTypes: cdk.listMapper(cdk.stringToCloudFormation)(properties.excludedInstanceTypes),\n        InstanceGenerations: cdk.listMapper(cdk.stringToCloudFormation)(properties.instanceGenerations),\n        LocalStorage: cdk.stringToCloudFormation(properties.localStorage),\n        LocalStorageTypes: cdk.listMapper(cdk.stringToCloudFormation)(properties.localStorageTypes),\n        MemoryGiBPerVCpu: cfnEC2FleetMemoryGiBPerVCpuRequestPropertyToCloudFormation(properties.memoryGiBPerVCpu),\n        MemoryMiB: cfnEC2FleetMemoryMiBRequestPropertyToCloudFormation(properties.memoryMiB),\n        NetworkInterfaceCount: cfnEC2FleetNetworkInterfaceCountRequestPropertyToCloudFormation(properties.networkInterfaceCount),\n        OnDemandMaxPricePercentageOverLowestPrice: cdk.numberToCloudFormation(properties.onDemandMaxPricePercentageOverLowestPrice),\n        RequireHibernateSupport: cdk.booleanToCloudFormation(properties.requireHibernateSupport),\n        SpotMaxPricePercentageOverLowestPrice: cdk.numberToCloudFormation(properties.spotMaxPricePercentageOverLowestPrice),\n        TotalLocalStorageGB: cfnEC2FleetTotalLocalStorageGBRequestPropertyToCloudFormation(properties.totalLocalStorageGb),\n        VCpuCount: cfnEC2FleetVCpuCountRangeRequestPropertyToCloudFormation(properties.vCpuCount),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEC2FleetInstanceRequirementsRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEC2Fleet.InstanceRequirementsRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEC2Fleet.InstanceRequirementsRequestProperty>();\n    ret.addPropertyResult('acceleratorCount', 'AcceleratorCount', properties.AcceleratorCount != null ? CfnEC2FleetAcceleratorCountRequestPropertyFromCloudFormation(properties.AcceleratorCount) : undefined);\n    ret.addPropertyResult('acceleratorManufacturers', 'AcceleratorManufacturers', properties.AcceleratorManufacturers != null ? cfn_parse.FromCloudFormation.getStringArray(properties.AcceleratorManufacturers) : undefined);\n    ret.addPropertyResult('acceleratorNames', 'AcceleratorNames', properties.AcceleratorNames != null ? cfn_parse.FromCloudFormation.getStringArray(properties.AcceleratorNames) : undefined);\n    ret.addPropertyResult('acceleratorTotalMemoryMiB', 'AcceleratorTotalMemoryMiB', properties.AcceleratorTotalMemoryMiB != null ? CfnEC2FleetAcceleratorTotalMemoryMiBRequestPropertyFromCloudFormation(properties.AcceleratorTotalMemoryMiB) : undefined);\n    ret.addPropertyResult('acceleratorTypes', 'AcceleratorTypes', properties.AcceleratorTypes != null ? cfn_parse.FromCloudFormation.getStringArray(properties.AcceleratorTypes) : undefined);\n    ret.addPropertyResult('bareMetal', 'BareMetal', properties.BareMetal != null ? cfn_parse.FromCloudFormation.getString(properties.BareMetal) : undefined);\n    ret.addPropertyResult('baselineEbsBandwidthMbps', 'BaselineEbsBandwidthMbps', properties.BaselineEbsBandwidthMbps != null ? CfnEC2FleetBaselineEbsBandwidthMbpsRequestPropertyFromCloudFormation(properties.BaselineEbsBandwidthMbps) : undefined);\n    ret.addPropertyResult('burstablePerformance', 'BurstablePerformance', properties.BurstablePerformance != null ? cfn_parse.FromCloudFormation.getString(properties.BurstablePerformance) : undefined);\n    ret.addPropertyResult('cpuManufacturers', 'CpuManufacturers', properties.CpuManufacturers != null ? cfn_parse.FromCloudFormation.getStringArray(properties.CpuManufacturers) : undefined);\n    ret.addPropertyResult('excludedInstanceTypes', 'ExcludedInstanceTypes', properties.ExcludedInstanceTypes != null ? cfn_parse.FromCloudFormation.getStringArray(properties.ExcludedInstanceTypes) : undefined);\n    ret.addPropertyResult('instanceGenerations', 'InstanceGenerations', properties.InstanceGenerations != null ? cfn_parse.FromCloudFormation.getStringArray(properties.InstanceGenerations) : undefined);\n    ret.addPropertyResult('localStorage', 'LocalStorage', properties.LocalStorage != null ? cfn_parse.FromCloudFormation.getString(properties.LocalStorage) : undefined);\n    ret.addPropertyResult('localStorageTypes', 'LocalStorageTypes', properties.LocalStorageTypes != null ? cfn_parse.FromCloudFormation.getStringArray(properties.LocalStorageTypes) : undefined);\n    ret.addPropertyResult('memoryGiBPerVCpu', 'MemoryGiBPerVCpu', properties.MemoryGiBPerVCpu != null ? CfnEC2FleetMemoryGiBPerVCpuRequestPropertyFromCloudFormation(properties.MemoryGiBPerVCpu) : undefined);\n    ret.addPropertyResult('memoryMiB', 'MemoryMiB', properties.MemoryMiB != null ? CfnEC2FleetMemoryMiBRequestPropertyFromCloudFormation(properties.MemoryMiB) : undefined);\n    ret.addPropertyResult('networkInterfaceCount', 'NetworkInterfaceCount', properties.NetworkInterfaceCount != null ? CfnEC2FleetNetworkInterfaceCountRequestPropertyFromCloudFormation(properties.NetworkInterfaceCount) : undefined);\n    ret.addPropertyResult('onDemandMaxPricePercentageOverLowestPrice', 'OnDemandMaxPricePercentageOverLowestPrice', properties.OnDemandMaxPricePercentageOverLowestPrice != null ? cfn_parse.FromCloudFormation.getNumber(properties.OnDemandMaxPricePercentageOverLowestPrice) : undefined);\n    ret.addPropertyResult('requireHibernateSupport', 'RequireHibernateSupport', properties.RequireHibernateSupport != null ? cfn_parse.FromCloudFormation.getBoolean(properties.RequireHibernateSupport) : undefined);\n    ret.addPropertyResult('spotMaxPricePercentageOverLowestPrice', 'SpotMaxPricePercentageOverLowestPrice', properties.SpotMaxPricePercentageOverLowestPrice != null ? cfn_parse.FromCloudFormation.getNumber(properties.SpotMaxPricePercentageOverLowestPrice) : undefined);\n    ret.addPropertyResult('totalLocalStorageGb', 'TotalLocalStorageGB', properties.TotalLocalStorageGB != null ? CfnEC2FleetTotalLocalStorageGBRequestPropertyFromCloudFormation(properties.TotalLocalStorageGB) : undefined);\n    ret.addPropertyResult('vCpuCount', 'VCpuCount', properties.VCpuCount != null ? CfnEC2FleetVCpuCountRangeRequestPropertyFromCloudFormation(properties.VCpuCount) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEC2Fleet {\n    /**\n     * The strategies for managing your Spot Instances that are at an elevated risk of being interrupted.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-maintenancestrategies.html\n     */\n    export interface MaintenanceStrategiesProperty {\n        /**\n         * The strategy to use when Amazon EC2 emits a signal that your Spot Instance is at an elevated risk of being interrupted.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-maintenancestrategies.html#cfn-ec2-ec2fleet-maintenancestrategies-capacityrebalance\n         */\n        readonly capacityRebalance?: CfnEC2Fleet.CapacityRebalanceProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `MaintenanceStrategiesProperty`\n *\n * @param properties - the TypeScript properties of a `MaintenanceStrategiesProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEC2Fleet_MaintenanceStrategiesPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('capacityRebalance', CfnEC2Fleet_CapacityRebalancePropertyValidator)(properties.capacityRebalance));\n    return errors.wrap('supplied properties not correct for \"MaintenanceStrategiesProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.MaintenanceStrategies` resource\n *\n * @param properties - the TypeScript properties of a `MaintenanceStrategiesProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.MaintenanceStrategies` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEC2FleetMaintenanceStrategiesPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEC2Fleet_MaintenanceStrategiesPropertyValidator(properties).assertSuccess();\n    return {\n        CapacityRebalance: cfnEC2FleetCapacityRebalancePropertyToCloudFormation(properties.capacityRebalance),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEC2FleetMaintenanceStrategiesPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEC2Fleet.MaintenanceStrategiesProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEC2Fleet.MaintenanceStrategiesProperty>();\n    ret.addPropertyResult('capacityRebalance', 'CapacityRebalance', properties.CapacityRebalance != null ? CfnEC2FleetCapacityRebalancePropertyFromCloudFormation(properties.CapacityRebalance) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEC2Fleet {\n    /**\n     * The minimum and maximum amount of memory per vCPU, in GiB.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-memorygibpervcpurequest.html\n     */\n    export interface MemoryGiBPerVCpuRequestProperty {\n        /**\n         * The maximum amount of memory per vCPU, in GiB. To specify no maximum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-memorygibpervcpurequest.html#cfn-ec2-ec2fleet-memorygibpervcpurequest-max\n         */\n        readonly max?: number;\n        /**\n         * The minimum amount of memory per vCPU, in GiB. To specify no minimum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-memorygibpervcpurequest.html#cfn-ec2-ec2fleet-memorygibpervcpurequest-min\n         */\n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `MemoryGiBPerVCpuRequestProperty`\n *\n * @param properties - the TypeScript properties of a `MemoryGiBPerVCpuRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEC2Fleet_MemoryGiBPerVCpuRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"MemoryGiBPerVCpuRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.MemoryGiBPerVCpuRequest` resource\n *\n * @param properties - the TypeScript properties of a `MemoryGiBPerVCpuRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.MemoryGiBPerVCpuRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEC2FleetMemoryGiBPerVCpuRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEC2Fleet_MemoryGiBPerVCpuRequestPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEC2FleetMemoryGiBPerVCpuRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEC2Fleet.MemoryGiBPerVCpuRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEC2Fleet.MemoryGiBPerVCpuRequestProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEC2Fleet {\n    /**\n     * The minimum and maximum amount of memory, in MiB.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-memorymibrequest.html\n     */\n    export interface MemoryMiBRequestProperty {\n        /**\n         * The maximum amount of memory, in MiB. To specify no maximum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-memorymibrequest.html#cfn-ec2-ec2fleet-memorymibrequest-max\n         */\n        readonly max?: number;\n        /**\n         * The minimum amount of memory, in MiB. To specify no minimum limit, specify `0` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-memorymibrequest.html#cfn-ec2-ec2fleet-memorymibrequest-min\n         */\n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `MemoryMiBRequestProperty`\n *\n * @param properties - the TypeScript properties of a `MemoryMiBRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEC2Fleet_MemoryMiBRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"MemoryMiBRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.MemoryMiBRequest` resource\n *\n * @param properties - the TypeScript properties of a `MemoryMiBRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.MemoryMiBRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEC2FleetMemoryMiBRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEC2Fleet_MemoryMiBRequestPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEC2FleetMemoryMiBRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEC2Fleet.MemoryMiBRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEC2Fleet.MemoryMiBRequestProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEC2Fleet {\n    /**\n     * The minimum and maximum number of network interfaces.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-networkinterfacecountrequest.html\n     */\n    export interface NetworkInterfaceCountRequestProperty {\n        /**\n         * The maximum number of network interfaces. To specify no maximum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-networkinterfacecountrequest.html#cfn-ec2-ec2fleet-networkinterfacecountrequest-max\n         */\n        readonly max?: number;\n        /**\n         * The minimum number of network interfaces. To specify no minimum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-networkinterfacecountrequest.html#cfn-ec2-ec2fleet-networkinterfacecountrequest-min\n         */\n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `NetworkInterfaceCountRequestProperty`\n *\n * @param properties - the TypeScript properties of a `NetworkInterfaceCountRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEC2Fleet_NetworkInterfaceCountRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"NetworkInterfaceCountRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.NetworkInterfaceCountRequest` resource\n *\n * @param properties - the TypeScript properties of a `NetworkInterfaceCountRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.NetworkInterfaceCountRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEC2FleetNetworkInterfaceCountRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEC2Fleet_NetworkInterfaceCountRequestPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEC2FleetNetworkInterfaceCountRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEC2Fleet.NetworkInterfaceCountRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEC2Fleet.NetworkInterfaceCountRequestProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEC2Fleet {\n    /**\n     * Specifies the allocation strategy of On-Demand Instances in an EC2 Fleet.\n     *\n     * `OnDemandOptionsRequest` is a property of the [AWS::EC2::EC2Fleet](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html) resource.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-ondemandoptionsrequest.html\n     */\n    export interface OnDemandOptionsRequestProperty {\n        /**\n         * The strategy that determines the order of the launch template overrides to use in fulfilling On-Demand capacity.\n         *\n         * `lowest-price` - EC2 Fleet uses price to determine the order, launching the lowest price first.\n         *\n         * `prioritized` - EC2 Fleet uses the priority that you assigned to each launch template override, launching the highest priority first.\n         *\n         * Default: `lowest-price`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-ondemandoptionsrequest.html#cfn-ec2-ec2fleet-ondemandoptionsrequest-allocationstrategy\n         */\n        readonly allocationStrategy?: string;\n        /**\n         * The strategy for using unused Capacity Reservations for fulfilling On-Demand capacity.\n         *\n         * Supported only for fleets of type `instant` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-ondemandoptionsrequest.html#cfn-ec2-ec2fleet-ondemandoptionsrequest-capacityreservationoptions\n         */\n        readonly capacityReservationOptions?: CfnEC2Fleet.CapacityReservationOptionsRequestProperty | cdk.IResolvable;\n        /**\n         * The maximum amount per hour for On-Demand Instances that you're willing to pay.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-ondemandoptionsrequest.html#cfn-ec2-ec2fleet-ondemandoptionsrequest-maxtotalprice\n         */\n        readonly maxTotalPrice?: string;\n        /**\n         * The minimum target capacity for On-Demand Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances.\n         *\n         * Supported only for fleets of type `instant` .\n         *\n         * At least one of the following must be specified: `SingleAvailabilityZone` | `SingleInstanceType`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-ondemandoptionsrequest.html#cfn-ec2-ec2fleet-ondemandoptionsrequest-mintargetcapacity\n         */\n        readonly minTargetCapacity?: number;\n        /**\n         * Indicates that the fleet launches all On-Demand Instances into a single Availability Zone.\n         *\n         * Supported only for fleets of type `instant` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-ondemandoptionsrequest.html#cfn-ec2-ec2fleet-ondemandoptionsrequest-singleavailabilityzone\n         */\n        readonly singleAvailabilityZone?: boolean | cdk.IResolvable;\n        /**\n         * Indicates that the fleet uses a single instance type to launch all On-Demand Instances in the fleet.\n         *\n         * Supported only for fleets of type `instant` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-ondemandoptionsrequest.html#cfn-ec2-ec2fleet-ondemandoptionsrequest-singleinstancetype\n         */\n        readonly singleInstanceType?: boolean | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `OnDemandOptionsRequestProperty`\n *\n * @param properties - the TypeScript properties of a `OnDemandOptionsRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEC2Fleet_OnDemandOptionsRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('allocationStrategy', cdk.validateString)(properties.allocationStrategy));\n    errors.collect(cdk.propertyValidator('capacityReservationOptions', CfnEC2Fleet_CapacityReservationOptionsRequestPropertyValidator)(properties.capacityReservationOptions));\n    errors.collect(cdk.propertyValidator('maxTotalPrice', cdk.validateString)(properties.maxTotalPrice));\n    errors.collect(cdk.propertyValidator('minTargetCapacity', cdk.validateNumber)(properties.minTargetCapacity));\n    errors.collect(cdk.propertyValidator('singleAvailabilityZone', cdk.validateBoolean)(properties.singleAvailabilityZone));\n    errors.collect(cdk.propertyValidator('singleInstanceType', cdk.validateBoolean)(properties.singleInstanceType));\n    return errors.wrap('supplied properties not correct for \"OnDemandOptionsRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.OnDemandOptionsRequest` resource\n *\n * @param properties - the TypeScript properties of a `OnDemandOptionsRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.OnDemandOptionsRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEC2FleetOnDemandOptionsRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEC2Fleet_OnDemandOptionsRequestPropertyValidator(properties).assertSuccess();\n    return {\n        AllocationStrategy: cdk.stringToCloudFormation(properties.allocationStrategy),\n        CapacityReservationOptions: cfnEC2FleetCapacityReservationOptionsRequestPropertyToCloudFormation(properties.capacityReservationOptions),\n        MaxTotalPrice: cdk.stringToCloudFormation(properties.maxTotalPrice),\n        MinTargetCapacity: cdk.numberToCloudFormation(properties.minTargetCapacity),\n        SingleAvailabilityZone: cdk.booleanToCloudFormation(properties.singleAvailabilityZone),\n        SingleInstanceType: cdk.booleanToCloudFormation(properties.singleInstanceType),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEC2FleetOnDemandOptionsRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEC2Fleet.OnDemandOptionsRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEC2Fleet.OnDemandOptionsRequestProperty>();\n    ret.addPropertyResult('allocationStrategy', 'AllocationStrategy', properties.AllocationStrategy != null ? cfn_parse.FromCloudFormation.getString(properties.AllocationStrategy) : undefined);\n    ret.addPropertyResult('capacityReservationOptions', 'CapacityReservationOptions', properties.CapacityReservationOptions != null ? CfnEC2FleetCapacityReservationOptionsRequestPropertyFromCloudFormation(properties.CapacityReservationOptions) : undefined);\n    ret.addPropertyResult('maxTotalPrice', 'MaxTotalPrice', properties.MaxTotalPrice != null ? cfn_parse.FromCloudFormation.getString(properties.MaxTotalPrice) : undefined);\n    ret.addPropertyResult('minTargetCapacity', 'MinTargetCapacity', properties.MinTargetCapacity != null ? cfn_parse.FromCloudFormation.getNumber(properties.MinTargetCapacity) : undefined);\n    ret.addPropertyResult('singleAvailabilityZone', 'SingleAvailabilityZone', properties.SingleAvailabilityZone != null ? cfn_parse.FromCloudFormation.getBoolean(properties.SingleAvailabilityZone) : undefined);\n    ret.addPropertyResult('singleInstanceType', 'SingleInstanceType', properties.SingleInstanceType != null ? cfn_parse.FromCloudFormation.getBoolean(properties.SingleInstanceType) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEC2Fleet {\n    /**\n     * Describes the placement of an instance.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-placement.html\n     */\n    export interface PlacementProperty {\n        /**\n         * The affinity setting for the instance on the Dedicated Host. This parameter is not supported for the [ImportInstance](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html) command.\n         *\n         * This parameter is not supported by [CreateFleet](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet) .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-placement.html#cfn-ec2-ec2fleet-placement-affinity\n         */\n        readonly affinity?: string;\n        /**\n         * The Availability Zone of the instance.\n         *\n         * If not specified, an Availability Zone will be automatically chosen for you based on the load balancing criteria for the Region.\n         *\n         * This parameter is not supported by [CreateFleet](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet) .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-placement.html#cfn-ec2-ec2fleet-placement-availabilityzone\n         */\n        readonly availabilityZone?: string;\n        /**\n         * The name of the placement group the instance is in.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-placement.html#cfn-ec2-ec2fleet-placement-groupname\n         */\n        readonly groupName?: string;\n        /**\n         * The ID of the Dedicated Host on which the instance resides. This parameter is not supported for the [ImportInstance](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html) command.\n         *\n         * This parameter is not supported by [CreateFleet](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet) .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-placement.html#cfn-ec2-ec2fleet-placement-hostid\n         */\n        readonly hostId?: string;\n        /**\n         * The ARN of the host resource group in which to launch the instances. If you specify a host resource group ARN, omit the *Tenancy* parameter or set it to `host` .\n         *\n         * This parameter is not supported by [CreateFleet](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet) .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-placement.html#cfn-ec2-ec2fleet-placement-hostresourcegrouparn\n         */\n        readonly hostResourceGroupArn?: string;\n        /**\n         * The number of the partition that the instance is in. Valid only if the placement group strategy is set to `partition` .\n         *\n         * This parameter is not supported by [CreateFleet](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet) .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-placement.html#cfn-ec2-ec2fleet-placement-partitionnumber\n         */\n        readonly partitionNumber?: number;\n        /**\n         * Reserved for future use.\n         *\n         * This parameter is not supported by [CreateFleet](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet) .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-placement.html#cfn-ec2-ec2fleet-placement-spreaddomain\n         */\n        readonly spreadDomain?: string;\n        /**\n         * The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of `dedicated` runs on single-tenant hardware. The `host` tenancy is not supported for the [ImportInstance](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html) command.\n         *\n         * This parameter is not supported by [CreateFleet](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet) .\n         *\n         * T3 instances that use the `unlimited` CPU credit option do not support `host` tenancy.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-placement.html#cfn-ec2-ec2fleet-placement-tenancy\n         */\n        readonly tenancy?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `PlacementProperty`\n *\n * @param properties - the TypeScript properties of a `PlacementProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEC2Fleet_PlacementPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('affinity', cdk.validateString)(properties.affinity));\n    errors.collect(cdk.propertyValidator('availabilityZone', cdk.validateString)(properties.availabilityZone));\n    errors.collect(cdk.propertyValidator('groupName', cdk.validateString)(properties.groupName));\n    errors.collect(cdk.propertyValidator('hostId', cdk.validateString)(properties.hostId));\n    errors.collect(cdk.propertyValidator('hostResourceGroupArn', cdk.validateString)(properties.hostResourceGroupArn));\n    errors.collect(cdk.propertyValidator('partitionNumber', cdk.validateNumber)(properties.partitionNumber));\n    errors.collect(cdk.propertyValidator('spreadDomain', cdk.validateString)(properties.spreadDomain));\n    errors.collect(cdk.propertyValidator('tenancy', cdk.validateString)(properties.tenancy));\n    return errors.wrap('supplied properties not correct for \"PlacementProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.Placement` resource\n *\n * @param properties - the TypeScript properties of a `PlacementProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.Placement` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEC2FleetPlacementPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEC2Fleet_PlacementPropertyValidator(properties).assertSuccess();\n    return {\n        Affinity: cdk.stringToCloudFormation(properties.affinity),\n        AvailabilityZone: cdk.stringToCloudFormation(properties.availabilityZone),\n        GroupName: cdk.stringToCloudFormation(properties.groupName),\n        HostId: cdk.stringToCloudFormation(properties.hostId),\n        HostResourceGroupArn: cdk.stringToCloudFormation(properties.hostResourceGroupArn),\n        PartitionNumber: cdk.numberToCloudFormation(properties.partitionNumber),\n        SpreadDomain: cdk.stringToCloudFormation(properties.spreadDomain),\n        Tenancy: cdk.stringToCloudFormation(properties.tenancy),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEC2FleetPlacementPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEC2Fleet.PlacementProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEC2Fleet.PlacementProperty>();\n    ret.addPropertyResult('affinity', 'Affinity', properties.Affinity != null ? cfn_parse.FromCloudFormation.getString(properties.Affinity) : undefined);\n    ret.addPropertyResult('availabilityZone', 'AvailabilityZone', properties.AvailabilityZone != null ? cfn_parse.FromCloudFormation.getString(properties.AvailabilityZone) : undefined);\n    ret.addPropertyResult('groupName', 'GroupName', properties.GroupName != null ? cfn_parse.FromCloudFormation.getString(properties.GroupName) : undefined);\n    ret.addPropertyResult('hostId', 'HostId', properties.HostId != null ? cfn_parse.FromCloudFormation.getString(properties.HostId) : undefined);\n    ret.addPropertyResult('hostResourceGroupArn', 'HostResourceGroupArn', properties.HostResourceGroupArn != null ? cfn_parse.FromCloudFormation.getString(properties.HostResourceGroupArn) : undefined);\n    ret.addPropertyResult('partitionNumber', 'PartitionNumber', properties.PartitionNumber != null ? cfn_parse.FromCloudFormation.getNumber(properties.PartitionNumber) : undefined);\n    ret.addPropertyResult('spreadDomain', 'SpreadDomain', properties.SpreadDomain != null ? cfn_parse.FromCloudFormation.getString(properties.SpreadDomain) : undefined);\n    ret.addPropertyResult('tenancy', 'Tenancy', properties.Tenancy != null ? cfn_parse.FromCloudFormation.getString(properties.Tenancy) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEC2Fleet {\n    /**\n     * Specifies the configuration of Spot Instances for an EC2 Fleet.\n     *\n     * `SpotOptionsRequest` is a property of the [AWS::EC2::EC2Fleet](https://docs.aws.amazon.com//AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html) resource.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html\n     */\n    export interface SpotOptionsRequestProperty {\n        /**\n         * Indicates how to allocate the target Spot Instance capacity across the Spot Instance pools specified by the EC2 Fleet.\n         *\n         * If the allocation strategy is `lowestPrice` , EC2 Fleet launches instances from the Spot Instance pools with the lowest price. This is the default allocation strategy.\n         *\n         * If the allocation strategy is `diversified` , EC2 Fleet launches instances from all the Spot Instance pools that you specify.\n         *\n         * If the allocation strategy is `capacityOptimized` , EC2 Fleet launches instances from Spot Instance pools that are optimally chosen based on the available Spot Instance capacity.\n         *\n         * *Allowed Values* : `lowestPrice` | `diversified` | `capacityOptimized` | `capacityOptimizedPrioritized`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-allocationstrategy\n         */\n        readonly allocationStrategy?: string;\n        /**\n         * The behavior when a Spot Instance is interrupted.\n         *\n         * Default: `terminate`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-instanceinterruptionbehavior\n         */\n        readonly instanceInterruptionBehavior?: string;\n        /**\n         * The number of Spot pools across which to allocate your target Spot capacity. Supported only when Spot `AllocationStrategy` is set to `lowest-price` . EC2 Fleet selects the cheapest Spot pools and evenly allocates your target Spot capacity across the number of Spot pools that you specify.\n         *\n         * Note that EC2 Fleet attempts to draw Spot Instances from the number of pools that you specify on a best effort basis. If a pool runs out of Spot capacity before fulfilling your target capacity, EC2 Fleet will continue to fulfill your request by drawing from the next cheapest pool. To ensure that your target capacity is met, you might receive Spot Instances from more than the number of pools that you specified. Similarly, if most of the pools have no Spot capacity, you might receive your full target capacity from fewer than the number of pools that you specified.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-instancepoolstousecount\n         */\n        readonly instancePoolsToUseCount?: number;\n        /**\n         * The strategies for managing your Spot Instances that are at an elevated risk of being interrupted.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-maintenancestrategies\n         */\n        readonly maintenanceStrategies?: CfnEC2Fleet.MaintenanceStrategiesProperty | cdk.IResolvable;\n        /**\n         * The maximum amount per hour for Spot Instances that you're willing to pay.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-maxtotalprice\n         */\n        readonly maxTotalPrice?: string;\n        /**\n         * The minimum target capacity for Spot Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances.\n         *\n         * Supported only for fleets of type `instant` .\n         *\n         * At least one of the following must be specified: `SingleAvailabilityZone` | `SingleInstanceType`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-mintargetcapacity\n         */\n        readonly minTargetCapacity?: number;\n        /**\n         * Indicates that the fleet launches all Spot Instances into a single Availability Zone.\n         *\n         * Supported only for fleets of type `instant` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-singleavailabilityzone\n         */\n        readonly singleAvailabilityZone?: boolean | cdk.IResolvable;\n        /**\n         * Indicates that the fleet uses a single instance type to launch all Spot Instances in the fleet.\n         *\n         * Supported only for fleets of type `instant` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-singleinstancetype\n         */\n        readonly singleInstanceType?: boolean | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `SpotOptionsRequestProperty`\n *\n * @param properties - the TypeScript properties of a `SpotOptionsRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEC2Fleet_SpotOptionsRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('allocationStrategy', cdk.validateString)(properties.allocationStrategy));\n    errors.collect(cdk.propertyValidator('instanceInterruptionBehavior', cdk.validateString)(properties.instanceInterruptionBehavior));\n    errors.collect(cdk.propertyValidator('instancePoolsToUseCount', cdk.validateNumber)(properties.instancePoolsToUseCount));\n    errors.collect(cdk.propertyValidator('maintenanceStrategies', CfnEC2Fleet_MaintenanceStrategiesPropertyValidator)(properties.maintenanceStrategies));\n    errors.collect(cdk.propertyValidator('maxTotalPrice', cdk.validateString)(properties.maxTotalPrice));\n    errors.collect(cdk.propertyValidator('minTargetCapacity', cdk.validateNumber)(properties.minTargetCapacity));\n    errors.collect(cdk.propertyValidator('singleAvailabilityZone', cdk.validateBoolean)(properties.singleAvailabilityZone));\n    errors.collect(cdk.propertyValidator('singleInstanceType', cdk.validateBoolean)(properties.singleInstanceType));\n    return errors.wrap('supplied properties not correct for \"SpotOptionsRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.SpotOptionsRequest` resource\n *\n * @param properties - the TypeScript properties of a `SpotOptionsRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.SpotOptionsRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEC2FleetSpotOptionsRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEC2Fleet_SpotOptionsRequestPropertyValidator(properties).assertSuccess();\n    return {\n        AllocationStrategy: cdk.stringToCloudFormation(properties.allocationStrategy),\n        InstanceInterruptionBehavior: cdk.stringToCloudFormation(properties.instanceInterruptionBehavior),\n        InstancePoolsToUseCount: cdk.numberToCloudFormation(properties.instancePoolsToUseCount),\n        MaintenanceStrategies: cfnEC2FleetMaintenanceStrategiesPropertyToCloudFormation(properties.maintenanceStrategies),\n        MaxTotalPrice: cdk.stringToCloudFormation(properties.maxTotalPrice),\n        MinTargetCapacity: cdk.numberToCloudFormation(properties.minTargetCapacity),\n        SingleAvailabilityZone: cdk.booleanToCloudFormation(properties.singleAvailabilityZone),\n        SingleInstanceType: cdk.booleanToCloudFormation(properties.singleInstanceType),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEC2FleetSpotOptionsRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEC2Fleet.SpotOptionsRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEC2Fleet.SpotOptionsRequestProperty>();\n    ret.addPropertyResult('allocationStrategy', 'AllocationStrategy', properties.AllocationStrategy != null ? cfn_parse.FromCloudFormation.getString(properties.AllocationStrategy) : undefined);\n    ret.addPropertyResult('instanceInterruptionBehavior', 'InstanceInterruptionBehavior', properties.InstanceInterruptionBehavior != null ? cfn_parse.FromCloudFormation.getString(properties.InstanceInterruptionBehavior) : undefined);\n    ret.addPropertyResult('instancePoolsToUseCount', 'InstancePoolsToUseCount', properties.InstancePoolsToUseCount != null ? cfn_parse.FromCloudFormation.getNumber(properties.InstancePoolsToUseCount) : undefined);\n    ret.addPropertyResult('maintenanceStrategies', 'MaintenanceStrategies', properties.MaintenanceStrategies != null ? CfnEC2FleetMaintenanceStrategiesPropertyFromCloudFormation(properties.MaintenanceStrategies) : undefined);\n    ret.addPropertyResult('maxTotalPrice', 'MaxTotalPrice', properties.MaxTotalPrice != null ? cfn_parse.FromCloudFormation.getString(properties.MaxTotalPrice) : undefined);\n    ret.addPropertyResult('minTargetCapacity', 'MinTargetCapacity', properties.MinTargetCapacity != null ? cfn_parse.FromCloudFormation.getNumber(properties.MinTargetCapacity) : undefined);\n    ret.addPropertyResult('singleAvailabilityZone', 'SingleAvailabilityZone', properties.SingleAvailabilityZone != null ? cfn_parse.FromCloudFormation.getBoolean(properties.SingleAvailabilityZone) : undefined);\n    ret.addPropertyResult('singleInstanceType', 'SingleInstanceType', properties.SingleInstanceType != null ? cfn_parse.FromCloudFormation.getBoolean(properties.SingleInstanceType) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEC2Fleet {\n    /**\n     * Specifies the tags to apply to a resource when the resource is being created for an EC2 Fleet.\n     *\n     * `TagSpecification` is a property of the [AWS::EC2::EC2Fleet](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html) resource.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-tagspecification.html\n     */\n    export interface TagSpecificationProperty {\n        /**\n         * The type of resource to tag. `ResourceType` must be `fleet` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-tagspecification.html#cfn-ec2-ec2fleet-tagspecification-resourcetype\n         */\n        readonly resourceType?: string;\n        /**\n         * The tags to apply to the resource.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-tagspecification.html#cfn-ec2-ec2fleet-tagspecification-tags\n         */\n        readonly tags?: cdk.CfnTag[];\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `TagSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `TagSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEC2Fleet_TagSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('resourceType', cdk.validateString)(properties.resourceType));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"TagSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.TagSpecification` resource\n *\n * @param properties - the TypeScript properties of a `TagSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.TagSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEC2FleetTagSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEC2Fleet_TagSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        ResourceType: cdk.stringToCloudFormation(properties.resourceType),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEC2FleetTagSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEC2Fleet.TagSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEC2Fleet.TagSpecificationProperty>();\n    ret.addPropertyResult('resourceType', 'ResourceType', properties.ResourceType != null ? cfn_parse.FromCloudFormation.getString(properties.ResourceType) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEC2Fleet {\n    /**\n     * Specifies the number of units to request for an EC2 Fleet. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is `maintain` , you can specify a target capacity of `0` and add capacity later.\n     *\n     * `TargetCapacitySpecificationRequest` is a property of the [AWS::EC2::EC2Fleet](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html) resource.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html\n     */\n    export interface TargetCapacitySpecificationRequestProperty {\n        /**\n         * The default `TotalTargetCapacity` , which is either `Spot` or `On-Demand` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html#cfn-ec2-ec2fleet-targetcapacityspecificationrequest-defaulttargetcapacitytype\n         */\n        readonly defaultTargetCapacityType?: string;\n        /**\n         * The number of On-Demand units to request.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html#cfn-ec2-ec2fleet-targetcapacityspecificationrequest-ondemandtargetcapacity\n         */\n        readonly onDemandTargetCapacity?: number;\n        /**\n         * The number of Spot units to request.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html#cfn-ec2-ec2fleet-targetcapacityspecificationrequest-spottargetcapacity\n         */\n        readonly spotTargetCapacity?: number;\n        /**\n         * The unit for the target capacity.\n         *\n         * Default: `units` (translates to number of instances)\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html#cfn-ec2-ec2fleet-targetcapacityspecificationrequest-targetcapacityunittype\n         */\n        readonly targetCapacityUnitType?: string;\n        /**\n         * The number of units to request, filled using `DefaultTargetCapacityType` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html#cfn-ec2-ec2fleet-targetcapacityspecificationrequest-totaltargetcapacity\n         */\n        readonly totalTargetCapacity: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `TargetCapacitySpecificationRequestProperty`\n *\n * @param properties - the TypeScript properties of a `TargetCapacitySpecificationRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEC2Fleet_TargetCapacitySpecificationRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('defaultTargetCapacityType', cdk.validateString)(properties.defaultTargetCapacityType));\n    errors.collect(cdk.propertyValidator('onDemandTargetCapacity', cdk.validateNumber)(properties.onDemandTargetCapacity));\n    errors.collect(cdk.propertyValidator('spotTargetCapacity', cdk.validateNumber)(properties.spotTargetCapacity));\n    errors.collect(cdk.propertyValidator('targetCapacityUnitType', cdk.validateString)(properties.targetCapacityUnitType));\n    errors.collect(cdk.propertyValidator('totalTargetCapacity', cdk.requiredValidator)(properties.totalTargetCapacity));\n    errors.collect(cdk.propertyValidator('totalTargetCapacity', cdk.validateNumber)(properties.totalTargetCapacity));\n    return errors.wrap('supplied properties not correct for \"TargetCapacitySpecificationRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.TargetCapacitySpecificationRequest` resource\n *\n * @param properties - the TypeScript properties of a `TargetCapacitySpecificationRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.TargetCapacitySpecificationRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEC2FleetTargetCapacitySpecificationRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEC2Fleet_TargetCapacitySpecificationRequestPropertyValidator(properties).assertSuccess();\n    return {\n        DefaultTargetCapacityType: cdk.stringToCloudFormation(properties.defaultTargetCapacityType),\n        OnDemandTargetCapacity: cdk.numberToCloudFormation(properties.onDemandTargetCapacity),\n        SpotTargetCapacity: cdk.numberToCloudFormation(properties.spotTargetCapacity),\n        TargetCapacityUnitType: cdk.stringToCloudFormation(properties.targetCapacityUnitType),\n        TotalTargetCapacity: cdk.numberToCloudFormation(properties.totalTargetCapacity),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEC2FleetTargetCapacitySpecificationRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEC2Fleet.TargetCapacitySpecificationRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEC2Fleet.TargetCapacitySpecificationRequestProperty>();\n    ret.addPropertyResult('defaultTargetCapacityType', 'DefaultTargetCapacityType', properties.DefaultTargetCapacityType != null ? cfn_parse.FromCloudFormation.getString(properties.DefaultTargetCapacityType) : undefined);\n    ret.addPropertyResult('onDemandTargetCapacity', 'OnDemandTargetCapacity', properties.OnDemandTargetCapacity != null ? cfn_parse.FromCloudFormation.getNumber(properties.OnDemandTargetCapacity) : undefined);\n    ret.addPropertyResult('spotTargetCapacity', 'SpotTargetCapacity', properties.SpotTargetCapacity != null ? cfn_parse.FromCloudFormation.getNumber(properties.SpotTargetCapacity) : undefined);\n    ret.addPropertyResult('targetCapacityUnitType', 'TargetCapacityUnitType', properties.TargetCapacityUnitType != null ? cfn_parse.FromCloudFormation.getString(properties.TargetCapacityUnitType) : undefined);\n    ret.addPropertyResult('totalTargetCapacity', 'TotalTargetCapacity', cfn_parse.FromCloudFormation.getNumber(properties.TotalTargetCapacity));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEC2Fleet {\n    /**\n     * The minimum and maximum amount of total local storage, in GB.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-totallocalstoragegbrequest.html\n     */\n    export interface TotalLocalStorageGBRequestProperty {\n        /**\n         * The maximum amount of total local storage, in GB. To specify no maximum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-totallocalstoragegbrequest.html#cfn-ec2-ec2fleet-totallocalstoragegbrequest-max\n         */\n        readonly max?: number;\n        /**\n         * The minimum amount of total local storage, in GB. To specify no minimum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-totallocalstoragegbrequest.html#cfn-ec2-ec2fleet-totallocalstoragegbrequest-min\n         */\n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `TotalLocalStorageGBRequestProperty`\n *\n * @param properties - the TypeScript properties of a `TotalLocalStorageGBRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEC2Fleet_TotalLocalStorageGBRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"TotalLocalStorageGBRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.TotalLocalStorageGBRequest` resource\n *\n * @param properties - the TypeScript properties of a `TotalLocalStorageGBRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.TotalLocalStorageGBRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEC2FleetTotalLocalStorageGBRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEC2Fleet_TotalLocalStorageGBRequestPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEC2FleetTotalLocalStorageGBRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEC2Fleet.TotalLocalStorageGBRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEC2Fleet.TotalLocalStorageGBRequestProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEC2Fleet {\n    /**\n     * The minimum and maximum number of vCPUs.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-vcpucountrangerequest.html\n     */\n    export interface VCpuCountRangeRequestProperty {\n        /**\n         * The maximum number of vCPUs. To specify no maximum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-vcpucountrangerequest.html#cfn-ec2-ec2fleet-vcpucountrangerequest-max\n         */\n        readonly max?: number;\n        /**\n         * The minimum number of vCPUs. To specify no minimum limit, specify `0` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-vcpucountrangerequest.html#cfn-ec2-ec2fleet-vcpucountrangerequest-min\n         */\n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `VCpuCountRangeRequestProperty`\n *\n * @param properties - the TypeScript properties of a `VCpuCountRangeRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEC2Fleet_VCpuCountRangeRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"VCpuCountRangeRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.VCpuCountRangeRequest` resource\n *\n * @param properties - the TypeScript properties of a `VCpuCountRangeRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::EC2Fleet.VCpuCountRangeRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEC2FleetVCpuCountRangeRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEC2Fleet_VCpuCountRangeRequestPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEC2FleetVCpuCountRangeRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEC2Fleet.VCpuCountRangeRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEC2Fleet.VCpuCountRangeRequestProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnEIP`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html\n */\nexport interface CfnEIPProps {\n\n    /**\n     * Indicates whether the Elastic IP address is for use with instances in a VPC or instance in EC2-Classic.\n     *\n     * Default: If the Region supports EC2-Classic, the default is `standard` . Otherwise, the default is `vpc` .\n     *\n     * Use when allocating an address for use with a VPC if the Region supports EC2-Classic.\n     *\n     * If you define an Elastic IP address and associate it with a VPC that is defined in the same template, you must declare a dependency on the VPC-gateway attachment by using the [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) on this resource.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-domain\n     */\n    readonly domain?: string;\n\n    /**\n     * The ID of the instance.\n     *\n     * > Updates to the `InstanceId` property may require *some interruptions* . Updates on an EIP reassociates the address on its associated resource.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-instanceid\n     */\n    readonly instanceId?: string;\n\n    /**\n     * The ID of an address pool that you own. Use this parameter to let Amazon EC2 select an address from the address pool.\n     *\n     * > Updates to the `PublicIpv4Pool` property may require *some interruptions* . Updates on an EIP reassociates the address on its associated resource.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-publicipv4pool\n     */\n    readonly publicIpv4Pool?: string;\n\n    /**\n     * Any tags assigned to the Elastic IP address.\n     *\n     * > Updates to the `Tags` property may require *some interruptions* . Updates on an EIP reassociates the address on its associated resource.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnEIPProps`\n *\n * @param properties - the TypeScript properties of a `CfnEIPProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnEIPPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('domain', cdk.validateString)(properties.domain));\n    errors.collect(cdk.propertyValidator('instanceId', cdk.validateString)(properties.instanceId));\n    errors.collect(cdk.propertyValidator('publicIpv4Pool', cdk.validateString)(properties.publicIpv4Pool));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnEIPProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::EIP` resource\n *\n * @param properties - the TypeScript properties of a `CfnEIPProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::EIP` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEIPPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEIPPropsValidator(properties).assertSuccess();\n    return {\n        Domain: cdk.stringToCloudFormation(properties.domain),\n        InstanceId: cdk.stringToCloudFormation(properties.instanceId),\n        PublicIpv4Pool: cdk.stringToCloudFormation(properties.publicIpv4Pool),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEIPPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEIPProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEIPProps>();\n    ret.addPropertyResult('domain', 'Domain', properties.Domain != null ? cfn_parse.FromCloudFormation.getString(properties.Domain) : undefined);\n    ret.addPropertyResult('instanceId', 'InstanceId', properties.InstanceId != null ? cfn_parse.FromCloudFormation.getString(properties.InstanceId) : undefined);\n    ret.addPropertyResult('publicIpv4Pool', 'PublicIpv4Pool', properties.PublicIpv4Pool != null ? cfn_parse.FromCloudFormation.getString(properties.PublicIpv4Pool) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::EIP`\n *\n * Specifies an Elastic IP (EIP) address and can, optionally, associate it with an Amazon EC2 instance.\n *\n * You can allocate an Elastic IP address from an address pool owned by AWS or from an address pool created from a public IPv4 address range that you have brought to AWS for use with your AWS resources using bring your own IP addresses (BYOIP). For more information, see [Bring Your Own IP Addresses (BYOIP)](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-byoip.html) in the *Amazon EC2 User Guide* .\n *\n * [EC2-VPC] If you release an Elastic IP address, you might be able to recover it. You cannot recover an Elastic IP address that you released after it is allocated to another AWS account. You cannot recover an Elastic IP address for EC2-Classic. To attempt to recover an Elastic IP address that you released, specify it in this operation.\n *\n * An Elastic IP address is for use either in the EC2-Classic platform or in a VPC. By default, you can allocate 5 Elastic IP addresses for EC2-Classic per Region and 5 Elastic IP addresses for EC2-VPC per Region.\n *\n * For more information, see [Elastic IP Addresses](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html) in the *Amazon EC2 User Guide* .\n *\n * @cloudformationResource AWS::EC2::EIP\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html\n */\nexport class CfnEIP extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::EIP\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnEIP {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnEIPPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnEIP(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID that AWS assigns to represent the allocation of the address for use with Amazon VPC. This is returned only for VPC elastic IP addresses. For example, `eipalloc-5723d13e` .\n     * @cloudformationAttribute AllocationId\n     */\n    public readonly attrAllocationId: string;\n\n    /**\n     * Indicates whether the Elastic IP address is for use with instances in a VPC or instance in EC2-Classic.\n     *\n     * Default: If the Region supports EC2-Classic, the default is `standard` . Otherwise, the default is `vpc` .\n     *\n     * Use when allocating an address for use with a VPC if the Region supports EC2-Classic.\n     *\n     * If you define an Elastic IP address and associate it with a VPC that is defined in the same template, you must declare a dependency on the VPC-gateway attachment by using the [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) on this resource.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-domain\n     */\n    public domain: string | undefined;\n\n    /**\n     * The ID of the instance.\n     *\n     * > Updates to the `InstanceId` property may require *some interruptions* . Updates on an EIP reassociates the address on its associated resource.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-instanceid\n     */\n    public instanceId: string | undefined;\n\n    /**\n     * The ID of an address pool that you own. Use this parameter to let Amazon EC2 select an address from the address pool.\n     *\n     * > Updates to the `PublicIpv4Pool` property may require *some interruptions* . Updates on an EIP reassociates the address on its associated resource.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-publicipv4pool\n     */\n    public publicIpv4Pool: string | undefined;\n\n    /**\n     * Any tags assigned to the Elastic IP address.\n     *\n     * > Updates to the `Tags` property may require *some interruptions* . Updates on an EIP reassociates the address on its associated resource.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EC2::EIP`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnEIPProps = {}) {\n        super(scope, id, { type: CfnEIP.CFN_RESOURCE_TYPE_NAME, properties: props });\n        this.attrAllocationId = cdk.Token.asString(this.getAtt('AllocationId'));\n\n        this.domain = props.domain;\n        this.instanceId = props.instanceId;\n        this.publicIpv4Pool = props.publicIpv4Pool;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::EIP\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnEIP.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            domain: this.domain,\n            instanceId: this.instanceId,\n            publicIpv4Pool: this.publicIpv4Pool,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnEIPPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnEIPAssociation`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html\n */\nexport interface CfnEIPAssociationProps {\n\n    /**\n     * [EC2-VPC] The allocation ID. This is required for EC2-VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-allocationid\n     */\n    readonly allocationId?: string;\n\n    /**\n     * [EC2-Classic] The Elastic IP address to associate with the instance. This is required for EC2-Classic.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-eip\n     */\n    readonly eip?: string;\n\n    /**\n     * The ID of the instance. The instance must have exactly one attached network interface. For EC2-VPC, you can specify either the instance ID or the network interface ID, but not both. For EC2-Classic, you must specify an instance ID and the instance must be in the running state.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-instanceid\n     */\n    readonly instanceId?: string;\n\n    /**\n     * [EC2-VPC] The ID of the network interface. If the instance has more than one network interface, you must specify a network interface ID.\n     *\n     * For EC2-VPC, you can specify either the instance ID or the network interface ID, but not both.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-networkinterfaceid\n     */\n    readonly networkInterfaceId?: string;\n\n    /**\n     * [EC2-VPC] The primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-PrivateIpAddress\n     */\n    readonly privateIpAddress?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnEIPAssociationProps`\n *\n * @param properties - the TypeScript properties of a `CfnEIPAssociationProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnEIPAssociationPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('allocationId', cdk.validateString)(properties.allocationId));\n    errors.collect(cdk.propertyValidator('eip', cdk.validateString)(properties.eip));\n    errors.collect(cdk.propertyValidator('instanceId', cdk.validateString)(properties.instanceId));\n    errors.collect(cdk.propertyValidator('networkInterfaceId', cdk.validateString)(properties.networkInterfaceId));\n    errors.collect(cdk.propertyValidator('privateIpAddress', cdk.validateString)(properties.privateIpAddress));\n    return errors.wrap('supplied properties not correct for \"CfnEIPAssociationProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::EIPAssociation` resource\n *\n * @param properties - the TypeScript properties of a `CfnEIPAssociationProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::EIPAssociation` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEIPAssociationPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEIPAssociationPropsValidator(properties).assertSuccess();\n    return {\n        AllocationId: cdk.stringToCloudFormation(properties.allocationId),\n        EIP: cdk.stringToCloudFormation(properties.eip),\n        InstanceId: cdk.stringToCloudFormation(properties.instanceId),\n        NetworkInterfaceId: cdk.stringToCloudFormation(properties.networkInterfaceId),\n        PrivateIpAddress: cdk.stringToCloudFormation(properties.privateIpAddress),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEIPAssociationPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEIPAssociationProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEIPAssociationProps>();\n    ret.addPropertyResult('allocationId', 'AllocationId', properties.AllocationId != null ? cfn_parse.FromCloudFormation.getString(properties.AllocationId) : undefined);\n    ret.addPropertyResult('eip', 'EIP', properties.EIP != null ? cfn_parse.FromCloudFormation.getString(properties.EIP) : undefined);\n    ret.addPropertyResult('instanceId', 'InstanceId', properties.InstanceId != null ? cfn_parse.FromCloudFormation.getString(properties.InstanceId) : undefined);\n    ret.addPropertyResult('networkInterfaceId', 'NetworkInterfaceId', properties.NetworkInterfaceId != null ? cfn_parse.FromCloudFormation.getString(properties.NetworkInterfaceId) : undefined);\n    ret.addPropertyResult('privateIpAddress', 'PrivateIpAddress', properties.PrivateIpAddress != null ? cfn_parse.FromCloudFormation.getString(properties.PrivateIpAddress) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::EIPAssociation`\n *\n * Associates an Elastic IP address with an instance or a network interface. Before you can use an Elastic IP address, you must allocate it to your account.\n *\n * An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For more information, see [Elastic IP Addresses](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html) in the *Amazon EC2 User Guide* .\n *\n * [EC2-Classic, VPC in an EC2-VPC-only account] If the Elastic IP address is already associated with a different instance, it is disassociated from that instance and associated with the specified instance. If you associate an Elastic IP address with an instance that has an existing Elastic IP address, the existing address is disassociated from the instance, but remains allocated to your account.\n *\n * [VPC in an EC2-Classic account] If you don't specify a private IP address, the Elastic IP address is associated with the primary IP address. If the Elastic IP address is already associated with a different instance or a network interface, you get an error unless you allow reassociation. You cannot associate an Elastic IP address with an instance or network interface that has an existing Elastic IP address.\n *\n * @cloudformationResource AWS::EC2::EIPAssociation\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html\n */\nexport class CfnEIPAssociation extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::EIPAssociation\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnEIPAssociation {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnEIPAssociationPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnEIPAssociation(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * [EC2-VPC] The allocation ID. This is required for EC2-VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-allocationid\n     */\n    public allocationId: string | undefined;\n\n    /**\n     * [EC2-Classic] The Elastic IP address to associate with the instance. This is required for EC2-Classic.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-eip\n     */\n    public eip: string | undefined;\n\n    /**\n     * The ID of the instance. The instance must have exactly one attached network interface. For EC2-VPC, you can specify either the instance ID or the network interface ID, but not both. For EC2-Classic, you must specify an instance ID and the instance must be in the running state.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-instanceid\n     */\n    public instanceId: string | undefined;\n\n    /**\n     * [EC2-VPC] The ID of the network interface. If the instance has more than one network interface, you must specify a network interface ID.\n     *\n     * For EC2-VPC, you can specify either the instance ID or the network interface ID, but not both.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-networkinterfaceid\n     */\n    public networkInterfaceId: string | undefined;\n\n    /**\n     * [EC2-VPC] The primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-PrivateIpAddress\n     */\n    public privateIpAddress: string | undefined;\n\n    /**\n     * Create a new `AWS::EC2::EIPAssociation`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnEIPAssociationProps = {}) {\n        super(scope, id, { type: CfnEIPAssociation.CFN_RESOURCE_TYPE_NAME, properties: props });\n\n        this.allocationId = props.allocationId;\n        this.eip = props.eip;\n        this.instanceId = props.instanceId;\n        this.networkInterfaceId = props.networkInterfaceId;\n        this.privateIpAddress = props.privateIpAddress;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnEIPAssociation.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            allocationId: this.allocationId,\n            eip: this.eip,\n            instanceId: this.instanceId,\n            networkInterfaceId: this.networkInterfaceId,\n            privateIpAddress: this.privateIpAddress,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnEIPAssociationPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnEgressOnlyInternetGateway`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-egressonlyinternetgateway.html\n */\nexport interface CfnEgressOnlyInternetGatewayProps {\n\n    /**\n     * The ID of the VPC for which to create the egress-only internet gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-egressonlyinternetgateway.html#cfn-ec2-egressonlyinternetgateway-vpcid\n     */\n    readonly vpcId: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnEgressOnlyInternetGatewayProps`\n *\n * @param properties - the TypeScript properties of a `CfnEgressOnlyInternetGatewayProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnEgressOnlyInternetGatewayPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('vpcId', cdk.requiredValidator)(properties.vpcId));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.validateString)(properties.vpcId));\n    return errors.wrap('supplied properties not correct for \"CfnEgressOnlyInternetGatewayProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::EgressOnlyInternetGateway` resource\n *\n * @param properties - the TypeScript properties of a `CfnEgressOnlyInternetGatewayProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::EgressOnlyInternetGateway` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEgressOnlyInternetGatewayPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEgressOnlyInternetGatewayPropsValidator(properties).assertSuccess();\n    return {\n        VpcId: cdk.stringToCloudFormation(properties.vpcId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEgressOnlyInternetGatewayPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEgressOnlyInternetGatewayProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEgressOnlyInternetGatewayProps>();\n    ret.addPropertyResult('vpcId', 'VpcId', cfn_parse.FromCloudFormation.getString(properties.VpcId));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::EgressOnlyInternetGateway`\n *\n * [IPv6 only] Specifies an egress-only internet gateway for your VPC. An egress-only internet gateway is used to enable outbound communication over IPv6 from instances in your VPC to the internet, and prevents hosts outside of your VPC from initiating an IPv6 connection with your instance.\n *\n * @cloudformationResource AWS::EC2::EgressOnlyInternetGateway\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-egressonlyinternetgateway.html\n */\nexport class CfnEgressOnlyInternetGateway extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::EgressOnlyInternetGateway\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnEgressOnlyInternetGateway {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnEgressOnlyInternetGatewayPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnEgressOnlyInternetGateway(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the egress-only internet gateway.\n     * @cloudformationAttribute Id\n     */\n    public readonly attrId: string;\n\n    /**\n     * The ID of the VPC for which to create the egress-only internet gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-egressonlyinternetgateway.html#cfn-ec2-egressonlyinternetgateway-vpcid\n     */\n    public vpcId: string;\n\n    /**\n     * Create a new `AWS::EC2::EgressOnlyInternetGateway`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnEgressOnlyInternetGatewayProps) {\n        super(scope, id, { type: CfnEgressOnlyInternetGateway.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'vpcId', this);\n        this.attrId = cdk.Token.asString(this.getAtt('Id'));\n\n        this.vpcId = props.vpcId;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnEgressOnlyInternetGateway.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            vpcId: this.vpcId,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnEgressOnlyInternetGatewayPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnEnclaveCertificateIamRoleAssociation`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-enclavecertificateiamroleassociation.html\n */\nexport interface CfnEnclaveCertificateIamRoleAssociationProps {\n\n    /**\n     * The ARN of the ACM certificate with which to associate the IAM role.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-enclavecertificateiamroleassociation.html#cfn-ec2-enclavecertificateiamroleassociation-certificatearn\n     */\n    readonly certificateArn: string;\n\n    /**\n     * The ARN of the IAM role to associate with the ACM certificate. You can associate up to 16 IAM roles with an ACM certificate.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-enclavecertificateiamroleassociation.html#cfn-ec2-enclavecertificateiamroleassociation-rolearn\n     */\n    readonly roleArn: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnEnclaveCertificateIamRoleAssociationProps`\n *\n * @param properties - the TypeScript properties of a `CfnEnclaveCertificateIamRoleAssociationProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnEnclaveCertificateIamRoleAssociationPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('certificateArn', cdk.requiredValidator)(properties.certificateArn));\n    errors.collect(cdk.propertyValidator('certificateArn', cdk.validateString)(properties.certificateArn));\n    errors.collect(cdk.propertyValidator('roleArn', cdk.requiredValidator)(properties.roleArn));\n    errors.collect(cdk.propertyValidator('roleArn', cdk.validateString)(properties.roleArn));\n    return errors.wrap('supplied properties not correct for \"CfnEnclaveCertificateIamRoleAssociationProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::EnclaveCertificateIamRoleAssociation` resource\n *\n * @param properties - the TypeScript properties of a `CfnEnclaveCertificateIamRoleAssociationProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::EnclaveCertificateIamRoleAssociation` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEnclaveCertificateIamRoleAssociationPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEnclaveCertificateIamRoleAssociationPropsValidator(properties).assertSuccess();\n    return {\n        CertificateArn: cdk.stringToCloudFormation(properties.certificateArn),\n        RoleArn: cdk.stringToCloudFormation(properties.roleArn),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEnclaveCertificateIamRoleAssociationPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEnclaveCertificateIamRoleAssociationProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEnclaveCertificateIamRoleAssociationProps>();\n    ret.addPropertyResult('certificateArn', 'CertificateArn', cfn_parse.FromCloudFormation.getString(properties.CertificateArn));\n    ret.addPropertyResult('roleArn', 'RoleArn', cfn_parse.FromCloudFormation.getString(properties.RoleArn));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::EnclaveCertificateIamRoleAssociation`\n *\n * Associates an AWS Identity and Access Management (IAM) role with an AWS Certificate Manager (ACM) certificate. This enables the certificate to be used by the ACM for Nitro Enclaves application inside an enclave. For more information, see [AWS Certificate Manager for Nitro Enclaves](https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave-refapp.html) in the *AWS Nitro Enclaves User Guide* .\n *\n * When the IAM role is associated with the ACM certificate, the certificate, certificate chain, and encrypted private key are placed in an Amazon S3 bucket that only the associated IAM role can access. The private key of the certificate is encrypted with an AWS managed key that has an attached attestation-based key policy.\n *\n * To enable the IAM role to access the Amazon S3 object, you must grant it permission to call `s3:GetObject` on the Amazon S3 bucket returned by the command. To enable the IAM role to access the KMS key, you must grant it permission to call `kms:Decrypt` on the KMS key returned by the command. For more information, see [Grant the role permission to access the certificate and encryption key](https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave-refapp.html#add-policy) in the *AWS Nitro Enclaves User Guide* .\n *\n * @cloudformationResource AWS::EC2::EnclaveCertificateIamRoleAssociation\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-enclavecertificateiamroleassociation.html\n */\nexport class CfnEnclaveCertificateIamRoleAssociation extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::EnclaveCertificateIamRoleAssociation\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnEnclaveCertificateIamRoleAssociation {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnEnclaveCertificateIamRoleAssociationPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnEnclaveCertificateIamRoleAssociation(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The name of the Amazon S3 bucket to which the certificate was uploaded.\n     * @cloudformationAttribute CertificateS3BucketName\n     */\n    public readonly attrCertificateS3BucketName: string;\n\n    /**\n     * The Amazon S3 object key where the certificate, certificate chain, and encrypted private key bundle are stored. The object key is formatted as follows: `role_arn` / `certificate_arn` .\n     * @cloudformationAttribute CertificateS3ObjectKey\n     */\n    public readonly attrCertificateS3ObjectKey: string;\n\n    /**\n     * The ID of the AWS KMS key used to encrypt the private key of the certificate.\n     * @cloudformationAttribute EncryptionKmsKeyId\n     */\n    public readonly attrEncryptionKmsKeyId: string;\n\n    /**\n     * The ARN of the ACM certificate with which to associate the IAM role.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-enclavecertificateiamroleassociation.html#cfn-ec2-enclavecertificateiamroleassociation-certificatearn\n     */\n    public certificateArn: string;\n\n    /**\n     * The ARN of the IAM role to associate with the ACM certificate. You can associate up to 16 IAM roles with an ACM certificate.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-enclavecertificateiamroleassociation.html#cfn-ec2-enclavecertificateiamroleassociation-rolearn\n     */\n    public roleArn: string;\n\n    /**\n     * Create a new `AWS::EC2::EnclaveCertificateIamRoleAssociation`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnEnclaveCertificateIamRoleAssociationProps) {\n        super(scope, id, { type: CfnEnclaveCertificateIamRoleAssociation.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'certificateArn', this);\n        cdk.requireProperty(props, 'roleArn', this);\n        this.attrCertificateS3BucketName = cdk.Token.asString(this.getAtt('CertificateS3BucketName'));\n        this.attrCertificateS3ObjectKey = cdk.Token.asString(this.getAtt('CertificateS3ObjectKey'));\n        this.attrEncryptionKmsKeyId = cdk.Token.asString(this.getAtt('EncryptionKmsKeyId'));\n\n        this.certificateArn = props.certificateArn;\n        this.roleArn = props.roleArn;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnEnclaveCertificateIamRoleAssociation.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            certificateArn: this.certificateArn,\n            roleArn: this.roleArn,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnEnclaveCertificateIamRoleAssociationPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnFlowLog`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html\n */\nexport interface CfnFlowLogProps {\n\n    /**\n     * The ID of the subnet, network interface, or VPC for which you want to create a flow log.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-resourceid\n     */\n    readonly resourceId: string;\n\n    /**\n     * The type of resource for which to create the flow log. For example, if you specified a VPC ID for the `ResourceId` property, specify `VPC` for this property.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-resourcetype\n     */\n    readonly resourceType: string;\n\n    /**\n     * The type of traffic to log. You can log traffic that the resource accepts or rejects, or all traffic.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-traffictype\n     */\n    readonly trafficType: string;\n\n    /**\n     * The ARN for the IAM role that permits Amazon EC2 to publish flow logs to a CloudWatch Logs log group in your account.\n     *\n     * If you specify `LogDestinationType` as `s3` , do not specify `DeliverLogsPermissionArn` or `LogGroupName` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-deliverlogspermissionarn\n     */\n    readonly deliverLogsPermissionArn?: string;\n\n    /**\n     * The destination options. The following options are supported:\n     *\n     * - `FileFormat` - The format for the flow log ( `plain-text` | `parquet` ). The default is `plain-text` .\n     * - `HiveCompatiblePartitions` - Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3 ( `true` | `false` ). The default is `false` .\n     * - `PerHourPartition` - Indicates whether to partition the flow log per hour ( `true` | `false` ). The default is `false` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-destinationoptions\n     */\n    readonly destinationOptions?: any | cdk.IResolvable;\n\n    /**\n     * The destination to which the flow log data is to be published. Flow log data can be published to a CloudWatch Logs log group or an Amazon S3 bucket. The value specified for this parameter depends on the value specified for `LogDestinationType` .\n     *\n     * If `LogDestinationType` is not specified or `cloud-watch-logs` , specify the Amazon Resource Name (ARN) of the CloudWatch Logs log group. For example, to publish to a log group called `my-logs` , specify `arn:aws:logs:us-east-1:123456789012:log-group:my-logs` . Alternatively, use `LogGroupName` instead.\n     *\n     * If LogDestinationType is `s3` , specify the ARN of the Amazon S3 bucket. You can also specify a subfolder in the bucket. To specify a subfolder in the bucket, use the following ARN format: `bucket_ARN/subfolder_name/` . For example, to specify a subfolder named `my-logs` in a bucket named `my-bucket` , use the following ARN: `arn:aws:s3:::my-bucket/my-logs/` . You cannot use `AWSLogs` as a subfolder name. This is a reserved term.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logdestination\n     */\n    readonly logDestination?: string;\n\n    /**\n     * The type of destination to which the flow log data is to be published. Flow log data can be published to CloudWatch Logs or Amazon S3. To publish flow log data to CloudWatch Logs, specify `cloud-watch-logs` . To publish flow log data to Amazon S3, specify `s3` .\n     *\n     * If you specify `LogDestinationType` as `s3` , do not specify `DeliverLogsPermissionArn` or `LogGroupName` .\n     *\n     * Default: `cloud-watch-logs`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logdestinationtype\n     */\n    readonly logDestinationType?: string;\n\n    /**\n     * The fields to include in the flow log record, in the order in which they should appear. For a list of available fields, see [Flow Log Records](https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html#flow-log-records) . If you omit this parameter, the flow log is created using the default format. If you specify this parameter, you must specify at least one field.\n     *\n     * Specify the fields using the `${field-id}` format, separated by spaces.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logformat\n     */\n    readonly logFormat?: string;\n\n    /**\n     * The name of a new or existing CloudWatch Logs log group where Amazon EC2 publishes your flow logs.\n     *\n     * If you specify `LogDestinationType` as `s3` , do not specify `DeliverLogsPermissionArn` or `LogGroupName` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-loggroupname\n     */\n    readonly logGroupName?: string;\n\n    /**\n     * The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. You can specify 60 seconds (1 minute) or 600 seconds (10 minutes).\n     *\n     * When a network interface is attached to a [Nitro-based instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances) , the aggregation interval is always 60 seconds or less, regardless of the value that you specify.\n     *\n     * Default: 600\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-maxaggregationinterval\n     */\n    readonly maxAggregationInterval?: number;\n\n    /**\n     * The tags to apply to the flow logs.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnFlowLogProps`\n *\n * @param properties - the TypeScript properties of a `CfnFlowLogProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnFlowLogPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('deliverLogsPermissionArn', cdk.validateString)(properties.deliverLogsPermissionArn));\n    errors.collect(cdk.propertyValidator('destinationOptions', cdk.validateObject)(properties.destinationOptions));\n    errors.collect(cdk.propertyValidator('logDestination', cdk.validateString)(properties.logDestination));\n    errors.collect(cdk.propertyValidator('logDestinationType', cdk.validateString)(properties.logDestinationType));\n    errors.collect(cdk.propertyValidator('logFormat', cdk.validateString)(properties.logFormat));\n    errors.collect(cdk.propertyValidator('logGroupName', cdk.validateString)(properties.logGroupName));\n    errors.collect(cdk.propertyValidator('maxAggregationInterval', cdk.validateNumber)(properties.maxAggregationInterval));\n    errors.collect(cdk.propertyValidator('resourceId', cdk.requiredValidator)(properties.resourceId));\n    errors.collect(cdk.propertyValidator('resourceId', cdk.validateString)(properties.resourceId));\n    errors.collect(cdk.propertyValidator('resourceType', cdk.requiredValidator)(properties.resourceType));\n    errors.collect(cdk.propertyValidator('resourceType', cdk.validateString)(properties.resourceType));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('trafficType', cdk.requiredValidator)(properties.trafficType));\n    errors.collect(cdk.propertyValidator('trafficType', cdk.validateString)(properties.trafficType));\n    return errors.wrap('supplied properties not correct for \"CfnFlowLogProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::FlowLog` resource\n *\n * @param properties - the TypeScript properties of a `CfnFlowLogProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::FlowLog` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFlowLogPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFlowLogPropsValidator(properties).assertSuccess();\n    return {\n        ResourceId: cdk.stringToCloudFormation(properties.resourceId),\n        ResourceType: cdk.stringToCloudFormation(properties.resourceType),\n        TrafficType: cdk.stringToCloudFormation(properties.trafficType),\n        DeliverLogsPermissionArn: cdk.stringToCloudFormation(properties.deliverLogsPermissionArn),\n        DestinationOptions: cdk.objectToCloudFormation(properties.destinationOptions),\n        LogDestination: cdk.stringToCloudFormation(properties.logDestination),\n        LogDestinationType: cdk.stringToCloudFormation(properties.logDestinationType),\n        LogFormat: cdk.stringToCloudFormation(properties.logFormat),\n        LogGroupName: cdk.stringToCloudFormation(properties.logGroupName),\n        MaxAggregationInterval: cdk.numberToCloudFormation(properties.maxAggregationInterval),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFlowLogPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFlowLogProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFlowLogProps>();\n    ret.addPropertyResult('resourceId', 'ResourceId', cfn_parse.FromCloudFormation.getString(properties.ResourceId));\n    ret.addPropertyResult('resourceType', 'ResourceType', cfn_parse.FromCloudFormation.getString(properties.ResourceType));\n    ret.addPropertyResult('trafficType', 'TrafficType', cfn_parse.FromCloudFormation.getString(properties.TrafficType));\n    ret.addPropertyResult('deliverLogsPermissionArn', 'DeliverLogsPermissionArn', properties.DeliverLogsPermissionArn != null ? cfn_parse.FromCloudFormation.getString(properties.DeliverLogsPermissionArn) : undefined);\n    ret.addPropertyResult('destinationOptions', 'DestinationOptions', properties.DestinationOptions != null ? cfn_parse.FromCloudFormation.getAny(properties.DestinationOptions) : undefined);\n    ret.addPropertyResult('logDestination', 'LogDestination', properties.LogDestination != null ? cfn_parse.FromCloudFormation.getString(properties.LogDestination) : undefined);\n    ret.addPropertyResult('logDestinationType', 'LogDestinationType', properties.LogDestinationType != null ? cfn_parse.FromCloudFormation.getString(properties.LogDestinationType) : undefined);\n    ret.addPropertyResult('logFormat', 'LogFormat', properties.LogFormat != null ? cfn_parse.FromCloudFormation.getString(properties.LogFormat) : undefined);\n    ret.addPropertyResult('logGroupName', 'LogGroupName', properties.LogGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.LogGroupName) : undefined);\n    ret.addPropertyResult('maxAggregationInterval', 'MaxAggregationInterval', properties.MaxAggregationInterval != null ? cfn_parse.FromCloudFormation.getNumber(properties.MaxAggregationInterval) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::FlowLog`\n *\n * Specifies a VPC flow log that captures IP traffic for a specified network interface, subnet, or VPC. To view the log data, use Amazon CloudWatch Logs (CloudWatch Logs) to help troubleshoot connection issues. For example, you can use a flow log to investigate why certain traffic isn't reaching an instance, which can help you diagnose overly restrictive security group rules. For more information, see [VPC Flow Logs](https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html) in the *Amazon VPC User Guide* .\n *\n * @cloudformationResource AWS::EC2::FlowLog\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html\n */\nexport class CfnFlowLog extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::FlowLog\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnFlowLog {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnFlowLogPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnFlowLog(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the flow log. For example, `fl-123456abc123abc1` .\n     * @cloudformationAttribute Id\n     */\n    public readonly attrId: string;\n\n    /**\n     * The ID of the subnet, network interface, or VPC for which you want to create a flow log.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-resourceid\n     */\n    public resourceId: string;\n\n    /**\n     * The type of resource for which to create the flow log. For example, if you specified a VPC ID for the `ResourceId` property, specify `VPC` for this property.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-resourcetype\n     */\n    public resourceType: string;\n\n    /**\n     * The type of traffic to log. You can log traffic that the resource accepts or rejects, or all traffic.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-traffictype\n     */\n    public trafficType: string;\n\n    /**\n     * The ARN for the IAM role that permits Amazon EC2 to publish flow logs to a CloudWatch Logs log group in your account.\n     *\n     * If you specify `LogDestinationType` as `s3` , do not specify `DeliverLogsPermissionArn` or `LogGroupName` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-deliverlogspermissionarn\n     */\n    public deliverLogsPermissionArn: string | undefined;\n\n    /**\n     * The destination options. The following options are supported:\n     *\n     * - `FileFormat` - The format for the flow log ( `plain-text` | `parquet` ). The default is `plain-text` .\n     * - `HiveCompatiblePartitions` - Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3 ( `true` | `false` ). The default is `false` .\n     * - `PerHourPartition` - Indicates whether to partition the flow log per hour ( `true` | `false` ). The default is `false` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-destinationoptions\n     */\n    public destinationOptions: any | cdk.IResolvable | undefined;\n\n    /**\n     * The destination to which the flow log data is to be published. Flow log data can be published to a CloudWatch Logs log group or an Amazon S3 bucket. The value specified for this parameter depends on the value specified for `LogDestinationType` .\n     *\n     * If `LogDestinationType` is not specified or `cloud-watch-logs` , specify the Amazon Resource Name (ARN) of the CloudWatch Logs log group. For example, to publish to a log group called `my-logs` , specify `arn:aws:logs:us-east-1:123456789012:log-group:my-logs` . Alternatively, use `LogGroupName` instead.\n     *\n     * If LogDestinationType is `s3` , specify the ARN of the Amazon S3 bucket. You can also specify a subfolder in the bucket. To specify a subfolder in the bucket, use the following ARN format: `bucket_ARN/subfolder_name/` . For example, to specify a subfolder named `my-logs` in a bucket named `my-bucket` , use the following ARN: `arn:aws:s3:::my-bucket/my-logs/` . You cannot use `AWSLogs` as a subfolder name. This is a reserved term.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logdestination\n     */\n    public logDestination: string | undefined;\n\n    /**\n     * The type of destination to which the flow log data is to be published. Flow log data can be published to CloudWatch Logs or Amazon S3. To publish flow log data to CloudWatch Logs, specify `cloud-watch-logs` . To publish flow log data to Amazon S3, specify `s3` .\n     *\n     * If you specify `LogDestinationType` as `s3` , do not specify `DeliverLogsPermissionArn` or `LogGroupName` .\n     *\n     * Default: `cloud-watch-logs`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logdestinationtype\n     */\n    public logDestinationType: string | undefined;\n\n    /**\n     * The fields to include in the flow log record, in the order in which they should appear. For a list of available fields, see [Flow Log Records](https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html#flow-log-records) . If you omit this parameter, the flow log is created using the default format. If you specify this parameter, you must specify at least one field.\n     *\n     * Specify the fields using the `${field-id}` format, separated by spaces.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logformat\n     */\n    public logFormat: string | undefined;\n\n    /**\n     * The name of a new or existing CloudWatch Logs log group where Amazon EC2 publishes your flow logs.\n     *\n     * If you specify `LogDestinationType` as `s3` , do not specify `DeliverLogsPermissionArn` or `LogGroupName` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-loggroupname\n     */\n    public logGroupName: string | undefined;\n\n    /**\n     * The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. You can specify 60 seconds (1 minute) or 600 seconds (10 minutes).\n     *\n     * When a network interface is attached to a [Nitro-based instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances) , the aggregation interval is always 60 seconds or less, regardless of the value that you specify.\n     *\n     * Default: 600\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-maxaggregationinterval\n     */\n    public maxAggregationInterval: number | undefined;\n\n    /**\n     * The tags to apply to the flow logs.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EC2::FlowLog`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnFlowLogProps) {\n        super(scope, id, { type: CfnFlowLog.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'resourceId', this);\n        cdk.requireProperty(props, 'resourceType', this);\n        cdk.requireProperty(props, 'trafficType', this);\n        this.attrId = cdk.Token.asString(this.getAtt('Id'));\n\n        this.resourceId = props.resourceId;\n        this.resourceType = props.resourceType;\n        this.trafficType = props.trafficType;\n        this.deliverLogsPermissionArn = props.deliverLogsPermissionArn;\n        this.destinationOptions = props.destinationOptions;\n        this.logDestination = props.logDestination;\n        this.logDestinationType = props.logDestinationType;\n        this.logFormat = props.logFormat;\n        this.logGroupName = props.logGroupName;\n        this.maxAggregationInterval = props.maxAggregationInterval;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::FlowLog\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnFlowLog.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            resourceId: this.resourceId,\n            resourceType: this.resourceType,\n            trafficType: this.trafficType,\n            deliverLogsPermissionArn: this.deliverLogsPermissionArn,\n            destinationOptions: this.destinationOptions,\n            logDestination: this.logDestination,\n            logDestinationType: this.logDestinationType,\n            logFormat: this.logFormat,\n            logGroupName: this.logGroupName,\n            maxAggregationInterval: this.maxAggregationInterval,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnFlowLogPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnGatewayRouteTableAssociation`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-gatewayroutetableassociation.html\n */\nexport interface CfnGatewayRouteTableAssociationProps {\n\n    /**\n     * The ID of the gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-gatewayroutetableassociation.html#cfn-ec2-gatewayroutetableassociation-gatewayid\n     */\n    readonly gatewayId: string;\n\n    /**\n     * The ID of the route table.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-gatewayroutetableassociation.html#cfn-ec2-gatewayroutetableassociation-routetableid\n     */\n    readonly routeTableId: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnGatewayRouteTableAssociationProps`\n *\n * @param properties - the TypeScript properties of a `CfnGatewayRouteTableAssociationProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnGatewayRouteTableAssociationPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('gatewayId', cdk.requiredValidator)(properties.gatewayId));\n    errors.collect(cdk.propertyValidator('gatewayId', cdk.validateString)(properties.gatewayId));\n    errors.collect(cdk.propertyValidator('routeTableId', cdk.requiredValidator)(properties.routeTableId));\n    errors.collect(cdk.propertyValidator('routeTableId', cdk.validateString)(properties.routeTableId));\n    return errors.wrap('supplied properties not correct for \"CfnGatewayRouteTableAssociationProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::GatewayRouteTableAssociation` resource\n *\n * @param properties - the TypeScript properties of a `CfnGatewayRouteTableAssociationProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::GatewayRouteTableAssociation` resource.\n */\n// @ts-ignore TS6133\nfunction cfnGatewayRouteTableAssociationPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnGatewayRouteTableAssociationPropsValidator(properties).assertSuccess();\n    return {\n        GatewayId: cdk.stringToCloudFormation(properties.gatewayId),\n        RouteTableId: cdk.stringToCloudFormation(properties.routeTableId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnGatewayRouteTableAssociationPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnGatewayRouteTableAssociationProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnGatewayRouteTableAssociationProps>();\n    ret.addPropertyResult('gatewayId', 'GatewayId', cfn_parse.FromCloudFormation.getString(properties.GatewayId));\n    ret.addPropertyResult('routeTableId', 'RouteTableId', cfn_parse.FromCloudFormation.getString(properties.RouteTableId));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::GatewayRouteTableAssociation`\n *\n * Associates a virtual private gateway or internet gateway with a route table. The gateway and route table must be in the same VPC. This association causes the incoming traffic to the gateway to be routed according to the routes in the route table.\n *\n * @cloudformationResource AWS::EC2::GatewayRouteTableAssociation\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-gatewayroutetableassociation.html\n */\nexport class CfnGatewayRouteTableAssociation extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::GatewayRouteTableAssociation\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnGatewayRouteTableAssociation {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnGatewayRouteTableAssociationPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnGatewayRouteTableAssociation(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the route table association.\n     * @cloudformationAttribute AssociationId\n     */\n    public readonly attrAssociationId: string;\n\n    /**\n     * The ID of the gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-gatewayroutetableassociation.html#cfn-ec2-gatewayroutetableassociation-gatewayid\n     */\n    public gatewayId: string;\n\n    /**\n     * The ID of the route table.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-gatewayroutetableassociation.html#cfn-ec2-gatewayroutetableassociation-routetableid\n     */\n    public routeTableId: string;\n\n    /**\n     * Create a new `AWS::EC2::GatewayRouteTableAssociation`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnGatewayRouteTableAssociationProps) {\n        super(scope, id, { type: CfnGatewayRouteTableAssociation.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'gatewayId', this);\n        cdk.requireProperty(props, 'routeTableId', this);\n        this.attrAssociationId = cdk.Token.asString(this.getAtt('AssociationId'));\n\n        this.gatewayId = props.gatewayId;\n        this.routeTableId = props.routeTableId;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnGatewayRouteTableAssociation.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            gatewayId: this.gatewayId,\n            routeTableId: this.routeTableId,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnGatewayRouteTableAssociationPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnHost`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html\n */\nexport interface CfnHostProps {\n\n    /**\n     * The Availability Zone in which to allocate the Dedicated Host.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-availabilityzone\n     */\n    readonly availabilityZone: string;\n\n    /**\n     * Specifies the instance type to be supported by the Dedicated Hosts. If you specify an instance type, the Dedicated Hosts support instances of the specified instance type only.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-instancetype\n     */\n    readonly instanceType: string;\n\n    /**\n     * Indicates whether the host accepts any untargeted instance launches that match its instance type configuration, or if it only accepts Host tenancy instance launches that specify its unique host ID. For more information, see [Understanding auto-placement and affinity](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/how-dedicated-hosts-work.html#dedicated-hosts-understanding) in the *Amazon EC2 User Guide* .\n     *\n     * Default: `on`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-autoplacement\n     */\n    readonly autoPlacement?: string;\n\n    /**\n     * Indicates whether to enable or disable host recovery for the Dedicated Host. Host recovery is disabled by default. For more information, see [Host recovery](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-recovery.html) in the *Amazon EC2 User Guide* .\n     *\n     * Default: `off`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-hostrecovery\n     */\n    readonly hostRecovery?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnHostProps`\n *\n * @param properties - the TypeScript properties of a `CfnHostProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnHostPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('autoPlacement', cdk.validateString)(properties.autoPlacement));\n    errors.collect(cdk.propertyValidator('availabilityZone', cdk.requiredValidator)(properties.availabilityZone));\n    errors.collect(cdk.propertyValidator('availabilityZone', cdk.validateString)(properties.availabilityZone));\n    errors.collect(cdk.propertyValidator('hostRecovery', cdk.validateString)(properties.hostRecovery));\n    errors.collect(cdk.propertyValidator('instanceType', cdk.requiredValidator)(properties.instanceType));\n    errors.collect(cdk.propertyValidator('instanceType', cdk.validateString)(properties.instanceType));\n    return errors.wrap('supplied properties not correct for \"CfnHostProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::Host` resource\n *\n * @param properties - the TypeScript properties of a `CfnHostProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::Host` resource.\n */\n// @ts-ignore TS6133\nfunction cfnHostPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnHostPropsValidator(properties).assertSuccess();\n    return {\n        AvailabilityZone: cdk.stringToCloudFormation(properties.availabilityZone),\n        InstanceType: cdk.stringToCloudFormation(properties.instanceType),\n        AutoPlacement: cdk.stringToCloudFormation(properties.autoPlacement),\n        HostRecovery: cdk.stringToCloudFormation(properties.hostRecovery),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnHostPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnHostProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnHostProps>();\n    ret.addPropertyResult('availabilityZone', 'AvailabilityZone', cfn_parse.FromCloudFormation.getString(properties.AvailabilityZone));\n    ret.addPropertyResult('instanceType', 'InstanceType', cfn_parse.FromCloudFormation.getString(properties.InstanceType));\n    ret.addPropertyResult('autoPlacement', 'AutoPlacement', properties.AutoPlacement != null ? cfn_parse.FromCloudFormation.getString(properties.AutoPlacement) : undefined);\n    ret.addPropertyResult('hostRecovery', 'HostRecovery', properties.HostRecovery != null ? cfn_parse.FromCloudFormation.getString(properties.HostRecovery) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::Host`\n *\n * Allocates a fully dedicated physical server for launching EC2 instances. Because the host is fully dedicated for your use, it can help you address compliance requirements and reduce costs by allowing you to use your existing server-bound software licenses. For more information, see [Dedicated Hosts](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-overview.html) in the *Amazon EC2 User Guide for Linux Instances* .\n *\n * @cloudformationResource AWS::EC2::Host\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html\n */\nexport class CfnHost extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::Host\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnHost {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnHostPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnHost(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the host.\n     * @cloudformationAttribute HostId\n     */\n    public readonly attrHostId: string;\n\n    /**\n     * The Availability Zone in which to allocate the Dedicated Host.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-availabilityzone\n     */\n    public availabilityZone: string;\n\n    /**\n     * Specifies the instance type to be supported by the Dedicated Hosts. If you specify an instance type, the Dedicated Hosts support instances of the specified instance type only.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-instancetype\n     */\n    public instanceType: string;\n\n    /**\n     * Indicates whether the host accepts any untargeted instance launches that match its instance type configuration, or if it only accepts Host tenancy instance launches that specify its unique host ID. For more information, see [Understanding auto-placement and affinity](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/how-dedicated-hosts-work.html#dedicated-hosts-understanding) in the *Amazon EC2 User Guide* .\n     *\n     * Default: `on`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-autoplacement\n     */\n    public autoPlacement: string | undefined;\n\n    /**\n     * Indicates whether to enable or disable host recovery for the Dedicated Host. Host recovery is disabled by default. For more information, see [Host recovery](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-recovery.html) in the *Amazon EC2 User Guide* .\n     *\n     * Default: `off`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-hostrecovery\n     */\n    public hostRecovery: string | undefined;\n\n    /**\n     * Create a new `AWS::EC2::Host`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnHostProps) {\n        super(scope, id, { type: CfnHost.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'availabilityZone', this);\n        cdk.requireProperty(props, 'instanceType', this);\n        this.attrHostId = cdk.Token.asString(this.getAtt('HostId'));\n\n        this.availabilityZone = props.availabilityZone;\n        this.instanceType = props.instanceType;\n        this.autoPlacement = props.autoPlacement;\n        this.hostRecovery = props.hostRecovery;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnHost.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            availabilityZone: this.availabilityZone,\n            instanceType: this.instanceType,\n            autoPlacement: this.autoPlacement,\n            hostRecovery: this.hostRecovery,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnHostPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnIPAM`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html\n */\nexport interface CfnIPAMProps {\n\n    /**\n     * The description for the IPAM.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html#cfn-ec2-ipam-description\n     */\n    readonly description?: string;\n\n    /**\n     * The operating Regions for an IPAM. Operating Regions are AWS Regions where the IPAM is allowed to manage IP address CIDRs. IPAM only discovers and monitors resources in the AWS Regions you select as operating Regions.\n     *\n     * For more information about operating Regions, see [Create an IPAM](https://docs.aws.amazon.com//vpc/latest/ipam/create-ipam.html) in the *Amazon VPC IPAM User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html#cfn-ec2-ipam-operatingregions\n     */\n    readonly operatingRegions?: Array<CfnIPAM.IpamOperatingRegionProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key `Owner` and the value `TeamA` , specify `tag:Owner` for the filter name and `TeamA` for the filter value.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html#cfn-ec2-ipam-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnIPAMProps`\n *\n * @param properties - the TypeScript properties of a `CfnIPAMProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnIPAMPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('operatingRegions', cdk.listValidator(CfnIPAM_IpamOperatingRegionPropertyValidator))(properties.operatingRegions));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnIPAMProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::IPAM` resource\n *\n * @param properties - the TypeScript properties of a `CfnIPAMProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::IPAM` resource.\n */\n// @ts-ignore TS6133\nfunction cfnIPAMPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnIPAMPropsValidator(properties).assertSuccess();\n    return {\n        Description: cdk.stringToCloudFormation(properties.description),\n        OperatingRegions: cdk.listMapper(cfnIPAMIpamOperatingRegionPropertyToCloudFormation)(properties.operatingRegions),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnIPAMPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnIPAMProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnIPAMProps>();\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('operatingRegions', 'OperatingRegions', properties.OperatingRegions != null ? cfn_parse.FromCloudFormation.getArray(CfnIPAMIpamOperatingRegionPropertyFromCloudFormation)(properties.OperatingRegions) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::IPAM`\n *\n * IPAM is a VPC feature that you can use to automate your IP address management workflows including assigning, tracking, troubleshooting, and auditing IP addresses across AWS Regions and accounts throughout your AWS Organization. For more information, see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide* .\n *\n * @cloudformationResource AWS::EC2::IPAM\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html\n */\nexport class CfnIPAM extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::IPAM\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnIPAM {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnIPAMPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnIPAM(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ARN of the IPAM.\n     * @cloudformationAttribute Arn\n     */\n    public readonly attrArn: string;\n\n    /**\n     * The ID of the IPAM.\n     * @cloudformationAttribute IpamId\n     */\n    public readonly attrIpamId: string;\n\n    /**\n     * The ID of the IPAM's default private scope.\n     * @cloudformationAttribute PrivateDefaultScopeId\n     */\n    public readonly attrPrivateDefaultScopeId: string;\n\n    /**\n     * The ID of the IPAM's default public scope.\n     * @cloudformationAttribute PublicDefaultScopeId\n     */\n    public readonly attrPublicDefaultScopeId: string;\n\n    /**\n     * The number of scopes in the IPAM. The scope quota is 5.\n     * @cloudformationAttribute ScopeCount\n     */\n    public readonly attrScopeCount: number;\n\n    /**\n     * The description for the IPAM.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html#cfn-ec2-ipam-description\n     */\n    public description: string | undefined;\n\n    /**\n     * The operating Regions for an IPAM. Operating Regions are AWS Regions where the IPAM is allowed to manage IP address CIDRs. IPAM only discovers and monitors resources in the AWS Regions you select as operating Regions.\n     *\n     * For more information about operating Regions, see [Create an IPAM](https://docs.aws.amazon.com//vpc/latest/ipam/create-ipam.html) in the *Amazon VPC IPAM User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html#cfn-ec2-ipam-operatingregions\n     */\n    public operatingRegions: Array<CfnIPAM.IpamOperatingRegionProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n    /**\n     * The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key `Owner` and the value `TeamA` , specify `tag:Owner` for the filter name and `TeamA` for the filter value.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html#cfn-ec2-ipam-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EC2::IPAM`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnIPAMProps = {}) {\n        super(scope, id, { type: CfnIPAM.CFN_RESOURCE_TYPE_NAME, properties: props });\n        this.attrArn = cdk.Token.asString(this.getAtt('Arn'));\n        this.attrIpamId = cdk.Token.asString(this.getAtt('IpamId'));\n        this.attrPrivateDefaultScopeId = cdk.Token.asString(this.getAtt('PrivateDefaultScopeId'));\n        this.attrPublicDefaultScopeId = cdk.Token.asString(this.getAtt('PublicDefaultScopeId'));\n        this.attrScopeCount = cdk.Token.asNumber(this.getAtt('ScopeCount'));\n\n        this.description = props.description;\n        this.operatingRegions = props.operatingRegions;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::IPAM\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnIPAM.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            description: this.description,\n            operatingRegions: this.operatingRegions,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnIPAMPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnIPAM {\n    /**\n     * The operating Regions for an IPAM. Operating Regions are AWS Regions where the IPAM is allowed to manage IP address CIDRs. IPAM only discovers and monitors resources in the AWS Regions you select as operating Regions.\n     *\n     * For more information about operating Regions, see [Create an IPAM](https://docs.aws.amazon.com//vpc/latest/ipam/create-ipam.html) in the *Amazon VPC IPAM User Guide* .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ipam-ipamoperatingregion.html\n     */\n    export interface IpamOperatingRegionProperty {\n        /**\n         * The name of the operating Region.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ipam-ipamoperatingregion.html#cfn-ec2-ipam-ipamoperatingregion-regionname\n         */\n        readonly regionName: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `IpamOperatingRegionProperty`\n *\n * @param properties - the TypeScript properties of a `IpamOperatingRegionProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnIPAM_IpamOperatingRegionPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('regionName', cdk.requiredValidator)(properties.regionName));\n    errors.collect(cdk.propertyValidator('regionName', cdk.validateString)(properties.regionName));\n    return errors.wrap('supplied properties not correct for \"IpamOperatingRegionProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::IPAM.IpamOperatingRegion` resource\n *\n * @param properties - the TypeScript properties of a `IpamOperatingRegionProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::IPAM.IpamOperatingRegion` resource.\n */\n// @ts-ignore TS6133\nfunction cfnIPAMIpamOperatingRegionPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnIPAM_IpamOperatingRegionPropertyValidator(properties).assertSuccess();\n    return {\n        RegionName: cdk.stringToCloudFormation(properties.regionName),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnIPAMIpamOperatingRegionPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnIPAM.IpamOperatingRegionProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnIPAM.IpamOperatingRegionProperty>();\n    ret.addPropertyResult('regionName', 'RegionName', cfn_parse.FromCloudFormation.getString(properties.RegionName));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnIPAMAllocation`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamallocation.html\n */\nexport interface CfnIPAMAllocationProps {\n\n    /**\n     * The ID of the IPAM pool from which you would like to allocate a CIDR.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamallocation.html#cfn-ec2-ipamallocation-ipampoolid\n     */\n    readonly ipamPoolId: string;\n\n    /**\n     * The CIDR you would like to allocate from the IPAM pool. Note the following:\n     *\n     * - If there is no DefaultNetmaskLength allocation rule set on the pool, you must specify either the NetmaskLength or the CIDR.\n     * - If the DefaultNetmaskLength allocation rule is set on the pool, you can specify either the NetmaskLength or the CIDR and the DefaultNetmaskLength allocation rule will be ignored.\n     *\n     * Possible values: Any available IPv4 or IPv6 CIDR.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamallocation.html#cfn-ec2-ipamallocation-cidr\n     */\n    readonly cidr?: string;\n\n    /**\n     * A description for the allocation.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamallocation.html#cfn-ec2-ipamallocation-description\n     */\n    readonly description?: string;\n\n    /**\n     * The netmask length of the CIDR you would like to allocate from the IPAM pool. Note the following:\n     *\n     * - If there is no DefaultNetmaskLength allocation rule set on the pool, you must specify either the NetmaskLength or the CIDR.\n     * - If the DefaultNetmaskLength allocation rule is set on the pool, you can specify either the NetmaskLength or the CIDR and the DefaultNetmaskLength allocation rule will be ignored.\n     *\n     * Possible netmask lengths for IPv4 addresses are 0 - 32. Possible netmask lengths for IPv6 addresses are 0 - 128.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamallocation.html#cfn-ec2-ipamallocation-netmasklength\n     */\n    readonly netmaskLength?: number;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnIPAMAllocationProps`\n *\n * @param properties - the TypeScript properties of a `CfnIPAMAllocationProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnIPAMAllocationPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('cidr', cdk.validateString)(properties.cidr));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('ipamPoolId', cdk.requiredValidator)(properties.ipamPoolId));\n    errors.collect(cdk.propertyValidator('ipamPoolId', cdk.validateString)(properties.ipamPoolId));\n    errors.collect(cdk.propertyValidator('netmaskLength', cdk.validateNumber)(properties.netmaskLength));\n    return errors.wrap('supplied properties not correct for \"CfnIPAMAllocationProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::IPAMAllocation` resource\n *\n * @param properties - the TypeScript properties of a `CfnIPAMAllocationProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::IPAMAllocation` resource.\n */\n// @ts-ignore TS6133\nfunction cfnIPAMAllocationPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnIPAMAllocationPropsValidator(properties).assertSuccess();\n    return {\n        IpamPoolId: cdk.stringToCloudFormation(properties.ipamPoolId),\n        Cidr: cdk.stringToCloudFormation(properties.cidr),\n        Description: cdk.stringToCloudFormation(properties.description),\n        NetmaskLength: cdk.numberToCloudFormation(properties.netmaskLength),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnIPAMAllocationPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnIPAMAllocationProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnIPAMAllocationProps>();\n    ret.addPropertyResult('ipamPoolId', 'IpamPoolId', cfn_parse.FromCloudFormation.getString(properties.IpamPoolId));\n    ret.addPropertyResult('cidr', 'Cidr', properties.Cidr != null ? cfn_parse.FromCloudFormation.getString(properties.Cidr) : undefined);\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('netmaskLength', 'NetmaskLength', properties.NetmaskLength != null ? cfn_parse.FromCloudFormation.getNumber(properties.NetmaskLength) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::IPAMAllocation`\n *\n * In IPAM, an allocation is a CIDR assignment from an IPAM pool to another resource or IPAM pool.\n *\n * @cloudformationResource AWS::EC2::IPAMAllocation\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamallocation.html\n */\nexport class CfnIPAMAllocation extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::IPAMAllocation\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnIPAMAllocation {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnIPAMAllocationPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnIPAMAllocation(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of an allocation.\n     * @cloudformationAttribute IpamPoolAllocationId\n     */\n    public readonly attrIpamPoolAllocationId: string;\n\n    /**\n     * The ID of the IPAM pool from which you would like to allocate a CIDR.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamallocation.html#cfn-ec2-ipamallocation-ipampoolid\n     */\n    public ipamPoolId: string;\n\n    /**\n     * The CIDR you would like to allocate from the IPAM pool. Note the following:\n     *\n     * - If there is no DefaultNetmaskLength allocation rule set on the pool, you must specify either the NetmaskLength or the CIDR.\n     * - If the DefaultNetmaskLength allocation rule is set on the pool, you can specify either the NetmaskLength or the CIDR and the DefaultNetmaskLength allocation rule will be ignored.\n     *\n     * Possible values: Any available IPv4 or IPv6 CIDR.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamallocation.html#cfn-ec2-ipamallocation-cidr\n     */\n    public cidr: string | undefined;\n\n    /**\n     * A description for the allocation.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamallocation.html#cfn-ec2-ipamallocation-description\n     */\n    public description: string | undefined;\n\n    /**\n     * The netmask length of the CIDR you would like to allocate from the IPAM pool. Note the following:\n     *\n     * - If there is no DefaultNetmaskLength allocation rule set on the pool, you must specify either the NetmaskLength or the CIDR.\n     * - If the DefaultNetmaskLength allocation rule is set on the pool, you can specify either the NetmaskLength or the CIDR and the DefaultNetmaskLength allocation rule will be ignored.\n     *\n     * Possible netmask lengths for IPv4 addresses are 0 - 32. Possible netmask lengths for IPv6 addresses are 0 - 128.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamallocation.html#cfn-ec2-ipamallocation-netmasklength\n     */\n    public netmaskLength: number | undefined;\n\n    /**\n     * Create a new `AWS::EC2::IPAMAllocation`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnIPAMAllocationProps) {\n        super(scope, id, { type: CfnIPAMAllocation.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'ipamPoolId', this);\n        this.attrIpamPoolAllocationId = cdk.Token.asString(this.getAtt('IpamPoolAllocationId'));\n\n        this.ipamPoolId = props.ipamPoolId;\n        this.cidr = props.cidr;\n        this.description = props.description;\n        this.netmaskLength = props.netmaskLength;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnIPAMAllocation.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            ipamPoolId: this.ipamPoolId,\n            cidr: this.cidr,\n            description: this.description,\n            netmaskLength: this.netmaskLength,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnIPAMAllocationPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnIPAMPool`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html\n */\nexport interface CfnIPAMPoolProps {\n\n    /**\n     * The address family of the pool.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-addressfamily\n     */\n    readonly addressFamily: string;\n\n    /**\n     * The ID of the scope in which you would like to create the IPAM pool.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-ipamscopeid\n     */\n    readonly ipamScopeId: string;\n\n    /**\n     * The default netmask length for allocations added to this pool. If, for example, the CIDR assigned to this pool is 10.0.0.0/8 and you enter 16 here, new allocations will default to 10.0.0.0/16.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-allocationdefaultnetmasklength\n     */\n    readonly allocationDefaultNetmaskLength?: number;\n\n    /**\n     * The maximum netmask length possible for CIDR allocations in this IPAM pool to be compliant. The maximum netmask length must be greater than the minimum netmask length. Possible netmask lengths for IPv4 addresses are 0 - 32. Possible netmask lengths for IPv6 addresses are 0 - 128.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-allocationmaxnetmasklength\n     */\n    readonly allocationMaxNetmaskLength?: number;\n\n    /**\n     * The minimum netmask length required for CIDR allocations in this IPAM pool to be compliant. The minimum netmask length must be less than the maximum netmask length. Possible netmask lengths for IPv4 addresses are 0 - 32. Possible netmask lengths for IPv6 addresses are 0 - 128.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-allocationminnetmasklength\n     */\n    readonly allocationMinNetmaskLength?: number;\n\n    /**\n     * Tags that are required for resources that use CIDRs from this IPAM pool. Resources that do not have these tags will not be allowed to allocate space from the pool. If the resources have their tags changed after they have allocated space or if the allocation tagging requirements are changed on the pool, the resource may be marked as noncompliant.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-allocationresourcetags\n     */\n    readonly allocationResourceTags?: Array<cdk.CfnTag | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * If selected, IPAM will continuously look for resources within the CIDR range of this pool and automatically import them as allocations into your IPAM. The CIDRs that will be allocated for these resources must not already be allocated to other resources in order for the import to succeed. IPAM will import a CIDR regardless of its compliance with the pool's allocation rules, so a resource might be imported and subsequently marked as noncompliant. If IPAM discovers multiple CIDRs that overlap, IPAM will import the largest CIDR only. If IPAM discovers multiple CIDRs with matching CIDRs, IPAM will randomly import one of them only.\n     *\n     * A locale must be set on the pool for this feature to work.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-autoimport\n     */\n    readonly autoImport?: boolean | cdk.IResolvable;\n\n    /**\n     * The description of the IPAM pool.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-description\n     */\n    readonly description?: string;\n\n    /**\n     * The locale of the IPAM pool. In IPAM, the locale is the AWS Region where you want to make an IPAM pool available for allocations. Only resources in the same Region as the locale of the pool can get IP address allocations from the pool. You can only allocate a CIDR for a VPC, for example, from an IPAM pool that shares a locale with the VPC\u2019s Region. Note that once you choose a Locale for a pool, you cannot modify it. If you choose an AWS Region for locale that has not been configured as an operating Region for the IPAM, you'll get an error.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-locale\n     */\n    readonly locale?: string;\n\n    /**\n     * Information about the CIDRs provisioned to an IPAM pool.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-provisionedcidrs\n     */\n    readonly provisionedCidrs?: Array<CfnIPAMPool.ProvisionedCidrProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * Determines if a pool is publicly advertisable. This option is not available for pools with AddressFamily set to `ipv4` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-publiclyadvertisable\n     */\n    readonly publiclyAdvertisable?: boolean | cdk.IResolvable;\n\n    /**\n     * The ID of the source IPAM pool. You can use this option to create an IPAM pool within an existing source pool.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-sourceipampoolid\n     */\n    readonly sourceIpamPoolId?: string;\n\n    /**\n     * The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key `Owner` and the value `TeamA` , specify `tag:Owner` for the filter name and `TeamA` for the filter value.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnIPAMPoolProps`\n *\n * @param properties - the TypeScript properties of a `CfnIPAMPoolProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnIPAMPoolPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('addressFamily', cdk.requiredValidator)(properties.addressFamily));\n    errors.collect(cdk.propertyValidator('addressFamily', cdk.validateString)(properties.addressFamily));\n    errors.collect(cdk.propertyValidator('allocationDefaultNetmaskLength', cdk.validateNumber)(properties.allocationDefaultNetmaskLength));\n    errors.collect(cdk.propertyValidator('allocationMaxNetmaskLength', cdk.validateNumber)(properties.allocationMaxNetmaskLength));\n    errors.collect(cdk.propertyValidator('allocationMinNetmaskLength', cdk.validateNumber)(properties.allocationMinNetmaskLength));\n    errors.collect(cdk.propertyValidator('allocationResourceTags', cdk.listValidator(cdk.validateCfnTag))(properties.allocationResourceTags));\n    errors.collect(cdk.propertyValidator('autoImport', cdk.validateBoolean)(properties.autoImport));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('ipamScopeId', cdk.requiredValidator)(properties.ipamScopeId));\n    errors.collect(cdk.propertyValidator('ipamScopeId', cdk.validateString)(properties.ipamScopeId));\n    errors.collect(cdk.propertyValidator('locale', cdk.validateString)(properties.locale));\n    errors.collect(cdk.propertyValidator('provisionedCidrs', cdk.listValidator(CfnIPAMPool_ProvisionedCidrPropertyValidator))(properties.provisionedCidrs));\n    errors.collect(cdk.propertyValidator('publiclyAdvertisable', cdk.validateBoolean)(properties.publiclyAdvertisable));\n    errors.collect(cdk.propertyValidator('sourceIpamPoolId', cdk.validateString)(properties.sourceIpamPoolId));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnIPAMPoolProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::IPAMPool` resource\n *\n * @param properties - the TypeScript properties of a `CfnIPAMPoolProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::IPAMPool` resource.\n */\n// @ts-ignore TS6133\nfunction cfnIPAMPoolPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnIPAMPoolPropsValidator(properties).assertSuccess();\n    return {\n        AddressFamily: cdk.stringToCloudFormation(properties.addressFamily),\n        IpamScopeId: cdk.stringToCloudFormation(properties.ipamScopeId),\n        AllocationDefaultNetmaskLength: cdk.numberToCloudFormation(properties.allocationDefaultNetmaskLength),\n        AllocationMaxNetmaskLength: cdk.numberToCloudFormation(properties.allocationMaxNetmaskLength),\n        AllocationMinNetmaskLength: cdk.numberToCloudFormation(properties.allocationMinNetmaskLength),\n        AllocationResourceTags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.allocationResourceTags),\n        AutoImport: cdk.booleanToCloudFormation(properties.autoImport),\n        Description: cdk.stringToCloudFormation(properties.description),\n        Locale: cdk.stringToCloudFormation(properties.locale),\n        ProvisionedCidrs: cdk.listMapper(cfnIPAMPoolProvisionedCidrPropertyToCloudFormation)(properties.provisionedCidrs),\n        PubliclyAdvertisable: cdk.booleanToCloudFormation(properties.publiclyAdvertisable),\n        SourceIpamPoolId: cdk.stringToCloudFormation(properties.sourceIpamPoolId),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnIPAMPoolPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnIPAMPoolProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnIPAMPoolProps>();\n    ret.addPropertyResult('addressFamily', 'AddressFamily', cfn_parse.FromCloudFormation.getString(properties.AddressFamily));\n    ret.addPropertyResult('ipamScopeId', 'IpamScopeId', cfn_parse.FromCloudFormation.getString(properties.IpamScopeId));\n    ret.addPropertyResult('allocationDefaultNetmaskLength', 'AllocationDefaultNetmaskLength', properties.AllocationDefaultNetmaskLength != null ? cfn_parse.FromCloudFormation.getNumber(properties.AllocationDefaultNetmaskLength) : undefined);\n    ret.addPropertyResult('allocationMaxNetmaskLength', 'AllocationMaxNetmaskLength', properties.AllocationMaxNetmaskLength != null ? cfn_parse.FromCloudFormation.getNumber(properties.AllocationMaxNetmaskLength) : undefined);\n    ret.addPropertyResult('allocationMinNetmaskLength', 'AllocationMinNetmaskLength', properties.AllocationMinNetmaskLength != null ? cfn_parse.FromCloudFormation.getNumber(properties.AllocationMinNetmaskLength) : undefined);\n    ret.addPropertyResult('allocationResourceTags', 'AllocationResourceTags', properties.AllocationResourceTags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.AllocationResourceTags) : undefined);\n    ret.addPropertyResult('autoImport', 'AutoImport', properties.AutoImport != null ? cfn_parse.FromCloudFormation.getBoolean(properties.AutoImport) : undefined);\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('locale', 'Locale', properties.Locale != null ? cfn_parse.FromCloudFormation.getString(properties.Locale) : undefined);\n    ret.addPropertyResult('provisionedCidrs', 'ProvisionedCidrs', properties.ProvisionedCidrs != null ? cfn_parse.FromCloudFormation.getArray(CfnIPAMPoolProvisionedCidrPropertyFromCloudFormation)(properties.ProvisionedCidrs) : undefined);\n    ret.addPropertyResult('publiclyAdvertisable', 'PubliclyAdvertisable', properties.PubliclyAdvertisable != null ? cfn_parse.FromCloudFormation.getBoolean(properties.PubliclyAdvertisable) : undefined);\n    ret.addPropertyResult('sourceIpamPoolId', 'SourceIpamPoolId', properties.SourceIpamPoolId != null ? cfn_parse.FromCloudFormation.getString(properties.SourceIpamPoolId) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::IPAMPool`\n *\n * In IPAM, a pool is a collection of contiguous IP addresses CIDRs. Pools enable you to organize your IP addresses according to your routing and security needs. For example, if you have separate routing and security needs for development and production applications, you can create a pool for each.\n *\n * @cloudformationResource AWS::EC2::IPAMPool\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html\n */\nexport class CfnIPAMPool extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::IPAMPool\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnIPAMPool {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnIPAMPoolPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnIPAMPool(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ARN of the IPAM pool.\n     * @cloudformationAttribute Arn\n     */\n    public readonly attrArn: string;\n\n    /**\n     * The ARN of the IPAM.\n     * @cloudformationAttribute IpamArn\n     */\n    public readonly attrIpamArn: string;\n\n    /**\n     * The ID of the IPAM pool.\n     * @cloudformationAttribute IpamPoolId\n     */\n    public readonly attrIpamPoolId: string;\n\n    /**\n     * The ARN of the scope of the IPAM pool.\n     * @cloudformationAttribute IpamScopeArn\n     */\n    public readonly attrIpamScopeArn: string;\n\n    /**\n     * The scope of the IPAM.\n     * @cloudformationAttribute IpamScopeType\n     */\n    public readonly attrIpamScopeType: string;\n\n    /**\n     * The depth of pools in your IPAM pool. The pool depth quota is 10.\n     * @cloudformationAttribute PoolDepth\n     */\n    public readonly attrPoolDepth: number;\n\n    /**\n     * The state of the IPAM pool.\n     * @cloudformationAttribute State\n     */\n    public readonly attrState: string;\n\n    /**\n     * A message related to the failed creation of an IPAM pool.\n     * @cloudformationAttribute StateMessage\n     */\n    public readonly attrStateMessage: string;\n\n    /**\n     * The address family of the pool.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-addressfamily\n     */\n    public addressFamily: string;\n\n    /**\n     * The ID of the scope in which you would like to create the IPAM pool.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-ipamscopeid\n     */\n    public ipamScopeId: string;\n\n    /**\n     * The default netmask length for allocations added to this pool. If, for example, the CIDR assigned to this pool is 10.0.0.0/8 and you enter 16 here, new allocations will default to 10.0.0.0/16.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-allocationdefaultnetmasklength\n     */\n    public allocationDefaultNetmaskLength: number | undefined;\n\n    /**\n     * The maximum netmask length possible for CIDR allocations in this IPAM pool to be compliant. The maximum netmask length must be greater than the minimum netmask length. Possible netmask lengths for IPv4 addresses are 0 - 32. Possible netmask lengths for IPv6 addresses are 0 - 128.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-allocationmaxnetmasklength\n     */\n    public allocationMaxNetmaskLength: number | undefined;\n\n    /**\n     * The minimum netmask length required for CIDR allocations in this IPAM pool to be compliant. The minimum netmask length must be less than the maximum netmask length. Possible netmask lengths for IPv4 addresses are 0 - 32. Possible netmask lengths for IPv6 addresses are 0 - 128.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-allocationminnetmasklength\n     */\n    public allocationMinNetmaskLength: number | undefined;\n\n    /**\n     * Tags that are required for resources that use CIDRs from this IPAM pool. Resources that do not have these tags will not be allowed to allocate space from the pool. If the resources have their tags changed after they have allocated space or if the allocation tagging requirements are changed on the pool, the resource may be marked as noncompliant.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-allocationresourcetags\n     */\n    public allocationResourceTags: Array<cdk.CfnTag | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n    /**\n     * If selected, IPAM will continuously look for resources within the CIDR range of this pool and automatically import them as allocations into your IPAM. The CIDRs that will be allocated for these resources must not already be allocated to other resources in order for the import to succeed. IPAM will import a CIDR regardless of its compliance with the pool's allocation rules, so a resource might be imported and subsequently marked as noncompliant. If IPAM discovers multiple CIDRs that overlap, IPAM will import the largest CIDR only. If IPAM discovers multiple CIDRs with matching CIDRs, IPAM will randomly import one of them only.\n     *\n     * A locale must be set on the pool for this feature to work.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-autoimport\n     */\n    public autoImport: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * The description of the IPAM pool.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-description\n     */\n    public description: string | undefined;\n\n    /**\n     * The locale of the IPAM pool. In IPAM, the locale is the AWS Region where you want to make an IPAM pool available for allocations. Only resources in the same Region as the locale of the pool can get IP address allocations from the pool. You can only allocate a CIDR for a VPC, for example, from an IPAM pool that shares a locale with the VPC\u2019s Region. Note that once you choose a Locale for a pool, you cannot modify it. If you choose an AWS Region for locale that has not been configured as an operating Region for the IPAM, you'll get an error.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-locale\n     */\n    public locale: string | undefined;\n\n    /**\n     * Information about the CIDRs provisioned to an IPAM pool.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-provisionedcidrs\n     */\n    public provisionedCidrs: Array<CfnIPAMPool.ProvisionedCidrProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n    /**\n     * Determines if a pool is publicly advertisable. This option is not available for pools with AddressFamily set to `ipv4` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-publiclyadvertisable\n     */\n    public publiclyAdvertisable: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * The ID of the source IPAM pool. You can use this option to create an IPAM pool within an existing source pool.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-sourceipampoolid\n     */\n    public sourceIpamPoolId: string | undefined;\n\n    /**\n     * The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key `Owner` and the value `TeamA` , specify `tag:Owner` for the filter name and `TeamA` for the filter value.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EC2::IPAMPool`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnIPAMPoolProps) {\n        super(scope, id, { type: CfnIPAMPool.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'addressFamily', this);\n        cdk.requireProperty(props, 'ipamScopeId', this);\n        this.attrArn = cdk.Token.asString(this.getAtt('Arn'));\n        this.attrIpamArn = cdk.Token.asString(this.getAtt('IpamArn'));\n        this.attrIpamPoolId = cdk.Token.asString(this.getAtt('IpamPoolId'));\n        this.attrIpamScopeArn = cdk.Token.asString(this.getAtt('IpamScopeArn'));\n        this.attrIpamScopeType = cdk.Token.asString(this.getAtt('IpamScopeType'));\n        this.attrPoolDepth = cdk.Token.asNumber(this.getAtt('PoolDepth'));\n        this.attrState = cdk.Token.asString(this.getAtt('State'));\n        this.attrStateMessage = cdk.Token.asString(this.getAtt('StateMessage'));\n\n        this.addressFamily = props.addressFamily;\n        this.ipamScopeId = props.ipamScopeId;\n        this.allocationDefaultNetmaskLength = props.allocationDefaultNetmaskLength;\n        this.allocationMaxNetmaskLength = props.allocationMaxNetmaskLength;\n        this.allocationMinNetmaskLength = props.allocationMinNetmaskLength;\n        this.allocationResourceTags = props.allocationResourceTags;\n        this.autoImport = props.autoImport;\n        this.description = props.description;\n        this.locale = props.locale;\n        this.provisionedCidrs = props.provisionedCidrs;\n        this.publiclyAdvertisable = props.publiclyAdvertisable;\n        this.sourceIpamPoolId = props.sourceIpamPoolId;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::IPAMPool\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnIPAMPool.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            addressFamily: this.addressFamily,\n            ipamScopeId: this.ipamScopeId,\n            allocationDefaultNetmaskLength: this.allocationDefaultNetmaskLength,\n            allocationMaxNetmaskLength: this.allocationMaxNetmaskLength,\n            allocationMinNetmaskLength: this.allocationMinNetmaskLength,\n            allocationResourceTags: this.allocationResourceTags,\n            autoImport: this.autoImport,\n            description: this.description,\n            locale: this.locale,\n            provisionedCidrs: this.provisionedCidrs,\n            publiclyAdvertisable: this.publiclyAdvertisable,\n            sourceIpamPoolId: this.sourceIpamPoolId,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnIPAMPoolPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnIPAMPool {\n    /**\n     * The CIDR provisioned to the IPAM pool. A CIDR is a representation of an IP address and its associated network mask (or netmask) and refers to a range of IP addresses. An IPv4 CIDR example is `10.24.34.0/23` . An IPv6 CIDR example is `2001:DB8::/32` .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ipampool-provisionedcidr.html\n     */\n    export interface ProvisionedCidrProperty {\n        /**\n         * The CIDR provisioned to the IPAM pool. A CIDR is a representation of an IP address and its associated network mask (or netmask) and refers to a range of IP addresses. An IPv4 CIDR example is `10.24.34.0/23` . An IPv6 CIDR example is `2001:DB8::/32` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ipampool-provisionedcidr.html#cfn-ec2-ipampool-provisionedcidr-cidr\n         */\n        readonly cidr: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ProvisionedCidrProperty`\n *\n * @param properties - the TypeScript properties of a `ProvisionedCidrProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnIPAMPool_ProvisionedCidrPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('cidr', cdk.requiredValidator)(properties.cidr));\n    errors.collect(cdk.propertyValidator('cidr', cdk.validateString)(properties.cidr));\n    return errors.wrap('supplied properties not correct for \"ProvisionedCidrProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::IPAMPool.ProvisionedCidr` resource\n *\n * @param properties - the TypeScript properties of a `ProvisionedCidrProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::IPAMPool.ProvisionedCidr` resource.\n */\n// @ts-ignore TS6133\nfunction cfnIPAMPoolProvisionedCidrPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnIPAMPool_ProvisionedCidrPropertyValidator(properties).assertSuccess();\n    return {\n        Cidr: cdk.stringToCloudFormation(properties.cidr),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnIPAMPoolProvisionedCidrPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnIPAMPool.ProvisionedCidrProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnIPAMPool.ProvisionedCidrProperty>();\n    ret.addPropertyResult('cidr', 'Cidr', cfn_parse.FromCloudFormation.getString(properties.Cidr));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnIPAMScope`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamscope.html\n */\nexport interface CfnIPAMScopeProps {\n\n    /**\n     * The ID of the IPAM for which you're creating this scope.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamscope.html#cfn-ec2-ipamscope-ipamid\n     */\n    readonly ipamId: string;\n\n    /**\n     * The description of the scope.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamscope.html#cfn-ec2-ipamscope-description\n     */\n    readonly description?: string;\n\n    /**\n     * The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key `Owner` and the value `TeamA` , specify `tag:Owner` for the filter name and `TeamA` for the filter value.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamscope.html#cfn-ec2-ipamscope-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnIPAMScopeProps`\n *\n * @param properties - the TypeScript properties of a `CfnIPAMScopeProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnIPAMScopePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('ipamId', cdk.requiredValidator)(properties.ipamId));\n    errors.collect(cdk.propertyValidator('ipamId', cdk.validateString)(properties.ipamId));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnIPAMScopeProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::IPAMScope` resource\n *\n * @param properties - the TypeScript properties of a `CfnIPAMScopeProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::IPAMScope` resource.\n */\n// @ts-ignore TS6133\nfunction cfnIPAMScopePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnIPAMScopePropsValidator(properties).assertSuccess();\n    return {\n        IpamId: cdk.stringToCloudFormation(properties.ipamId),\n        Description: cdk.stringToCloudFormation(properties.description),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnIPAMScopePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnIPAMScopeProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnIPAMScopeProps>();\n    ret.addPropertyResult('ipamId', 'IpamId', cfn_parse.FromCloudFormation.getString(properties.IpamId));\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::IPAMScope`\n *\n * In IPAM, a scope is the highest-level container within IPAM. An IPAM contains two default scopes. Each scope represents the IP space for a single network. The private scope is intended for all private IP address space. The public scope is intended for all public IP address space. Scopes enable you to reuse IP addresses across multiple unconnected networks without causing IP address overlap or conflict.\n *\n * For more information, see [How IPAM works](https://docs.aws.amazon.com//vpc/latest/ipam/how-it-works-ipam.html) in the *Amazon VPC IPAM User Guide* .\n *\n * @cloudformationResource AWS::EC2::IPAMScope\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamscope.html\n */\nexport class CfnIPAMScope extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::IPAMScope\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnIPAMScope {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnIPAMScopePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnIPAMScope(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ARN of the scope.\n     * @cloudformationAttribute Arn\n     */\n    public readonly attrArn: string;\n\n    /**\n     * The ARN of an IPAM.\n     * @cloudformationAttribute IpamArn\n     */\n    public readonly attrIpamArn: string;\n\n    /**\n     * The ID of an IPAM scope.\n     * @cloudformationAttribute IpamScopeId\n     */\n    public readonly attrIpamScopeId: string;\n\n    /**\n     * The type of the scope.\n     * @cloudformationAttribute IpamScopeType\n     */\n    public readonly attrIpamScopeType: string;\n\n    /**\n     * Defines if the scope is the default scope or not.\n     * @cloudformationAttribute IsDefault\n     */\n    public readonly attrIsDefault: cdk.IResolvable;\n\n    /**\n     * The number of pools in a scope.\n     * @cloudformationAttribute PoolCount\n     */\n    public readonly attrPoolCount: number;\n\n    /**\n     * The ID of the IPAM for which you're creating this scope.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamscope.html#cfn-ec2-ipamscope-ipamid\n     */\n    public ipamId: string;\n\n    /**\n     * The description of the scope.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamscope.html#cfn-ec2-ipamscope-description\n     */\n    public description: string | undefined;\n\n    /**\n     * The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key `Owner` and the value `TeamA` , specify `tag:Owner` for the filter name and `TeamA` for the filter value.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamscope.html#cfn-ec2-ipamscope-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EC2::IPAMScope`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnIPAMScopeProps) {\n        super(scope, id, { type: CfnIPAMScope.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'ipamId', this);\n        this.attrArn = cdk.Token.asString(this.getAtt('Arn'));\n        this.attrIpamArn = cdk.Token.asString(this.getAtt('IpamArn'));\n        this.attrIpamScopeId = cdk.Token.asString(this.getAtt('IpamScopeId'));\n        this.attrIpamScopeType = cdk.Token.asString(this.getAtt('IpamScopeType'));\n        this.attrIsDefault = this.getAtt('IsDefault');\n        this.attrPoolCount = cdk.Token.asNumber(this.getAtt('PoolCount'));\n\n        this.ipamId = props.ipamId;\n        this.description = props.description;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::IPAMScope\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnIPAMScope.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            ipamId: this.ipamId,\n            description: this.description,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnIPAMScopePropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnInstance`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html\n */\nexport interface CfnInstanceProps {\n\n    /**\n     * This property is reserved for internal use. If you use it, the stack fails with this error: `Bad property set: [Testing this property] (Service: AmazonEC2; Status Code: 400; Error Code: InvalidParameterCombination; Request ID: 0XXXXXX-49c7-4b40-8bcc-76885dcXXXXX)` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-additionalinfo\n     */\n    readonly additionalInfo?: string;\n\n    /**\n     * Indicates whether the instance is associated with a dedicated host. If you want the instance to always restart on the same host on which it was launched, specify `host` . If you want the instance to restart on any available host, but try to launch onto the last host it ran on (on a best-effort basis), specify `default` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-affinity\n     */\n    readonly affinity?: string;\n\n    /**\n     * The Availability Zone of the instance.\n     *\n     * If not specified, an Availability Zone will be automatically chosen for you based on the load balancing criteria for the Region.\n     *\n     * This parameter is not supported by [DescribeImageAttribute](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImageAttribute.html) .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-availabilityzone\n     */\n    readonly availabilityZone?: string;\n\n    /**\n     * The block device mapping entries that defines the block devices to attach to the instance at launch.\n     *\n     * By default, the block devices specified in the block device mapping for the AMI are used. You can override the AMI block device mapping using the instance block device mapping. For the root volume, you can override only the volume size, volume type, volume encryption settings, and the `DeleteOnTermination` setting.\n     *\n     * > After the instance is running, you can modify only the `DeleteOnTermination` parameter for the attached volumes without interrupting the instance. Modifying any other parameter results in instance [replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement) .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-blockdevicemappings\n     */\n    readonly blockDeviceMappings?: Array<CfnInstance.BlockDeviceMappingProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * The CPU options for the instance. For more information, see [Optimize CPU options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) in the *Amazon Elastic Compute Cloud User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-cpuoptions\n     */\n    readonly cpuOptions?: CfnInstance.CpuOptionsProperty | cdk.IResolvable;\n\n    /**\n     * The credit option for CPU usage of the burstable performance instance. Valid values are `standard` and `unlimited` . To change this attribute after launch, use [ModifyInstanceCreditSpecification](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceCreditSpecification.html) . For more information, see [Burstable performance instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html) in the *Amazon EC2 User Guide* .\n     *\n     * Default: `standard` (T2 instances) or `unlimited` (T3/T3a instances)\n     *\n     * For T3 instances with `host` tenancy, only `standard` is supported.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-creditspecification\n     */\n    readonly creditSpecification?: CfnInstance.CreditSpecificationProperty | cdk.IResolvable;\n\n    /**\n     * If you set this parameter to `true` , you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. To change this attribute after launch, use [ModifyInstanceAttribute](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceAttribute.html) . Alternatively, if you set `InstanceInitiatedShutdownBehavior` to `terminate` , you can terminate the instance by running the shutdown command from the instance.\n     *\n     * Default: `false`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-disableapitermination\n     */\n    readonly disableApiTermination?: boolean | cdk.IResolvable;\n\n    /**\n     * Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal Amazon EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance.\n     *\n     * Default: `false`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ebsoptimized\n     */\n    readonly ebsOptimized?: boolean | cdk.IResolvable;\n\n    /**\n     * An elastic GPU to associate with the instance. An Elastic GPU is a GPU resource that you can attach to your Windows instance to accelerate the graphics performance of your applications. For more information, see [Amazon EC2 Elastic GPUs](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-graphics.html) in the *Amazon EC2 User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-elasticgpuspecifications\n     */\n    readonly elasticGpuSpecifications?: Array<CfnInstance.ElasticGpuSpecificationProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * An elastic inference accelerator to associate with the instance. Elastic inference accelerators are a resource you can attach to your Amazon EC2 instances to accelerate your Deep Learning (DL) inference workloads.\n     *\n     * You cannot specify accelerators from different generations in the same request.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-elasticinferenceaccelerators\n     */\n    readonly elasticInferenceAccelerators?: Array<CfnInstance.ElasticInferenceAcceleratorProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * Indicates whether the instance is enabled for AWS Nitro Enclaves.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-enclaveoptions\n     */\n    readonly enclaveOptions?: CfnInstance.EnclaveOptionsProperty | cdk.IResolvable;\n\n    /**\n     * Indicates whether an instance is enabled for hibernation. For more information, see [Hibernate your instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html) in the *Amazon EC2 User Guide* .\n     *\n     * You can't enable hibernation and AWS Nitro Enclaves on the same instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-hibernationoptions\n     */\n    readonly hibernationOptions?: CfnInstance.HibernationOptionsProperty | cdk.IResolvable;\n\n    /**\n     * If you specify host for the `Affinity` property, the ID of a dedicated host that the instance is associated with. If you don't specify an ID, Amazon EC2 launches the instance onto any available, compatible dedicated host in your account. This type of launch is called an untargeted launch. Note that for untargeted launches, you must have a compatible, dedicated host available to successfully launch instances.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-hostid\n     */\n    readonly hostId?: string;\n\n    /**\n     * The ARN of the host resource group in which to launch the instances. If you specify a host resource group ARN, omit the *Tenancy* parameter or set it to `host` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-hostresourcegrouparn\n     */\n    readonly hostResourceGroupArn?: string;\n\n    /**\n     * The name of an IAM instance profile. To create a new IAM instance profile, use the [AWS::IAM::InstanceProfile](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html) resource.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-iaminstanceprofile\n     */\n    readonly iamInstanceProfile?: string;\n\n    /**\n     * The ID of the AMI. An AMI ID is required to launch an instance and must be specified here or in a launch template.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-imageid\n     */\n    readonly imageId?: string;\n\n    /**\n     * Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).\n     *\n     * Default: `stop`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-instanceinitiatedshutdownbehavior\n     */\n    readonly instanceInitiatedShutdownBehavior?: string;\n\n    /**\n     * The instance type. For more information, see [Instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the *Amazon EC2 User Guide* .\n     *\n     * Default: `m1.small`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-instancetype\n     */\n    readonly instanceType?: string;\n\n    /**\n     * [EC2-VPC] The number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you've specified a minimum number of instances to launch.\n     *\n     * You cannot specify this option and the network interfaces option in the same request.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ipv6addresscount\n     */\n    readonly ipv6AddressCount?: number;\n\n    /**\n     * [EC2-VPC] The IPv6 addresses from the range of the subnet to associate with the primary network interface. You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you've specified a minimum number of instances to launch.\n     *\n     * You cannot specify this option and the network interfaces option in the same request.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ipv6addresses\n     */\n    readonly ipv6Addresses?: Array<CfnInstance.InstanceIpv6AddressProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * The ID of the kernel.\n     *\n     * > We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see [PV-GRUB](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html) in the *Amazon EC2 User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-kernelid\n     */\n    readonly kernelId?: string;\n\n    /**\n     * The name of the key pair. You can create a key pair using [CreateKeyPair](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateKeyPair.html) or [ImportKeyPair](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportKeyPair.html) .\n     *\n     * > If you do not specify a key pair, you can't connect to the instance unless you choose an AMI that is configured to allow users another way to log in.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-keyname\n     */\n    readonly keyName?: string;\n\n    /**\n     * The launch template to use to launch the instances. Any parameters that you specify in the AWS CloudFormation template override the same parameters in the launch template. You can specify either the name or ID of a launch template, but not both.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-launchtemplate\n     */\n    readonly launchTemplate?: CfnInstance.LaunchTemplateSpecificationProperty | cdk.IResolvable;\n\n    /**\n     * The license configurations.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-licensespecifications\n     */\n    readonly licenseSpecifications?: Array<CfnInstance.LicenseSpecificationProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * Specifies whether detailed monitoring is enabled for the instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-monitoring\n     */\n    readonly monitoring?: boolean | cdk.IResolvable;\n\n    /**\n     * The network interfaces to associate with the instance.\n     *\n     * > If you use this property to point to a network interface, you must terminate the original interface before attaching a new one to allow the update of the instance to succeed.\n     * >\n     * > If this resource has a public IP address and is also in a VPC that is defined in the same template, you must use the [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) to declare a dependency on the VPC-gateway attachment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-networkinterfaces\n     */\n    readonly networkInterfaces?: Array<CfnInstance.NetworkInterfaceProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * The name of an existing placement group that you want to launch the instance into (cluster | partition | spread).\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-placementgroupname\n     */\n    readonly placementGroupName?: string;\n\n    /**\n     * The options for the instance hostname.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-privatednsnameoptions\n     */\n    readonly privateDnsNameOptions?: CfnInstance.PrivateDnsNameOptionsProperty | cdk.IResolvable;\n\n    /**\n     * [EC2-VPC] The primary IPv4 address. You must specify a value from the IPv4 address range of the subnet.\n     *\n     * Only one private IP address can be designated as primary. You can't specify this option if you've specified the option to designate a private IP address as the primary IP address in a network interface specification. You cannot specify this option if you're launching more than one instance in the request.\n     *\n     * You cannot specify this option and the network interfaces option in the same request.\n     *\n     * If you make an update to an instance that requires replacement, you must assign a new private IP address. During a replacement, AWS CloudFormation creates a new instance but doesn't delete the old instance until the stack has successfully updated. If the stack update fails, AWS CloudFormation uses the old instance to roll back the stack to the previous working state. The old and new instances cannot have the same private IP address.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-privateipaddress\n     */\n    readonly privateIpAddress?: string;\n\n    /**\n     * Indicates whether to assign the tags from the instance to all of the volumes attached to the instance at launch. If you specify `true` and you assign tags to the instance, those tags are automatically assigned to all of the volumes that you attach to the instance at launch. If you specify `false` , those tags are not assigned to the attached volumes.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-propagatetagstovolumeoncreation\n     */\n    readonly propagateTagsToVolumeOnCreation?: boolean | cdk.IResolvable;\n\n    /**\n     * The ID of the RAM disk to select. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, go to the AWS Resource Center and search for the kernel ID.\n     *\n     * > We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see [PV-GRUB](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html) in the *Amazon EC2 User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ramdiskid\n     */\n    readonly ramdiskId?: string;\n\n    /**\n     * The IDs of the security groups. You can create a security group using [CreateSecurityGroup](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html) .\n     *\n     * If you specify a network interface, you must specify any security groups as part of the network interface.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-securitygroupids\n     */\n    readonly securityGroupIds?: string[];\n\n    /**\n     * [EC2-Classic, default VPC] The names of the security groups. For a nondefault VPC, you must use security group IDs instead.\n     *\n     * You cannot specify this option and the network interfaces option in the same request. The list can contain both the name of existing Amazon EC2 security groups or references to AWS::EC2::SecurityGroup resources created in the template.\n     *\n     * Default: Amazon EC2 uses the default security group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-securitygroups\n     */\n    readonly securityGroups?: string[];\n\n    /**\n     * Enable or disable source/destination checks, which ensure that the instance is either the source or the destination of any traffic that it receives. If the value is `true` , source/destination checks are enabled; otherwise, they are disabled. The default value is `true` . You must disable source/destination checks if the instance runs services such as network address translation, routing, or firewalls.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-sourcedestcheck\n     */\n    readonly sourceDestCheck?: boolean | cdk.IResolvable;\n\n    /**\n     * The SSM [document](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-document.html) and parameter values in AWS Systems Manager to associate with this instance. To use this property, you must specify an IAM instance profile role for the instance. For more information, see [Create an Instance Profile for Systems Manager](https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-configuring-access-role.html) in the *AWS Systems Manager User Guide* .\n     *\n     * > You can currently associate only one document with an instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ssmassociations\n     */\n    readonly ssmAssociations?: Array<CfnInstance.SsmAssociationProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * [EC2-VPC] The ID of the subnet to launch the instance into.\n     *\n     * If you specify a network interface, you must specify any subnets as part of the network interface.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-subnetid\n     */\n    readonly subnetId?: string;\n\n    /**\n     * The tags to add to the instance. These tags are not applied to the EBS volumes, such as the root volume.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n\n    /**\n     * The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of `dedicated` runs on single-tenant hardware.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-tenancy\n     */\n    readonly tenancy?: string;\n\n    /**\n     * The user data script to make available to the instance. For more information, see [Run commands on your Linux instance at launch](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html) and [Run commands on your Windows instance at launch](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-windows-user-data.html) . If you are using a command line tool, base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide base64-encoded text. User data is limited to 16 KB.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-userdata\n     */\n    readonly userData?: string;\n\n    /**\n     * The volumes to attach to the instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-volumes\n     */\n    readonly volumes?: Array<CfnInstance.VolumeProperty | cdk.IResolvable> | cdk.IResolvable;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnInstanceProps`\n *\n * @param properties - the TypeScript properties of a `CfnInstanceProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnInstancePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('additionalInfo', cdk.validateString)(properties.additionalInfo));\n    errors.collect(cdk.propertyValidator('affinity', cdk.validateString)(properties.affinity));\n    errors.collect(cdk.propertyValidator('availabilityZone', cdk.validateString)(properties.availabilityZone));\n    errors.collect(cdk.propertyValidator('blockDeviceMappings', cdk.listValidator(CfnInstance_BlockDeviceMappingPropertyValidator))(properties.blockDeviceMappings));\n    errors.collect(cdk.propertyValidator('cpuOptions', CfnInstance_CpuOptionsPropertyValidator)(properties.cpuOptions));\n    errors.collect(cdk.propertyValidator('creditSpecification', CfnInstance_CreditSpecificationPropertyValidator)(properties.creditSpecification));\n    errors.collect(cdk.propertyValidator('disableApiTermination', cdk.validateBoolean)(properties.disableApiTermination));\n    errors.collect(cdk.propertyValidator('ebsOptimized', cdk.validateBoolean)(properties.ebsOptimized));\n    errors.collect(cdk.propertyValidator('elasticGpuSpecifications', cdk.listValidator(CfnInstance_ElasticGpuSpecificationPropertyValidator))(properties.elasticGpuSpecifications));\n    errors.collect(cdk.propertyValidator('elasticInferenceAccelerators', cdk.listValidator(CfnInstance_ElasticInferenceAcceleratorPropertyValidator))(properties.elasticInferenceAccelerators));\n    errors.collect(cdk.propertyValidator('enclaveOptions', CfnInstance_EnclaveOptionsPropertyValidator)(properties.enclaveOptions));\n    errors.collect(cdk.propertyValidator('hibernationOptions', CfnInstance_HibernationOptionsPropertyValidator)(properties.hibernationOptions));\n    errors.collect(cdk.propertyValidator('hostId', cdk.validateString)(properties.hostId));\n    errors.collect(cdk.propertyValidator('hostResourceGroupArn', cdk.validateString)(properties.hostResourceGroupArn));\n    errors.collect(cdk.propertyValidator('iamInstanceProfile', cdk.validateString)(properties.iamInstanceProfile));\n    errors.collect(cdk.propertyValidator('imageId', cdk.validateString)(properties.imageId));\n    errors.collect(cdk.propertyValidator('instanceInitiatedShutdownBehavior', cdk.validateString)(properties.instanceInitiatedShutdownBehavior));\n    errors.collect(cdk.propertyValidator('instanceType', cdk.validateString)(properties.instanceType));\n    errors.collect(cdk.propertyValidator('ipv6AddressCount', cdk.validateNumber)(properties.ipv6AddressCount));\n    errors.collect(cdk.propertyValidator('ipv6Addresses', cdk.listValidator(CfnInstance_InstanceIpv6AddressPropertyValidator))(properties.ipv6Addresses));\n    errors.collect(cdk.propertyValidator('kernelId', cdk.validateString)(properties.kernelId));\n    errors.collect(cdk.propertyValidator('keyName', cdk.validateString)(properties.keyName));\n    errors.collect(cdk.propertyValidator('launchTemplate', CfnInstance_LaunchTemplateSpecificationPropertyValidator)(properties.launchTemplate));\n    errors.collect(cdk.propertyValidator('licenseSpecifications', cdk.listValidator(CfnInstance_LicenseSpecificationPropertyValidator))(properties.licenseSpecifications));\n    errors.collect(cdk.propertyValidator('monitoring', cdk.validateBoolean)(properties.monitoring));\n    errors.collect(cdk.propertyValidator('networkInterfaces', cdk.listValidator(CfnInstance_NetworkInterfacePropertyValidator))(properties.networkInterfaces));\n    errors.collect(cdk.propertyValidator('placementGroupName', cdk.validateString)(properties.placementGroupName));\n    errors.collect(cdk.propertyValidator('privateDnsNameOptions', CfnInstance_PrivateDnsNameOptionsPropertyValidator)(properties.privateDnsNameOptions));\n    errors.collect(cdk.propertyValidator('privateIpAddress', cdk.validateString)(properties.privateIpAddress));\n    errors.collect(cdk.propertyValidator('propagateTagsToVolumeOnCreation', cdk.validateBoolean)(properties.propagateTagsToVolumeOnCreation));\n    errors.collect(cdk.propertyValidator('ramdiskId', cdk.validateString)(properties.ramdiskId));\n    errors.collect(cdk.propertyValidator('securityGroupIds', cdk.listValidator(cdk.validateString))(properties.securityGroupIds));\n    errors.collect(cdk.propertyValidator('securityGroups', cdk.listValidator(cdk.validateString))(properties.securityGroups));\n    errors.collect(cdk.propertyValidator('sourceDestCheck', cdk.validateBoolean)(properties.sourceDestCheck));\n    errors.collect(cdk.propertyValidator('ssmAssociations', cdk.listValidator(CfnInstance_SsmAssociationPropertyValidator))(properties.ssmAssociations));\n    errors.collect(cdk.propertyValidator('subnetId', cdk.validateString)(properties.subnetId));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('tenancy', cdk.validateString)(properties.tenancy));\n    errors.collect(cdk.propertyValidator('userData', cdk.validateString)(properties.userData));\n    errors.collect(cdk.propertyValidator('volumes', cdk.listValidator(CfnInstance_VolumePropertyValidator))(properties.volumes));\n    return errors.wrap('supplied properties not correct for \"CfnInstanceProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::Instance` resource\n *\n * @param properties - the TypeScript properties of a `CfnInstanceProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::Instance` resource.\n */\n// @ts-ignore TS6133\nfunction cfnInstancePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnInstancePropsValidator(properties).assertSuccess();\n    return {\n        AdditionalInfo: cdk.stringToCloudFormation(properties.additionalInfo),\n        Affinity: cdk.stringToCloudFormation(properties.affinity),\n        AvailabilityZone: cdk.stringToCloudFormation(properties.availabilityZone),\n        BlockDeviceMappings: cdk.listMapper(cfnInstanceBlockDeviceMappingPropertyToCloudFormation)(properties.blockDeviceMappings),\n        CpuOptions: cfnInstanceCpuOptionsPropertyToCloudFormation(properties.cpuOptions),\n        CreditSpecification: cfnInstanceCreditSpecificationPropertyToCloudFormation(properties.creditSpecification),\n        DisableApiTermination: cdk.booleanToCloudFormation(properties.disableApiTermination),\n        EbsOptimized: cdk.booleanToCloudFormation(properties.ebsOptimized),\n        ElasticGpuSpecifications: cdk.listMapper(cfnInstanceElasticGpuSpecificationPropertyToCloudFormation)(properties.elasticGpuSpecifications),\n        ElasticInferenceAccelerators: cdk.listMapper(cfnInstanceElasticInferenceAcceleratorPropertyToCloudFormation)(properties.elasticInferenceAccelerators),\n        EnclaveOptions: cfnInstanceEnclaveOptionsPropertyToCloudFormation(properties.enclaveOptions),\n        HibernationOptions: cfnInstanceHibernationOptionsPropertyToCloudFormation(properties.hibernationOptions),\n        HostId: cdk.stringToCloudFormation(properties.hostId),\n        HostResourceGroupArn: cdk.stringToCloudFormation(properties.hostResourceGroupArn),\n        IamInstanceProfile: cdk.stringToCloudFormation(properties.iamInstanceProfile),\n        ImageId: cdk.stringToCloudFormation(properties.imageId),\n        InstanceInitiatedShutdownBehavior: cdk.stringToCloudFormation(properties.instanceInitiatedShutdownBehavior),\n        InstanceType: cdk.stringToCloudFormation(properties.instanceType),\n        Ipv6AddressCount: cdk.numberToCloudFormation(properties.ipv6AddressCount),\n        Ipv6Addresses: cdk.listMapper(cfnInstanceInstanceIpv6AddressPropertyToCloudFormation)(properties.ipv6Addresses),\n        KernelId: cdk.stringToCloudFormation(properties.kernelId),\n        KeyName: cdk.stringToCloudFormation(properties.keyName),\n        LaunchTemplate: cfnInstanceLaunchTemplateSpecificationPropertyToCloudFormation(properties.launchTemplate),\n        LicenseSpecifications: cdk.listMapper(cfnInstanceLicenseSpecificationPropertyToCloudFormation)(properties.licenseSpecifications),\n        Monitoring: cdk.booleanToCloudFormation(properties.monitoring),\n        NetworkInterfaces: cdk.listMapper(cfnInstanceNetworkInterfacePropertyToCloudFormation)(properties.networkInterfaces),\n        PlacementGroupName: cdk.stringToCloudFormation(properties.placementGroupName),\n        PrivateDnsNameOptions: cfnInstancePrivateDnsNameOptionsPropertyToCloudFormation(properties.privateDnsNameOptions),\n        PrivateIpAddress: cdk.stringToCloudFormation(properties.privateIpAddress),\n        PropagateTagsToVolumeOnCreation: cdk.booleanToCloudFormation(properties.propagateTagsToVolumeOnCreation),\n        RamdiskId: cdk.stringToCloudFormation(properties.ramdiskId),\n        SecurityGroupIds: cdk.listMapper(cdk.stringToCloudFormation)(properties.securityGroupIds),\n        SecurityGroups: cdk.listMapper(cdk.stringToCloudFormation)(properties.securityGroups),\n        SourceDestCheck: cdk.booleanToCloudFormation(properties.sourceDestCheck),\n        SsmAssociations: cdk.listMapper(cfnInstanceSsmAssociationPropertyToCloudFormation)(properties.ssmAssociations),\n        SubnetId: cdk.stringToCloudFormation(properties.subnetId),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n        Tenancy: cdk.stringToCloudFormation(properties.tenancy),\n        UserData: cdk.stringToCloudFormation(properties.userData),\n        Volumes: cdk.listMapper(cfnInstanceVolumePropertyToCloudFormation)(properties.volumes),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnInstancePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnInstanceProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnInstanceProps>();\n    ret.addPropertyResult('additionalInfo', 'AdditionalInfo', properties.AdditionalInfo != null ? cfn_parse.FromCloudFormation.getString(properties.AdditionalInfo) : undefined);\n    ret.addPropertyResult('affinity', 'Affinity', properties.Affinity != null ? cfn_parse.FromCloudFormation.getString(properties.Affinity) : undefined);\n    ret.addPropertyResult('availabilityZone', 'AvailabilityZone', properties.AvailabilityZone != null ? cfn_parse.FromCloudFormation.getString(properties.AvailabilityZone) : undefined);\n    ret.addPropertyResult('blockDeviceMappings', 'BlockDeviceMappings', properties.BlockDeviceMappings != null ? cfn_parse.FromCloudFormation.getArray(CfnInstanceBlockDeviceMappingPropertyFromCloudFormation)(properties.BlockDeviceMappings) : undefined);\n    ret.addPropertyResult('cpuOptions', 'CpuOptions', properties.CpuOptions != null ? CfnInstanceCpuOptionsPropertyFromCloudFormation(properties.CpuOptions) : undefined);\n    ret.addPropertyResult('creditSpecification', 'CreditSpecification', properties.CreditSpecification != null ? CfnInstanceCreditSpecificationPropertyFromCloudFormation(properties.CreditSpecification) : undefined);\n    ret.addPropertyResult('disableApiTermination', 'DisableApiTermination', properties.DisableApiTermination != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DisableApiTermination) : undefined);\n    ret.addPropertyResult('ebsOptimized', 'EbsOptimized', properties.EbsOptimized != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EbsOptimized) : undefined);\n    ret.addPropertyResult('elasticGpuSpecifications', 'ElasticGpuSpecifications', properties.ElasticGpuSpecifications != null ? cfn_parse.FromCloudFormation.getArray(CfnInstanceElasticGpuSpecificationPropertyFromCloudFormation)(properties.ElasticGpuSpecifications) : undefined);\n    ret.addPropertyResult('elasticInferenceAccelerators', 'ElasticInferenceAccelerators', properties.ElasticInferenceAccelerators != null ? cfn_parse.FromCloudFormation.getArray(CfnInstanceElasticInferenceAcceleratorPropertyFromCloudFormation)(properties.ElasticInferenceAccelerators) : undefined);\n    ret.addPropertyResult('enclaveOptions', 'EnclaveOptions', properties.EnclaveOptions != null ? CfnInstanceEnclaveOptionsPropertyFromCloudFormation(properties.EnclaveOptions) : undefined);\n    ret.addPropertyResult('hibernationOptions', 'HibernationOptions', properties.HibernationOptions != null ? CfnInstanceHibernationOptionsPropertyFromCloudFormation(properties.HibernationOptions) : undefined);\n    ret.addPropertyResult('hostId', 'HostId', properties.HostId != null ? cfn_parse.FromCloudFormation.getString(properties.HostId) : undefined);\n    ret.addPropertyResult('hostResourceGroupArn', 'HostResourceGroupArn', properties.HostResourceGroupArn != null ? cfn_parse.FromCloudFormation.getString(properties.HostResourceGroupArn) : undefined);\n    ret.addPropertyResult('iamInstanceProfile', 'IamInstanceProfile', properties.IamInstanceProfile != null ? cfn_parse.FromCloudFormation.getString(properties.IamInstanceProfile) : undefined);\n    ret.addPropertyResult('imageId', 'ImageId', properties.ImageId != null ? cfn_parse.FromCloudFormation.getString(properties.ImageId) : undefined);\n    ret.addPropertyResult('instanceInitiatedShutdownBehavior', 'InstanceInitiatedShutdownBehavior', properties.InstanceInitiatedShutdownBehavior != null ? cfn_parse.FromCloudFormation.getString(properties.InstanceInitiatedShutdownBehavior) : undefined);\n    ret.addPropertyResult('instanceType', 'InstanceType', properties.InstanceType != null ? cfn_parse.FromCloudFormation.getString(properties.InstanceType) : undefined);\n    ret.addPropertyResult('ipv6AddressCount', 'Ipv6AddressCount', properties.Ipv6AddressCount != null ? cfn_parse.FromCloudFormation.getNumber(properties.Ipv6AddressCount) : undefined);\n    ret.addPropertyResult('ipv6Addresses', 'Ipv6Addresses', properties.Ipv6Addresses != null ? cfn_parse.FromCloudFormation.getArray(CfnInstanceInstanceIpv6AddressPropertyFromCloudFormation)(properties.Ipv6Addresses) : undefined);\n    ret.addPropertyResult('kernelId', 'KernelId', properties.KernelId != null ? cfn_parse.FromCloudFormation.getString(properties.KernelId) : undefined);\n    ret.addPropertyResult('keyName', 'KeyName', properties.KeyName != null ? cfn_parse.FromCloudFormation.getString(properties.KeyName) : undefined);\n    ret.addPropertyResult('launchTemplate', 'LaunchTemplate', properties.LaunchTemplate != null ? CfnInstanceLaunchTemplateSpecificationPropertyFromCloudFormation(properties.LaunchTemplate) : undefined);\n    ret.addPropertyResult('licenseSpecifications', 'LicenseSpecifications', properties.LicenseSpecifications != null ? cfn_parse.FromCloudFormation.getArray(CfnInstanceLicenseSpecificationPropertyFromCloudFormation)(properties.LicenseSpecifications) : undefined);\n    ret.addPropertyResult('monitoring', 'Monitoring', properties.Monitoring != null ? cfn_parse.FromCloudFormation.getBoolean(properties.Monitoring) : undefined);\n    ret.addPropertyResult('networkInterfaces', 'NetworkInterfaces', properties.NetworkInterfaces != null ? cfn_parse.FromCloudFormation.getArray(CfnInstanceNetworkInterfacePropertyFromCloudFormation)(properties.NetworkInterfaces) : undefined);\n    ret.addPropertyResult('placementGroupName', 'PlacementGroupName', properties.PlacementGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.PlacementGroupName) : undefined);\n    ret.addPropertyResult('privateDnsNameOptions', 'PrivateDnsNameOptions', properties.PrivateDnsNameOptions != null ? CfnInstancePrivateDnsNameOptionsPropertyFromCloudFormation(properties.PrivateDnsNameOptions) : undefined);\n    ret.addPropertyResult('privateIpAddress', 'PrivateIpAddress', properties.PrivateIpAddress != null ? cfn_parse.FromCloudFormation.getString(properties.PrivateIpAddress) : undefined);\n    ret.addPropertyResult('propagateTagsToVolumeOnCreation', 'PropagateTagsToVolumeOnCreation', properties.PropagateTagsToVolumeOnCreation != null ? cfn_parse.FromCloudFormation.getBoolean(properties.PropagateTagsToVolumeOnCreation) : undefined);\n    ret.addPropertyResult('ramdiskId', 'RamdiskId', properties.RamdiskId != null ? cfn_parse.FromCloudFormation.getString(properties.RamdiskId) : undefined);\n    ret.addPropertyResult('securityGroupIds', 'SecurityGroupIds', properties.SecurityGroupIds != null ? cfn_parse.FromCloudFormation.getStringArray(properties.SecurityGroupIds) : undefined);\n    ret.addPropertyResult('securityGroups', 'SecurityGroups', properties.SecurityGroups != null ? cfn_parse.FromCloudFormation.getStringArray(properties.SecurityGroups) : undefined);\n    ret.addPropertyResult('sourceDestCheck', 'SourceDestCheck', properties.SourceDestCheck != null ? cfn_parse.FromCloudFormation.getBoolean(properties.SourceDestCheck) : undefined);\n    ret.addPropertyResult('ssmAssociations', 'SsmAssociations', properties.SsmAssociations != null ? cfn_parse.FromCloudFormation.getArray(CfnInstanceSsmAssociationPropertyFromCloudFormation)(properties.SsmAssociations) : undefined);\n    ret.addPropertyResult('subnetId', 'SubnetId', properties.SubnetId != null ? cfn_parse.FromCloudFormation.getString(properties.SubnetId) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addPropertyResult('tenancy', 'Tenancy', properties.Tenancy != null ? cfn_parse.FromCloudFormation.getString(properties.Tenancy) : undefined);\n    ret.addPropertyResult('userData', 'UserData', properties.UserData != null ? cfn_parse.FromCloudFormation.getString(properties.UserData) : undefined);\n    ret.addPropertyResult('volumes', 'Volumes', properties.Volumes != null ? cfn_parse.FromCloudFormation.getArray(CfnInstanceVolumePropertyFromCloudFormation)(properties.Volumes) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::Instance`\n *\n * Specifies an EC2 instance.\n *\n * If an Elastic IP address is attached to your instance, AWS CloudFormation reattaches the Elastic IP address after it updates the instance. For more information about updating stacks, see [AWS CloudFormation Stacks Updates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html) .\n *\n * @cloudformationResource AWS::EC2::Instance\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html\n */\nexport class CfnInstance extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::Instance\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnInstance {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnInstancePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnInstance(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The Availability Zone where the specified instance is launched. For example: `us-east-1b` .\n     *\n     * You can retrieve a list of all Availability Zones for a Region by using the [Fn::GetAZs](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getavailabilityzones.html) intrinsic function.\n     * @cloudformationAttribute AvailabilityZone\n     */\n    public readonly attrAvailabilityZone: string;\n\n    /**\n     * The private DNS name of the specified instance. For example: `ip-10-24-34-0.ec2.internal` .\n     * @cloudformationAttribute PrivateDnsName\n     */\n    public readonly attrPrivateDnsName: string;\n\n    /**\n     * The private IP address of the specified instance. For example: `10.24.34.0` .\n     * @cloudformationAttribute PrivateIp\n     */\n    public readonly attrPrivateIp: string;\n\n    /**\n     * The public DNS name of the specified instance. For example: `ec2-107-20-50-45.compute-1.amazonaws.com` .\n     * @cloudformationAttribute PublicDnsName\n     */\n    public readonly attrPublicDnsName: string;\n\n    /**\n     * The public IP address of the specified instance. For example: `192.0.2.0` .\n     * @cloudformationAttribute PublicIp\n     */\n    public readonly attrPublicIp: string;\n\n    /**\n     * This property is reserved for internal use. If you use it, the stack fails with this error: `Bad property set: [Testing this property] (Service: AmazonEC2; Status Code: 400; Error Code: InvalidParameterCombination; Request ID: 0XXXXXX-49c7-4b40-8bcc-76885dcXXXXX)` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-additionalinfo\n     */\n    public additionalInfo: string | undefined;\n\n    /**\n     * Indicates whether the instance is associated with a dedicated host. If you want the instance to always restart on the same host on which it was launched, specify `host` . If you want the instance to restart on any available host, but try to launch onto the last host it ran on (on a best-effort basis), specify `default` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-affinity\n     */\n    public affinity: string | undefined;\n\n    /**\n     * The Availability Zone of the instance.\n     *\n     * If not specified, an Availability Zone will be automatically chosen for you based on the load balancing criteria for the Region.\n     *\n     * This parameter is not supported by [DescribeImageAttribute](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImageAttribute.html) .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-availabilityzone\n     */\n    public availabilityZone: string | undefined;\n\n    /**\n     * The block device mapping entries that defines the block devices to attach to the instance at launch.\n     *\n     * By default, the block devices specified in the block device mapping for the AMI are used. You can override the AMI block device mapping using the instance block device mapping. For the root volume, you can override only the volume size, volume type, volume encryption settings, and the `DeleteOnTermination` setting.\n     *\n     * > After the instance is running, you can modify only the `DeleteOnTermination` parameter for the attached volumes without interrupting the instance. Modifying any other parameter results in instance [replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement) .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-blockdevicemappings\n     */\n    public blockDeviceMappings: Array<CfnInstance.BlockDeviceMappingProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n    /**\n     * The CPU options for the instance. For more information, see [Optimize CPU options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) in the *Amazon Elastic Compute Cloud User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-cpuoptions\n     */\n    public cpuOptions: CfnInstance.CpuOptionsProperty | cdk.IResolvable | undefined;\n\n    /**\n     * The credit option for CPU usage of the burstable performance instance. Valid values are `standard` and `unlimited` . To change this attribute after launch, use [ModifyInstanceCreditSpecification](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceCreditSpecification.html) . For more information, see [Burstable performance instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html) in the *Amazon EC2 User Guide* .\n     *\n     * Default: `standard` (T2 instances) or `unlimited` (T3/T3a instances)\n     *\n     * For T3 instances with `host` tenancy, only `standard` is supported.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-creditspecification\n     */\n    public creditSpecification: CfnInstance.CreditSpecificationProperty | cdk.IResolvable | undefined;\n\n    /**\n     * If you set this parameter to `true` , you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. To change this attribute after launch, use [ModifyInstanceAttribute](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceAttribute.html) . Alternatively, if you set `InstanceInitiatedShutdownBehavior` to `terminate` , you can terminate the instance by running the shutdown command from the instance.\n     *\n     * Default: `false`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-disableapitermination\n     */\n    public disableApiTermination: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal Amazon EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance.\n     *\n     * Default: `false`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ebsoptimized\n     */\n    public ebsOptimized: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * An elastic GPU to associate with the instance. An Elastic GPU is a GPU resource that you can attach to your Windows instance to accelerate the graphics performance of your applications. For more information, see [Amazon EC2 Elastic GPUs](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-graphics.html) in the *Amazon EC2 User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-elasticgpuspecifications\n     */\n    public elasticGpuSpecifications: Array<CfnInstance.ElasticGpuSpecificationProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n    /**\n     * An elastic inference accelerator to associate with the instance. Elastic inference accelerators are a resource you can attach to your Amazon EC2 instances to accelerate your Deep Learning (DL) inference workloads.\n     *\n     * You cannot specify accelerators from different generations in the same request.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-elasticinferenceaccelerators\n     */\n    public elasticInferenceAccelerators: Array<CfnInstance.ElasticInferenceAcceleratorProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n    /**\n     * Indicates whether the instance is enabled for AWS Nitro Enclaves.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-enclaveoptions\n     */\n    public enclaveOptions: CfnInstance.EnclaveOptionsProperty | cdk.IResolvable | undefined;\n\n    /**\n     * Indicates whether an instance is enabled for hibernation. For more information, see [Hibernate your instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html) in the *Amazon EC2 User Guide* .\n     *\n     * You can't enable hibernation and AWS Nitro Enclaves on the same instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-hibernationoptions\n     */\n    public hibernationOptions: CfnInstance.HibernationOptionsProperty | cdk.IResolvable | undefined;\n\n    /**\n     * If you specify host for the `Affinity` property, the ID of a dedicated host that the instance is associated with. If you don't specify an ID, Amazon EC2 launches the instance onto any available, compatible dedicated host in your account. This type of launch is called an untargeted launch. Note that for untargeted launches, you must have a compatible, dedicated host available to successfully launch instances.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-hostid\n     */\n    public hostId: string | undefined;\n\n    /**\n     * The ARN of the host resource group in which to launch the instances. If you specify a host resource group ARN, omit the *Tenancy* parameter or set it to `host` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-hostresourcegrouparn\n     */\n    public hostResourceGroupArn: string | undefined;\n\n    /**\n     * The name of an IAM instance profile. To create a new IAM instance profile, use the [AWS::IAM::InstanceProfile](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html) resource.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-iaminstanceprofile\n     */\n    public iamInstanceProfile: string | undefined;\n\n    /**\n     * The ID of the AMI. An AMI ID is required to launch an instance and must be specified here or in a launch template.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-imageid\n     */\n    public imageId: string | undefined;\n\n    /**\n     * Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).\n     *\n     * Default: `stop`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-instanceinitiatedshutdownbehavior\n     */\n    public instanceInitiatedShutdownBehavior: string | undefined;\n\n    /**\n     * The instance type. For more information, see [Instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the *Amazon EC2 User Guide* .\n     *\n     * Default: `m1.small`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-instancetype\n     */\n    public instanceType: string | undefined;\n\n    /**\n     * [EC2-VPC] The number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you've specified a minimum number of instances to launch.\n     *\n     * You cannot specify this option and the network interfaces option in the same request.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ipv6addresscount\n     */\n    public ipv6AddressCount: number | undefined;\n\n    /**\n     * [EC2-VPC] The IPv6 addresses from the range of the subnet to associate with the primary network interface. You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you've specified a minimum number of instances to launch.\n     *\n     * You cannot specify this option and the network interfaces option in the same request.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ipv6addresses\n     */\n    public ipv6Addresses: Array<CfnInstance.InstanceIpv6AddressProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n    /**\n     * The ID of the kernel.\n     *\n     * > We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see [PV-GRUB](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html) in the *Amazon EC2 User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-kernelid\n     */\n    public kernelId: string | undefined;\n\n    /**\n     * The name of the key pair. You can create a key pair using [CreateKeyPair](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateKeyPair.html) or [ImportKeyPair](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportKeyPair.html) .\n     *\n     * > If you do not specify a key pair, you can't connect to the instance unless you choose an AMI that is configured to allow users another way to log in.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-keyname\n     */\n    public keyName: string | undefined;\n\n    /**\n     * The launch template to use to launch the instances. Any parameters that you specify in the AWS CloudFormation template override the same parameters in the launch template. You can specify either the name or ID of a launch template, but not both.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-launchtemplate\n     */\n    public launchTemplate: CfnInstance.LaunchTemplateSpecificationProperty | cdk.IResolvable | undefined;\n\n    /**\n     * The license configurations.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-licensespecifications\n     */\n    public licenseSpecifications: Array<CfnInstance.LicenseSpecificationProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n    /**\n     * Specifies whether detailed monitoring is enabled for the instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-monitoring\n     */\n    public monitoring: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * The network interfaces to associate with the instance.\n     *\n     * > If you use this property to point to a network interface, you must terminate the original interface before attaching a new one to allow the update of the instance to succeed.\n     * >\n     * > If this resource has a public IP address and is also in a VPC that is defined in the same template, you must use the [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) to declare a dependency on the VPC-gateway attachment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-networkinterfaces\n     */\n    public networkInterfaces: Array<CfnInstance.NetworkInterfaceProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n    /**\n     * The name of an existing placement group that you want to launch the instance into (cluster | partition | spread).\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-placementgroupname\n     */\n    public placementGroupName: string | undefined;\n\n    /**\n     * The options for the instance hostname.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-privatednsnameoptions\n     */\n    public privateDnsNameOptions: CfnInstance.PrivateDnsNameOptionsProperty | cdk.IResolvable | undefined;\n\n    /**\n     * [EC2-VPC] The primary IPv4 address. You must specify a value from the IPv4 address range of the subnet.\n     *\n     * Only one private IP address can be designated as primary. You can't specify this option if you've specified the option to designate a private IP address as the primary IP address in a network interface specification. You cannot specify this option if you're launching more than one instance in the request.\n     *\n     * You cannot specify this option and the network interfaces option in the same request.\n     *\n     * If you make an update to an instance that requires replacement, you must assign a new private IP address. During a replacement, AWS CloudFormation creates a new instance but doesn't delete the old instance until the stack has successfully updated. If the stack update fails, AWS CloudFormation uses the old instance to roll back the stack to the previous working state. The old and new instances cannot have the same private IP address.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-privateipaddress\n     */\n    public privateIpAddress: string | undefined;\n\n    /**\n     * Indicates whether to assign the tags from the instance to all of the volumes attached to the instance at launch. If you specify `true` and you assign tags to the instance, those tags are automatically assigned to all of the volumes that you attach to the instance at launch. If you specify `false` , those tags are not assigned to the attached volumes.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-propagatetagstovolumeoncreation\n     */\n    public propagateTagsToVolumeOnCreation: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * The ID of the RAM disk to select. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, go to the AWS Resource Center and search for the kernel ID.\n     *\n     * > We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see [PV-GRUB](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html) in the *Amazon EC2 User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ramdiskid\n     */\n    public ramdiskId: string | undefined;\n\n    /**\n     * The IDs of the security groups. You can create a security group using [CreateSecurityGroup](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html) .\n     *\n     * If you specify a network interface, you must specify any security groups as part of the network interface.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-securitygroupids\n     */\n    public securityGroupIds: string[] | undefined;\n\n    /**\n     * [EC2-Classic, default VPC] The names of the security groups. For a nondefault VPC, you must use security group IDs instead.\n     *\n     * You cannot specify this option and the network interfaces option in the same request. The list can contain both the name of existing Amazon EC2 security groups or references to AWS::EC2::SecurityGroup resources created in the template.\n     *\n     * Default: Amazon EC2 uses the default security group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-securitygroups\n     */\n    public securityGroups: string[] | undefined;\n\n    /**\n     * Enable or disable source/destination checks, which ensure that the instance is either the source or the destination of any traffic that it receives. If the value is `true` , source/destination checks are enabled; otherwise, they are disabled. The default value is `true` . You must disable source/destination checks if the instance runs services such as network address translation, routing, or firewalls.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-sourcedestcheck\n     */\n    public sourceDestCheck: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * The SSM [document](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-document.html) and parameter values in AWS Systems Manager to associate with this instance. To use this property, you must specify an IAM instance profile role for the instance. For more information, see [Create an Instance Profile for Systems Manager](https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-configuring-access-role.html) in the *AWS Systems Manager User Guide* .\n     *\n     * > You can currently associate only one document with an instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ssmassociations\n     */\n    public ssmAssociations: Array<CfnInstance.SsmAssociationProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n    /**\n     * [EC2-VPC] The ID of the subnet to launch the instance into.\n     *\n     * If you specify a network interface, you must specify any subnets as part of the network interface.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-subnetid\n     */\n    public subnetId: string | undefined;\n\n    /**\n     * The tags to add to the instance. These tags are not applied to the EBS volumes, such as the root volume.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of `dedicated` runs on single-tenant hardware.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-tenancy\n     */\n    public tenancy: string | undefined;\n\n    /**\n     * The user data script to make available to the instance. For more information, see [Run commands on your Linux instance at launch](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html) and [Run commands on your Windows instance at launch](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-windows-user-data.html) . If you are using a command line tool, base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide base64-encoded text. User data is limited to 16 KB.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-userdata\n     */\n    public userData: string | undefined;\n\n    /**\n     * The volumes to attach to the instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-volumes\n     */\n    public volumes: Array<CfnInstance.VolumeProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n    /**\n     * Create a new `AWS::EC2::Instance`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnInstanceProps = {}) {\n        super(scope, id, { type: CfnInstance.CFN_RESOURCE_TYPE_NAME, properties: props });\n        this.attrAvailabilityZone = cdk.Token.asString(this.getAtt('AvailabilityZone'));\n        this.attrPrivateDnsName = cdk.Token.asString(this.getAtt('PrivateDnsName'));\n        this.attrPrivateIp = cdk.Token.asString(this.getAtt('PrivateIp'));\n        this.attrPublicDnsName = cdk.Token.asString(this.getAtt('PublicDnsName'));\n        this.attrPublicIp = cdk.Token.asString(this.getAtt('PublicIp'));\n\n        this.additionalInfo = props.additionalInfo;\n        this.affinity = props.affinity;\n        this.availabilityZone = props.availabilityZone;\n        this.blockDeviceMappings = props.blockDeviceMappings;\n        this.cpuOptions = props.cpuOptions;\n        this.creditSpecification = props.creditSpecification;\n        this.disableApiTermination = props.disableApiTermination;\n        this.ebsOptimized = props.ebsOptimized;\n        this.elasticGpuSpecifications = props.elasticGpuSpecifications;\n        this.elasticInferenceAccelerators = props.elasticInferenceAccelerators;\n        this.enclaveOptions = props.enclaveOptions;\n        this.hibernationOptions = props.hibernationOptions;\n        this.hostId = props.hostId;\n        this.hostResourceGroupArn = props.hostResourceGroupArn;\n        this.iamInstanceProfile = props.iamInstanceProfile;\n        this.imageId = props.imageId;\n        this.instanceInitiatedShutdownBehavior = props.instanceInitiatedShutdownBehavior;\n        this.instanceType = props.instanceType;\n        this.ipv6AddressCount = props.ipv6AddressCount;\n        this.ipv6Addresses = props.ipv6Addresses;\n        this.kernelId = props.kernelId;\n        this.keyName = props.keyName;\n        this.launchTemplate = props.launchTemplate;\n        this.licenseSpecifications = props.licenseSpecifications;\n        this.monitoring = props.monitoring;\n        this.networkInterfaces = props.networkInterfaces;\n        this.placementGroupName = props.placementGroupName;\n        this.privateDnsNameOptions = props.privateDnsNameOptions;\n        this.privateIpAddress = props.privateIpAddress;\n        this.propagateTagsToVolumeOnCreation = props.propagateTagsToVolumeOnCreation;\n        this.ramdiskId = props.ramdiskId;\n        this.securityGroupIds = props.securityGroupIds;\n        this.securityGroups = props.securityGroups;\n        this.sourceDestCheck = props.sourceDestCheck;\n        this.ssmAssociations = props.ssmAssociations;\n        this.subnetId = props.subnetId;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::Instance\", props.tags, { tagPropertyName: 'tags' });\n        this.tenancy = props.tenancy;\n        this.userData = props.userData;\n        this.volumes = props.volumes;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnInstance.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            additionalInfo: this.additionalInfo,\n            affinity: this.affinity,\n            availabilityZone: this.availabilityZone,\n            blockDeviceMappings: this.blockDeviceMappings,\n            cpuOptions: this.cpuOptions,\n            creditSpecification: this.creditSpecification,\n            disableApiTermination: this.disableApiTermination,\n            ebsOptimized: this.ebsOptimized,\n            elasticGpuSpecifications: this.elasticGpuSpecifications,\n            elasticInferenceAccelerators: this.elasticInferenceAccelerators,\n            enclaveOptions: this.enclaveOptions,\n            hibernationOptions: this.hibernationOptions,\n            hostId: this.hostId,\n            hostResourceGroupArn: this.hostResourceGroupArn,\n            iamInstanceProfile: this.iamInstanceProfile,\n            imageId: this.imageId,\n            instanceInitiatedShutdownBehavior: this.instanceInitiatedShutdownBehavior,\n            instanceType: this.instanceType,\n            ipv6AddressCount: this.ipv6AddressCount,\n            ipv6Addresses: this.ipv6Addresses,\n            kernelId: this.kernelId,\n            keyName: this.keyName,\n            launchTemplate: this.launchTemplate,\n            licenseSpecifications: this.licenseSpecifications,\n            monitoring: this.monitoring,\n            networkInterfaces: this.networkInterfaces,\n            placementGroupName: this.placementGroupName,\n            privateDnsNameOptions: this.privateDnsNameOptions,\n            privateIpAddress: this.privateIpAddress,\n            propagateTagsToVolumeOnCreation: this.propagateTagsToVolumeOnCreation,\n            ramdiskId: this.ramdiskId,\n            securityGroupIds: this.securityGroupIds,\n            securityGroups: this.securityGroups,\n            sourceDestCheck: this.sourceDestCheck,\n            ssmAssociations: this.ssmAssociations,\n            subnetId: this.subnetId,\n            tags: this.tags.renderTags(),\n            tenancy: this.tenancy,\n            userData: this.userData,\n            volumes: this.volumes,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnInstancePropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnInstance {\n    /**\n     * Specifies input parameter values for an SSM document in AWS Systems Manager .\n     *\n     * `AssociationParameter` is a property of the [Amazon EC2 Instance SsmAssociation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations.html) property.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations-associationparameters.html\n     */\n    export interface AssociationParameterProperty {\n        /**\n         * The name of an input parameter that is in the associated SSM document.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations-associationparameters.html#cfn-ec2-instance-ssmassociations-associationparameters-key\n         */\n        readonly key: string;\n        /**\n         * The value of an input parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations-associationparameters.html#cfn-ec2-instance-ssmassociations-associationparameters-value\n         */\n        readonly value: string[];\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AssociationParameterProperty`\n *\n * @param properties - the TypeScript properties of a `AssociationParameterProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnInstance_AssociationParameterPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('key', cdk.requiredValidator)(properties.key));\n    errors.collect(cdk.propertyValidator('key', cdk.validateString)(properties.key));\n    errors.collect(cdk.propertyValidator('value', cdk.requiredValidator)(properties.value));\n    errors.collect(cdk.propertyValidator('value', cdk.listValidator(cdk.validateString))(properties.value));\n    return errors.wrap('supplied properties not correct for \"AssociationParameterProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::Instance.AssociationParameter` resource\n *\n * @param properties - the TypeScript properties of a `AssociationParameterProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::Instance.AssociationParameter` resource.\n */\n// @ts-ignore TS6133\nfunction cfnInstanceAssociationParameterPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnInstance_AssociationParameterPropertyValidator(properties).assertSuccess();\n    return {\n        Key: cdk.stringToCloudFormation(properties.key),\n        Value: cdk.listMapper(cdk.stringToCloudFormation)(properties.value),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnInstanceAssociationParameterPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnInstance.AssociationParameterProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnInstance.AssociationParameterProperty>();\n    ret.addPropertyResult('key', 'Key', cfn_parse.FromCloudFormation.getString(properties.Key));\n    ret.addPropertyResult('value', 'Value', cfn_parse.FromCloudFormation.getStringArray(properties.Value));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnInstance {\n    /**\n     * Specifies a block device mapping for an instance. You must specify exactly one of the following properties: `VirtualName` , `Ebs` , or `NoDevice` .\n     *\n     * `BlockDeviceMapping` is a property of the [AWS::EC2::Instance](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html) resource.\n     *\n     * > After the instance is running, you can modify only the `DeleteOnTermination` parameter for the attached volumes without interrupting the instance. Modifying any other parameter results in instance [replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement) .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html\n     */\n    export interface BlockDeviceMappingProperty {\n        /**\n         * The device name (for example, `/dev/sdh` or `xvdh` ).\n         *\n         * > After the instance is running, this parameter is used to specify the device name of the block device mapping to update.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html#cfn-ec2-blockdev-mapping-devicename\n         */\n        readonly deviceName: string;\n        /**\n         * Parameters used to automatically set up EBS volumes when the instance is launched.\n         *\n         * > After the instance is running, you can modify only the `DeleteOnTermination` parameter for the attached volumes without interrupting the instance. Modifying any other parameter results in instance [replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt) .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html#cfn-ec2-blockdev-mapping-ebs\n         */\n        readonly ebs?: CfnInstance.EbsProperty | cdk.IResolvable;\n        /**\n         * To omit the device from the block device mapping, specify an empty string.\n         *\n         * > After the instance is running, modifying this parameter results in instance [replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement) .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html#cfn-ec2-blockdev-mapping-nodevice\n         */\n        readonly noDevice?: CfnInstance.NoDeviceProperty | cdk.IResolvable;\n        /**\n         * The virtual device name ( `ephemeral` N). The name must be in the form `ephemeral` *X* where *X* is a number starting from zero (0). For example, an instance type with 2 available instance store volumes can specify mappings for `ephemeral0` and `ephemeral1` . The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.\n         *\n         * NVMe instance store volumes are automatically enumerated and assigned a device name. Including them in your block device mapping has no effect.\n         *\n         * *Constraints* : For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.\n         *\n         * > After the instance is running, modifying this parameter results in instance [replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement) .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html#cfn-ec2-blockdev-mapping-virtualname\n         */\n        readonly virtualName?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `BlockDeviceMappingProperty`\n *\n * @param properties - the TypeScript properties of a `BlockDeviceMappingProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnInstance_BlockDeviceMappingPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('deviceName', cdk.requiredValidator)(properties.deviceName));\n    errors.collect(cdk.propertyValidator('deviceName', cdk.validateString)(properties.deviceName));\n    errors.collect(cdk.propertyValidator('ebs', CfnInstance_EbsPropertyValidator)(properties.ebs));\n    errors.collect(cdk.propertyValidator('noDevice', CfnInstance_NoDevicePropertyValidator)(properties.noDevice));\n    errors.collect(cdk.propertyValidator('virtualName', cdk.validateString)(properties.virtualName));\n    return errors.wrap('supplied properties not correct for \"BlockDeviceMappingProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::Instance.BlockDeviceMapping` resource\n *\n * @param properties - the TypeScript properties of a `BlockDeviceMappingProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::Instance.BlockDeviceMapping` resource.\n */\n// @ts-ignore TS6133\nfunction cfnInstanceBlockDeviceMappingPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnInstance_BlockDeviceMappingPropertyValidator(properties).assertSuccess();\n    return {\n        DeviceName: cdk.stringToCloudFormation(properties.deviceName),\n        Ebs: cfnInstanceEbsPropertyToCloudFormation(properties.ebs),\n        NoDevice: cfnInstanceNoDevicePropertyToCloudFormation(properties.noDevice),\n        VirtualName: cdk.stringToCloudFormation(properties.virtualName),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnInstanceBlockDeviceMappingPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnInstance.BlockDeviceMappingProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnInstance.BlockDeviceMappingProperty>();\n    ret.addPropertyResult('deviceName', 'DeviceName', cfn_parse.FromCloudFormation.getString(properties.DeviceName));\n    ret.addPropertyResult('ebs', 'Ebs', properties.Ebs != null ? CfnInstanceEbsPropertyFromCloudFormation(properties.Ebs) : undefined);\n    ret.addPropertyResult('noDevice', 'NoDevice', properties.NoDevice != null ? CfnInstanceNoDevicePropertyFromCloudFormation(properties.NoDevice) : undefined);\n    ret.addPropertyResult('virtualName', 'VirtualName', properties.VirtualName != null ? cfn_parse.FromCloudFormation.getString(properties.VirtualName) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnInstance {\n    /**\n     * Specifies the CPU options for the instance. When you specify CPU options, you must specify both the number of CPU cores and threads per core.\n     *\n     * For more information, see [Optimize CPU options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) in the *Amazon Elastic Compute Cloud User Guide* .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-cpuoptions.html\n     */\n    export interface CpuOptionsProperty {\n        /**\n         * The number of CPU cores for the instance.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-cpuoptions.html#cfn-ec2-instance-cpuoptions-corecount\n         */\n        readonly coreCount?: number;\n        /**\n         * The number of threads per CPU core.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-cpuoptions.html#cfn-ec2-instance-cpuoptions-threadspercore\n         */\n        readonly threadsPerCore?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `CpuOptionsProperty`\n *\n * @param properties - the TypeScript properties of a `CpuOptionsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnInstance_CpuOptionsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('coreCount', cdk.validateNumber)(properties.coreCount));\n    errors.collect(cdk.propertyValidator('threadsPerCore', cdk.validateNumber)(properties.threadsPerCore));\n    return errors.wrap('supplied properties not correct for \"CpuOptionsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::Instance.CpuOptions` resource\n *\n * @param properties - the TypeScript properties of a `CpuOptionsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::Instance.CpuOptions` resource.\n */\n// @ts-ignore TS6133\nfunction cfnInstanceCpuOptionsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnInstance_CpuOptionsPropertyValidator(properties).assertSuccess();\n    return {\n        CoreCount: cdk.numberToCloudFormation(properties.coreCount),\n        ThreadsPerCore: cdk.numberToCloudFormation(properties.threadsPerCore),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnInstanceCpuOptionsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnInstance.CpuOptionsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnInstance.CpuOptionsProperty>();\n    ret.addPropertyResult('coreCount', 'CoreCount', properties.CoreCount != null ? cfn_parse.FromCloudFormation.getNumber(properties.CoreCount) : undefined);\n    ret.addPropertyResult('threadsPerCore', 'ThreadsPerCore', properties.ThreadsPerCore != null ? cfn_parse.FromCloudFormation.getNumber(properties.ThreadsPerCore) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnInstance {\n    /**\n     * Specifies the credit option for CPU usage of a T2, T3, or T3a instance.\n     *\n     * `CreditSpecification` is a property of the [AWS::EC2::Instance](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html) resource.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-creditspecification.html\n     */\n    export interface CreditSpecificationProperty {\n        /**\n         * The credit option for CPU usage of the instance. Valid values are `standard` and `unlimited` . `T3` instances launch as `unlimited` by default. `T2` instances launch as `standard` by default.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-creditspecification.html#cfn-ec2-instance-creditspecification-cpucredits\n         */\n        readonly cpuCredits?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `CreditSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `CreditSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnInstance_CreditSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('cpuCredits', cdk.validateString)(properties.cpuCredits));\n    return errors.wrap('supplied properties not correct for \"CreditSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::Instance.CreditSpecification` resource\n *\n * @param properties - the TypeScript properties of a `CreditSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::Instance.CreditSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnInstanceCreditSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnInstance_CreditSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        CPUCredits: cdk.stringToCloudFormation(properties.cpuCredits),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnInstanceCreditSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnInstance.CreditSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnInstance.CreditSpecificationProperty>();\n    ret.addPropertyResult('cpuCredits', 'CPUCredits', properties.CPUCredits != null ? cfn_parse.FromCloudFormation.getString(properties.CPUCredits) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnInstance {\n    /**\n     * Specifies a block device for an EBS volume.\n     *\n     * `Ebs` is a property of the [Amazon EC2 BlockDeviceMapping](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html) property.\n     *\n     * > After the instance is running, you can modify only the `DeleteOnTermination` parameters for the attached volumes without interrupting the instance. Modifying any other parameter results in instance [replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement) .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html\n     */\n    export interface EbsProperty {\n        /**\n         * Indicates whether the EBS volume is deleted on instance termination. For more information, see [Preserving Amazon EBS volumes on instance termination](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) in the *Amazon EC2 User Guide* .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-deleteontermination\n         */\n        readonly deleteOnTermination?: boolean | cdk.IResolvable;\n        /**\n         * Indicates whether the volume should be encrypted. The effect of setting the encryption state to `true` depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see [Encryption by default](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-by-default) in the *Amazon Elastic Compute Cloud User Guide* .\n         *\n         * Encrypted Amazon EBS volumes must be attached to instances that support Amazon EBS encryption. For more information, see [Supported instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances) .\n         *\n         * > After the instance is running, modifying this parameter results in instance [replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement) .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-encrypted\n         */\n        readonly encrypted?: boolean | cdk.IResolvable;\n        /**\n         * The number of I/O operations per second (IOPS). For `gp3` , `io1` , and `io2` volumes, this represents the number of IOPS that are provisioned for the volume. For `gp2` volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting.\n         *\n         * The following are the supported values for each volume type:\n         *\n         * - `gp3` : 3,000-16,000 IOPS\n         * - `io1` : 100-64,000 IOPS\n         * - `io2` : 100-64,000 IOPS\n         *\n         * For `io1` and `io2` volumes, we guarantee 64,000 IOPS only for [Instances built on the Nitro System](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances) . Other instance families guarantee performance up to 32,000 IOPS.\n         *\n         * This parameter is required for `io1` and `io2` volumes. The default for `gp3` volumes is 3,000 IOPS. This parameter is not supported for `gp2` , `st1` , `sc1` , or `standard` volumes.\n         *\n         * > After the instance is running, modifying this parameter results in instance [replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement) .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-iops\n         */\n        readonly iops?: number;\n        /**\n         * The identifier of the AWS KMS key to use for Amazon EBS encryption. If `KmsKeyId` is specified, the encrypted state must be `true` . If the encrypted state is `true` but you do not specify `KmsKeyId` , your KMS key for EBS is used.\n         *\n         * You can specify the KMS key using any of the following:\n         *\n         * - Key ID. For example, 1234abcd-12ab-34cd-56ef-1234567890ab.\n         * - Key alias. For example, alias/ExampleAlias.\n         * - Key ARN. For example, arn:aws:kms:us-east-1:012345678910:1234abcd-12ab-34cd-56ef-1234567890ab.\n         * - Alias ARN. For example, arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias.\n         *\n         * > After the instance is running, modifying this parameter results in instance [replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement) .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-instance-ebs-kmskeyid\n         */\n        readonly kmsKeyId?: string;\n        /**\n         * The ID of the snapshot.\n         *\n         * If you specify both `SnapshotId` and `VolumeSize` , `VolumeSize` must be equal or greater than the size of the snapshot.\n         *\n         * > After the instance is running, modifying this parameter results in instance [replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement) .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-snapshotid\n         */\n        readonly snapshotId?: string;\n        /**\n         * The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size. If you specify a snapshot, the default is the snapshot size. You can specify a volume size that is equal to or larger than the snapshot size.\n         *\n         * The following are the supported volumes sizes for each volume type:\n         *\n         * - `gp2` and `gp3` :1-16,384\n         * - `io1` and `io2` : 4-16,384\n         * - `st1` and `sc1` : 125-16,384\n         * - `standard` : 1-1,024\n         *\n         * > After the instance is running, modifying this parameter results in instance [replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement) .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-volumesize\n         */\n        readonly volumeSize?: number;\n        /**\n         * The volume type. For more information, see [Amazon EBS volume types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html) in the *Amazon EC2 User Guide* . If the volume type is `io1` or `io2` , you must specify the IOPS that the volume supports.\n         *\n         * > After the instance is running, modifying this parameter results in instance [replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement) .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-volumetype\n         */\n        readonly volumeType?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `EbsProperty`\n *\n * @param properties - the TypeScript properties of a `EbsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnInstance_EbsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('deleteOnTermination', cdk.validateBoolean)(properties.deleteOnTermination));\n    errors.collect(cdk.propertyValidator('encrypted', cdk.validateBoolean)(properties.encrypted));\n    errors.collect(cdk.propertyValidator('iops', cdk.validateNumber)(properties.iops));\n    errors.collect(cdk.propertyValidator('kmsKeyId', cdk.validateString)(properties.kmsKeyId));\n    errors.collect(cdk.propertyValidator('snapshotId', cdk.validateString)(properties.snapshotId));\n    errors.collect(cdk.propertyValidator('volumeSize', cdk.validateNumber)(properties.volumeSize));\n    errors.collect(cdk.propertyValidator('volumeType', cdk.validateString)(properties.volumeType));\n    return errors.wrap('supplied properties not correct for \"EbsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::Instance.Ebs` resource\n *\n * @param properties - the TypeScript properties of a `EbsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::Instance.Ebs` resource.\n */\n// @ts-ignore TS6133\nfunction cfnInstanceEbsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnInstance_EbsPropertyValidator(properties).assertSuccess();\n    return {\n        DeleteOnTermination: cdk.booleanToCloudFormation(properties.deleteOnTermination),\n        Encrypted: cdk.booleanToCloudFormation(properties.encrypted),\n        Iops: cdk.numberToCloudFormation(properties.iops),\n        KmsKeyId: cdk.stringToCloudFormation(properties.kmsKeyId),\n        SnapshotId: cdk.stringToCloudFormation(properties.snapshotId),\n        VolumeSize: cdk.numberToCloudFormation(properties.volumeSize),\n        VolumeType: cdk.stringToCloudFormation(properties.volumeType),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnInstanceEbsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnInstance.EbsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnInstance.EbsProperty>();\n    ret.addPropertyResult('deleteOnTermination', 'DeleteOnTermination', properties.DeleteOnTermination != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DeleteOnTermination) : undefined);\n    ret.addPropertyResult('encrypted', 'Encrypted', properties.Encrypted != null ? cfn_parse.FromCloudFormation.getBoolean(properties.Encrypted) : undefined);\n    ret.addPropertyResult('iops', 'Iops', properties.Iops != null ? cfn_parse.FromCloudFormation.getNumber(properties.Iops) : undefined);\n    ret.addPropertyResult('kmsKeyId', 'KmsKeyId', properties.KmsKeyId != null ? cfn_parse.FromCloudFormation.getString(properties.KmsKeyId) : undefined);\n    ret.addPropertyResult('snapshotId', 'SnapshotId', properties.SnapshotId != null ? cfn_parse.FromCloudFormation.getString(properties.SnapshotId) : undefined);\n    ret.addPropertyResult('volumeSize', 'VolumeSize', properties.VolumeSize != null ? cfn_parse.FromCloudFormation.getNumber(properties.VolumeSize) : undefined);\n    ret.addPropertyResult('volumeType', 'VolumeType', properties.VolumeType != null ? cfn_parse.FromCloudFormation.getString(properties.VolumeType) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnInstance {\n    /**\n     * Specifies the type of Elastic GPU. An Elastic GPU is a GPU resource that you can attach to your Amazon EC2 instance to accelerate the graphics performance of your applications. For more information, see [Amazon EC2 Elastic GPUs](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-graphics.html) in the *Amazon EC2 User Guide for Windows Instances* .\n     *\n     * `ElasticGpuSpecification` is a property of the [AWS::EC2::Instance](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html) resource.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-elasticgpuspecification.html\n     */\n    export interface ElasticGpuSpecificationProperty {\n        /**\n         * The type of Elastic Graphics accelerator. For more information about the values to specify for `Type` , see [Elastic Graphics Basics](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-graphics.html#elastic-graphics-basics) , specifically the Elastic Graphics accelerator column, in the *Amazon Elastic Compute Cloud User Guide for Windows Instances* .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-elasticgpuspecification.html#cfn-ec2-instance-elasticgpuspecification-type\n         */\n        readonly type: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ElasticGpuSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `ElasticGpuSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnInstance_ElasticGpuSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('type', cdk.requiredValidator)(properties.type));\n    errors.collect(cdk.propertyValidator('type', cdk.validateString)(properties.type));\n    return errors.wrap('supplied properties not correct for \"ElasticGpuSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::Instance.ElasticGpuSpecification` resource\n *\n * @param properties - the TypeScript properties of a `ElasticGpuSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::Instance.ElasticGpuSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnInstanceElasticGpuSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnInstance_ElasticGpuSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        Type: cdk.stringToCloudFormation(properties.type),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnInstanceElasticGpuSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnInstance.ElasticGpuSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnInstance.ElasticGpuSpecificationProperty>();\n    ret.addPropertyResult('type', 'Type', cfn_parse.FromCloudFormation.getString(properties.Type));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnInstance {\n    /**\n     * Specifies the Elastic Inference Accelerator for the instance.\n     *\n     * `ElasticInferenceAccelerator` is a property of the [AWS::EC2::Instance](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html) resource.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-elasticinferenceaccelerator.html\n     */\n    export interface ElasticInferenceAcceleratorProperty {\n        /**\n         * The number of elastic inference accelerators to attach to the instance.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-elasticinferenceaccelerator.html#cfn-ec2-instance-elasticinferenceaccelerator-count\n         */\n        readonly count?: number;\n        /**\n         * The type of elastic inference accelerator. The possible values are `eia1.medium` , `eia1.large` , `eia1.xlarge` , `eia2.medium` , `eia2.large` , and `eia2.xlarge` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-elasticinferenceaccelerator.html#cfn-ec2-instance-elasticinferenceaccelerator-type\n         */\n        readonly type: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ElasticInferenceAcceleratorProperty`\n *\n * @param properties - the TypeScript properties of a `ElasticInferenceAcceleratorProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnInstance_ElasticInferenceAcceleratorPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('count', cdk.validateNumber)(properties.count));\n    errors.collect(cdk.propertyValidator('type', cdk.requiredValidator)(properties.type));\n    errors.collect(cdk.propertyValidator('type', cdk.validateString)(properties.type));\n    return errors.wrap('supplied properties not correct for \"ElasticInferenceAcceleratorProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::Instance.ElasticInferenceAccelerator` resource\n *\n * @param properties - the TypeScript properties of a `ElasticInferenceAcceleratorProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::Instance.ElasticInferenceAccelerator` resource.\n */\n// @ts-ignore TS6133\nfunction cfnInstanceElasticInferenceAcceleratorPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnInstance_ElasticInferenceAcceleratorPropertyValidator(properties).assertSuccess();\n    return {\n        Count: cdk.numberToCloudFormation(properties.count),\n        Type: cdk.stringToCloudFormation(properties.type),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnInstanceElasticInferenceAcceleratorPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnInstance.ElasticInferenceAcceleratorProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnInstance.ElasticInferenceAcceleratorProperty>();\n    ret.addPropertyResult('count', 'Count', properties.Count != null ? cfn_parse.FromCloudFormation.getNumber(properties.Count) : undefined);\n    ret.addPropertyResult('type', 'Type', cfn_parse.FromCloudFormation.getString(properties.Type));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnInstance {\n    /**\n     * Indicates whether the instance is enabled for AWS Nitro Enclaves.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-enclaveoptions.html\n     */\n    export interface EnclaveOptionsProperty {\n        /**\n         * If this parameter is set to `true` , the instance is enabled for AWS Nitro Enclaves; otherwise, it is not enabled for AWS Nitro Enclaves.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-enclaveoptions.html#cfn-ec2-instance-enclaveoptions-enabled\n         */\n        readonly enabled?: boolean | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `EnclaveOptionsProperty`\n *\n * @param properties - the TypeScript properties of a `EnclaveOptionsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnInstance_EnclaveOptionsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('enabled', cdk.validateBoolean)(properties.enabled));\n    return errors.wrap('supplied properties not correct for \"EnclaveOptionsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::Instance.EnclaveOptions` resource\n *\n * @param properties - the TypeScript properties of a `EnclaveOptionsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::Instance.EnclaveOptions` resource.\n */\n// @ts-ignore TS6133\nfunction cfnInstanceEnclaveOptionsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnInstance_EnclaveOptionsPropertyValidator(properties).assertSuccess();\n    return {\n        Enabled: cdk.booleanToCloudFormation(properties.enabled),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnInstanceEnclaveOptionsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnInstance.EnclaveOptionsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnInstance.EnclaveOptionsProperty>();\n    ret.addPropertyResult('enabled', 'Enabled', properties.Enabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.Enabled) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnInstance {\n    /**\n     * Specifies the hibernation options for the instance.\n     *\n     * `HibernationOptions` is a property of the [AWS::EC2::Instance](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html) resource.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-hibernationoptions.html\n     */\n    export interface HibernationOptionsProperty {\n        /**\n         * If you set this parameter to `true` , your instance is enabled for hibernation.\n         *\n         * Default: `false`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-hibernationoptions.html#cfn-ec2-instance-hibernationoptions-configured\n         */\n        readonly configured?: boolean | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `HibernationOptionsProperty`\n *\n * @param properties - the TypeScript properties of a `HibernationOptionsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnInstance_HibernationOptionsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('configured', cdk.validateBoolean)(properties.configured));\n    return errors.wrap('supplied properties not correct for \"HibernationOptionsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::Instance.HibernationOptions` resource\n *\n * @param properties - the TypeScript properties of a `HibernationOptionsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::Instance.HibernationOptions` resource.\n */\n// @ts-ignore TS6133\nfunction cfnInstanceHibernationOptionsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnInstance_HibernationOptionsPropertyValidator(properties).assertSuccess();\n    return {\n        Configured: cdk.booleanToCloudFormation(properties.configured),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnInstanceHibernationOptionsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnInstance.HibernationOptionsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnInstance.HibernationOptionsProperty>();\n    ret.addPropertyResult('configured', 'Configured', properties.Configured != null ? cfn_parse.FromCloudFormation.getBoolean(properties.Configured) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnInstance {\n    /**\n     * Specifies the IPv6 address for the instance.\n     *\n     * `InstanceIpv6Address` is a property of the [AWS::EC2::Instance](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html) resource.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-instanceipv6address.html\n     */\n    export interface InstanceIpv6AddressProperty {\n        /**\n         * The IPv6 address.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-instanceipv6address.html#cfn-ec2-instance-instanceipv6address-ipv6address\n         */\n        readonly ipv6Address: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `InstanceIpv6AddressProperty`\n *\n * @param properties - the TypeScript properties of a `InstanceIpv6AddressProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnInstance_InstanceIpv6AddressPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('ipv6Address', cdk.requiredValidator)(properties.ipv6Address));\n    errors.collect(cdk.propertyValidator('ipv6Address', cdk.validateString)(properties.ipv6Address));\n    return errors.wrap('supplied properties not correct for \"InstanceIpv6AddressProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::Instance.InstanceIpv6Address` resource\n *\n * @param properties - the TypeScript properties of a `InstanceIpv6AddressProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::Instance.InstanceIpv6Address` resource.\n */\n// @ts-ignore TS6133\nfunction cfnInstanceInstanceIpv6AddressPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnInstance_InstanceIpv6AddressPropertyValidator(properties).assertSuccess();\n    return {\n        Ipv6Address: cdk.stringToCloudFormation(properties.ipv6Address),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnInstanceInstanceIpv6AddressPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnInstance.InstanceIpv6AddressProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnInstance.InstanceIpv6AddressProperty>();\n    ret.addPropertyResult('ipv6Address', 'Ipv6Address', cfn_parse.FromCloudFormation.getString(properties.Ipv6Address));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnInstance {\n    /**\n     * Specifies a launch template. You must specify either the launch template ID or launch template name.\n     *\n     * `LaunchTemplateSpecification` is a property of the [AWS::EC2::Instance](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html) resource.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-launchtemplatespecification.html\n     */\n    export interface LaunchTemplateSpecificationProperty {\n        /**\n         * The ID of the launch template.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-launchtemplatespecification.html#cfn-ec2-instance-launchtemplatespecification-launchtemplateid\n         */\n        readonly launchTemplateId?: string;\n        /**\n         * The name of the launch template.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-launchtemplatespecification.html#cfn-ec2-instance-launchtemplatespecification-launchtemplatename\n         */\n        readonly launchTemplateName?: string;\n        /**\n         * The version number of the launch template. AWS CloudFormation does not support specifying `$Latest` , or `$Default` for the template version number.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-launchtemplatespecification.html#cfn-ec2-instance-launchtemplatespecification-version\n         */\n        readonly version: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `LaunchTemplateSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `LaunchTemplateSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnInstance_LaunchTemplateSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('launchTemplateId', cdk.validateString)(properties.launchTemplateId));\n    errors.collect(cdk.propertyValidator('launchTemplateName', cdk.validateString)(properties.launchTemplateName));\n    errors.collect(cdk.propertyValidator('version', cdk.requiredValidator)(properties.version));\n    errors.collect(cdk.propertyValidator('version', cdk.validateString)(properties.version));\n    return errors.wrap('supplied properties not correct for \"LaunchTemplateSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::Instance.LaunchTemplateSpecification` resource\n *\n * @param properties - the TypeScript properties of a `LaunchTemplateSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::Instance.LaunchTemplateSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnInstanceLaunchTemplateSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnInstance_LaunchTemplateSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        LaunchTemplateId: cdk.stringToCloudFormation(properties.launchTemplateId),\n        LaunchTemplateName: cdk.stringToCloudFormation(properties.launchTemplateName),\n        Version: cdk.stringToCloudFormation(properties.version),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnInstanceLaunchTemplateSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnInstance.LaunchTemplateSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnInstance.LaunchTemplateSpecificationProperty>();\n    ret.addPropertyResult('launchTemplateId', 'LaunchTemplateId', properties.LaunchTemplateId != null ? cfn_parse.FromCloudFormation.getString(properties.LaunchTemplateId) : undefined);\n    ret.addPropertyResult('launchTemplateName', 'LaunchTemplateName', properties.LaunchTemplateName != null ? cfn_parse.FromCloudFormation.getString(properties.LaunchTemplateName) : undefined);\n    ret.addPropertyResult('version', 'Version', cfn_parse.FromCloudFormation.getString(properties.Version));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnInstance {\n    /**\n     * Specifies the license configuration to use.\n     *\n     * `LicenseSpecification` is a property of the [AWS::EC2::Instance](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html) resource.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-licensespecification.html\n     */\n    export interface LicenseSpecificationProperty {\n        /**\n         * The Amazon Resource Name (ARN) of the license configuration.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-licensespecification.html#cfn-ec2-instance-licensespecification-licenseconfigurationarn\n         */\n        readonly licenseConfigurationArn: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `LicenseSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `LicenseSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnInstance_LicenseSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('licenseConfigurationArn', cdk.requiredValidator)(properties.licenseConfigurationArn));\n    errors.collect(cdk.propertyValidator('licenseConfigurationArn', cdk.validateString)(properties.licenseConfigurationArn));\n    return errors.wrap('supplied properties not correct for \"LicenseSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::Instance.LicenseSpecification` resource\n *\n * @param properties - the TypeScript properties of a `LicenseSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::Instance.LicenseSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnInstanceLicenseSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnInstance_LicenseSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        LicenseConfigurationArn: cdk.stringToCloudFormation(properties.licenseConfigurationArn),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnInstanceLicenseSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnInstance.LicenseSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnInstance.LicenseSpecificationProperty>();\n    ret.addPropertyResult('licenseConfigurationArn', 'LicenseConfigurationArn', cfn_parse.FromCloudFormation.getString(properties.LicenseConfigurationArn));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnInstance {\n    /**\n     * Specifies a network interface that is to be attached to an instance.\n     *\n     * You can create a network interface when launching an instance. For an example, see the [AWS::EC2::Instance examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#aws-properties-ec2-instance--examples--Automatically_assign_a_public_IP_address) .\n     *\n     * Alternatively, you can attach an existing network interface when launching an instance. For an example, see the [AWS::EC2:NetworkInterface examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#aws-resource-ec2-network-interface--examples--Basic_network_interface) .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html\n     */\n    export interface NetworkInterfaceProperty {\n        /**\n         * Indicates whether to assign a public IPv4 address to an instance. Applies only if creating a network interface when launching an instance. The network interface must be the primary network interface. If launching into a default subnet, the default value is `true` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-associatepubip\n         */\n        readonly associatePublicIpAddress?: boolean | cdk.IResolvable;\n        /**\n         * Indicates whether the network interface is deleted when the instance is terminated. Applies only if creating a network interface when launching an instance.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-delete\n         */\n        readonly deleteOnTermination?: boolean | cdk.IResolvable;\n        /**\n         * The description of the network interface. Applies only if creating a network interface when launching an instance.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-description\n         */\n        readonly description?: string;\n        /**\n         * The position of the network interface in the attachment order. A primary network interface has a device index of 0.\n         *\n         * If you create a network interface when launching an instance, you must specify the device index.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-deviceindex\n         */\n        readonly deviceIndex: string;\n        /**\n         * The IDs of the security groups for the network interface. Applies only if creating a network interface when launching an instance.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-groupset\n         */\n        readonly groupSet?: string[];\n        /**\n         * A number of IPv6 addresses to assign to the network interface. Amazon EC2 chooses the IPv6 addresses from the range of the subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you've specified a minimum number of instances to launch.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#cfn-ec2-instance-networkinterface-ipv6addresscount\n         */\n        readonly ipv6AddressCount?: number;\n        /**\n         * One or more IPv6 addresses to assign to the network interface. You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you've specified a minimum number of instances to launch.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#cfn-ec2-instance-networkinterface-ipv6addresses\n         */\n        readonly ipv6Addresses?: Array<CfnInstance.InstanceIpv6AddressProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * The ID of the network interface, when attaching an existing network interface.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-network-iface\n         */\n        readonly networkInterfaceId?: string;\n        /**\n         * The private IPv4 address of the network interface. Applies only if creating a network interface when launching an instance.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-privateipaddress\n         */\n        readonly privateIpAddress?: string;\n        /**\n         * One or more private IPv4 addresses to assign to the network interface. Only one private IPv4 address can be designated as primary.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-privateipaddresses\n         */\n        readonly privateIpAddresses?: Array<CfnInstance.PrivateIpAddressSpecificationProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * The number of secondary private IPv4 addresses. You can't specify this option and specify more than one private IP address using the private IP addresses option.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-secondprivateip\n         */\n        readonly secondaryPrivateIpAddressCount?: number;\n        /**\n         * The ID of the subnet associated with the network interface. Applies only if creating a network interface when launching an instance.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-subnetid\n         */\n        readonly subnetId?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `NetworkInterfaceProperty`\n *\n * @param properties - the TypeScript properties of a `NetworkInterfaceProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnInstance_NetworkInterfacePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('associatePublicIpAddress', cdk.validateBoolean)(properties.associatePublicIpAddress));\n    errors.collect(cdk.propertyValidator('deleteOnTermination', cdk.validateBoolean)(properties.deleteOnTermination));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('deviceIndex', cdk.requiredValidator)(properties.deviceIndex));\n    errors.collect(cdk.propertyValidator('deviceIndex', cdk.validateString)(properties.deviceIndex));\n    errors.collect(cdk.propertyValidator('groupSet', cdk.listValidator(cdk.validateString))(properties.groupSet));\n    errors.collect(cdk.propertyValidator('ipv6AddressCount', cdk.validateNumber)(properties.ipv6AddressCount));\n    errors.collect(cdk.propertyValidator('ipv6Addresses', cdk.listValidator(CfnInstance_InstanceIpv6AddressPropertyValidator))(properties.ipv6Addresses));\n    errors.collect(cdk.propertyValidator('networkInterfaceId', cdk.validateString)(properties.networkInterfaceId));\n    errors.collect(cdk.propertyValidator('privateIpAddress', cdk.validateString)(properties.privateIpAddress));\n    errors.collect(cdk.propertyValidator('privateIpAddresses', cdk.listValidator(CfnInstance_PrivateIpAddressSpecificationPropertyValidator))(properties.privateIpAddresses));\n    errors.collect(cdk.propertyValidator('secondaryPrivateIpAddressCount', cdk.validateNumber)(properties.secondaryPrivateIpAddressCount));\n    errors.collect(cdk.propertyValidator('subnetId', cdk.validateString)(properties.subnetId));\n    return errors.wrap('supplied properties not correct for \"NetworkInterfaceProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::Instance.NetworkInterface` resource\n *\n * @param properties - the TypeScript properties of a `NetworkInterfaceProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::Instance.NetworkInterface` resource.\n */\n// @ts-ignore TS6133\nfunction cfnInstanceNetworkInterfacePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnInstance_NetworkInterfacePropertyValidator(properties).assertSuccess();\n    return {\n        AssociatePublicIpAddress: cdk.booleanToCloudFormation(properties.associatePublicIpAddress),\n        DeleteOnTermination: cdk.booleanToCloudFormation(properties.deleteOnTermination),\n        Description: cdk.stringToCloudFormation(properties.description),\n        DeviceIndex: cdk.stringToCloudFormation(properties.deviceIndex),\n        GroupSet: cdk.listMapper(cdk.stringToCloudFormation)(properties.groupSet),\n        Ipv6AddressCount: cdk.numberToCloudFormation(properties.ipv6AddressCount),\n        Ipv6Addresses: cdk.listMapper(cfnInstanceInstanceIpv6AddressPropertyToCloudFormation)(properties.ipv6Addresses),\n        NetworkInterfaceId: cdk.stringToCloudFormation(properties.networkInterfaceId),\n        PrivateIpAddress: cdk.stringToCloudFormation(properties.privateIpAddress),\n        PrivateIpAddresses: cdk.listMapper(cfnInstancePrivateIpAddressSpecificationPropertyToCloudFormation)(properties.privateIpAddresses),\n        SecondaryPrivateIpAddressCount: cdk.numberToCloudFormation(properties.secondaryPrivateIpAddressCount),\n        SubnetId: cdk.stringToCloudFormation(properties.subnetId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnInstanceNetworkInterfacePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnInstance.NetworkInterfaceProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnInstance.NetworkInterfaceProperty>();\n    ret.addPropertyResult('associatePublicIpAddress', 'AssociatePublicIpAddress', properties.AssociatePublicIpAddress != null ? cfn_parse.FromCloudFormation.getBoolean(properties.AssociatePublicIpAddress) : undefined);\n    ret.addPropertyResult('deleteOnTermination', 'DeleteOnTermination', properties.DeleteOnTermination != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DeleteOnTermination) : undefined);\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('deviceIndex', 'DeviceIndex', cfn_parse.FromCloudFormation.getString(properties.DeviceIndex));\n    ret.addPropertyResult('groupSet', 'GroupSet', properties.GroupSet != null ? cfn_parse.FromCloudFormation.getStringArray(properties.GroupSet) : undefined);\n    ret.addPropertyResult('ipv6AddressCount', 'Ipv6AddressCount', properties.Ipv6AddressCount != null ? cfn_parse.FromCloudFormation.getNumber(properties.Ipv6AddressCount) : undefined);\n    ret.addPropertyResult('ipv6Addresses', 'Ipv6Addresses', properties.Ipv6Addresses != null ? cfn_parse.FromCloudFormation.getArray(CfnInstanceInstanceIpv6AddressPropertyFromCloudFormation)(properties.Ipv6Addresses) : undefined);\n    ret.addPropertyResult('networkInterfaceId', 'NetworkInterfaceId', properties.NetworkInterfaceId != null ? cfn_parse.FromCloudFormation.getString(properties.NetworkInterfaceId) : undefined);\n    ret.addPropertyResult('privateIpAddress', 'PrivateIpAddress', properties.PrivateIpAddress != null ? cfn_parse.FromCloudFormation.getString(properties.PrivateIpAddress) : undefined);\n    ret.addPropertyResult('privateIpAddresses', 'PrivateIpAddresses', properties.PrivateIpAddresses != null ? cfn_parse.FromCloudFormation.getArray(CfnInstancePrivateIpAddressSpecificationPropertyFromCloudFormation)(properties.PrivateIpAddresses) : undefined);\n    ret.addPropertyResult('secondaryPrivateIpAddressCount', 'SecondaryPrivateIpAddressCount', properties.SecondaryPrivateIpAddressCount != null ? cfn_parse.FromCloudFormation.getNumber(properties.SecondaryPrivateIpAddressCount) : undefined);\n    ret.addPropertyResult('subnetId', 'SubnetId', properties.SubnetId != null ? cfn_parse.FromCloudFormation.getString(properties.SubnetId) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnInstance {\n    /**\n     * Suppresses the specified device included in the block device mapping of the AMI. To suppress a device, specify an empty string.\n     *\n     * `NoDevice` is a property of the [Amazon EC2 BlockDeviceMapping](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html) property.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-nodevice.html\n     */\n    export interface NoDeviceProperty {\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `NoDeviceProperty`\n *\n * @param properties - the TypeScript properties of a `NoDeviceProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnInstance_NoDevicePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    return errors.wrap('supplied properties not correct for \"NoDeviceProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::Instance.NoDevice` resource\n *\n * @param properties - the TypeScript properties of a `NoDeviceProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::Instance.NoDevice` resource.\n */\n// @ts-ignore TS6133\nfunction cfnInstanceNoDevicePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnInstance_NoDevicePropertyValidator(properties).assertSuccess();\n    return {\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnInstanceNoDevicePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnInstance.NoDeviceProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnInstance.NoDeviceProperty>();\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnInstance {\n    /**\n     * The type of hostnames to assign to instances in the subnet at launch. For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 only subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. For more information, see [Amazon EC2 instance hostname types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-naming.html) in the *Amazon Elastic Compute Cloud User Guide* .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-privatednsnameoptions.html\n     */\n    export interface PrivateDnsNameOptionsProperty {\n        /**\n         * Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. For more information, see [Amazon EC2 instance hostname types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-naming.html) in the *Amazon Elastic Compute Cloud User Guide* .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-privatednsnameoptions.html#cfn-ec2-instance-privatednsnameoptions-enableresourcenamednsaaaarecord\n         */\n        readonly enableResourceNameDnsAaaaRecord?: boolean | cdk.IResolvable;\n        /**\n         * Indicates whether to respond to DNS queries for instance hostnames with DNS A records. For more information, see [Amazon EC2 instance hostname types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-naming.html) in the *Amazon Elastic Compute Cloud User Guide* .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-privatednsnameoptions.html#cfn-ec2-instance-privatednsnameoptions-enableresourcenamednsarecord\n         */\n        readonly enableResourceNameDnsARecord?: boolean | cdk.IResolvable;\n        /**\n         * The type of hostnames to assign to instances in the subnet at launch. For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 only subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. For more information, see [Amazon EC2 instance hostname types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-naming.html) in the *Amazon Elastic Compute Cloud User Guide* .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-privatednsnameoptions.html#cfn-ec2-instance-privatednsnameoptions-hostnametype\n         */\n        readonly hostnameType?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `PrivateDnsNameOptionsProperty`\n *\n * @param properties - the TypeScript properties of a `PrivateDnsNameOptionsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnInstance_PrivateDnsNameOptionsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('enableResourceNameDnsAaaaRecord', cdk.validateBoolean)(properties.enableResourceNameDnsAaaaRecord));\n    errors.collect(cdk.propertyValidator('enableResourceNameDnsARecord', cdk.validateBoolean)(properties.enableResourceNameDnsARecord));\n    errors.collect(cdk.propertyValidator('hostnameType', cdk.validateString)(properties.hostnameType));\n    return errors.wrap('supplied properties not correct for \"PrivateDnsNameOptionsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::Instance.PrivateDnsNameOptions` resource\n *\n * @param properties - the TypeScript properties of a `PrivateDnsNameOptionsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::Instance.PrivateDnsNameOptions` resource.\n */\n// @ts-ignore TS6133\nfunction cfnInstancePrivateDnsNameOptionsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnInstance_PrivateDnsNameOptionsPropertyValidator(properties).assertSuccess();\n    return {\n        EnableResourceNameDnsAAAARecord: cdk.booleanToCloudFormation(properties.enableResourceNameDnsAaaaRecord),\n        EnableResourceNameDnsARecord: cdk.booleanToCloudFormation(properties.enableResourceNameDnsARecord),\n        HostnameType: cdk.stringToCloudFormation(properties.hostnameType),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnInstancePrivateDnsNameOptionsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnInstance.PrivateDnsNameOptionsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnInstance.PrivateDnsNameOptionsProperty>();\n    ret.addPropertyResult('enableResourceNameDnsAaaaRecord', 'EnableResourceNameDnsAAAARecord', properties.EnableResourceNameDnsAAAARecord != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableResourceNameDnsAAAARecord) : undefined);\n    ret.addPropertyResult('enableResourceNameDnsARecord', 'EnableResourceNameDnsARecord', properties.EnableResourceNameDnsARecord != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableResourceNameDnsARecord) : undefined);\n    ret.addPropertyResult('hostnameType', 'HostnameType', properties.HostnameType != null ? cfn_parse.FromCloudFormation.getString(properties.HostnameType) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnInstance {\n    /**\n     * Specifies a secondary private IPv4 address for a network interface.\n     *\n     * `PrivateIpAddressSpecification` is a property of the [AWS::EC2::NetworkInterface](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html) resource.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html\n     */\n    export interface PrivateIpAddressSpecificationProperty {\n        /**\n         * Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html#cfn-ec2-networkinterface-privateipspecification-primary\n         */\n        readonly primary: boolean | cdk.IResolvable;\n        /**\n         * The private IPv4 addresses.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html#cfn-ec2-networkinterface-privateipspecification-privateipaddress\n         */\n        readonly privateIpAddress: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `PrivateIpAddressSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `PrivateIpAddressSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnInstance_PrivateIpAddressSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('primary', cdk.requiredValidator)(properties.primary));\n    errors.collect(cdk.propertyValidator('primary', cdk.validateBoolean)(properties.primary));\n    errors.collect(cdk.propertyValidator('privateIpAddress', cdk.requiredValidator)(properties.privateIpAddress));\n    errors.collect(cdk.propertyValidator('privateIpAddress', cdk.validateString)(properties.privateIpAddress));\n    return errors.wrap('supplied properties not correct for \"PrivateIpAddressSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::Instance.PrivateIpAddressSpecification` resource\n *\n * @param properties - the TypeScript properties of a `PrivateIpAddressSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::Instance.PrivateIpAddressSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnInstancePrivateIpAddressSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnInstance_PrivateIpAddressSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        Primary: cdk.booleanToCloudFormation(properties.primary),\n        PrivateIpAddress: cdk.stringToCloudFormation(properties.privateIpAddress),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnInstancePrivateIpAddressSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnInstance.PrivateIpAddressSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnInstance.PrivateIpAddressSpecificationProperty>();\n    ret.addPropertyResult('primary', 'Primary', cfn_parse.FromCloudFormation.getBoolean(properties.Primary));\n    ret.addPropertyResult('privateIpAddress', 'PrivateIpAddress', cfn_parse.FromCloudFormation.getString(properties.PrivateIpAddress));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnInstance {\n    /**\n     * Specifies the SSM document and parameter values in AWS Systems Manager to associate with an instance.\n     *\n     * `SsmAssociations` is a property of the [AWS::EC2::Instance](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html) resource.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations.html\n     */\n    export interface SsmAssociationProperty {\n        /**\n         * The input parameter values to use with the associated SSM document.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations.html#cfn-ec2-instance-ssmassociations-associationparameters\n         */\n        readonly associationParameters?: Array<CfnInstance.AssociationParameterProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * The name of an SSM document to associate with the instance.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations.html#cfn-ec2-instance-ssmassociations-documentname\n         */\n        readonly documentName: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `SsmAssociationProperty`\n *\n * @param properties - the TypeScript properties of a `SsmAssociationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnInstance_SsmAssociationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('associationParameters', cdk.listValidator(CfnInstance_AssociationParameterPropertyValidator))(properties.associationParameters));\n    errors.collect(cdk.propertyValidator('documentName', cdk.requiredValidator)(properties.documentName));\n    errors.collect(cdk.propertyValidator('documentName', cdk.validateString)(properties.documentName));\n    return errors.wrap('supplied properties not correct for \"SsmAssociationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::Instance.SsmAssociation` resource\n *\n * @param properties - the TypeScript properties of a `SsmAssociationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::Instance.SsmAssociation` resource.\n */\n// @ts-ignore TS6133\nfunction cfnInstanceSsmAssociationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnInstance_SsmAssociationPropertyValidator(properties).assertSuccess();\n    return {\n        AssociationParameters: cdk.listMapper(cfnInstanceAssociationParameterPropertyToCloudFormation)(properties.associationParameters),\n        DocumentName: cdk.stringToCloudFormation(properties.documentName),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnInstanceSsmAssociationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnInstance.SsmAssociationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnInstance.SsmAssociationProperty>();\n    ret.addPropertyResult('associationParameters', 'AssociationParameters', properties.AssociationParameters != null ? cfn_parse.FromCloudFormation.getArray(CfnInstanceAssociationParameterPropertyFromCloudFormation)(properties.AssociationParameters) : undefined);\n    ret.addPropertyResult('documentName', 'DocumentName', cfn_parse.FromCloudFormation.getString(properties.DocumentName));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnInstance {\n    /**\n     * Specifies a volume to attach to an instance.\n     *\n     * `Volume` is an embedded property of the [AWS::EC2::Instance](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html) resource.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-mount-point.html\n     */\n    export interface VolumeProperty {\n        /**\n         * The device name (for example, `/dev/sdh` or `xvdh` ).\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-mount-point.html#cfn-ec2-mountpoint-device\n         */\n        readonly device: string;\n        /**\n         * The ID of the EBS volume. The volume and instance must be within the same Availability Zone.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-mount-point.html#cfn-ec2-mountpoint-volumeid\n         */\n        readonly volumeId: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `VolumeProperty`\n *\n * @param properties - the TypeScript properties of a `VolumeProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnInstance_VolumePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('device', cdk.requiredValidator)(properties.device));\n    errors.collect(cdk.propertyValidator('device', cdk.validateString)(properties.device));\n    errors.collect(cdk.propertyValidator('volumeId', cdk.requiredValidator)(properties.volumeId));\n    errors.collect(cdk.propertyValidator('volumeId', cdk.validateString)(properties.volumeId));\n    return errors.wrap('supplied properties not correct for \"VolumeProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::Instance.Volume` resource\n *\n * @param properties - the TypeScript properties of a `VolumeProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::Instance.Volume` resource.\n */\n// @ts-ignore TS6133\nfunction cfnInstanceVolumePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnInstance_VolumePropertyValidator(properties).assertSuccess();\n    return {\n        Device: cdk.stringToCloudFormation(properties.device),\n        VolumeId: cdk.stringToCloudFormation(properties.volumeId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnInstanceVolumePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnInstance.VolumeProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnInstance.VolumeProperty>();\n    ret.addPropertyResult('device', 'Device', cfn_parse.FromCloudFormation.getString(properties.Device));\n    ret.addPropertyResult('volumeId', 'VolumeId', cfn_parse.FromCloudFormation.getString(properties.VolumeId));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnInternetGateway`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html\n */\nexport interface CfnInternetGatewayProps {\n\n    /**\n     * Any tags to assign to the internet gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html#cfn-ec2-internetgateway-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnInternetGatewayProps`\n *\n * @param properties - the TypeScript properties of a `CfnInternetGatewayProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnInternetGatewayPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnInternetGatewayProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::InternetGateway` resource\n *\n * @param properties - the TypeScript properties of a `CfnInternetGatewayProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::InternetGateway` resource.\n */\n// @ts-ignore TS6133\nfunction cfnInternetGatewayPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnInternetGatewayPropsValidator(properties).assertSuccess();\n    return {\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnInternetGatewayPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnInternetGatewayProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnInternetGatewayProps>();\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::InternetGateway`\n *\n * Allocates an internet gateway for use with a VPC. After creating the Internet gateway, you then attach it to a VPC.\n *\n * @cloudformationResource AWS::EC2::InternetGateway\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html\n */\nexport class CfnInternetGateway extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::InternetGateway\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnInternetGateway {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnInternetGatewayPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnInternetGateway(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the internet gateway.\n     * @cloudformationAttribute InternetGatewayId\n     */\n    public readonly attrInternetGatewayId: string;\n\n    /**\n     * Any tags to assign to the internet gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html#cfn-ec2-internetgateway-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EC2::InternetGateway`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnInternetGatewayProps = {}) {\n        super(scope, id, { type: CfnInternetGateway.CFN_RESOURCE_TYPE_NAME, properties: props });\n        this.attrInternetGatewayId = cdk.Token.asString(this.getAtt('InternetGatewayId'));\n\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::InternetGateway\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnInternetGateway.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnInternetGatewayPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnLaunchTemplate`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html\n */\nexport interface CfnLaunchTemplateProps {\n\n    /**\n     * The information for the launch template.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-launchtemplatedata\n     */\n    readonly launchTemplateData?: CfnLaunchTemplate.LaunchTemplateDataProperty | cdk.IResolvable;\n\n    /**\n     * A name for the launch template.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-launchtemplatename\n     */\n    readonly launchTemplateName?: string;\n\n    /**\n     * The tags to apply to the launch template during creation.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-tagspecifications\n     */\n    readonly tagSpecifications?: Array<CfnLaunchTemplate.LaunchTemplateTagSpecificationProperty | cdk.IResolvable> | cdk.IResolvable;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnLaunchTemplateProps`\n *\n * @param properties - the TypeScript properties of a `CfnLaunchTemplateProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplatePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('launchTemplateData', CfnLaunchTemplate_LaunchTemplateDataPropertyValidator)(properties.launchTemplateData));\n    errors.collect(cdk.propertyValidator('launchTemplateName', cdk.validateString)(properties.launchTemplateName));\n    errors.collect(cdk.propertyValidator('tagSpecifications', cdk.listValidator(CfnLaunchTemplate_LaunchTemplateTagSpecificationPropertyValidator))(properties.tagSpecifications));\n    return errors.wrap('supplied properties not correct for \"CfnLaunchTemplateProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate` resource\n *\n * @param properties - the TypeScript properties of a `CfnLaunchTemplateProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplatePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplatePropsValidator(properties).assertSuccess();\n    return {\n        LaunchTemplateData: cfnLaunchTemplateLaunchTemplateDataPropertyToCloudFormation(properties.launchTemplateData),\n        LaunchTemplateName: cdk.stringToCloudFormation(properties.launchTemplateName),\n        TagSpecifications: cdk.listMapper(cfnLaunchTemplateLaunchTemplateTagSpecificationPropertyToCloudFormation)(properties.tagSpecifications),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplatePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplateProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplateProps>();\n    ret.addPropertyResult('launchTemplateData', 'LaunchTemplateData', properties.LaunchTemplateData != null ? CfnLaunchTemplateLaunchTemplateDataPropertyFromCloudFormation(properties.LaunchTemplateData) : undefined);\n    ret.addPropertyResult('launchTemplateName', 'LaunchTemplateName', properties.LaunchTemplateName != null ? cfn_parse.FromCloudFormation.getString(properties.LaunchTemplateName) : undefined);\n    ret.addPropertyResult('tagSpecifications', 'TagSpecifications', properties.TagSpecifications != null ? cfn_parse.FromCloudFormation.getArray(CfnLaunchTemplateLaunchTemplateTagSpecificationPropertyFromCloudFormation)(properties.TagSpecifications) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::LaunchTemplate`\n *\n * Specifies a launch template for an Amazon EC2 instance. A launch template contains the parameters to launch an instance. For more information, see [Launch an instance from a launch template](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-launch-templates.html) in the *Amazon EC2 User Guide* .\n *\n * @cloudformationResource AWS::EC2::LaunchTemplate\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html\n */\nexport class CfnLaunchTemplate extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::LaunchTemplate\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnLaunchTemplate {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnLaunchTemplatePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnLaunchTemplate(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The default version of the launch template, such as 2.\n     *\n     * The default version of a launch template cannot be specified in AWS CloudFormation . The default version can be set in the Amazon EC2 Console or by using the `modify-launch-template` AWS CLI command.\n     * @cloudformationAttribute DefaultVersionNumber\n     */\n    public readonly attrDefaultVersionNumber: string;\n\n    /**\n     * The latest version of the launch template, such as `5` .\n     * @cloudformationAttribute LatestVersionNumber\n     */\n    public readonly attrLatestVersionNumber: string;\n\n    /**\n     * The information for the launch template.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-launchtemplatedata\n     */\n    public launchTemplateData: CfnLaunchTemplate.LaunchTemplateDataProperty | cdk.IResolvable | undefined;\n\n    /**\n     * A name for the launch template.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-launchtemplatename\n     */\n    public launchTemplateName: string | undefined;\n\n    /**\n     * The tags to apply to the launch template during creation.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-tagspecifications\n     */\n    public tagSpecifications: Array<CfnLaunchTemplate.LaunchTemplateTagSpecificationProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n    /**\n     * Create a new `AWS::EC2::LaunchTemplate`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnLaunchTemplateProps = {}) {\n        super(scope, id, { type: CfnLaunchTemplate.CFN_RESOURCE_TYPE_NAME, properties: props });\n        this.attrDefaultVersionNumber = cdk.Token.asString(this.getAtt('DefaultVersionNumber'));\n        this.attrLatestVersionNumber = cdk.Token.asString(this.getAtt('LatestVersionNumber'));\n\n        this.launchTemplateData = props.launchTemplateData;\n        this.launchTemplateName = props.launchTemplateName;\n        this.tagSpecifications = props.tagSpecifications;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnLaunchTemplate.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            launchTemplateData: this.launchTemplateData,\n            launchTemplateName: this.launchTemplateName,\n            tagSpecifications: this.tagSpecifications,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnLaunchTemplatePropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * The minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips) on an instance.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-acceleratorcount.html\n     */\n    export interface AcceleratorCountProperty {\n        /**\n         * The maximum number of accelerators. To specify no maximum limit, omit this parameter. To exclude accelerator-enabled instance types, set `Max` to `0` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-acceleratorcount.html#cfn-ec2-launchtemplate-acceleratorcount-max\n         */\n        readonly max?: number;\n        /**\n         * The minimum number of accelerators. To specify no minimum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-acceleratorcount.html#cfn-ec2-launchtemplate-acceleratorcount-min\n         */\n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AcceleratorCountProperty`\n *\n * @param properties - the TypeScript properties of a `AcceleratorCountProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_AcceleratorCountPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"AcceleratorCountProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.AcceleratorCount` resource\n *\n * @param properties - the TypeScript properties of a `AcceleratorCountProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.AcceleratorCount` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateAcceleratorCountPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_AcceleratorCountPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateAcceleratorCountPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.AcceleratorCountProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.AcceleratorCountProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * The minimum and maximum amount of total accelerator memory, in MiB.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-acceleratortotalmemorymib.html\n     */\n    export interface AcceleratorTotalMemoryMiBProperty {\n        /**\n         * The maximum amount of accelerator memory, in MiB. To specify no maximum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-acceleratortotalmemorymib.html#cfn-ec2-launchtemplate-acceleratortotalmemorymib-max\n         */\n        readonly max?: number;\n        /**\n         * The minimum amount of accelerator memory, in MiB. To specify no minimum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-acceleratortotalmemorymib.html#cfn-ec2-launchtemplate-acceleratortotalmemorymib-min\n         */\n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AcceleratorTotalMemoryMiBProperty`\n *\n * @param properties - the TypeScript properties of a `AcceleratorTotalMemoryMiBProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_AcceleratorTotalMemoryMiBPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"AcceleratorTotalMemoryMiBProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.AcceleratorTotalMemoryMiB` resource\n *\n * @param properties - the TypeScript properties of a `AcceleratorTotalMemoryMiBProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.AcceleratorTotalMemoryMiB` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateAcceleratorTotalMemoryMiBPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_AcceleratorTotalMemoryMiBPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateAcceleratorTotalMemoryMiBPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.AcceleratorTotalMemoryMiBProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.AcceleratorTotalMemoryMiBProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * The minimum and maximum baseline bandwidth to Amazon EBS, in Mbps. For more information, see [Amazon EBS\u2013optimized instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html) in the *Amazon EC2 User Guide* .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-baselineebsbandwidthmbps.html\n     */\n    export interface BaselineEbsBandwidthMbpsProperty {\n        /**\n         * The maximum baseline bandwidth, in Mbps. To specify no maximum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-baselineebsbandwidthmbps.html#cfn-ec2-launchtemplate-baselineebsbandwidthmbps-max\n         */\n        readonly max?: number;\n        /**\n         * The minimum baseline bandwidth, in Mbps. To specify no minimum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-baselineebsbandwidthmbps.html#cfn-ec2-launchtemplate-baselineebsbandwidthmbps-min\n         */\n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `BaselineEbsBandwidthMbpsProperty`\n *\n * @param properties - the TypeScript properties of a `BaselineEbsBandwidthMbpsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_BaselineEbsBandwidthMbpsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"BaselineEbsBandwidthMbpsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.BaselineEbsBandwidthMbps` resource\n *\n * @param properties - the TypeScript properties of a `BaselineEbsBandwidthMbpsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.BaselineEbsBandwidthMbps` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateBaselineEbsBandwidthMbpsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_BaselineEbsBandwidthMbpsPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateBaselineEbsBandwidthMbpsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.BaselineEbsBandwidthMbpsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.BaselineEbsBandwidthMbpsProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * Information about a block device mapping for an Amazon EC2 launch template.\n     *\n     * `BlockDeviceMapping` is a property of [AWS::EC2::LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html\n     */\n    export interface BlockDeviceMappingProperty {\n        /**\n         * The device name (for example, /dev/sdh or xvdh).\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html#cfn-ec2-launchtemplate-blockdevicemapping-devicename\n         */\n        readonly deviceName?: string;\n        /**\n         * Parameters used to automatically set up EBS volumes when the instance is launched.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs\n         */\n        readonly ebs?: CfnLaunchTemplate.EbsProperty | cdk.IResolvable;\n        /**\n         * To omit the device from the block device mapping, specify an empty string.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html#cfn-ec2-launchtemplate-blockdevicemapping-nodevice\n         */\n        readonly noDevice?: string;\n        /**\n         * The virtual device name (ephemeralN). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for ephemeral0 and ephemeral1. The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html#cfn-ec2-launchtemplate-blockdevicemapping-virtualname\n         */\n        readonly virtualName?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `BlockDeviceMappingProperty`\n *\n * @param properties - the TypeScript properties of a `BlockDeviceMappingProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_BlockDeviceMappingPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('deviceName', cdk.validateString)(properties.deviceName));\n    errors.collect(cdk.propertyValidator('ebs', CfnLaunchTemplate_EbsPropertyValidator)(properties.ebs));\n    errors.collect(cdk.propertyValidator('noDevice', cdk.validateString)(properties.noDevice));\n    errors.collect(cdk.propertyValidator('virtualName', cdk.validateString)(properties.virtualName));\n    return errors.wrap('supplied properties not correct for \"BlockDeviceMappingProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.BlockDeviceMapping` resource\n *\n * @param properties - the TypeScript properties of a `BlockDeviceMappingProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.BlockDeviceMapping` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateBlockDeviceMappingPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_BlockDeviceMappingPropertyValidator(properties).assertSuccess();\n    return {\n        DeviceName: cdk.stringToCloudFormation(properties.deviceName),\n        Ebs: cfnLaunchTemplateEbsPropertyToCloudFormation(properties.ebs),\n        NoDevice: cdk.stringToCloudFormation(properties.noDevice),\n        VirtualName: cdk.stringToCloudFormation(properties.virtualName),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateBlockDeviceMappingPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.BlockDeviceMappingProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.BlockDeviceMappingProperty>();\n    ret.addPropertyResult('deviceName', 'DeviceName', properties.DeviceName != null ? cfn_parse.FromCloudFormation.getString(properties.DeviceName) : undefined);\n    ret.addPropertyResult('ebs', 'Ebs', properties.Ebs != null ? CfnLaunchTemplateEbsPropertyFromCloudFormation(properties.Ebs) : undefined);\n    ret.addPropertyResult('noDevice', 'NoDevice', properties.NoDevice != null ? cfn_parse.FromCloudFormation.getString(properties.NoDevice) : undefined);\n    ret.addPropertyResult('virtualName', 'VirtualName', properties.VirtualName != null ? cfn_parse.FromCloudFormation.getString(properties.VirtualName) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * Specifies an instance's Capacity Reservation targeting option. You can specify only one option at a time.\n     *\n     * `CapacityReservationSpecification` is a property of [AWS::EC2::LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-capacityreservationspecification.html\n     */\n    export interface CapacityReservationSpecificationProperty {\n        /**\n         * Indicates the instance's Capacity Reservation preferences. Possible preferences include:\n         *\n         * - `open` - The instance can run in any `open` Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).\n         * - `none` - The instance avoids running in a Capacity Reservation even if one is available. The instance runs in On-Demand capacity.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-capacityreservationspecification.html#cfn-ec2-launchtemplate-launchtemplatedata-capacityreservationspecification-capacityreservationpreference\n         */\n        readonly capacityReservationPreference?: string;\n        /**\n         * Information about the target Capacity Reservation or Capacity Reservation group.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-capacityreservationspecification.html#cfn-ec2-launchtemplate-launchtemplatedata-capacityreservationspecification-capacityreservationtarget\n         */\n        readonly capacityReservationTarget?: CfnLaunchTemplate.CapacityReservationTargetProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `CapacityReservationSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `CapacityReservationSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_CapacityReservationSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('capacityReservationPreference', cdk.validateString)(properties.capacityReservationPreference));\n    errors.collect(cdk.propertyValidator('capacityReservationTarget', CfnLaunchTemplate_CapacityReservationTargetPropertyValidator)(properties.capacityReservationTarget));\n    return errors.wrap('supplied properties not correct for \"CapacityReservationSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.CapacityReservationSpecification` resource\n *\n * @param properties - the TypeScript properties of a `CapacityReservationSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.CapacityReservationSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateCapacityReservationSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_CapacityReservationSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        CapacityReservationPreference: cdk.stringToCloudFormation(properties.capacityReservationPreference),\n        CapacityReservationTarget: cfnLaunchTemplateCapacityReservationTargetPropertyToCloudFormation(properties.capacityReservationTarget),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateCapacityReservationSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.CapacityReservationSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.CapacityReservationSpecificationProperty>();\n    ret.addPropertyResult('capacityReservationPreference', 'CapacityReservationPreference', properties.CapacityReservationPreference != null ? cfn_parse.FromCloudFormation.getString(properties.CapacityReservationPreference) : undefined);\n    ret.addPropertyResult('capacityReservationTarget', 'CapacityReservationTarget', properties.CapacityReservationTarget != null ? CfnLaunchTemplateCapacityReservationTargetPropertyFromCloudFormation(properties.CapacityReservationTarget) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * Specifies a target Capacity Reservation.\n     *\n     * `CapacityReservationTarget` is a property of the [Amazon EC2 LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) property type.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-capacityreservationtarget.html\n     */\n    export interface CapacityReservationTargetProperty {\n        /**\n         * The ID of the Capacity Reservation in which to run the instance.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-capacityreservationtarget.html#cfn-ec2-launchtemplate-capacityreservationtarget-capacityreservationid\n         */\n        readonly capacityReservationId?: string;\n        /**\n         * The ARN of the Capacity Reservation resource group in which to run the instance.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-capacityreservationtarget.html#cfn-ec2-launchtemplate-capacityreservationtarget-capacityreservationresourcegrouparn\n         */\n        readonly capacityReservationResourceGroupArn?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `CapacityReservationTargetProperty`\n *\n * @param properties - the TypeScript properties of a `CapacityReservationTargetProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_CapacityReservationTargetPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('capacityReservationId', cdk.validateString)(properties.capacityReservationId));\n    errors.collect(cdk.propertyValidator('capacityReservationResourceGroupArn', cdk.validateString)(properties.capacityReservationResourceGroupArn));\n    return errors.wrap('supplied properties not correct for \"CapacityReservationTargetProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.CapacityReservationTarget` resource\n *\n * @param properties - the TypeScript properties of a `CapacityReservationTargetProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.CapacityReservationTarget` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateCapacityReservationTargetPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_CapacityReservationTargetPropertyValidator(properties).assertSuccess();\n    return {\n        CapacityReservationId: cdk.stringToCloudFormation(properties.capacityReservationId),\n        CapacityReservationResourceGroupArn: cdk.stringToCloudFormation(properties.capacityReservationResourceGroupArn),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateCapacityReservationTargetPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.CapacityReservationTargetProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.CapacityReservationTargetProperty>();\n    ret.addPropertyResult('capacityReservationId', 'CapacityReservationId', properties.CapacityReservationId != null ? cfn_parse.FromCloudFormation.getString(properties.CapacityReservationId) : undefined);\n    ret.addPropertyResult('capacityReservationResourceGroupArn', 'CapacityReservationResourceGroupArn', properties.CapacityReservationResourceGroupArn != null ? cfn_parse.FromCloudFormation.getString(properties.CapacityReservationResourceGroupArn) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * Specifies the CPU options for an instance. For more information, see [Optimize CPU options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) in the *Amazon Elastic Compute Cloud User Guide* .\n     *\n     * `CpuOptions` is a property of [AWS::EC2::LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-cpuoptions.html\n     */\n    export interface CpuOptionsProperty {\n        /**\n         * The number of CPU cores for the instance.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-cpuoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-cpuoptions-corecount\n         */\n        readonly coreCount?: number;\n        /**\n         * The number of threads per CPU core. To disable multithreading for the instance, specify a value of 1. Otherwise, specify the default value of 2.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-cpuoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-cpuoptions-threadspercore\n         */\n        readonly threadsPerCore?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `CpuOptionsProperty`\n *\n * @param properties - the TypeScript properties of a `CpuOptionsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_CpuOptionsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('coreCount', cdk.validateNumber)(properties.coreCount));\n    errors.collect(cdk.propertyValidator('threadsPerCore', cdk.validateNumber)(properties.threadsPerCore));\n    return errors.wrap('supplied properties not correct for \"CpuOptionsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.CpuOptions` resource\n *\n * @param properties - the TypeScript properties of a `CpuOptionsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.CpuOptions` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateCpuOptionsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_CpuOptionsPropertyValidator(properties).assertSuccess();\n    return {\n        CoreCount: cdk.numberToCloudFormation(properties.coreCount),\n        ThreadsPerCore: cdk.numberToCloudFormation(properties.threadsPerCore),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateCpuOptionsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.CpuOptionsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.CpuOptionsProperty>();\n    ret.addPropertyResult('coreCount', 'CoreCount', properties.CoreCount != null ? cfn_parse.FromCloudFormation.getNumber(properties.CoreCount) : undefined);\n    ret.addPropertyResult('threadsPerCore', 'ThreadsPerCore', properties.ThreadsPerCore != null ? cfn_parse.FromCloudFormation.getNumber(properties.ThreadsPerCore) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * Specifies the credit option for CPU usage of a T2, T3, or T3a instance.\n     *\n     * `CreditSpecification` is a property of [AWS::EC2::LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-creditspecification.html\n     */\n    export interface CreditSpecificationProperty {\n        /**\n         * The credit option for CPU usage of a T2, T3, or T3a instance. Valid values are `standard` and `unlimited` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-creditspecification.html#cfn-ec2-launchtemplate-launchtemplatedata-creditspecification-cpucredits\n         */\n        readonly cpuCredits?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `CreditSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `CreditSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_CreditSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('cpuCredits', cdk.validateString)(properties.cpuCredits));\n    return errors.wrap('supplied properties not correct for \"CreditSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.CreditSpecification` resource\n *\n * @param properties - the TypeScript properties of a `CreditSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.CreditSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateCreditSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_CreditSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        CpuCredits: cdk.stringToCloudFormation(properties.cpuCredits),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateCreditSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.CreditSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.CreditSpecificationProperty>();\n    ret.addPropertyResult('cpuCredits', 'CpuCredits', properties.CpuCredits != null ? cfn_parse.FromCloudFormation.getString(properties.CpuCredits) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * Parameters for a block device for an EBS volume in an Amazon EC2 launch template.\n     *\n     * `Ebs` is a property of [AWS::EC2::LaunchTemplate BlockDeviceMapping](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html) .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html\n     */\n    export interface EbsProperty {\n        /**\n         * Indicates whether the EBS volume is deleted on instance termination.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-deleteontermination\n         */\n        readonly deleteOnTermination?: boolean | cdk.IResolvable;\n        /**\n         * Indicates whether the EBS volume is encrypted. Encrypted volumes can only be attached to instances that support Amazon EBS encryption. If you are creating a volume from a snapshot, you can't specify an encryption value.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-encrypted\n         */\n        readonly encrypted?: boolean | cdk.IResolvable;\n        /**\n         * The number of I/O operations per second (IOPS). For `gp3` , `io1` , and `io2` volumes, this represents the number of IOPS that are provisioned for the volume. For `gp2` volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting.\n         *\n         * The following are the supported values for each volume type:\n         *\n         * - `gp3` : 3,000-16,000 IOPS\n         * - `io1` : 100-64,000 IOPS\n         * - `io2` : 100-64,000 IOPS\n         *\n         * For `io1` and `io2` volumes, we guarantee 64,000 IOPS only for [Instances built on the Nitro System](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances) . Other instance families guarantee performance up to 32,000 IOPS.\n         *\n         * This parameter is supported for `io1` , `io2` , and `gp3` volumes only. This parameter is not supported for `gp2` , `st1` , `sc1` , or `standard` volumes.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-iops\n         */\n        readonly iops?: number;\n        /**\n         * The ARN of the symmetric AWS Key Management Service ( AWS KMS ) CMK used for encryption.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-kmskeyid\n         */\n        readonly kmsKeyId?: string;\n        /**\n         * The ID of the snapshot.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-snapshotid\n         */\n        readonly snapshotId?: string;\n        /**\n         * The throughput to provision for a `gp3` volume, with a maximum of 1,000 MiB/s.\n         *\n         * Valid Range: Minimum value of 125. Maximum value of 1000.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-throughput\n         */\n        readonly throughput?: number;\n        /**\n         * The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size. The following are the supported volumes sizes for each volume type:\n         *\n         * - `gp2` and `gp3` : 1-16,384\n         * - `io1` and `io2` : 4-16,384\n         * - `st1` and `sc1` : 125-16,384\n         * - `standard` : 1-1,024\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-volumesize\n         */\n        readonly volumeSize?: number;\n        /**\n         * The volume type. For more information, see [Amazon EBS volume types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html) in the *Amazon Elastic Compute Cloud User Guide* .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-volumetype\n         */\n        readonly volumeType?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `EbsProperty`\n *\n * @param properties - the TypeScript properties of a `EbsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_EbsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('deleteOnTermination', cdk.validateBoolean)(properties.deleteOnTermination));\n    errors.collect(cdk.propertyValidator('encrypted', cdk.validateBoolean)(properties.encrypted));\n    errors.collect(cdk.propertyValidator('iops', cdk.validateNumber)(properties.iops));\n    errors.collect(cdk.propertyValidator('kmsKeyId', cdk.validateString)(properties.kmsKeyId));\n    errors.collect(cdk.propertyValidator('snapshotId', cdk.validateString)(properties.snapshotId));\n    errors.collect(cdk.propertyValidator('throughput', cdk.validateNumber)(properties.throughput));\n    errors.collect(cdk.propertyValidator('volumeSize', cdk.validateNumber)(properties.volumeSize));\n    errors.collect(cdk.propertyValidator('volumeType', cdk.validateString)(properties.volumeType));\n    return errors.wrap('supplied properties not correct for \"EbsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.Ebs` resource\n *\n * @param properties - the TypeScript properties of a `EbsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.Ebs` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateEbsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_EbsPropertyValidator(properties).assertSuccess();\n    return {\n        DeleteOnTermination: cdk.booleanToCloudFormation(properties.deleteOnTermination),\n        Encrypted: cdk.booleanToCloudFormation(properties.encrypted),\n        Iops: cdk.numberToCloudFormation(properties.iops),\n        KmsKeyId: cdk.stringToCloudFormation(properties.kmsKeyId),\n        SnapshotId: cdk.stringToCloudFormation(properties.snapshotId),\n        Throughput: cdk.numberToCloudFormation(properties.throughput),\n        VolumeSize: cdk.numberToCloudFormation(properties.volumeSize),\n        VolumeType: cdk.stringToCloudFormation(properties.volumeType),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateEbsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.EbsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.EbsProperty>();\n    ret.addPropertyResult('deleteOnTermination', 'DeleteOnTermination', properties.DeleteOnTermination != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DeleteOnTermination) : undefined);\n    ret.addPropertyResult('encrypted', 'Encrypted', properties.Encrypted != null ? cfn_parse.FromCloudFormation.getBoolean(properties.Encrypted) : undefined);\n    ret.addPropertyResult('iops', 'Iops', properties.Iops != null ? cfn_parse.FromCloudFormation.getNumber(properties.Iops) : undefined);\n    ret.addPropertyResult('kmsKeyId', 'KmsKeyId', properties.KmsKeyId != null ? cfn_parse.FromCloudFormation.getString(properties.KmsKeyId) : undefined);\n    ret.addPropertyResult('snapshotId', 'SnapshotId', properties.SnapshotId != null ? cfn_parse.FromCloudFormation.getString(properties.SnapshotId) : undefined);\n    ret.addPropertyResult('throughput', 'Throughput', properties.Throughput != null ? cfn_parse.FromCloudFormation.getNumber(properties.Throughput) : undefined);\n    ret.addPropertyResult('volumeSize', 'VolumeSize', properties.VolumeSize != null ? cfn_parse.FromCloudFormation.getNumber(properties.VolumeSize) : undefined);\n    ret.addPropertyResult('volumeType', 'VolumeType', properties.VolumeType != null ? cfn_parse.FromCloudFormation.getString(properties.VolumeType) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * Specifies a specification for an Elastic GPU for an Amazon EC2 launch template.\n     *\n     * `ElasticGpuSpecification` is a property of [AWS::EC2::LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-elasticgpuspecification.html\n     */\n    export interface ElasticGpuSpecificationProperty {\n        /**\n         * The type of Elastic Graphics accelerator. For more information about the values to specify for `Type` , see [Elastic Graphics Basics](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-graphics.html#elastic-graphics-basics) , specifically the Elastic Graphics accelerator column, in the *Amazon Elastic Compute Cloud User Guide for Windows Instances* .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-elasticgpuspecification.html#cfn-ec2-launchtemplate-elasticgpuspecification-type\n         */\n        readonly type?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ElasticGpuSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `ElasticGpuSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_ElasticGpuSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('type', cdk.validateString)(properties.type));\n    return errors.wrap('supplied properties not correct for \"ElasticGpuSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.ElasticGpuSpecification` resource\n *\n * @param properties - the TypeScript properties of a `ElasticGpuSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.ElasticGpuSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateElasticGpuSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_ElasticGpuSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        Type: cdk.stringToCloudFormation(properties.type),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateElasticGpuSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.ElasticGpuSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.ElasticGpuSpecificationProperty>();\n    ret.addPropertyResult('type', 'Type', properties.Type != null ? cfn_parse.FromCloudFormation.getString(properties.Type) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * Indicates whether the instance is enabled for AWS Nitro Enclaves.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-enclaveoptions.html\n     */\n    export interface EnclaveOptionsProperty {\n        /**\n         * If this parameter is set to `true` , the instance is enabled for AWS Nitro Enclaves; otherwise, it is not enabled for AWS Nitro Enclaves.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-enclaveoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-enclaveoptions-enabled\n         */\n        readonly enabled?: boolean | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `EnclaveOptionsProperty`\n *\n * @param properties - the TypeScript properties of a `EnclaveOptionsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_EnclaveOptionsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('enabled', cdk.validateBoolean)(properties.enabled));\n    return errors.wrap('supplied properties not correct for \"EnclaveOptionsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.EnclaveOptions` resource\n *\n * @param properties - the TypeScript properties of a `EnclaveOptionsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.EnclaveOptions` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateEnclaveOptionsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_EnclaveOptionsPropertyValidator(properties).assertSuccess();\n    return {\n        Enabled: cdk.booleanToCloudFormation(properties.enabled),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateEnclaveOptionsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.EnclaveOptionsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.EnclaveOptionsProperty>();\n    ret.addPropertyResult('enabled', 'Enabled', properties.Enabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.Enabled) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * Specifies whether your instance is configured for hibernation. This parameter is valid only if the instance meets the [hibernation prerequisites](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html#hibernating-prerequisites) . For more information, see [Hibernate Your Instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html) in the *Amazon EC2 User Guide* .\n     *\n     * `HibernationOptions` is a property of [AWS::EC2::LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-hibernationoptions.html\n     */\n    export interface HibernationOptionsProperty {\n        /**\n         * If you set this parameter to `true` , the instance is enabled for hibernation.\n         *\n         * Default: `false`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-hibernationoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-hibernationoptions-configured\n         */\n        readonly configured?: boolean | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `HibernationOptionsProperty`\n *\n * @param properties - the TypeScript properties of a `HibernationOptionsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_HibernationOptionsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('configured', cdk.validateBoolean)(properties.configured));\n    return errors.wrap('supplied properties not correct for \"HibernationOptionsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.HibernationOptions` resource\n *\n * @param properties - the TypeScript properties of a `HibernationOptionsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.HibernationOptions` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateHibernationOptionsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_HibernationOptionsPropertyValidator(properties).assertSuccess();\n    return {\n        Configured: cdk.booleanToCloudFormation(properties.configured),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateHibernationOptionsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.HibernationOptionsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.HibernationOptionsProperty>();\n    ret.addPropertyResult('configured', 'Configured', properties.Configured != null ? cfn_parse.FromCloudFormation.getBoolean(properties.Configured) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * Specifies an IAM instance profile, which is a container for an IAM role for your instance. You can use an IAM role to distribute your AWS credentials to your instances.\n     *\n     * If you are creating the launch template for use with an Amazon EC2 Auto Scaling group, you can specify either the name or the ARN of the instance profile, but not both.\n     *\n     * `IamInstanceProfile` is a property of [AWS::EC2::LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile.html\n     */\n    export interface IamInstanceProfileProperty {\n        /**\n         * The Amazon Resource Name (ARN) of the instance profile.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile.html#cfn-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile-arn\n         */\n        readonly arn?: string;\n        /**\n         * The name of the instance profile.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile.html#cfn-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile-name\n         */\n        readonly name?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `IamInstanceProfileProperty`\n *\n * @param properties - the TypeScript properties of a `IamInstanceProfileProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_IamInstanceProfilePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('arn', cdk.validateString)(properties.arn));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    return errors.wrap('supplied properties not correct for \"IamInstanceProfileProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.IamInstanceProfile` resource\n *\n * @param properties - the TypeScript properties of a `IamInstanceProfileProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.IamInstanceProfile` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateIamInstanceProfilePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_IamInstanceProfilePropertyValidator(properties).assertSuccess();\n    return {\n        Arn: cdk.stringToCloudFormation(properties.arn),\n        Name: cdk.stringToCloudFormation(properties.name),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateIamInstanceProfilePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.IamInstanceProfileProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.IamInstanceProfileProperty>();\n    ret.addPropertyResult('arn', 'Arn', properties.Arn != null ? cfn_parse.FromCloudFormation.getString(properties.Arn) : undefined);\n    ret.addPropertyResult('name', 'Name', properties.Name != null ? cfn_parse.FromCloudFormation.getString(properties.Name) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * Specifies the market (purchasing) option for an instance.\n     *\n     * `InstanceMarketOptions` is a property of the [AWS::EC2::LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions.html\n     */\n    export interface InstanceMarketOptionsProperty {\n        /**\n         * The market type.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-markettype\n         */\n        readonly marketType?: string;\n        /**\n         * The options for Spot Instances.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions\n         */\n        readonly spotOptions?: CfnLaunchTemplate.SpotOptionsProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `InstanceMarketOptionsProperty`\n *\n * @param properties - the TypeScript properties of a `InstanceMarketOptionsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_InstanceMarketOptionsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('marketType', cdk.validateString)(properties.marketType));\n    errors.collect(cdk.propertyValidator('spotOptions', CfnLaunchTemplate_SpotOptionsPropertyValidator)(properties.spotOptions));\n    return errors.wrap('supplied properties not correct for \"InstanceMarketOptionsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.InstanceMarketOptions` resource\n *\n * @param properties - the TypeScript properties of a `InstanceMarketOptionsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.InstanceMarketOptions` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateInstanceMarketOptionsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_InstanceMarketOptionsPropertyValidator(properties).assertSuccess();\n    return {\n        MarketType: cdk.stringToCloudFormation(properties.marketType),\n        SpotOptions: cfnLaunchTemplateSpotOptionsPropertyToCloudFormation(properties.spotOptions),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateInstanceMarketOptionsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.InstanceMarketOptionsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.InstanceMarketOptionsProperty>();\n    ret.addPropertyResult('marketType', 'MarketType', properties.MarketType != null ? cfn_parse.FromCloudFormation.getString(properties.MarketType) : undefined);\n    ret.addPropertyResult('spotOptions', 'SpotOptions', properties.SpotOptions != null ? CfnLaunchTemplateSpotOptionsPropertyFromCloudFormation(properties.SpotOptions) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with these attributes.\n     *\n     * When you specify multiple parameters, you get instance types that satisfy all of the specified parameters. If you specify multiple values for a parameter, you get instance types that satisfy any of the specified values.\n     *\n     * > You must specify `VCpuCount` and `MemoryMiB` . All other parameters are optional. Any unspecified optional parameter is set to its default.\n     *\n     * For more information, see [Attribute-based instance type selection for EC2 Fleet](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html) , [Attribute-based instance type selection for Spot Fleet](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-attribute-based-instance-type-selection.html) , and [Spot placement score](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-placement-score.html) in the *Amazon EC2 User Guide* .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html\n     */\n    export interface InstanceRequirementsProperty {\n        /**\n         * The minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips) on an instance.\n         *\n         * To exclude accelerator-enabled instance types, set `Max` to `0` .\n         *\n         * Default: No minimum or maximum limits\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-acceleratorcount\n         */\n        readonly acceleratorCount?: CfnLaunchTemplate.AcceleratorCountProperty | cdk.IResolvable;\n        /**\n         * Indicates whether instance types must have accelerators by specific manufacturers.\n         *\n         * - For instance types with NVIDIA devices, specify `nvidia` .\n         * - For instance types with AMD devices, specify `amd` .\n         * - For instance types with AWS devices, specify `amazon-web-services` .\n         * - For instance types with Xilinx devices, specify `xilinx` .\n         *\n         * Default: Any manufacturer\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-acceleratormanufacturers\n         */\n        readonly acceleratorManufacturers?: string[];\n        /**\n         * The accelerators that must be on the instance type.\n         *\n         * - For instance types with NVIDIA A100 GPUs, specify `a100` .\n         * - For instance types with NVIDIA V100 GPUs, specify `v100` .\n         * - For instance types with NVIDIA K80 GPUs, specify `k80` .\n         * - For instance types with NVIDIA T4 GPUs, specify `t4` .\n         * - For instance types with NVIDIA M60 GPUs, specify `m60` .\n         * - For instance types with AMD Radeon Pro V520 GPUs, specify `radeon-pro-v520` .\n         * - For instance types with Xilinx VU9P FPGAs, specify `vu9p` .\n         *\n         * Default: Any accelerator\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-acceleratornames\n         */\n        readonly acceleratorNames?: string[];\n        /**\n         * The minimum and maximum amount of total accelerator memory, in MiB.\n         *\n         * Default: No minimum or maximum limits\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-acceleratortotalmemorymib\n         */\n        readonly acceleratorTotalMemoryMiB?: CfnLaunchTemplate.AcceleratorTotalMemoryMiBProperty | cdk.IResolvable;\n        /**\n         * The accelerator types that must be on the instance type.\n         *\n         * - For instance types with GPU accelerators, specify `gpu` .\n         * - For instance types with FPGA accelerators, specify `fpga` .\n         * - For instance types with inference accelerators, specify `inference` .\n         *\n         * Default: Any accelerator type\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-acceleratortypes\n         */\n        readonly acceleratorTypes?: string[];\n        /**\n         * Indicates whether bare metal instance types must be included, excluded, or required.\n         *\n         * - To include bare metal instance types, specify `included` .\n         * - To require only bare metal instance types, specify `required` .\n         * - To exclude bare metal instance types, specify `excluded` .\n         *\n         * Default: `excluded`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-baremetal\n         */\n        readonly bareMetal?: string;\n        /**\n         * The minimum and maximum baseline bandwidth to Amazon EBS, in Mbps. For more information, see [Amazon EBS\u2013optimized instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html) in the *Amazon EC2 User Guide* .\n         *\n         * Default: No minimum or maximum limits\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-baselineebsbandwidthmbps\n         */\n        readonly baselineEbsBandwidthMbps?: CfnLaunchTemplate.BaselineEbsBandwidthMbpsProperty | cdk.IResolvable;\n        /**\n         * Indicates whether burstable performance T instance types are included, excluded, or required. For more information, see [Burstable performance instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html) .\n         *\n         * - To include burstable performance instance types, specify `included` .\n         * - To require only burstable performance instance types, specify `required` .\n         * - To exclude burstable performance instance types, specify `excluded` .\n         *\n         * Default: `excluded`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-burstableperformance\n         */\n        readonly burstablePerformance?: string;\n        /**\n         * The CPU manufacturers to include.\n         *\n         * - For instance types with Intel CPUs, specify `intel` .\n         * - For instance types with AMD CPUs, specify `amd` .\n         * - For instance types with AWS CPUs, specify `amazon-web-services` .\n         *\n         * > Don't confuse the CPU manufacturer with the CPU architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you specify in your launch template.\n         *\n         * Default: Any manufacturer\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-cpumanufacturers\n         */\n        readonly cpuManufacturers?: string[];\n        /**\n         * The instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk ( `*` ), to exclude an instance type, size, or generation. The following are examples: `m5.8xlarge` , `c5*.*` , `m5a.*` , `r*` , `*3*` .\n         *\n         * For example, if you specify `c5*` ,Amazon EC2 will exclude the entire C5 instance family, which includes all C5a and C5n instance types. If you specify `m5a.*` , Amazon EC2 will exclude all the M5a instance types, but not the M5n instance types.\n         *\n         * Default: No excluded instance types\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-excludedinstancetypes\n         */\n        readonly excludedInstanceTypes?: string[];\n        /**\n         * Indicates whether current or previous generation instance types are included. The current generation instance types are recommended for use. Current generation instance types are typically the latest two to three generations in each instance family. For more information, see [Instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the *Amazon EC2 User Guide* .\n         *\n         * For current generation instance types, specify `current` .\n         *\n         * For previous generation instance types, specify `previous` .\n         *\n         * Default: Current and previous generation instance types\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-instancegenerations\n         */\n        readonly instanceGenerations?: string[];\n        /**\n         * Indicates whether instance types with instance store volumes are included, excluded, or required. For more information, [Amazon EC2 instance store](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html) in the *Amazon EC2 User Guide* .\n         *\n         * - To include instance types with instance store volumes, specify `included` .\n         * - To require only instance types with instance store volumes, specify `required` .\n         * - To exclude instance types with instance store volumes, specify `excluded` .\n         *\n         * Default: `included`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-localstorage\n         */\n        readonly localStorage?: string;\n        /**\n         * The type of local storage that is required.\n         *\n         * - For instance types with hard disk drive (HDD) storage, specify `hdd` .\n         * - For instance types with solid state drive (SDD) storage, specify `sdd` .\n         *\n         * Default: `hdd` and `sdd`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-localstoragetypes\n         */\n        readonly localStorageTypes?: string[];\n        /**\n         * The minimum and maximum amount of memory per vCPU, in GiB.\n         *\n         * Default: No minimum or maximum limits\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-memorygibpervcpu\n         */\n        readonly memoryGiBPerVCpu?: CfnLaunchTemplate.MemoryGiBPerVCpuProperty | cdk.IResolvable;\n        /**\n         * The minimum and maximum amount of memory, in MiB.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-memorymib\n         */\n        readonly memoryMiB?: CfnLaunchTemplate.MemoryMiBProperty | cdk.IResolvable;\n        /**\n         * The minimum and maximum number of network interfaces.\n         *\n         * Default: No minimum or maximum limits\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-networkinterfacecount\n         */\n        readonly networkInterfaceCount?: CfnLaunchTemplate.NetworkInterfaceCountProperty | cdk.IResolvable;\n        /**\n         * The price protection threshold for On-Demand Instances. This is the maximum you\u2019ll pay for an On-Demand Instance, expressed as a percentage above the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 selects instance types with your attributes, it excludes instance types priced above your threshold.\n         *\n         * The parameter accepts an integer, which Amazon EC2 interprets as a percentage.\n         *\n         * To turn off price protection, specify a high value, such as `999999` .\n         *\n         * This parameter is not supported for [GetSpotPlacementScores](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html) and [GetInstanceTypesFromInstanceRequirements](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceTypesFromInstanceRequirements.html) .\n         *\n         * > If you set `TargetCapacityUnitType` to `vcpu` or `memory-mib` , the price protection threshold is applied based on the per-vCPU or per-memory price instead of the per-instance price.\n         *\n         * Default: `20`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-ondemandmaxpricepercentageoverlowestprice\n         */\n        readonly onDemandMaxPricePercentageOverLowestPrice?: number;\n        /**\n         * Indicates whether instance types must support hibernation for On-Demand Instances.\n         *\n         * This parameter is not supported for [GetSpotPlacementScores](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html) .\n         *\n         * Default: `false`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-requirehibernatesupport\n         */\n        readonly requireHibernateSupport?: boolean | cdk.IResolvable;\n        /**\n         * The price protection threshold for Spot Instances. This is the maximum you\u2019ll pay for a Spot Instance, expressed as a percentage above the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 selects instance types with your attributes, it excludes instance types priced above your threshold.\n         *\n         * The parameter accepts an integer, which Amazon EC2 interprets as a percentage.\n         *\n         * To turn off price protection, specify a high value, such as `999999` .\n         *\n         * This parameter is not supported for [GetSpotPlacementScores](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html) and [GetInstanceTypesFromInstanceRequirements](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceTypesFromInstanceRequirements.html) .\n         *\n         * > If you set `TargetCapacityUnitType` to `vcpu` or `memory-mib` , the price protection threshold is applied based on the per-vCPU or per-memory price instead of the per-instance price.\n         *\n         * Default: `100`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-spotmaxpricepercentageoverlowestprice\n         */\n        readonly spotMaxPricePercentageOverLowestPrice?: number;\n        /**\n         * The minimum and maximum amount of total local storage, in GB.\n         *\n         * Default: No minimum or maximum limits\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-totallocalstoragegb\n         */\n        readonly totalLocalStorageGb?: CfnLaunchTemplate.TotalLocalStorageGBProperty | cdk.IResolvable;\n        /**\n         * The minimum and maximum number of vCPUs.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-vcpucount\n         */\n        readonly vCpuCount?: CfnLaunchTemplate.VCpuCountProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `InstanceRequirementsProperty`\n *\n * @param properties - the TypeScript properties of a `InstanceRequirementsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_InstanceRequirementsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('acceleratorCount', CfnLaunchTemplate_AcceleratorCountPropertyValidator)(properties.acceleratorCount));\n    errors.collect(cdk.propertyValidator('acceleratorManufacturers', cdk.listValidator(cdk.validateString))(properties.acceleratorManufacturers));\n    errors.collect(cdk.propertyValidator('acceleratorNames', cdk.listValidator(cdk.validateString))(properties.acceleratorNames));\n    errors.collect(cdk.propertyValidator('acceleratorTotalMemoryMiB', CfnLaunchTemplate_AcceleratorTotalMemoryMiBPropertyValidator)(properties.acceleratorTotalMemoryMiB));\n    errors.collect(cdk.propertyValidator('acceleratorTypes', cdk.listValidator(cdk.validateString))(properties.acceleratorTypes));\n    errors.collect(cdk.propertyValidator('bareMetal', cdk.validateString)(properties.bareMetal));\n    errors.collect(cdk.propertyValidator('baselineEbsBandwidthMbps', CfnLaunchTemplate_BaselineEbsBandwidthMbpsPropertyValidator)(properties.baselineEbsBandwidthMbps));\n    errors.collect(cdk.propertyValidator('burstablePerformance', cdk.validateString)(properties.burstablePerformance));\n    errors.collect(cdk.propertyValidator('cpuManufacturers', cdk.listValidator(cdk.validateString))(properties.cpuManufacturers));\n    errors.collect(cdk.propertyValidator('excludedInstanceTypes', cdk.listValidator(cdk.validateString))(properties.excludedInstanceTypes));\n    errors.collect(cdk.propertyValidator('instanceGenerations', cdk.listValidator(cdk.validateString))(properties.instanceGenerations));\n    errors.collect(cdk.propertyValidator('localStorage', cdk.validateString)(properties.localStorage));\n    errors.collect(cdk.propertyValidator('localStorageTypes', cdk.listValidator(cdk.validateString))(properties.localStorageTypes));\n    errors.collect(cdk.propertyValidator('memoryGiBPerVCpu', CfnLaunchTemplate_MemoryGiBPerVCpuPropertyValidator)(properties.memoryGiBPerVCpu));\n    errors.collect(cdk.propertyValidator('memoryMiB', CfnLaunchTemplate_MemoryMiBPropertyValidator)(properties.memoryMiB));\n    errors.collect(cdk.propertyValidator('networkInterfaceCount', CfnLaunchTemplate_NetworkInterfaceCountPropertyValidator)(properties.networkInterfaceCount));\n    errors.collect(cdk.propertyValidator('onDemandMaxPricePercentageOverLowestPrice', cdk.validateNumber)(properties.onDemandMaxPricePercentageOverLowestPrice));\n    errors.collect(cdk.propertyValidator('requireHibernateSupport', cdk.validateBoolean)(properties.requireHibernateSupport));\n    errors.collect(cdk.propertyValidator('spotMaxPricePercentageOverLowestPrice', cdk.validateNumber)(properties.spotMaxPricePercentageOverLowestPrice));\n    errors.collect(cdk.propertyValidator('totalLocalStorageGb', CfnLaunchTemplate_TotalLocalStorageGBPropertyValidator)(properties.totalLocalStorageGb));\n    errors.collect(cdk.propertyValidator('vCpuCount', CfnLaunchTemplate_VCpuCountPropertyValidator)(properties.vCpuCount));\n    return errors.wrap('supplied properties not correct for \"InstanceRequirementsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.InstanceRequirements` resource\n *\n * @param properties - the TypeScript properties of a `InstanceRequirementsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.InstanceRequirements` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateInstanceRequirementsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_InstanceRequirementsPropertyValidator(properties).assertSuccess();\n    return {\n        AcceleratorCount: cfnLaunchTemplateAcceleratorCountPropertyToCloudFormation(properties.acceleratorCount),\n        AcceleratorManufacturers: cdk.listMapper(cdk.stringToCloudFormation)(properties.acceleratorManufacturers),\n        AcceleratorNames: cdk.listMapper(cdk.stringToCloudFormation)(properties.acceleratorNames),\n        AcceleratorTotalMemoryMiB: cfnLaunchTemplateAcceleratorTotalMemoryMiBPropertyToCloudFormation(properties.acceleratorTotalMemoryMiB),\n        AcceleratorTypes: cdk.listMapper(cdk.stringToCloudFormation)(properties.acceleratorTypes),\n        BareMetal: cdk.stringToCloudFormation(properties.bareMetal),\n        BaselineEbsBandwidthMbps: cfnLaunchTemplateBaselineEbsBandwidthMbpsPropertyToCloudFormation(properties.baselineEbsBandwidthMbps),\n        BurstablePerformance: cdk.stringToCloudFormation(properties.burstablePerformance),\n        CpuManufacturers: cdk.listMapper(cdk.stringToCloudFormation)(properties.cpuManufacturers),\n        ExcludedInstanceTypes: cdk.listMapper(cdk.stringToCloudFormation)(properties.excludedInstanceTypes),\n        InstanceGenerations: cdk.listMapper(cdk.stringToCloudFormation)(properties.instanceGenerations),\n        LocalStorage: cdk.stringToCloudFormation(properties.localStorage),\n        LocalStorageTypes: cdk.listMapper(cdk.stringToCloudFormation)(properties.localStorageTypes),\n        MemoryGiBPerVCpu: cfnLaunchTemplateMemoryGiBPerVCpuPropertyToCloudFormation(properties.memoryGiBPerVCpu),\n        MemoryMiB: cfnLaunchTemplateMemoryMiBPropertyToCloudFormation(properties.memoryMiB),\n        NetworkInterfaceCount: cfnLaunchTemplateNetworkInterfaceCountPropertyToCloudFormation(properties.networkInterfaceCount),\n        OnDemandMaxPricePercentageOverLowestPrice: cdk.numberToCloudFormation(properties.onDemandMaxPricePercentageOverLowestPrice),\n        RequireHibernateSupport: cdk.booleanToCloudFormation(properties.requireHibernateSupport),\n        SpotMaxPricePercentageOverLowestPrice: cdk.numberToCloudFormation(properties.spotMaxPricePercentageOverLowestPrice),\n        TotalLocalStorageGB: cfnLaunchTemplateTotalLocalStorageGBPropertyToCloudFormation(properties.totalLocalStorageGb),\n        VCpuCount: cfnLaunchTemplateVCpuCountPropertyToCloudFormation(properties.vCpuCount),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateInstanceRequirementsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.InstanceRequirementsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.InstanceRequirementsProperty>();\n    ret.addPropertyResult('acceleratorCount', 'AcceleratorCount', properties.AcceleratorCount != null ? CfnLaunchTemplateAcceleratorCountPropertyFromCloudFormation(properties.AcceleratorCount) : undefined);\n    ret.addPropertyResult('acceleratorManufacturers', 'AcceleratorManufacturers', properties.AcceleratorManufacturers != null ? cfn_parse.FromCloudFormation.getStringArray(properties.AcceleratorManufacturers) : undefined);\n    ret.addPropertyResult('acceleratorNames', 'AcceleratorNames', properties.AcceleratorNames != null ? cfn_parse.FromCloudFormation.getStringArray(properties.AcceleratorNames) : undefined);\n    ret.addPropertyResult('acceleratorTotalMemoryMiB', 'AcceleratorTotalMemoryMiB', properties.AcceleratorTotalMemoryMiB != null ? CfnLaunchTemplateAcceleratorTotalMemoryMiBPropertyFromCloudFormation(properties.AcceleratorTotalMemoryMiB) : undefined);\n    ret.addPropertyResult('acceleratorTypes', 'AcceleratorTypes', properties.AcceleratorTypes != null ? cfn_parse.FromCloudFormation.getStringArray(properties.AcceleratorTypes) : undefined);\n    ret.addPropertyResult('bareMetal', 'BareMetal', properties.BareMetal != null ? cfn_parse.FromCloudFormation.getString(properties.BareMetal) : undefined);\n    ret.addPropertyResult('baselineEbsBandwidthMbps', 'BaselineEbsBandwidthMbps', properties.BaselineEbsBandwidthMbps != null ? CfnLaunchTemplateBaselineEbsBandwidthMbpsPropertyFromCloudFormation(properties.BaselineEbsBandwidthMbps) : undefined);\n    ret.addPropertyResult('burstablePerformance', 'BurstablePerformance', properties.BurstablePerformance != null ? cfn_parse.FromCloudFormation.getString(properties.BurstablePerformance) : undefined);\n    ret.addPropertyResult('cpuManufacturers', 'CpuManufacturers', properties.CpuManufacturers != null ? cfn_parse.FromCloudFormation.getStringArray(properties.CpuManufacturers) : undefined);\n    ret.addPropertyResult('excludedInstanceTypes', 'ExcludedInstanceTypes', properties.ExcludedInstanceTypes != null ? cfn_parse.FromCloudFormation.getStringArray(properties.ExcludedInstanceTypes) : undefined);\n    ret.addPropertyResult('instanceGenerations', 'InstanceGenerations', properties.InstanceGenerations != null ? cfn_parse.FromCloudFormation.getStringArray(properties.InstanceGenerations) : undefined);\n    ret.addPropertyResult('localStorage', 'LocalStorage', properties.LocalStorage != null ? cfn_parse.FromCloudFormation.getString(properties.LocalStorage) : undefined);\n    ret.addPropertyResult('localStorageTypes', 'LocalStorageTypes', properties.LocalStorageTypes != null ? cfn_parse.FromCloudFormation.getStringArray(properties.LocalStorageTypes) : undefined);\n    ret.addPropertyResult('memoryGiBPerVCpu', 'MemoryGiBPerVCpu', properties.MemoryGiBPerVCpu != null ? CfnLaunchTemplateMemoryGiBPerVCpuPropertyFromCloudFormation(properties.MemoryGiBPerVCpu) : undefined);\n    ret.addPropertyResult('memoryMiB', 'MemoryMiB', properties.MemoryMiB != null ? CfnLaunchTemplateMemoryMiBPropertyFromCloudFormation(properties.MemoryMiB) : undefined);\n    ret.addPropertyResult('networkInterfaceCount', 'NetworkInterfaceCount', properties.NetworkInterfaceCount != null ? CfnLaunchTemplateNetworkInterfaceCountPropertyFromCloudFormation(properties.NetworkInterfaceCount) : undefined);\n    ret.addPropertyResult('onDemandMaxPricePercentageOverLowestPrice', 'OnDemandMaxPricePercentageOverLowestPrice', properties.OnDemandMaxPricePercentageOverLowestPrice != null ? cfn_parse.FromCloudFormation.getNumber(properties.OnDemandMaxPricePercentageOverLowestPrice) : undefined);\n    ret.addPropertyResult('requireHibernateSupport', 'RequireHibernateSupport', properties.RequireHibernateSupport != null ? cfn_parse.FromCloudFormation.getBoolean(properties.RequireHibernateSupport) : undefined);\n    ret.addPropertyResult('spotMaxPricePercentageOverLowestPrice', 'SpotMaxPricePercentageOverLowestPrice', properties.SpotMaxPricePercentageOverLowestPrice != null ? cfn_parse.FromCloudFormation.getNumber(properties.SpotMaxPricePercentageOverLowestPrice) : undefined);\n    ret.addPropertyResult('totalLocalStorageGb', 'TotalLocalStorageGB', properties.TotalLocalStorageGB != null ? CfnLaunchTemplateTotalLocalStorageGBPropertyFromCloudFormation(properties.TotalLocalStorageGB) : undefined);\n    ret.addPropertyResult('vCpuCount', 'VCpuCount', properties.VCpuCount != null ? CfnLaunchTemplateVCpuCountPropertyFromCloudFormation(properties.VCpuCount) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * Describes an IPv4 prefix.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ipv4prefixspecification.html\n     */\n    export interface Ipv4PrefixSpecificationProperty {\n        /**\n         * The IPv4 prefix. For information, see [Assigning prefixes to Amazon EC2 network interfaces](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-prefix-eni.html) in the *Amazon Elastic Compute Cloud User Guide* .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ipv4prefixspecification.html#cfn-ec2-launchtemplate-ipv4prefixspecification-ipv4prefix\n         */\n        readonly ipv4Prefix?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `Ipv4PrefixSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `Ipv4PrefixSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_Ipv4PrefixSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('ipv4Prefix', cdk.validateString)(properties.ipv4Prefix));\n    return errors.wrap('supplied properties not correct for \"Ipv4PrefixSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.Ipv4PrefixSpecification` resource\n *\n * @param properties - the TypeScript properties of a `Ipv4PrefixSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.Ipv4PrefixSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateIpv4PrefixSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_Ipv4PrefixSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        Ipv4Prefix: cdk.stringToCloudFormation(properties.ipv4Prefix),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateIpv4PrefixSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.Ipv4PrefixSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.Ipv4PrefixSpecificationProperty>();\n    ret.addPropertyResult('ipv4Prefix', 'Ipv4Prefix', properties.Ipv4Prefix != null ? cfn_parse.FromCloudFormation.getString(properties.Ipv4Prefix) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * Specifies an IPv6 address in an Amazon EC2 launch template.\n     *\n     * `Ipv6Add` is a property of [AWS::EC2::LaunchTemplate NetworkInterface](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html) .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ipv6add.html\n     */\n    export interface Ipv6AddProperty {\n        /**\n         * One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. You can't use this option if you're specifying a number of IPv6 addresses.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ipv6add.html#cfn-ec2-launchtemplate-ipv6add-ipv6address\n         */\n        readonly ipv6Address?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `Ipv6AddProperty`\n *\n * @param properties - the TypeScript properties of a `Ipv6AddProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_Ipv6AddPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('ipv6Address', cdk.validateString)(properties.ipv6Address));\n    return errors.wrap('supplied properties not correct for \"Ipv6AddProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.Ipv6Add` resource\n *\n * @param properties - the TypeScript properties of a `Ipv6AddProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.Ipv6Add` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateIpv6AddPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_Ipv6AddPropertyValidator(properties).assertSuccess();\n    return {\n        Ipv6Address: cdk.stringToCloudFormation(properties.ipv6Address),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateIpv6AddPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.Ipv6AddProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.Ipv6AddProperty>();\n    ret.addPropertyResult('ipv6Address', 'Ipv6Address', properties.Ipv6Address != null ? cfn_parse.FromCloudFormation.getString(properties.Ipv6Address) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * Describes the IPv6 prefix.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ipv6prefixspecification.html\n     */\n    export interface Ipv6PrefixSpecificationProperty {\n        /**\n         * The IPv6 prefix.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ipv6prefixspecification.html#cfn-ec2-launchtemplate-ipv6prefixspecification-ipv6prefix\n         */\n        readonly ipv6Prefix?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `Ipv6PrefixSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `Ipv6PrefixSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_Ipv6PrefixSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('ipv6Prefix', cdk.validateString)(properties.ipv6Prefix));\n    return errors.wrap('supplied properties not correct for \"Ipv6PrefixSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.Ipv6PrefixSpecification` resource\n *\n * @param properties - the TypeScript properties of a `Ipv6PrefixSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.Ipv6PrefixSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateIpv6PrefixSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_Ipv6PrefixSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        Ipv6Prefix: cdk.stringToCloudFormation(properties.ipv6Prefix),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateIpv6PrefixSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.Ipv6PrefixSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.Ipv6PrefixSpecificationProperty>();\n    ret.addPropertyResult('ipv6Prefix', 'Ipv6Prefix', properties.Ipv6Prefix != null ? cfn_parse.FromCloudFormation.getString(properties.Ipv6Prefix) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * The information to include in the launch template.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html\n     */\n    export interface LaunchTemplateDataProperty {\n        /**\n         * The block device mapping.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-blockdevicemappings\n         */\n        readonly blockDeviceMappings?: Array<CfnLaunchTemplate.BlockDeviceMappingProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * The Capacity Reservation targeting option. If you do not specify this parameter, the instance's Capacity Reservation preference defaults to `open` , which enables it to run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-capacityreservationspecification\n         */\n        readonly capacityReservationSpecification?: CfnLaunchTemplate.CapacityReservationSpecificationProperty | cdk.IResolvable;\n        /**\n         * The CPU options for the instance. For more information, see [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) in the *Amazon Elastic Compute Cloud User Guide* .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-cpuoptions\n         */\n        readonly cpuOptions?: CfnLaunchTemplate.CpuOptionsProperty | cdk.IResolvable;\n        /**\n         * The credit option for CPU usage of the instance. Valid for T2, T3, or T3a instances only.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-creditspecification\n         */\n        readonly creditSpecification?: CfnLaunchTemplate.CreditSpecificationProperty | cdk.IResolvable;\n        /**\n         * If you set this parameter to `true` , you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. To change this attribute after launch, use [ModifyInstanceAttribute](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceAttribute.html) . Alternatively, if you set `InstanceInitiatedShutdownBehavior` to `terminate` , you can terminate the instance by running the shutdown command from the instance.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-disableapitermination\n         */\n        readonly disableApiTermination?: boolean | cdk.IResolvable;\n        /**\n         * Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal Amazon EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-ebsoptimized\n         */\n        readonly ebsOptimized?: boolean | cdk.IResolvable;\n        /**\n         * An elastic GPU to associate with the instance.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-elasticgpuspecifications\n         */\n        readonly elasticGpuSpecifications?: Array<CfnLaunchTemplate.ElasticGpuSpecificationProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * The elastic inference accelerator for the instance.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-elasticinferenceaccelerators\n         */\n        readonly elasticInferenceAccelerators?: Array<CfnLaunchTemplate.LaunchTemplateElasticInferenceAcceleratorProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * Indicates whether the instance is enabled for AWS Nitro Enclaves. For more information, see [What is AWS Nitro Enclaves?](https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave.html) in the *AWS Nitro Enclaves User Guide* .\n         *\n         * You can't enable AWS Nitro Enclaves and hibernation on the same instance.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-enclaveoptions\n         */\n        readonly enclaveOptions?: CfnLaunchTemplate.EnclaveOptionsProperty | cdk.IResolvable;\n        /**\n         * Indicates whether an instance is enabled for hibernation. This parameter is valid only if the instance meets the [hibernation prerequisites](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html#hibernating-prerequisites) . For more information, see [Hibernate your instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html) in the *Amazon Elastic Compute Cloud User Guide* .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-hibernationoptions\n         */\n        readonly hibernationOptions?: CfnLaunchTemplate.HibernationOptionsProperty | cdk.IResolvable;\n        /**\n         * The name or Amazon Resource Name (ARN) of an IAM instance profile.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile\n         */\n        readonly iamInstanceProfile?: CfnLaunchTemplate.IamInstanceProfileProperty | cdk.IResolvable;\n        /**\n         * The ID of the AMI.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-imageid\n         */\n        readonly imageId?: string;\n        /**\n         * Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).\n         *\n         * Default: `stop`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-instanceinitiatedshutdownbehavior\n         */\n        readonly instanceInitiatedShutdownBehavior?: string;\n        /**\n         * The market (purchasing) option for the instances.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions\n         */\n        readonly instanceMarketOptions?: CfnLaunchTemplate.InstanceMarketOptionsProperty | cdk.IResolvable;\n        /**\n         * `CfnLaunchTemplate.LaunchTemplateDataProperty.InstanceRequirements`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements\n         */\n        readonly instanceRequirements?: CfnLaunchTemplate.InstanceRequirementsProperty | cdk.IResolvable;\n        /**\n         * The instance type. For more information, see [Instance Types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the *Amazon Elastic Compute Cloud User Guide* .\n         *\n         * If you specify `InstanceTypes` , you can't specify `InstanceRequirements` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-instancetype\n         */\n        readonly instanceType?: string;\n        /**\n         * The ID of the kernel.\n         *\n         * We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see [User Provided Kernels](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html) in the *Amazon EC2 User Guide* .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-kernelid\n         */\n        readonly kernelId?: string;\n        /**\n         * The name of the key pair. You can create a key pair using [CreateKeyPair](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateKeyPair.html) or [ImportKeyPair](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportKeyPair.html) .\n         *\n         * > If you do not specify a key pair, you can't connect to the instance unless you choose an AMI that is configured to allow users another way to log in.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-keyname\n         */\n        readonly keyName?: string;\n        /**\n         * The license configurations.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-licensespecifications\n         */\n        readonly licenseSpecifications?: Array<CfnLaunchTemplate.LicenseSpecificationProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * The metadata options for the instance. For more information, see [Instance Metadata and User Data](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html) in the *Amazon Elastic Compute Cloud User Guide* .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-metadataoptions\n         */\n        readonly metadataOptions?: CfnLaunchTemplate.MetadataOptionsProperty | cdk.IResolvable;\n        /**\n         * The monitoring for the instance.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-monitoring\n         */\n        readonly monitoring?: CfnLaunchTemplate.MonitoringProperty | cdk.IResolvable;\n        /**\n         * One or more network interfaces. If you specify a network interface, you must specify any security groups and subnets as part of the network interface.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-networkinterfaces\n         */\n        readonly networkInterfaces?: Array<CfnLaunchTemplate.NetworkInterfaceProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * The placement for the instance.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-placement\n         */\n        readonly placement?: CfnLaunchTemplate.PlacementProperty | cdk.IResolvable;\n        /**\n         * The options for the instance hostname. The default values are inherited from the subnet.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-privatednsnameoptions\n         */\n        readonly privateDnsNameOptions?: CfnLaunchTemplate.PrivateDnsNameOptionsProperty | cdk.IResolvable;\n        /**\n         * The ID of the RAM disk.\n         *\n         * > We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see [User Provided Kernels](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html) in the *Amazon Elastic Compute Cloud User Guide* .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-ramdiskid\n         */\n        readonly ramDiskId?: string;\n        /**\n         * One or more security group IDs. You can create a security group using [CreateSecurityGroup](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html) . You cannot specify both a security group ID and security name in the same request.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-securitygroupids\n         */\n        readonly securityGroupIds?: string[];\n        /**\n         * [EC2-Classic, default VPC] One or more security group names. For a nondefault VPC, you must use security group IDs instead. You cannot specify both a security group ID and security name in the same request.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-securitygroups\n         */\n        readonly securityGroups?: string[];\n        /**\n         * The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-tagspecifications\n         */\n        readonly tagSpecifications?: Array<CfnLaunchTemplate.TagSpecificationProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * The user data to make available to the instance. You must provide base64-encoded text. User data is limited to 16 KB. For more information, see [Running Commands on Your Linux Instance at Launch](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html) (Linux) or [Adding User Data](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-instance-metadata.html#instancedata-add-user-data) (Windows).\n         *\n         * If you are creating the launch template for use with AWS Batch , the user data must be provided in the [MIME multi-part archive format](https://docs.aws.amazon.com/https://cloudinit.readthedocs.io/en/latest/topics/format.html#mime-multi-part-archive) . For more information, see [Amazon EC2 user data in launch templates](https://docs.aws.amazon.com/batch/latest/userguide/launch-templates.html) in the *AWS Batch User Guide* .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-userdata\n         */\n        readonly userData?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `LaunchTemplateDataProperty`\n *\n * @param properties - the TypeScript properties of a `LaunchTemplateDataProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_LaunchTemplateDataPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('blockDeviceMappings', cdk.listValidator(CfnLaunchTemplate_BlockDeviceMappingPropertyValidator))(properties.blockDeviceMappings));\n    errors.collect(cdk.propertyValidator('capacityReservationSpecification', CfnLaunchTemplate_CapacityReservationSpecificationPropertyValidator)(properties.capacityReservationSpecification));\n    errors.collect(cdk.propertyValidator('cpuOptions', CfnLaunchTemplate_CpuOptionsPropertyValidator)(properties.cpuOptions));\n    errors.collect(cdk.propertyValidator('creditSpecification', CfnLaunchTemplate_CreditSpecificationPropertyValidator)(properties.creditSpecification));\n    errors.collect(cdk.propertyValidator('disableApiTermination', cdk.validateBoolean)(properties.disableApiTermination));\n    errors.collect(cdk.propertyValidator('ebsOptimized', cdk.validateBoolean)(properties.ebsOptimized));\n    errors.collect(cdk.propertyValidator('elasticGpuSpecifications', cdk.listValidator(CfnLaunchTemplate_ElasticGpuSpecificationPropertyValidator))(properties.elasticGpuSpecifications));\n    errors.collect(cdk.propertyValidator('elasticInferenceAccelerators', cdk.listValidator(CfnLaunchTemplate_LaunchTemplateElasticInferenceAcceleratorPropertyValidator))(properties.elasticInferenceAccelerators));\n    errors.collect(cdk.propertyValidator('enclaveOptions', CfnLaunchTemplate_EnclaveOptionsPropertyValidator)(properties.enclaveOptions));\n    errors.collect(cdk.propertyValidator('hibernationOptions', CfnLaunchTemplate_HibernationOptionsPropertyValidator)(properties.hibernationOptions));\n    errors.collect(cdk.propertyValidator('iamInstanceProfile', CfnLaunchTemplate_IamInstanceProfilePropertyValidator)(properties.iamInstanceProfile));\n    errors.collect(cdk.propertyValidator('imageId', cdk.validateString)(properties.imageId));\n    errors.collect(cdk.propertyValidator('instanceInitiatedShutdownBehavior', cdk.validateString)(properties.instanceInitiatedShutdownBehavior));\n    errors.collect(cdk.propertyValidator('instanceMarketOptions', CfnLaunchTemplate_InstanceMarketOptionsPropertyValidator)(properties.instanceMarketOptions));\n    errors.collect(cdk.propertyValidator('instanceRequirements', CfnLaunchTemplate_InstanceRequirementsPropertyValidator)(properties.instanceRequirements));\n    errors.collect(cdk.propertyValidator('instanceType', cdk.validateString)(properties.instanceType));\n    errors.collect(cdk.propertyValidator('kernelId', cdk.validateString)(properties.kernelId));\n    errors.collect(cdk.propertyValidator('keyName', cdk.validateString)(properties.keyName));\n    errors.collect(cdk.propertyValidator('licenseSpecifications', cdk.listValidator(CfnLaunchTemplate_LicenseSpecificationPropertyValidator))(properties.licenseSpecifications));\n    errors.collect(cdk.propertyValidator('metadataOptions', CfnLaunchTemplate_MetadataOptionsPropertyValidator)(properties.metadataOptions));\n    errors.collect(cdk.propertyValidator('monitoring', CfnLaunchTemplate_MonitoringPropertyValidator)(properties.monitoring));\n    errors.collect(cdk.propertyValidator('networkInterfaces', cdk.listValidator(CfnLaunchTemplate_NetworkInterfacePropertyValidator))(properties.networkInterfaces));\n    errors.collect(cdk.propertyValidator('placement', CfnLaunchTemplate_PlacementPropertyValidator)(properties.placement));\n    errors.collect(cdk.propertyValidator('privateDnsNameOptions', CfnLaunchTemplate_PrivateDnsNameOptionsPropertyValidator)(properties.privateDnsNameOptions));\n    errors.collect(cdk.propertyValidator('ramDiskId', cdk.validateString)(properties.ramDiskId));\n    errors.collect(cdk.propertyValidator('securityGroupIds', cdk.listValidator(cdk.validateString))(properties.securityGroupIds));\n    errors.collect(cdk.propertyValidator('securityGroups', cdk.listValidator(cdk.validateString))(properties.securityGroups));\n    errors.collect(cdk.propertyValidator('tagSpecifications', cdk.listValidator(CfnLaunchTemplate_TagSpecificationPropertyValidator))(properties.tagSpecifications));\n    errors.collect(cdk.propertyValidator('userData', cdk.validateString)(properties.userData));\n    return errors.wrap('supplied properties not correct for \"LaunchTemplateDataProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.LaunchTemplateData` resource\n *\n * @param properties - the TypeScript properties of a `LaunchTemplateDataProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.LaunchTemplateData` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateLaunchTemplateDataPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_LaunchTemplateDataPropertyValidator(properties).assertSuccess();\n    return {\n        BlockDeviceMappings: cdk.listMapper(cfnLaunchTemplateBlockDeviceMappingPropertyToCloudFormation)(properties.blockDeviceMappings),\n        CapacityReservationSpecification: cfnLaunchTemplateCapacityReservationSpecificationPropertyToCloudFormation(properties.capacityReservationSpecification),\n        CpuOptions: cfnLaunchTemplateCpuOptionsPropertyToCloudFormation(properties.cpuOptions),\n        CreditSpecification: cfnLaunchTemplateCreditSpecificationPropertyToCloudFormation(properties.creditSpecification),\n        DisableApiTermination: cdk.booleanToCloudFormation(properties.disableApiTermination),\n        EbsOptimized: cdk.booleanToCloudFormation(properties.ebsOptimized),\n        ElasticGpuSpecifications: cdk.listMapper(cfnLaunchTemplateElasticGpuSpecificationPropertyToCloudFormation)(properties.elasticGpuSpecifications),\n        ElasticInferenceAccelerators: cdk.listMapper(cfnLaunchTemplateLaunchTemplateElasticInferenceAcceleratorPropertyToCloudFormation)(properties.elasticInferenceAccelerators),\n        EnclaveOptions: cfnLaunchTemplateEnclaveOptionsPropertyToCloudFormation(properties.enclaveOptions),\n        HibernationOptions: cfnLaunchTemplateHibernationOptionsPropertyToCloudFormation(properties.hibernationOptions),\n        IamInstanceProfile: cfnLaunchTemplateIamInstanceProfilePropertyToCloudFormation(properties.iamInstanceProfile),\n        ImageId: cdk.stringToCloudFormation(properties.imageId),\n        InstanceInitiatedShutdownBehavior: cdk.stringToCloudFormation(properties.instanceInitiatedShutdownBehavior),\n        InstanceMarketOptions: cfnLaunchTemplateInstanceMarketOptionsPropertyToCloudFormation(properties.instanceMarketOptions),\n        InstanceRequirements: cfnLaunchTemplateInstanceRequirementsPropertyToCloudFormation(properties.instanceRequirements),\n        InstanceType: cdk.stringToCloudFormation(properties.instanceType),\n        KernelId: cdk.stringToCloudFormation(properties.kernelId),\n        KeyName: cdk.stringToCloudFormation(properties.keyName),\n        LicenseSpecifications: cdk.listMapper(cfnLaunchTemplateLicenseSpecificationPropertyToCloudFormation)(properties.licenseSpecifications),\n        MetadataOptions: cfnLaunchTemplateMetadataOptionsPropertyToCloudFormation(properties.metadataOptions),\n        Monitoring: cfnLaunchTemplateMonitoringPropertyToCloudFormation(properties.monitoring),\n        NetworkInterfaces: cdk.listMapper(cfnLaunchTemplateNetworkInterfacePropertyToCloudFormation)(properties.networkInterfaces),\n        Placement: cfnLaunchTemplatePlacementPropertyToCloudFormation(properties.placement),\n        PrivateDnsNameOptions: cfnLaunchTemplatePrivateDnsNameOptionsPropertyToCloudFormation(properties.privateDnsNameOptions),\n        RamDiskId: cdk.stringToCloudFormation(properties.ramDiskId),\n        SecurityGroupIds: cdk.listMapper(cdk.stringToCloudFormation)(properties.securityGroupIds),\n        SecurityGroups: cdk.listMapper(cdk.stringToCloudFormation)(properties.securityGroups),\n        TagSpecifications: cdk.listMapper(cfnLaunchTemplateTagSpecificationPropertyToCloudFormation)(properties.tagSpecifications),\n        UserData: cdk.stringToCloudFormation(properties.userData),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateLaunchTemplateDataPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.LaunchTemplateDataProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.LaunchTemplateDataProperty>();\n    ret.addPropertyResult('blockDeviceMappings', 'BlockDeviceMappings', properties.BlockDeviceMappings != null ? cfn_parse.FromCloudFormation.getArray(CfnLaunchTemplateBlockDeviceMappingPropertyFromCloudFormation)(properties.BlockDeviceMappings) : undefined);\n    ret.addPropertyResult('capacityReservationSpecification', 'CapacityReservationSpecification', properties.CapacityReservationSpecification != null ? CfnLaunchTemplateCapacityReservationSpecificationPropertyFromCloudFormation(properties.CapacityReservationSpecification) : undefined);\n    ret.addPropertyResult('cpuOptions', 'CpuOptions', properties.CpuOptions != null ? CfnLaunchTemplateCpuOptionsPropertyFromCloudFormation(properties.CpuOptions) : undefined);\n    ret.addPropertyResult('creditSpecification', 'CreditSpecification', properties.CreditSpecification != null ? CfnLaunchTemplateCreditSpecificationPropertyFromCloudFormation(properties.CreditSpecification) : undefined);\n    ret.addPropertyResult('disableApiTermination', 'DisableApiTermination', properties.DisableApiTermination != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DisableApiTermination) : undefined);\n    ret.addPropertyResult('ebsOptimized', 'EbsOptimized', properties.EbsOptimized != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EbsOptimized) : undefined);\n    ret.addPropertyResult('elasticGpuSpecifications', 'ElasticGpuSpecifications', properties.ElasticGpuSpecifications != null ? cfn_parse.FromCloudFormation.getArray(CfnLaunchTemplateElasticGpuSpecificationPropertyFromCloudFormation)(properties.ElasticGpuSpecifications) : undefined);\n    ret.addPropertyResult('elasticInferenceAccelerators', 'ElasticInferenceAccelerators', properties.ElasticInferenceAccelerators != null ? cfn_parse.FromCloudFormation.getArray(CfnLaunchTemplateLaunchTemplateElasticInferenceAcceleratorPropertyFromCloudFormation)(properties.ElasticInferenceAccelerators) : undefined);\n    ret.addPropertyResult('enclaveOptions', 'EnclaveOptions', properties.EnclaveOptions != null ? CfnLaunchTemplateEnclaveOptionsPropertyFromCloudFormation(properties.EnclaveOptions) : undefined);\n    ret.addPropertyResult('hibernationOptions', 'HibernationOptions', properties.HibernationOptions != null ? CfnLaunchTemplateHibernationOptionsPropertyFromCloudFormation(properties.HibernationOptions) : undefined);\n    ret.addPropertyResult('iamInstanceProfile', 'IamInstanceProfile', properties.IamInstanceProfile != null ? CfnLaunchTemplateIamInstanceProfilePropertyFromCloudFormation(properties.IamInstanceProfile) : undefined);\n    ret.addPropertyResult('imageId', 'ImageId', properties.ImageId != null ? cfn_parse.FromCloudFormation.getString(properties.ImageId) : undefined);\n    ret.addPropertyResult('instanceInitiatedShutdownBehavior', 'InstanceInitiatedShutdownBehavior', properties.InstanceInitiatedShutdownBehavior != null ? cfn_parse.FromCloudFormation.getString(properties.InstanceInitiatedShutdownBehavior) : undefined);\n    ret.addPropertyResult('instanceMarketOptions', 'InstanceMarketOptions', properties.InstanceMarketOptions != null ? CfnLaunchTemplateInstanceMarketOptionsPropertyFromCloudFormation(properties.InstanceMarketOptions) : undefined);\n    ret.addPropertyResult('instanceRequirements', 'InstanceRequirements', properties.InstanceRequirements != null ? CfnLaunchTemplateInstanceRequirementsPropertyFromCloudFormation(properties.InstanceRequirements) : undefined);\n    ret.addPropertyResult('instanceType', 'InstanceType', properties.InstanceType != null ? cfn_parse.FromCloudFormation.getString(properties.InstanceType) : undefined);\n    ret.addPropertyResult('kernelId', 'KernelId', properties.KernelId != null ? cfn_parse.FromCloudFormation.getString(properties.KernelId) : undefined);\n    ret.addPropertyResult('keyName', 'KeyName', properties.KeyName != null ? cfn_parse.FromCloudFormation.getString(properties.KeyName) : undefined);\n    ret.addPropertyResult('licenseSpecifications', 'LicenseSpecifications', properties.LicenseSpecifications != null ? cfn_parse.FromCloudFormation.getArray(CfnLaunchTemplateLicenseSpecificationPropertyFromCloudFormation)(properties.LicenseSpecifications) : undefined);\n    ret.addPropertyResult('metadataOptions', 'MetadataOptions', properties.MetadataOptions != null ? CfnLaunchTemplateMetadataOptionsPropertyFromCloudFormation(properties.MetadataOptions) : undefined);\n    ret.addPropertyResult('monitoring', 'Monitoring', properties.Monitoring != null ? CfnLaunchTemplateMonitoringPropertyFromCloudFormation(properties.Monitoring) : undefined);\n    ret.addPropertyResult('networkInterfaces', 'NetworkInterfaces', properties.NetworkInterfaces != null ? cfn_parse.FromCloudFormation.getArray(CfnLaunchTemplateNetworkInterfacePropertyFromCloudFormation)(properties.NetworkInterfaces) : undefined);\n    ret.addPropertyResult('placement', 'Placement', properties.Placement != null ? CfnLaunchTemplatePlacementPropertyFromCloudFormation(properties.Placement) : undefined);\n    ret.addPropertyResult('privateDnsNameOptions', 'PrivateDnsNameOptions', properties.PrivateDnsNameOptions != null ? CfnLaunchTemplatePrivateDnsNameOptionsPropertyFromCloudFormation(properties.PrivateDnsNameOptions) : undefined);\n    ret.addPropertyResult('ramDiskId', 'RamDiskId', properties.RamDiskId != null ? cfn_parse.FromCloudFormation.getString(properties.RamDiskId) : undefined);\n    ret.addPropertyResult('securityGroupIds', 'SecurityGroupIds', properties.SecurityGroupIds != null ? cfn_parse.FromCloudFormation.getStringArray(properties.SecurityGroupIds) : undefined);\n    ret.addPropertyResult('securityGroups', 'SecurityGroups', properties.SecurityGroups != null ? cfn_parse.FromCloudFormation.getStringArray(properties.SecurityGroups) : undefined);\n    ret.addPropertyResult('tagSpecifications', 'TagSpecifications', properties.TagSpecifications != null ? cfn_parse.FromCloudFormation.getArray(CfnLaunchTemplateTagSpecificationPropertyFromCloudFormation)(properties.TagSpecifications) : undefined);\n    ret.addPropertyResult('userData', 'UserData', properties.UserData != null ? cfn_parse.FromCloudFormation.getString(properties.UserData) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * Specifies an elastic inference accelerator.\n     *\n     * `LaunchTemplateElasticInferenceAccelerator` is a property of [AWS::EC2::LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplateelasticinferenceaccelerator.html\n     */\n    export interface LaunchTemplateElasticInferenceAcceleratorProperty {\n        /**\n         * The number of elastic inference accelerators to attach to the instance.\n         *\n         * Default: 1\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplateelasticinferenceaccelerator.html#cfn-ec2-launchtemplate-launchtemplateelasticinferenceaccelerator-count\n         */\n        readonly count?: number;\n        /**\n         * The type of elastic inference accelerator. The possible values are eia1.medium, eia1.large, and eia1.xlarge.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplateelasticinferenceaccelerator.html#cfn-ec2-launchtemplate-launchtemplateelasticinferenceaccelerator-type\n         */\n        readonly type?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `LaunchTemplateElasticInferenceAcceleratorProperty`\n *\n * @param properties - the TypeScript properties of a `LaunchTemplateElasticInferenceAcceleratorProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_LaunchTemplateElasticInferenceAcceleratorPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('count', cdk.validateNumber)(properties.count));\n    errors.collect(cdk.propertyValidator('type', cdk.validateString)(properties.type));\n    return errors.wrap('supplied properties not correct for \"LaunchTemplateElasticInferenceAcceleratorProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.LaunchTemplateElasticInferenceAccelerator` resource\n *\n * @param properties - the TypeScript properties of a `LaunchTemplateElasticInferenceAcceleratorProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.LaunchTemplateElasticInferenceAccelerator` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateLaunchTemplateElasticInferenceAcceleratorPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_LaunchTemplateElasticInferenceAcceleratorPropertyValidator(properties).assertSuccess();\n    return {\n        Count: cdk.numberToCloudFormation(properties.count),\n        Type: cdk.stringToCloudFormation(properties.type),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateLaunchTemplateElasticInferenceAcceleratorPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.LaunchTemplateElasticInferenceAcceleratorProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.LaunchTemplateElasticInferenceAcceleratorProperty>();\n    ret.addPropertyResult('count', 'Count', properties.Count != null ? cfn_parse.FromCloudFormation.getNumber(properties.Count) : undefined);\n    ret.addPropertyResult('type', 'Type', properties.Type != null ? cfn_parse.FromCloudFormation.getString(properties.Type) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * Specifies the tags to apply to the launch template during creation.\n     *\n     * `LaunchTemplateTagSpecification` is a property of [AWS::EC2::LaunchTemplate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html) .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatetagspecification.html\n     */\n    export interface LaunchTemplateTagSpecificationProperty {\n        /**\n         * The type of resource. To tag the launch template, `ResourceType` must be `launch-template` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatetagspecification.html#cfn-ec2-launchtemplate-launchtemplatetagspecification-resourcetype\n         */\n        readonly resourceType?: string;\n        /**\n         * The tags for the resource.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatetagspecification.html#cfn-ec2-launchtemplate-launchtemplatetagspecification-tags\n         */\n        readonly tags?: cdk.CfnTag[];\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `LaunchTemplateTagSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `LaunchTemplateTagSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_LaunchTemplateTagSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('resourceType', cdk.validateString)(properties.resourceType));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"LaunchTemplateTagSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.LaunchTemplateTagSpecification` resource\n *\n * @param properties - the TypeScript properties of a `LaunchTemplateTagSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.LaunchTemplateTagSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateLaunchTemplateTagSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_LaunchTemplateTagSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        ResourceType: cdk.stringToCloudFormation(properties.resourceType),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateLaunchTemplateTagSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.LaunchTemplateTagSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.LaunchTemplateTagSpecificationProperty>();\n    ret.addPropertyResult('resourceType', 'ResourceType', properties.ResourceType != null ? cfn_parse.FromCloudFormation.getString(properties.ResourceType) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * Specifies a license configuration for an instance.\n     *\n     * `LicenseSpecification` is a property of [AWS::EC2::LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-licensespecification.html\n     */\n    export interface LicenseSpecificationProperty {\n        /**\n         * The Amazon Resource Name (ARN) of the license configuration.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-licensespecification.html#cfn-ec2-launchtemplate-licensespecification-licenseconfigurationarn\n         */\n        readonly licenseConfigurationArn?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `LicenseSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `LicenseSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_LicenseSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('licenseConfigurationArn', cdk.validateString)(properties.licenseConfigurationArn));\n    return errors.wrap('supplied properties not correct for \"LicenseSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.LicenseSpecification` resource\n *\n * @param properties - the TypeScript properties of a `LicenseSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.LicenseSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateLicenseSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_LicenseSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        LicenseConfigurationArn: cdk.stringToCloudFormation(properties.licenseConfigurationArn),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateLicenseSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.LicenseSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.LicenseSpecificationProperty>();\n    ret.addPropertyResult('licenseConfigurationArn', 'LicenseConfigurationArn', properties.LicenseConfigurationArn != null ? cfn_parse.FromCloudFormation.getString(properties.LicenseConfigurationArn) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * The minimum and maximum amount of memory per vCPU, in GiB.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-memorygibpervcpu.html\n     */\n    export interface MemoryGiBPerVCpuProperty {\n        /**\n         * The maximum amount of memory per vCPU, in GiB. To specify no maximum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-memorygibpervcpu.html#cfn-ec2-launchtemplate-memorygibpervcpu-max\n         */\n        readonly max?: number;\n        /**\n         * The minimum amount of memory per vCPU, in GiB. To specify no minimum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-memorygibpervcpu.html#cfn-ec2-launchtemplate-memorygibpervcpu-min\n         */\n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `MemoryGiBPerVCpuProperty`\n *\n * @param properties - the TypeScript properties of a `MemoryGiBPerVCpuProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_MemoryGiBPerVCpuPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"MemoryGiBPerVCpuProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.MemoryGiBPerVCpu` resource\n *\n * @param properties - the TypeScript properties of a `MemoryGiBPerVCpuProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.MemoryGiBPerVCpu` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateMemoryGiBPerVCpuPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_MemoryGiBPerVCpuPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateMemoryGiBPerVCpuPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.MemoryGiBPerVCpuProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.MemoryGiBPerVCpuProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * The minimum and maximum amount of memory, in MiB.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-memorymib.html\n     */\n    export interface MemoryMiBProperty {\n        /**\n         * The maximum amount of memory, in MiB. To specify no maximum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-memorymib.html#cfn-ec2-launchtemplate-memorymib-max\n         */\n        readonly max?: number;\n        /**\n         * The minimum amount of memory, in MiB. To specify no minimum limit, specify `0` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-memorymib.html#cfn-ec2-launchtemplate-memorymib-min\n         */\n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `MemoryMiBProperty`\n *\n * @param properties - the TypeScript properties of a `MemoryMiBProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_MemoryMiBPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"MemoryMiBProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.MemoryMiB` resource\n *\n * @param properties - the TypeScript properties of a `MemoryMiBProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.MemoryMiB` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateMemoryMiBPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_MemoryMiBPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateMemoryMiBPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.MemoryMiBProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.MemoryMiBProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * Specifies the metadata options for the instance.\n     *\n     * `MetadataOptions` is a property of [AWS::EC2::LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-metadataoptions.html\n     */\n    export interface MetadataOptionsProperty {\n        /**\n         * Enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is `enabled` .\n         *\n         * > If you specify a value of `disabled` , you will not be able to access your instance metadata.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-metadataoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-metadataoptions-httpendpoint\n         */\n        readonly httpEndpoint?: string;\n        /**\n         * Enables or disables the IPv6 endpoint for the instance metadata service.\n         *\n         * Default: `disabled`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-metadataoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-metadataoptions-httpprotocolipv6\n         */\n        readonly httpProtocolIpv6?: string;\n        /**\n         * The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.\n         *\n         * Default: 1\n         *\n         * Possible values: Integers from 1 to 64\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-metadataoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-metadataoptions-httpputresponsehoplimit\n         */\n        readonly httpPutResponseHopLimit?: number;\n        /**\n         * The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is `optional` .\n         *\n         * If the state is `optional` , you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned.\n         *\n         * If the state is `required` , you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credentials always returns the version 2.0 credentials; the version 1.0 credentials are not available.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-metadataoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-metadataoptions-httptokens\n         */\n        readonly httpTokens?: string;\n        /**\n         * Set to `enabled` to allow access to instance tags from the instance metadata. Set to `disabled` to turn off access to instance tags from the instance metadata. For more information, see [Work with instance tags using the instance metadata](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#work-with-tags-in-IMDS) .\n         *\n         * Default: `disabled`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-metadataoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-metadataoptions-instancemetadatatags\n         */\n        readonly instanceMetadataTags?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `MetadataOptionsProperty`\n *\n * @param properties - the TypeScript properties of a `MetadataOptionsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_MetadataOptionsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('httpEndpoint', cdk.validateString)(properties.httpEndpoint));\n    errors.collect(cdk.propertyValidator('httpProtocolIpv6', cdk.validateString)(properties.httpProtocolIpv6));\n    errors.collect(cdk.propertyValidator('httpPutResponseHopLimit', cdk.validateNumber)(properties.httpPutResponseHopLimit));\n    errors.collect(cdk.propertyValidator('httpTokens', cdk.validateString)(properties.httpTokens));\n    errors.collect(cdk.propertyValidator('instanceMetadataTags', cdk.validateString)(properties.instanceMetadataTags));\n    return errors.wrap('supplied properties not correct for \"MetadataOptionsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.MetadataOptions` resource\n *\n * @param properties - the TypeScript properties of a `MetadataOptionsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.MetadataOptions` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateMetadataOptionsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_MetadataOptionsPropertyValidator(properties).assertSuccess();\n    return {\n        HttpEndpoint: cdk.stringToCloudFormation(properties.httpEndpoint),\n        HttpProtocolIpv6: cdk.stringToCloudFormation(properties.httpProtocolIpv6),\n        HttpPutResponseHopLimit: cdk.numberToCloudFormation(properties.httpPutResponseHopLimit),\n        HttpTokens: cdk.stringToCloudFormation(properties.httpTokens),\n        InstanceMetadataTags: cdk.stringToCloudFormation(properties.instanceMetadataTags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateMetadataOptionsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.MetadataOptionsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.MetadataOptionsProperty>();\n    ret.addPropertyResult('httpEndpoint', 'HttpEndpoint', properties.HttpEndpoint != null ? cfn_parse.FromCloudFormation.getString(properties.HttpEndpoint) : undefined);\n    ret.addPropertyResult('httpProtocolIpv6', 'HttpProtocolIpv6', properties.HttpProtocolIpv6 != null ? cfn_parse.FromCloudFormation.getString(properties.HttpProtocolIpv6) : undefined);\n    ret.addPropertyResult('httpPutResponseHopLimit', 'HttpPutResponseHopLimit', properties.HttpPutResponseHopLimit != null ? cfn_parse.FromCloudFormation.getNumber(properties.HttpPutResponseHopLimit) : undefined);\n    ret.addPropertyResult('httpTokens', 'HttpTokens', properties.HttpTokens != null ? cfn_parse.FromCloudFormation.getString(properties.HttpTokens) : undefined);\n    ret.addPropertyResult('instanceMetadataTags', 'InstanceMetadataTags', properties.InstanceMetadataTags != null ? cfn_parse.FromCloudFormation.getString(properties.InstanceMetadataTags) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * Specifies whether detailed monitoring is enabled for an instance.\n     *\n     * `Monitoring` is a property of [AWS::EC2::LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-monitoring.html\n     */\n    export interface MonitoringProperty {\n        /**\n         * Specify `true` to enable detailed monitoring. Otherwise, basic monitoring is enabled.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-monitoring.html#cfn-ec2-launchtemplate-launchtemplatedata-monitoring-enabled\n         */\n        readonly enabled?: boolean | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `MonitoringProperty`\n *\n * @param properties - the TypeScript properties of a `MonitoringProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_MonitoringPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('enabled', cdk.validateBoolean)(properties.enabled));\n    return errors.wrap('supplied properties not correct for \"MonitoringProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.Monitoring` resource\n *\n * @param properties - the TypeScript properties of a `MonitoringProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.Monitoring` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateMonitoringPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_MonitoringPropertyValidator(properties).assertSuccess();\n    return {\n        Enabled: cdk.booleanToCloudFormation(properties.enabled),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateMonitoringPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.MonitoringProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.MonitoringProperty>();\n    ret.addPropertyResult('enabled', 'Enabled', properties.Enabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.Enabled) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * Specifies the parameters for a network interface.\n     *\n     * `NetworkInterface` is a property of [AWS::EC2::LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html\n     */\n    export interface NetworkInterfaceProperty {\n        /**\n         * Indicates whether to associate a Carrier IP address with eth0 for a new network interface.\n         *\n         * Use this option when you launch an instance in a Wavelength Zone and want to associate a Carrier IP address with the network interface. For more information about Carrier IP addresses, see [Carrier IP addresses](https://docs.aws.amazon.com/wavelength/latest/developerguide/how-wavelengths-work.html#provider-owned-ip) in the *AWS Wavelength Developer Guide* .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-associatecarrieripaddress\n         */\n        readonly associateCarrierIpAddress?: boolean | cdk.IResolvable;\n        /**\n         * Associates a public IPv4 address with eth0 for a new network interface.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-associatepublicipaddress\n         */\n        readonly associatePublicIpAddress?: boolean | cdk.IResolvable;\n        /**\n         * Indicates whether the network interface is deleted when the instance is terminated.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-deleteontermination\n         */\n        readonly deleteOnTermination?: boolean | cdk.IResolvable;\n        /**\n         * A description for the network interface.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-description\n         */\n        readonly description?: string;\n        /**\n         * The device index for the network interface attachment.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-deviceindex\n         */\n        readonly deviceIndex?: number;\n        /**\n         * The IDs of one or more security groups.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-groups\n         */\n        readonly groups?: string[];\n        /**\n         * The type of network interface. To create an Elastic Fabric Adapter (EFA), specify `efa` . For more information, see [Elastic Fabric Adapter](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/efa.html) in the *Amazon Elastic Compute Cloud User Guide* .\n         *\n         * If you are not creating an EFA, specify `interface` or omit this parameter.\n         *\n         * Valid values: `interface` | `efa`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-interfacetype\n         */\n        readonly interfaceType?: string;\n        /**\n         * `CfnLaunchTemplate.NetworkInterfaceProperty.Ipv4PrefixCount`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-ipv4prefixcount\n         */\n        readonly ipv4PrefixCount?: number;\n        /**\n         * `CfnLaunchTemplate.NetworkInterfaceProperty.Ipv4Prefixes`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-ipv4prefixes\n         */\n        readonly ipv4Prefixes?: Array<CfnLaunchTemplate.Ipv4PrefixSpecificationProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * The number of IPv6 addresses to assign to a network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. You can't use this option if specifying specific IPv6 addresses.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-ipv6addresscount\n         */\n        readonly ipv6AddressCount?: number;\n        /**\n         * One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. You can't use this option if you're specifying a number of IPv6 addresses.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-ipv6addresses\n         */\n        readonly ipv6Addresses?: Array<CfnLaunchTemplate.Ipv6AddProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * `CfnLaunchTemplate.NetworkInterfaceProperty.Ipv6PrefixCount`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-ipv6prefixcount\n         */\n        readonly ipv6PrefixCount?: number;\n        /**\n         * `CfnLaunchTemplate.NetworkInterfaceProperty.Ipv6Prefixes`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-ipv6prefixes\n         */\n        readonly ipv6Prefixes?: Array<CfnLaunchTemplate.Ipv6PrefixSpecificationProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * The index of the network card. Some instance types support multiple network cards. The primary network interface must be assigned to network card index 0. The default is network card index 0.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-networkcardindex\n         */\n        readonly networkCardIndex?: number;\n        /**\n         * The ID of the network interface.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-networkinterfaceid\n         */\n        readonly networkInterfaceId?: string;\n        /**\n         * The primary private IPv4 address of the network interface.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-privateipaddress\n         */\n        readonly privateIpAddress?: string;\n        /**\n         * One or more private IPv4 addresses.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-privateipaddresses\n         */\n        readonly privateIpAddresses?: Array<CfnLaunchTemplate.PrivateIpAddProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * The number of secondary private IPv4 addresses to assign to a network interface.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-secondaryprivateipaddresscount\n         */\n        readonly secondaryPrivateIpAddressCount?: number;\n        /**\n         * The ID of the subnet for the network interface.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-subnetid\n         */\n        readonly subnetId?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `NetworkInterfaceProperty`\n *\n * @param properties - the TypeScript properties of a `NetworkInterfaceProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_NetworkInterfacePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('associateCarrierIpAddress', cdk.validateBoolean)(properties.associateCarrierIpAddress));\n    errors.collect(cdk.propertyValidator('associatePublicIpAddress', cdk.validateBoolean)(properties.associatePublicIpAddress));\n    errors.collect(cdk.propertyValidator('deleteOnTermination', cdk.validateBoolean)(properties.deleteOnTermination));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('deviceIndex', cdk.validateNumber)(properties.deviceIndex));\n    errors.collect(cdk.propertyValidator('groups', cdk.listValidator(cdk.validateString))(properties.groups));\n    errors.collect(cdk.propertyValidator('interfaceType', cdk.validateString)(properties.interfaceType));\n    errors.collect(cdk.propertyValidator('ipv4PrefixCount', cdk.validateNumber)(properties.ipv4PrefixCount));\n    errors.collect(cdk.propertyValidator('ipv4Prefixes', cdk.listValidator(CfnLaunchTemplate_Ipv4PrefixSpecificationPropertyValidator))(properties.ipv4Prefixes));\n    errors.collect(cdk.propertyValidator('ipv6AddressCount', cdk.validateNumber)(properties.ipv6AddressCount));\n    errors.collect(cdk.propertyValidator('ipv6Addresses', cdk.listValidator(CfnLaunchTemplate_Ipv6AddPropertyValidator))(properties.ipv6Addresses));\n    errors.collect(cdk.propertyValidator('ipv6PrefixCount', cdk.validateNumber)(properties.ipv6PrefixCount));\n    errors.collect(cdk.propertyValidator('ipv6Prefixes', cdk.listValidator(CfnLaunchTemplate_Ipv6PrefixSpecificationPropertyValidator))(properties.ipv6Prefixes));\n    errors.collect(cdk.propertyValidator('networkCardIndex', cdk.validateNumber)(properties.networkCardIndex));\n    errors.collect(cdk.propertyValidator('networkInterfaceId', cdk.validateString)(properties.networkInterfaceId));\n    errors.collect(cdk.propertyValidator('privateIpAddress', cdk.validateString)(properties.privateIpAddress));\n    errors.collect(cdk.propertyValidator('privateIpAddresses', cdk.listValidator(CfnLaunchTemplate_PrivateIpAddPropertyValidator))(properties.privateIpAddresses));\n    errors.collect(cdk.propertyValidator('secondaryPrivateIpAddressCount', cdk.validateNumber)(properties.secondaryPrivateIpAddressCount));\n    errors.collect(cdk.propertyValidator('subnetId', cdk.validateString)(properties.subnetId));\n    return errors.wrap('supplied properties not correct for \"NetworkInterfaceProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.NetworkInterface` resource\n *\n * @param properties - the TypeScript properties of a `NetworkInterfaceProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.NetworkInterface` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateNetworkInterfacePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_NetworkInterfacePropertyValidator(properties).assertSuccess();\n    return {\n        AssociateCarrierIpAddress: cdk.booleanToCloudFormation(properties.associateCarrierIpAddress),\n        AssociatePublicIpAddress: cdk.booleanToCloudFormation(properties.associatePublicIpAddress),\n        DeleteOnTermination: cdk.booleanToCloudFormation(properties.deleteOnTermination),\n        Description: cdk.stringToCloudFormation(properties.description),\n        DeviceIndex: cdk.numberToCloudFormation(properties.deviceIndex),\n        Groups: cdk.listMapper(cdk.stringToCloudFormation)(properties.groups),\n        InterfaceType: cdk.stringToCloudFormation(properties.interfaceType),\n        Ipv4PrefixCount: cdk.numberToCloudFormation(properties.ipv4PrefixCount),\n        Ipv4Prefixes: cdk.listMapper(cfnLaunchTemplateIpv4PrefixSpecificationPropertyToCloudFormation)(properties.ipv4Prefixes),\n        Ipv6AddressCount: cdk.numberToCloudFormation(properties.ipv6AddressCount),\n        Ipv6Addresses: cdk.listMapper(cfnLaunchTemplateIpv6AddPropertyToCloudFormation)(properties.ipv6Addresses),\n        Ipv6PrefixCount: cdk.numberToCloudFormation(properties.ipv6PrefixCount),\n        Ipv6Prefixes: cdk.listMapper(cfnLaunchTemplateIpv6PrefixSpecificationPropertyToCloudFormation)(properties.ipv6Prefixes),\n        NetworkCardIndex: cdk.numberToCloudFormation(properties.networkCardIndex),\n        NetworkInterfaceId: cdk.stringToCloudFormation(properties.networkInterfaceId),\n        PrivateIpAddress: cdk.stringToCloudFormation(properties.privateIpAddress),\n        PrivateIpAddresses: cdk.listMapper(cfnLaunchTemplatePrivateIpAddPropertyToCloudFormation)(properties.privateIpAddresses),\n        SecondaryPrivateIpAddressCount: cdk.numberToCloudFormation(properties.secondaryPrivateIpAddressCount),\n        SubnetId: cdk.stringToCloudFormation(properties.subnetId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateNetworkInterfacePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.NetworkInterfaceProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.NetworkInterfaceProperty>();\n    ret.addPropertyResult('associateCarrierIpAddress', 'AssociateCarrierIpAddress', properties.AssociateCarrierIpAddress != null ? cfn_parse.FromCloudFormation.getBoolean(properties.AssociateCarrierIpAddress) : undefined);\n    ret.addPropertyResult('associatePublicIpAddress', 'AssociatePublicIpAddress', properties.AssociatePublicIpAddress != null ? cfn_parse.FromCloudFormation.getBoolean(properties.AssociatePublicIpAddress) : undefined);\n    ret.addPropertyResult('deleteOnTermination', 'DeleteOnTermination', properties.DeleteOnTermination != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DeleteOnTermination) : undefined);\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('deviceIndex', 'DeviceIndex', properties.DeviceIndex != null ? cfn_parse.FromCloudFormation.getNumber(properties.DeviceIndex) : undefined);\n    ret.addPropertyResult('groups', 'Groups', properties.Groups != null ? cfn_parse.FromCloudFormation.getStringArray(properties.Groups) : undefined);\n    ret.addPropertyResult('interfaceType', 'InterfaceType', properties.InterfaceType != null ? cfn_parse.FromCloudFormation.getString(properties.InterfaceType) : undefined);\n    ret.addPropertyResult('ipv4PrefixCount', 'Ipv4PrefixCount', properties.Ipv4PrefixCount != null ? cfn_parse.FromCloudFormation.getNumber(properties.Ipv4PrefixCount) : undefined);\n    ret.addPropertyResult('ipv4Prefixes', 'Ipv4Prefixes', properties.Ipv4Prefixes != null ? cfn_parse.FromCloudFormation.getArray(CfnLaunchTemplateIpv4PrefixSpecificationPropertyFromCloudFormation)(properties.Ipv4Prefixes) : undefined);\n    ret.addPropertyResult('ipv6AddressCount', 'Ipv6AddressCount', properties.Ipv6AddressCount != null ? cfn_parse.FromCloudFormation.getNumber(properties.Ipv6AddressCount) : undefined);\n    ret.addPropertyResult('ipv6Addresses', 'Ipv6Addresses', properties.Ipv6Addresses != null ? cfn_parse.FromCloudFormation.getArray(CfnLaunchTemplateIpv6AddPropertyFromCloudFormation)(properties.Ipv6Addresses) : undefined);\n    ret.addPropertyResult('ipv6PrefixCount', 'Ipv6PrefixCount', properties.Ipv6PrefixCount != null ? cfn_parse.FromCloudFormation.getNumber(properties.Ipv6PrefixCount) : undefined);\n    ret.addPropertyResult('ipv6Prefixes', 'Ipv6Prefixes', properties.Ipv6Prefixes != null ? cfn_parse.FromCloudFormation.getArray(CfnLaunchTemplateIpv6PrefixSpecificationPropertyFromCloudFormation)(properties.Ipv6Prefixes) : undefined);\n    ret.addPropertyResult('networkCardIndex', 'NetworkCardIndex', properties.NetworkCardIndex != null ? cfn_parse.FromCloudFormation.getNumber(properties.NetworkCardIndex) : undefined);\n    ret.addPropertyResult('networkInterfaceId', 'NetworkInterfaceId', properties.NetworkInterfaceId != null ? cfn_parse.FromCloudFormation.getString(properties.NetworkInterfaceId) : undefined);\n    ret.addPropertyResult('privateIpAddress', 'PrivateIpAddress', properties.PrivateIpAddress != null ? cfn_parse.FromCloudFormation.getString(properties.PrivateIpAddress) : undefined);\n    ret.addPropertyResult('privateIpAddresses', 'PrivateIpAddresses', properties.PrivateIpAddresses != null ? cfn_parse.FromCloudFormation.getArray(CfnLaunchTemplatePrivateIpAddPropertyFromCloudFormation)(properties.PrivateIpAddresses) : undefined);\n    ret.addPropertyResult('secondaryPrivateIpAddressCount', 'SecondaryPrivateIpAddressCount', properties.SecondaryPrivateIpAddressCount != null ? cfn_parse.FromCloudFormation.getNumber(properties.SecondaryPrivateIpAddressCount) : undefined);\n    ret.addPropertyResult('subnetId', 'SubnetId', properties.SubnetId != null ? cfn_parse.FromCloudFormation.getString(properties.SubnetId) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * The minimum and maximum number of network interfaces.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterfacecount.html\n     */\n    export interface NetworkInterfaceCountProperty {\n        /**\n         * The maximum number of network interfaces. To specify no maximum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterfacecount.html#cfn-ec2-launchtemplate-networkinterfacecount-max\n         */\n        readonly max?: number;\n        /**\n         * The minimum number of network interfaces. To specify no minimum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterfacecount.html#cfn-ec2-launchtemplate-networkinterfacecount-min\n         */\n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `NetworkInterfaceCountProperty`\n *\n * @param properties - the TypeScript properties of a `NetworkInterfaceCountProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_NetworkInterfaceCountPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"NetworkInterfaceCountProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.NetworkInterfaceCount` resource\n *\n * @param properties - the TypeScript properties of a `NetworkInterfaceCountProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.NetworkInterfaceCount` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateNetworkInterfaceCountPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_NetworkInterfaceCountPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateNetworkInterfaceCountPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.NetworkInterfaceCountProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.NetworkInterfaceCountProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * Specifies the placement of an instance.\n     *\n     * `Placement` is a property of [AWS::EC2::LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html\n     */\n    export interface PlacementProperty {\n        /**\n         * The affinity setting for an instance on a Dedicated Host.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-affinity\n         */\n        readonly affinity?: string;\n        /**\n         * The Availability Zone for the instance.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-availabilityzone\n         */\n        readonly availabilityZone?: string;\n        /**\n         * The name of the placement group for the instance.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-groupname\n         */\n        readonly groupName?: string;\n        /**\n         * The ID of the Dedicated Host for the instance.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-hostid\n         */\n        readonly hostId?: string;\n        /**\n         * The ARN of the host resource group in which to launch the instances. If you specify a host resource group ARN, omit the *Tenancy* parameter or set it to `host` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-hostresourcegrouparn\n         */\n        readonly hostResourceGroupArn?: string;\n        /**\n         * The number of the partition the instance should launch in. Valid only if the placement group strategy is set to `partition` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-partitionnumber\n         */\n        readonly partitionNumber?: number;\n        /**\n         * Reserved for future use.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-spreaddomain\n         */\n        readonly spreadDomain?: string;\n        /**\n         * The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-tenancy\n         */\n        readonly tenancy?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `PlacementProperty`\n *\n * @param properties - the TypeScript properties of a `PlacementProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_PlacementPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('affinity', cdk.validateString)(properties.affinity));\n    errors.collect(cdk.propertyValidator('availabilityZone', cdk.validateString)(properties.availabilityZone));\n    errors.collect(cdk.propertyValidator('groupName', cdk.validateString)(properties.groupName));\n    errors.collect(cdk.propertyValidator('hostId', cdk.validateString)(properties.hostId));\n    errors.collect(cdk.propertyValidator('hostResourceGroupArn', cdk.validateString)(properties.hostResourceGroupArn));\n    errors.collect(cdk.propertyValidator('partitionNumber', cdk.validateNumber)(properties.partitionNumber));\n    errors.collect(cdk.propertyValidator('spreadDomain', cdk.validateString)(properties.spreadDomain));\n    errors.collect(cdk.propertyValidator('tenancy', cdk.validateString)(properties.tenancy));\n    return errors.wrap('supplied properties not correct for \"PlacementProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.Placement` resource\n *\n * @param properties - the TypeScript properties of a `PlacementProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.Placement` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplatePlacementPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_PlacementPropertyValidator(properties).assertSuccess();\n    return {\n        Affinity: cdk.stringToCloudFormation(properties.affinity),\n        AvailabilityZone: cdk.stringToCloudFormation(properties.availabilityZone),\n        GroupName: cdk.stringToCloudFormation(properties.groupName),\n        HostId: cdk.stringToCloudFormation(properties.hostId),\n        HostResourceGroupArn: cdk.stringToCloudFormation(properties.hostResourceGroupArn),\n        PartitionNumber: cdk.numberToCloudFormation(properties.partitionNumber),\n        SpreadDomain: cdk.stringToCloudFormation(properties.spreadDomain),\n        Tenancy: cdk.stringToCloudFormation(properties.tenancy),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplatePlacementPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.PlacementProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.PlacementProperty>();\n    ret.addPropertyResult('affinity', 'Affinity', properties.Affinity != null ? cfn_parse.FromCloudFormation.getString(properties.Affinity) : undefined);\n    ret.addPropertyResult('availabilityZone', 'AvailabilityZone', properties.AvailabilityZone != null ? cfn_parse.FromCloudFormation.getString(properties.AvailabilityZone) : undefined);\n    ret.addPropertyResult('groupName', 'GroupName', properties.GroupName != null ? cfn_parse.FromCloudFormation.getString(properties.GroupName) : undefined);\n    ret.addPropertyResult('hostId', 'HostId', properties.HostId != null ? cfn_parse.FromCloudFormation.getString(properties.HostId) : undefined);\n    ret.addPropertyResult('hostResourceGroupArn', 'HostResourceGroupArn', properties.HostResourceGroupArn != null ? cfn_parse.FromCloudFormation.getString(properties.HostResourceGroupArn) : undefined);\n    ret.addPropertyResult('partitionNumber', 'PartitionNumber', properties.PartitionNumber != null ? cfn_parse.FromCloudFormation.getNumber(properties.PartitionNumber) : undefined);\n    ret.addPropertyResult('spreadDomain', 'SpreadDomain', properties.SpreadDomain != null ? cfn_parse.FromCloudFormation.getString(properties.SpreadDomain) : undefined);\n    ret.addPropertyResult('tenancy', 'Tenancy', properties.Tenancy != null ? cfn_parse.FromCloudFormation.getString(properties.Tenancy) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * Describes the options for instance hostnames.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-privatednsnameoptions.html\n     */\n    export interface PrivateDnsNameOptionsProperty {\n        /**\n         * Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-privatednsnameoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-privatednsnameoptions-enableresourcenamednsaaaarecord\n         */\n        readonly enableResourceNameDnsAaaaRecord?: boolean | cdk.IResolvable;\n        /**\n         * Indicates whether to respond to DNS queries for instance hostnames with DNS A records.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-privatednsnameoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-privatednsnameoptions-enableresourcenamednsarecord\n         */\n        readonly enableResourceNameDnsARecord?: boolean | cdk.IResolvable;\n        /**\n         * The type of hostname for EC2 instances. For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 only subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. For more information, see [Amazon EC2 instance hostname types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-naming.html) in the *Amazon Elastic Compute Cloud User Guide* .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-privatednsnameoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-privatednsnameoptions-hostnametype\n         */\n        readonly hostnameType?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `PrivateDnsNameOptionsProperty`\n *\n * @param properties - the TypeScript properties of a `PrivateDnsNameOptionsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_PrivateDnsNameOptionsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('enableResourceNameDnsAaaaRecord', cdk.validateBoolean)(properties.enableResourceNameDnsAaaaRecord));\n    errors.collect(cdk.propertyValidator('enableResourceNameDnsARecord', cdk.validateBoolean)(properties.enableResourceNameDnsARecord));\n    errors.collect(cdk.propertyValidator('hostnameType', cdk.validateString)(properties.hostnameType));\n    return errors.wrap('supplied properties not correct for \"PrivateDnsNameOptionsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.PrivateDnsNameOptions` resource\n *\n * @param properties - the TypeScript properties of a `PrivateDnsNameOptionsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.PrivateDnsNameOptions` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplatePrivateDnsNameOptionsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_PrivateDnsNameOptionsPropertyValidator(properties).assertSuccess();\n    return {\n        EnableResourceNameDnsAAAARecord: cdk.booleanToCloudFormation(properties.enableResourceNameDnsAaaaRecord),\n        EnableResourceNameDnsARecord: cdk.booleanToCloudFormation(properties.enableResourceNameDnsARecord),\n        HostnameType: cdk.stringToCloudFormation(properties.hostnameType),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplatePrivateDnsNameOptionsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.PrivateDnsNameOptionsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.PrivateDnsNameOptionsProperty>();\n    ret.addPropertyResult('enableResourceNameDnsAaaaRecord', 'EnableResourceNameDnsAAAARecord', properties.EnableResourceNameDnsAAAARecord != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableResourceNameDnsAAAARecord) : undefined);\n    ret.addPropertyResult('enableResourceNameDnsARecord', 'EnableResourceNameDnsARecord', properties.EnableResourceNameDnsARecord != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableResourceNameDnsARecord) : undefined);\n    ret.addPropertyResult('hostnameType', 'HostnameType', properties.HostnameType != null ? cfn_parse.FromCloudFormation.getString(properties.HostnameType) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * Specifies a secondary private IPv4 address for a network interface.\n     *\n     * `PrivateIpAdd` is a property of [AWS::EC2::LaunchTemplate NetworkInterface](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html) .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-privateipadd.html\n     */\n    export interface PrivateIpAddProperty {\n        /**\n         * Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-privateipadd.html#cfn-ec2-launchtemplate-privateipadd-primary\n         */\n        readonly primary?: boolean | cdk.IResolvable;\n        /**\n         * The private IPv4 addresses.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-privateipadd.html#cfn-ec2-launchtemplate-privateipadd-privateipaddress\n         */\n        readonly privateIpAddress?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `PrivateIpAddProperty`\n *\n * @param properties - the TypeScript properties of a `PrivateIpAddProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_PrivateIpAddPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('primary', cdk.validateBoolean)(properties.primary));\n    errors.collect(cdk.propertyValidator('privateIpAddress', cdk.validateString)(properties.privateIpAddress));\n    return errors.wrap('supplied properties not correct for \"PrivateIpAddProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.PrivateIpAdd` resource\n *\n * @param properties - the TypeScript properties of a `PrivateIpAddProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.PrivateIpAdd` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplatePrivateIpAddPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_PrivateIpAddPropertyValidator(properties).assertSuccess();\n    return {\n        Primary: cdk.booleanToCloudFormation(properties.primary),\n        PrivateIpAddress: cdk.stringToCloudFormation(properties.privateIpAddress),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplatePrivateIpAddPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.PrivateIpAddProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.PrivateIpAddProperty>();\n    ret.addPropertyResult('primary', 'Primary', properties.Primary != null ? cfn_parse.FromCloudFormation.getBoolean(properties.Primary) : undefined);\n    ret.addPropertyResult('privateIpAddress', 'PrivateIpAddress', properties.PrivateIpAddress != null ? cfn_parse.FromCloudFormation.getString(properties.PrivateIpAddress) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * Specifies options for Spot Instances.\n     *\n     * `SpotOptions` is a property of [AWS::EC2::LaunchTemplate InstanceMarketOptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions.html) .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html\n     */\n    export interface SpotOptionsProperty {\n        /**\n         * The required duration for the Spot Instances (also known as Spot blocks), in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions-blockdurationminutes\n         */\n        readonly blockDurationMinutes?: number;\n        /**\n         * The behavior when a Spot Instance is interrupted. The default is `terminate` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions-instanceinterruptionbehavior\n         */\n        readonly instanceInterruptionBehavior?: string;\n        /**\n         * The maximum hourly price you're willing to pay for the Spot Instances.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions-maxprice\n         */\n        readonly maxPrice?: string;\n        /**\n         * The Spot Instance request type.\n         *\n         * If you are using Spot Instances with an Auto Scaling group, use `one-time` requests, as the Amazon EC2 Auto Scaling service handles requesting new Spot Instances whenever the group is below its desired capacity.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions-spotinstancetype\n         */\n        readonly spotInstanceType?: string;\n        /**\n         * The end date of the request. For a one-time request, the request remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date and time is reached. The default end date is 7 days from the current date.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions-validuntil\n         */\n        readonly validUntil?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `SpotOptionsProperty`\n *\n * @param properties - the TypeScript properties of a `SpotOptionsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_SpotOptionsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('blockDurationMinutes', cdk.validateNumber)(properties.blockDurationMinutes));\n    errors.collect(cdk.propertyValidator('instanceInterruptionBehavior', cdk.validateString)(properties.instanceInterruptionBehavior));\n    errors.collect(cdk.propertyValidator('maxPrice', cdk.validateString)(properties.maxPrice));\n    errors.collect(cdk.propertyValidator('spotInstanceType', cdk.validateString)(properties.spotInstanceType));\n    errors.collect(cdk.propertyValidator('validUntil', cdk.validateString)(properties.validUntil));\n    return errors.wrap('supplied properties not correct for \"SpotOptionsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.SpotOptions` resource\n *\n * @param properties - the TypeScript properties of a `SpotOptionsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.SpotOptions` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateSpotOptionsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_SpotOptionsPropertyValidator(properties).assertSuccess();\n    return {\n        BlockDurationMinutes: cdk.numberToCloudFormation(properties.blockDurationMinutes),\n        InstanceInterruptionBehavior: cdk.stringToCloudFormation(properties.instanceInterruptionBehavior),\n        MaxPrice: cdk.stringToCloudFormation(properties.maxPrice),\n        SpotInstanceType: cdk.stringToCloudFormation(properties.spotInstanceType),\n        ValidUntil: cdk.stringToCloudFormation(properties.validUntil),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateSpotOptionsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.SpotOptionsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.SpotOptionsProperty>();\n    ret.addPropertyResult('blockDurationMinutes', 'BlockDurationMinutes', properties.BlockDurationMinutes != null ? cfn_parse.FromCloudFormation.getNumber(properties.BlockDurationMinutes) : undefined);\n    ret.addPropertyResult('instanceInterruptionBehavior', 'InstanceInterruptionBehavior', properties.InstanceInterruptionBehavior != null ? cfn_parse.FromCloudFormation.getString(properties.InstanceInterruptionBehavior) : undefined);\n    ret.addPropertyResult('maxPrice', 'MaxPrice', properties.MaxPrice != null ? cfn_parse.FromCloudFormation.getString(properties.MaxPrice) : undefined);\n    ret.addPropertyResult('spotInstanceType', 'SpotInstanceType', properties.SpotInstanceType != null ? cfn_parse.FromCloudFormation.getString(properties.SpotInstanceType) : undefined);\n    ret.addPropertyResult('validUntil', 'ValidUntil', properties.ValidUntil != null ? cfn_parse.FromCloudFormation.getString(properties.ValidUntil) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * Specifies the tags to apply to a resource when the resource is created for the launch template.\n     *\n     * `TagSpecification` is a property type of [`TagSpecifications`](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-tagspecifications) . [`TagSpecifications`](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-tagspecifications) is a property of [AWS::EC2::LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-tagspecification.html\n     */\n    export interface TagSpecificationProperty {\n        /**\n         * The type of resource to tag. Currently, the resource types that support tagging on creation are `instance` and `volume` . To tag a resource after it has been created, see [CreateTags](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html) .\n         *\n         * *Conditional* : Required if tags are set.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-tagspecification.html#cfn-ec2-launchtemplate-tagspecification-resourcetype\n         */\n        readonly resourceType?: string;\n        /**\n         * The tags to apply to the resource.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-tagspecification.html#cfn-ec2-launchtemplate-tagspecification-tags\n         */\n        readonly tags?: cdk.CfnTag[];\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `TagSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `TagSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_TagSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('resourceType', cdk.validateString)(properties.resourceType));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"TagSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.TagSpecification` resource\n *\n * @param properties - the TypeScript properties of a `TagSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.TagSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateTagSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_TagSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        ResourceType: cdk.stringToCloudFormation(properties.resourceType),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateTagSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.TagSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.TagSpecificationProperty>();\n    ret.addPropertyResult('resourceType', 'ResourceType', properties.ResourceType != null ? cfn_parse.FromCloudFormation.getString(properties.ResourceType) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * The minimum and maximum amount of total local storage, in GB.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-totallocalstoragegb.html\n     */\n    export interface TotalLocalStorageGBProperty {\n        /**\n         * The maximum amount of total local storage, in GB. To specify no maximum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-totallocalstoragegb.html#cfn-ec2-launchtemplate-totallocalstoragegb-max\n         */\n        readonly max?: number;\n        /**\n         * The minimum amount of total local storage, in GB. To specify no minimum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-totallocalstoragegb.html#cfn-ec2-launchtemplate-totallocalstoragegb-min\n         */\n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `TotalLocalStorageGBProperty`\n *\n * @param properties - the TypeScript properties of a `TotalLocalStorageGBProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_TotalLocalStorageGBPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"TotalLocalStorageGBProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.TotalLocalStorageGB` resource\n *\n * @param properties - the TypeScript properties of a `TotalLocalStorageGBProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.TotalLocalStorageGB` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateTotalLocalStorageGBPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_TotalLocalStorageGBPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateTotalLocalStorageGBPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.TotalLocalStorageGBProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.TotalLocalStorageGBProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnLaunchTemplate {\n    /**\n     * The minimum and maximum number of vCPUs.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-vcpucount.html\n     */\n    export interface VCpuCountProperty {\n        /**\n         * The maximum number of vCPUs. To specify no maximum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-vcpucount.html#cfn-ec2-launchtemplate-vcpucount-max\n         */\n        readonly max?: number;\n        /**\n         * The minimum number of vCPUs. To specify no minimum limit, specify `0` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-vcpucount.html#cfn-ec2-launchtemplate-vcpucount-min\n         */\n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `VCpuCountProperty`\n *\n * @param properties - the TypeScript properties of a `VCpuCountProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLaunchTemplate_VCpuCountPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"VCpuCountProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.VCpuCount` resource\n *\n * @param properties - the TypeScript properties of a `VCpuCountProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LaunchTemplate.VCpuCount` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLaunchTemplateVCpuCountPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLaunchTemplate_VCpuCountPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLaunchTemplateVCpuCountPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLaunchTemplate.VCpuCountProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLaunchTemplate.VCpuCountProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnLocalGatewayRoute`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html\n */\nexport interface CfnLocalGatewayRouteProps {\n\n    /**\n     * The CIDR block used for destination matches.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html#cfn-ec2-localgatewayroute-destinationcidrblock\n     */\n    readonly destinationCidrBlock: string;\n\n    /**\n     * The ID of the local gateway route table.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html#cfn-ec2-localgatewayroute-localgatewayroutetableid\n     */\n    readonly localGatewayRouteTableId: string;\n\n    /**\n     * The ID of the virtual interface group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html#cfn-ec2-localgatewayroute-localgatewayvirtualinterfacegroupid\n     */\n    readonly localGatewayVirtualInterfaceGroupId: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnLocalGatewayRouteProps`\n *\n * @param properties - the TypeScript properties of a `CfnLocalGatewayRouteProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnLocalGatewayRoutePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('destinationCidrBlock', cdk.requiredValidator)(properties.destinationCidrBlock));\n    errors.collect(cdk.propertyValidator('destinationCidrBlock', cdk.validateString)(properties.destinationCidrBlock));\n    errors.collect(cdk.propertyValidator('localGatewayRouteTableId', cdk.requiredValidator)(properties.localGatewayRouteTableId));\n    errors.collect(cdk.propertyValidator('localGatewayRouteTableId', cdk.validateString)(properties.localGatewayRouteTableId));\n    errors.collect(cdk.propertyValidator('localGatewayVirtualInterfaceGroupId', cdk.requiredValidator)(properties.localGatewayVirtualInterfaceGroupId));\n    errors.collect(cdk.propertyValidator('localGatewayVirtualInterfaceGroupId', cdk.validateString)(properties.localGatewayVirtualInterfaceGroupId));\n    return errors.wrap('supplied properties not correct for \"CfnLocalGatewayRouteProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LocalGatewayRoute` resource\n *\n * @param properties - the TypeScript properties of a `CfnLocalGatewayRouteProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LocalGatewayRoute` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLocalGatewayRoutePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLocalGatewayRoutePropsValidator(properties).assertSuccess();\n    return {\n        DestinationCidrBlock: cdk.stringToCloudFormation(properties.destinationCidrBlock),\n        LocalGatewayRouteTableId: cdk.stringToCloudFormation(properties.localGatewayRouteTableId),\n        LocalGatewayVirtualInterfaceGroupId: cdk.stringToCloudFormation(properties.localGatewayVirtualInterfaceGroupId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLocalGatewayRoutePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLocalGatewayRouteProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLocalGatewayRouteProps>();\n    ret.addPropertyResult('destinationCidrBlock', 'DestinationCidrBlock', cfn_parse.FromCloudFormation.getString(properties.DestinationCidrBlock));\n    ret.addPropertyResult('localGatewayRouteTableId', 'LocalGatewayRouteTableId', cfn_parse.FromCloudFormation.getString(properties.LocalGatewayRouteTableId));\n    ret.addPropertyResult('localGatewayVirtualInterfaceGroupId', 'LocalGatewayVirtualInterfaceGroupId', cfn_parse.FromCloudFormation.getString(properties.LocalGatewayVirtualInterfaceGroupId));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::LocalGatewayRoute`\n *\n * Creates a static route for the specified local gateway route table.\n *\n * @cloudformationResource AWS::EC2::LocalGatewayRoute\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html\n */\nexport class CfnLocalGatewayRoute extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::LocalGatewayRoute\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnLocalGatewayRoute {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnLocalGatewayRoutePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnLocalGatewayRoute(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The state of the local gateway route table.\n     * @cloudformationAttribute State\n     */\n    public readonly attrState: string;\n\n    /**\n     * The type of local gateway route.\n     * @cloudformationAttribute Type\n     */\n    public readonly attrType: string;\n\n    /**\n     * The CIDR block used for destination matches.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html#cfn-ec2-localgatewayroute-destinationcidrblock\n     */\n    public destinationCidrBlock: string;\n\n    /**\n     * The ID of the local gateway route table.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html#cfn-ec2-localgatewayroute-localgatewayroutetableid\n     */\n    public localGatewayRouteTableId: string;\n\n    /**\n     * The ID of the virtual interface group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html#cfn-ec2-localgatewayroute-localgatewayvirtualinterfacegroupid\n     */\n    public localGatewayVirtualInterfaceGroupId: string;\n\n    /**\n     * Create a new `AWS::EC2::LocalGatewayRoute`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnLocalGatewayRouteProps) {\n        super(scope, id, { type: CfnLocalGatewayRoute.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'destinationCidrBlock', this);\n        cdk.requireProperty(props, 'localGatewayRouteTableId', this);\n        cdk.requireProperty(props, 'localGatewayVirtualInterfaceGroupId', this);\n        this.attrState = cdk.Token.asString(this.getAtt('State'));\n        this.attrType = cdk.Token.asString(this.getAtt('Type'));\n\n        this.destinationCidrBlock = props.destinationCidrBlock;\n        this.localGatewayRouteTableId = props.localGatewayRouteTableId;\n        this.localGatewayVirtualInterfaceGroupId = props.localGatewayVirtualInterfaceGroupId;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnLocalGatewayRoute.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            destinationCidrBlock: this.destinationCidrBlock,\n            localGatewayRouteTableId: this.localGatewayRouteTableId,\n            localGatewayVirtualInterfaceGroupId: this.localGatewayVirtualInterfaceGroupId,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnLocalGatewayRoutePropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnLocalGatewayRouteTableVPCAssociation`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html\n */\nexport interface CfnLocalGatewayRouteTableVPCAssociationProps {\n\n    /**\n     * The ID of the local gateway route table.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html#cfn-ec2-localgatewayroutetablevpcassociation-localgatewayroutetableid\n     */\n    readonly localGatewayRouteTableId: string;\n\n    /**\n     * The ID of the VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html#cfn-ec2-localgatewayroutetablevpcassociation-vpcid\n     */\n    readonly vpcId: string;\n\n    /**\n     * The tags assigned to the association.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html#cfn-ec2-localgatewayroutetablevpcassociation-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnLocalGatewayRouteTableVPCAssociationProps`\n *\n * @param properties - the TypeScript properties of a `CfnLocalGatewayRouteTableVPCAssociationProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnLocalGatewayRouteTableVPCAssociationPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('localGatewayRouteTableId', cdk.requiredValidator)(properties.localGatewayRouteTableId));\n    errors.collect(cdk.propertyValidator('localGatewayRouteTableId', cdk.validateString)(properties.localGatewayRouteTableId));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.requiredValidator)(properties.vpcId));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.validateString)(properties.vpcId));\n    return errors.wrap('supplied properties not correct for \"CfnLocalGatewayRouteTableVPCAssociationProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::LocalGatewayRouteTableVPCAssociation` resource\n *\n * @param properties - the TypeScript properties of a `CfnLocalGatewayRouteTableVPCAssociationProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::LocalGatewayRouteTableVPCAssociation` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLocalGatewayRouteTableVPCAssociationPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLocalGatewayRouteTableVPCAssociationPropsValidator(properties).assertSuccess();\n    return {\n        LocalGatewayRouteTableId: cdk.stringToCloudFormation(properties.localGatewayRouteTableId),\n        VpcId: cdk.stringToCloudFormation(properties.vpcId),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLocalGatewayRouteTableVPCAssociationPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLocalGatewayRouteTableVPCAssociationProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLocalGatewayRouteTableVPCAssociationProps>();\n    ret.addPropertyResult('localGatewayRouteTableId', 'LocalGatewayRouteTableId', cfn_parse.FromCloudFormation.getString(properties.LocalGatewayRouteTableId));\n    ret.addPropertyResult('vpcId', 'VpcId', cfn_parse.FromCloudFormation.getString(properties.VpcId));\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::LocalGatewayRouteTableVPCAssociation`\n *\n * Associates the specified VPC with the specified local gateway route table.\n *\n * @cloudformationResource AWS::EC2::LocalGatewayRouteTableVPCAssociation\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html\n */\nexport class CfnLocalGatewayRouteTableVPCAssociation extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::LocalGatewayRouteTableVPCAssociation\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnLocalGatewayRouteTableVPCAssociation {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnLocalGatewayRouteTableVPCAssociationPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnLocalGatewayRouteTableVPCAssociation(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the local gateway.\n     * @cloudformationAttribute LocalGatewayId\n     */\n    public readonly attrLocalGatewayId: string;\n\n    /**\n     * The ID of the association.\n     * @cloudformationAttribute LocalGatewayRouteTableVpcAssociationId\n     */\n    public readonly attrLocalGatewayRouteTableVpcAssociationId: string;\n\n    /**\n     * The state of the association.\n     * @cloudformationAttribute State\n     */\n    public readonly attrState: string;\n\n    /**\n     * The ID of the local gateway route table.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html#cfn-ec2-localgatewayroutetablevpcassociation-localgatewayroutetableid\n     */\n    public localGatewayRouteTableId: string;\n\n    /**\n     * The ID of the VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html#cfn-ec2-localgatewayroutetablevpcassociation-vpcid\n     */\n    public vpcId: string;\n\n    /**\n     * The tags assigned to the association.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html#cfn-ec2-localgatewayroutetablevpcassociation-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EC2::LocalGatewayRouteTableVPCAssociation`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnLocalGatewayRouteTableVPCAssociationProps) {\n        super(scope, id, { type: CfnLocalGatewayRouteTableVPCAssociation.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'localGatewayRouteTableId', this);\n        cdk.requireProperty(props, 'vpcId', this);\n        this.attrLocalGatewayId = cdk.Token.asString(this.getAtt('LocalGatewayId'));\n        this.attrLocalGatewayRouteTableVpcAssociationId = cdk.Token.asString(this.getAtt('LocalGatewayRouteTableVpcAssociationId'));\n        this.attrState = cdk.Token.asString(this.getAtt('State'));\n\n        this.localGatewayRouteTableId = props.localGatewayRouteTableId;\n        this.vpcId = props.vpcId;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::LocalGatewayRouteTableVPCAssociation\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnLocalGatewayRouteTableVPCAssociation.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            localGatewayRouteTableId: this.localGatewayRouteTableId,\n            vpcId: this.vpcId,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnLocalGatewayRouteTableVPCAssociationPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnNatGateway`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html\n */\nexport interface CfnNatGatewayProps {\n\n    /**\n     * The ID of the subnet in which the NAT gateway is located.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-subnetid\n     */\n    readonly subnetId: string;\n\n    /**\n     * [Public NAT gateway only] The allocation ID of the Elastic IP address that's associated with the NAT gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-allocationid\n     */\n    readonly allocationId?: string;\n\n    /**\n     * Indicates whether the NAT gateway supports public or private connectivity.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-connectivitytype\n     */\n    readonly connectivityType?: string;\n\n    /**\n     * The tags for the NAT gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnNatGatewayProps`\n *\n * @param properties - the TypeScript properties of a `CfnNatGatewayProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnNatGatewayPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('allocationId', cdk.validateString)(properties.allocationId));\n    errors.collect(cdk.propertyValidator('connectivityType', cdk.validateString)(properties.connectivityType));\n    errors.collect(cdk.propertyValidator('subnetId', cdk.requiredValidator)(properties.subnetId));\n    errors.collect(cdk.propertyValidator('subnetId', cdk.validateString)(properties.subnetId));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnNatGatewayProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::NatGateway` resource\n *\n * @param properties - the TypeScript properties of a `CfnNatGatewayProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::NatGateway` resource.\n */\n// @ts-ignore TS6133\nfunction cfnNatGatewayPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnNatGatewayPropsValidator(properties).assertSuccess();\n    return {\n        SubnetId: cdk.stringToCloudFormation(properties.subnetId),\n        AllocationId: cdk.stringToCloudFormation(properties.allocationId),\n        ConnectivityType: cdk.stringToCloudFormation(properties.connectivityType),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnNatGatewayPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnNatGatewayProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnNatGatewayProps>();\n    ret.addPropertyResult('subnetId', 'SubnetId', cfn_parse.FromCloudFormation.getString(properties.SubnetId));\n    ret.addPropertyResult('allocationId', 'AllocationId', properties.AllocationId != null ? cfn_parse.FromCloudFormation.getString(properties.AllocationId) : undefined);\n    ret.addPropertyResult('connectivityType', 'ConnectivityType', properties.ConnectivityType != null ? cfn_parse.FromCloudFormation.getString(properties.ConnectivityType) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::NatGateway`\n *\n * Specifies a network address translation (NAT) gateway in the specified subnet. You can create either a public NAT gateway or a private NAT gateway. The default is a public NAT gateway. If you create a public NAT gateway, you must specify an elastic IP address.\n *\n * With a NAT gateway, instances in a private subnet can connect to the internet, other AWS services, or an on-premises network using the IP address of the NAT gateway.\n *\n * If you add a default route ( `AWS::EC2::Route` resource) that points to a NAT gateway, specify the NAT gateway ID for the route's `NatGatewayId` property.\n *\n * For more information, see [NAT Gateways](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html) in the *Amazon VPC User Guide* .\n *\n * @cloudformationResource AWS::EC2::NatGateway\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html\n */\nexport class CfnNatGateway extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::NatGateway\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnNatGateway {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnNatGatewayPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnNatGateway(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the subnet in which the NAT gateway is located.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-subnetid\n     */\n    public subnetId: string;\n\n    /**\n     * [Public NAT gateway only] The allocation ID of the Elastic IP address that's associated with the NAT gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-allocationid\n     */\n    public allocationId: string | undefined;\n\n    /**\n     * Indicates whether the NAT gateway supports public or private connectivity.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-connectivitytype\n     */\n    public connectivityType: string | undefined;\n\n    /**\n     * The tags for the NAT gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EC2::NatGateway`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnNatGatewayProps) {\n        super(scope, id, { type: CfnNatGateway.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'subnetId', this);\n\n        this.subnetId = props.subnetId;\n        this.allocationId = props.allocationId;\n        this.connectivityType = props.connectivityType;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::NatGateway\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnNatGateway.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            subnetId: this.subnetId,\n            allocationId: this.allocationId,\n            connectivityType: this.connectivityType,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnNatGatewayPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnNetworkAcl`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkacl.html\n */\nexport interface CfnNetworkAclProps {\n\n    /**\n     * The ID of the VPC for the network ACL.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkacl.html#cfn-ec2-networkacl-vpcid\n     */\n    readonly vpcId: string;\n\n    /**\n     * The tags for the network ACL.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkacl.html#cfn-ec2-networkacl-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnNetworkAclProps`\n *\n * @param properties - the TypeScript properties of a `CfnNetworkAclProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnNetworkAclPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.requiredValidator)(properties.vpcId));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.validateString)(properties.vpcId));\n    return errors.wrap('supplied properties not correct for \"CfnNetworkAclProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::NetworkAcl` resource\n *\n * @param properties - the TypeScript properties of a `CfnNetworkAclProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::NetworkAcl` resource.\n */\n// @ts-ignore TS6133\nfunction cfnNetworkAclPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnNetworkAclPropsValidator(properties).assertSuccess();\n    return {\n        VpcId: cdk.stringToCloudFormation(properties.vpcId),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnNetworkAclPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnNetworkAclProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnNetworkAclProps>();\n    ret.addPropertyResult('vpcId', 'VpcId', cfn_parse.FromCloudFormation.getString(properties.VpcId));\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::NetworkAcl`\n *\n * Specifies a network ACL for your VPC.\n *\n * @cloudformationResource AWS::EC2::NetworkAcl\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkacl.html\n */\nexport class CfnNetworkAcl extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::NetworkAcl\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnNetworkAcl {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnNetworkAclPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnNetworkAcl(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the network ACL.\n     * @cloudformationAttribute Id\n     */\n    public readonly attrId: string;\n\n    /**\n     * The ID of the VPC for the network ACL.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkacl.html#cfn-ec2-networkacl-vpcid\n     */\n    public vpcId: string;\n\n    /**\n     * The tags for the network ACL.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkacl.html#cfn-ec2-networkacl-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EC2::NetworkAcl`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnNetworkAclProps) {\n        super(scope, id, { type: CfnNetworkAcl.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'vpcId', this);\n        this.attrId = cdk.Token.asString(this.getAtt('Id'));\n\n        this.vpcId = props.vpcId;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::NetworkAcl\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnNetworkAcl.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            vpcId: this.vpcId,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnNetworkAclPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnNetworkAclEntry`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html\n */\nexport interface CfnNetworkAclEntryProps {\n\n    /**\n     * The ID of the ACL for the entry.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-networkaclid\n     */\n    readonly networkAclId: string;\n\n    /**\n     * The IP protocol that the rule applies to. You must specify -1 or a protocol number. You can specify -1 for all protocols.\n     *\n     * > If you specify -1, all ports are opened and the `PortRange` property is ignored.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-protocol\n     */\n    readonly protocol: number;\n\n    /**\n     * Whether to allow or deny traffic that matches the rule; valid values are \"allow\" or \"deny\".\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-ruleaction\n     */\n    readonly ruleAction: string;\n\n    /**\n     * Rule number to assign to the entry, such as 100. ACL entries are processed in ascending order by rule number. Entries can't use the same rule number unless one is an egress rule and the other is an ingress rule.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-rulenumber\n     */\n    readonly ruleNumber: number;\n\n    /**\n     * The IPv4 CIDR range to allow or deny, in CIDR notation (for example, 172.16.0.0/24). Requirement is conditional: You must specify the `CidrBlock` or `Ipv6CidrBlock` property.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-cidrblock\n     */\n    readonly cidrBlock?: string;\n\n    /**\n     * Whether this rule applies to egress traffic from the subnet ( `true` ) or ingress traffic to the subnet ( `false` ). By default, AWS CloudFormation specifies `false` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-egress\n     */\n    readonly egress?: boolean | cdk.IResolvable;\n\n    /**\n     * The Internet Control Message Protocol (ICMP) code and type. Requirement is conditional: Required if specifying 1 (ICMP) for the protocol parameter.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-icmp\n     */\n    readonly icmp?: CfnNetworkAclEntry.IcmpProperty | cdk.IResolvable;\n\n    /**\n     * The IPv6 network range to allow or deny, in CIDR notation. Requirement is conditional: You must specify the `CidrBlock` or `Ipv6CidrBlock` property.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-ipv6cidrblock\n     */\n    readonly ipv6CidrBlock?: string;\n\n    /**\n     * The range of port numbers for the UDP/TCP protocol. Conditional required if specifying 6 (TCP) or 17 (UDP) for the protocol parameter.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-portrange\n     */\n    readonly portRange?: CfnNetworkAclEntry.PortRangeProperty | cdk.IResolvable;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnNetworkAclEntryProps`\n *\n * @param properties - the TypeScript properties of a `CfnNetworkAclEntryProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnNetworkAclEntryPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('cidrBlock', cdk.validateString)(properties.cidrBlock));\n    errors.collect(cdk.propertyValidator('egress', cdk.validateBoolean)(properties.egress));\n    errors.collect(cdk.propertyValidator('icmp', CfnNetworkAclEntry_IcmpPropertyValidator)(properties.icmp));\n    errors.collect(cdk.propertyValidator('ipv6CidrBlock', cdk.validateString)(properties.ipv6CidrBlock));\n    errors.collect(cdk.propertyValidator('networkAclId', cdk.requiredValidator)(properties.networkAclId));\n    errors.collect(cdk.propertyValidator('networkAclId', cdk.validateString)(properties.networkAclId));\n    errors.collect(cdk.propertyValidator('portRange', CfnNetworkAclEntry_PortRangePropertyValidator)(properties.portRange));\n    errors.collect(cdk.propertyValidator('protocol', cdk.requiredValidator)(properties.protocol));\n    errors.collect(cdk.propertyValidator('protocol', cdk.validateNumber)(properties.protocol));\n    errors.collect(cdk.propertyValidator('ruleAction', cdk.requiredValidator)(properties.ruleAction));\n    errors.collect(cdk.propertyValidator('ruleAction', cdk.validateString)(properties.ruleAction));\n    errors.collect(cdk.propertyValidator('ruleNumber', cdk.requiredValidator)(properties.ruleNumber));\n    errors.collect(cdk.propertyValidator('ruleNumber', cdk.validateNumber)(properties.ruleNumber));\n    return errors.wrap('supplied properties not correct for \"CfnNetworkAclEntryProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::NetworkAclEntry` resource\n *\n * @param properties - the TypeScript properties of a `CfnNetworkAclEntryProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::NetworkAclEntry` resource.\n */\n// @ts-ignore TS6133\nfunction cfnNetworkAclEntryPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnNetworkAclEntryPropsValidator(properties).assertSuccess();\n    return {\n        NetworkAclId: cdk.stringToCloudFormation(properties.networkAclId),\n        Protocol: cdk.numberToCloudFormation(properties.protocol),\n        RuleAction: cdk.stringToCloudFormation(properties.ruleAction),\n        RuleNumber: cdk.numberToCloudFormation(properties.ruleNumber),\n        CidrBlock: cdk.stringToCloudFormation(properties.cidrBlock),\n        Egress: cdk.booleanToCloudFormation(properties.egress),\n        Icmp: cfnNetworkAclEntryIcmpPropertyToCloudFormation(properties.icmp),\n        Ipv6CidrBlock: cdk.stringToCloudFormation(properties.ipv6CidrBlock),\n        PortRange: cfnNetworkAclEntryPortRangePropertyToCloudFormation(properties.portRange),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnNetworkAclEntryPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnNetworkAclEntryProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnNetworkAclEntryProps>();\n    ret.addPropertyResult('networkAclId', 'NetworkAclId', cfn_parse.FromCloudFormation.getString(properties.NetworkAclId));\n    ret.addPropertyResult('protocol', 'Protocol', cfn_parse.FromCloudFormation.getNumber(properties.Protocol));\n    ret.addPropertyResult('ruleAction', 'RuleAction', cfn_parse.FromCloudFormation.getString(properties.RuleAction));\n    ret.addPropertyResult('ruleNumber', 'RuleNumber', cfn_parse.FromCloudFormation.getNumber(properties.RuleNumber));\n    ret.addPropertyResult('cidrBlock', 'CidrBlock', properties.CidrBlock != null ? cfn_parse.FromCloudFormation.getString(properties.CidrBlock) : undefined);\n    ret.addPropertyResult('egress', 'Egress', properties.Egress != null ? cfn_parse.FromCloudFormation.getBoolean(properties.Egress) : undefined);\n    ret.addPropertyResult('icmp', 'Icmp', properties.Icmp != null ? CfnNetworkAclEntryIcmpPropertyFromCloudFormation(properties.Icmp) : undefined);\n    ret.addPropertyResult('ipv6CidrBlock', 'Ipv6CidrBlock', properties.Ipv6CidrBlock != null ? cfn_parse.FromCloudFormation.getString(properties.Ipv6CidrBlock) : undefined);\n    ret.addPropertyResult('portRange', 'PortRange', properties.PortRange != null ? CfnNetworkAclEntryPortRangePropertyFromCloudFormation(properties.PortRange) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::NetworkAclEntry`\n *\n * Specifies an entry, known as a rule, in a network ACL with a rule number you specify. Each network ACL has a set of numbered ingress rules and a separate set of numbered egress rules.\n *\n * For information about the protocol value, see [Protocol Numbers](https://docs.aws.amazon.com/https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml) on the Internet Assigned Numbers Authority (IANA) website.\n *\n * @cloudformationResource AWS::EC2::NetworkAclEntry\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html\n */\nexport class CfnNetworkAclEntry extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::NetworkAclEntry\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnNetworkAclEntry {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnNetworkAclEntryPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnNetworkAclEntry(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the network ACL entry.\n     * @cloudformationAttribute Id\n     */\n    public readonly attrId: string;\n\n    /**\n     * The ID of the ACL for the entry.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-networkaclid\n     */\n    public networkAclId: string;\n\n    /**\n     * The IP protocol that the rule applies to. You must specify -1 or a protocol number. You can specify -1 for all protocols.\n     *\n     * > If you specify -1, all ports are opened and the `PortRange` property is ignored.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-protocol\n     */\n    public protocol: number;\n\n    /**\n     * Whether to allow or deny traffic that matches the rule; valid values are \"allow\" or \"deny\".\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-ruleaction\n     */\n    public ruleAction: string;\n\n    /**\n     * Rule number to assign to the entry, such as 100. ACL entries are processed in ascending order by rule number. Entries can't use the same rule number unless one is an egress rule and the other is an ingress rule.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-rulenumber\n     */\n    public ruleNumber: number;\n\n    /**\n     * The IPv4 CIDR range to allow or deny, in CIDR notation (for example, 172.16.0.0/24). Requirement is conditional: You must specify the `CidrBlock` or `Ipv6CidrBlock` property.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-cidrblock\n     */\n    public cidrBlock: string | undefined;\n\n    /**\n     * Whether this rule applies to egress traffic from the subnet ( `true` ) or ingress traffic to the subnet ( `false` ). By default, AWS CloudFormation specifies `false` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-egress\n     */\n    public egress: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * The Internet Control Message Protocol (ICMP) code and type. Requirement is conditional: Required if specifying 1 (ICMP) for the protocol parameter.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-icmp\n     */\n    public icmp: CfnNetworkAclEntry.IcmpProperty | cdk.IResolvable | undefined;\n\n    /**\n     * The IPv6 network range to allow or deny, in CIDR notation. Requirement is conditional: You must specify the `CidrBlock` or `Ipv6CidrBlock` property.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-ipv6cidrblock\n     */\n    public ipv6CidrBlock: string | undefined;\n\n    /**\n     * The range of port numbers for the UDP/TCP protocol. Conditional required if specifying 6 (TCP) or 17 (UDP) for the protocol parameter.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-portrange\n     */\n    public portRange: CfnNetworkAclEntry.PortRangeProperty | cdk.IResolvable | undefined;\n\n    /**\n     * Create a new `AWS::EC2::NetworkAclEntry`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnNetworkAclEntryProps) {\n        super(scope, id, { type: CfnNetworkAclEntry.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'networkAclId', this);\n        cdk.requireProperty(props, 'protocol', this);\n        cdk.requireProperty(props, 'ruleAction', this);\n        cdk.requireProperty(props, 'ruleNumber', this);\n        this.attrId = cdk.Token.asString(this.getAtt('Id'));\n\n        this.networkAclId = props.networkAclId;\n        this.protocol = props.protocol;\n        this.ruleAction = props.ruleAction;\n        this.ruleNumber = props.ruleNumber;\n        this.cidrBlock = props.cidrBlock;\n        this.egress = props.egress;\n        this.icmp = props.icmp;\n        this.ipv6CidrBlock = props.ipv6CidrBlock;\n        this.portRange = props.portRange;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnNetworkAclEntry.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            networkAclId: this.networkAclId,\n            protocol: this.protocol,\n            ruleAction: this.ruleAction,\n            ruleNumber: this.ruleNumber,\n            cidrBlock: this.cidrBlock,\n            egress: this.egress,\n            icmp: this.icmp,\n            ipv6CidrBlock: this.ipv6CidrBlock,\n            portRange: this.portRange,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnNetworkAclEntryPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnNetworkAclEntry {\n    /**\n     * Describes the ICMP type and code.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-icmp.html\n     */\n    export interface IcmpProperty {\n        /**\n         * The Internet Control Message Protocol (ICMP) code. You can use -1 to specify all ICMP codes for the given ICMP type. Requirement is conditional: Required if you specify 1 (ICMP) for the protocol parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-icmp.html#cfn-ec2-networkaclentry-icmp-code\n         */\n        readonly code?: number;\n        /**\n         * The Internet Control Message Protocol (ICMP) type. You can use -1 to specify all ICMP types. Conditional requirement: Required if you specify 1 (ICMP) for the `CreateNetworkAclEntry` protocol parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-icmp.html#cfn-ec2-networkaclentry-icmp-type\n         */\n        readonly type?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `IcmpProperty`\n *\n * @param properties - the TypeScript properties of a `IcmpProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnNetworkAclEntry_IcmpPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('code', cdk.validateNumber)(properties.code));\n    errors.collect(cdk.propertyValidator('type', cdk.validateNumber)(properties.type));\n    return errors.wrap('supplied properties not correct for \"IcmpProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::NetworkAclEntry.Icmp` resource\n *\n * @param properties - the TypeScript properties of a `IcmpProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::NetworkAclEntry.Icmp` resource.\n */\n// @ts-ignore TS6133\nfunction cfnNetworkAclEntryIcmpPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnNetworkAclEntry_IcmpPropertyValidator(properties).assertSuccess();\n    return {\n        Code: cdk.numberToCloudFormation(properties.code),\n        Type: cdk.numberToCloudFormation(properties.type),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnNetworkAclEntryIcmpPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnNetworkAclEntry.IcmpProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnNetworkAclEntry.IcmpProperty>();\n    ret.addPropertyResult('code', 'Code', properties.Code != null ? cfn_parse.FromCloudFormation.getNumber(properties.Code) : undefined);\n    ret.addPropertyResult('type', 'Type', properties.Type != null ? cfn_parse.FromCloudFormation.getNumber(properties.Type) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnNetworkAclEntry {\n    /**\n     * Describes a range of ports.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-portrange.html\n     */\n    export interface PortRangeProperty {\n        /**\n         * The first port in the range. Required if you specify 6 (TCP) or 17 (UDP) for the protocol parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-portrange.html#cfn-ec2-networkaclentry-portrange-from\n         */\n        readonly from?: number;\n        /**\n         * The last port in the range. Required if you specify 6 (TCP) or 17 (UDP) for the protocol parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-portrange.html#cfn-ec2-networkaclentry-portrange-to\n         */\n        readonly to?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `PortRangeProperty`\n *\n * @param properties - the TypeScript properties of a `PortRangeProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnNetworkAclEntry_PortRangePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('from', cdk.validateNumber)(properties.from));\n    errors.collect(cdk.propertyValidator('to', cdk.validateNumber)(properties.to));\n    return errors.wrap('supplied properties not correct for \"PortRangeProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::NetworkAclEntry.PortRange` resource\n *\n * @param properties - the TypeScript properties of a `PortRangeProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::NetworkAclEntry.PortRange` resource.\n */\n// @ts-ignore TS6133\nfunction cfnNetworkAclEntryPortRangePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnNetworkAclEntry_PortRangePropertyValidator(properties).assertSuccess();\n    return {\n        From: cdk.numberToCloudFormation(properties.from),\n        To: cdk.numberToCloudFormation(properties.to),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnNetworkAclEntryPortRangePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnNetworkAclEntry.PortRangeProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnNetworkAclEntry.PortRangeProperty>();\n    ret.addPropertyResult('from', 'From', properties.From != null ? cfn_parse.FromCloudFormation.getNumber(properties.From) : undefined);\n    ret.addPropertyResult('to', 'To', properties.To != null ? cfn_parse.FromCloudFormation.getNumber(properties.To) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnNetworkInsightsAccessScope`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscope.html\n */\nexport interface CfnNetworkInsightsAccessScopeProps {\n\n    /**\n     * The paths to exclude.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscope.html#cfn-ec2-networkinsightsaccessscope-excludepaths\n     */\n    readonly excludePaths?: Array<CfnNetworkInsightsAccessScope.AccessScopePathRequestProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * The paths to match.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscope.html#cfn-ec2-networkinsightsaccessscope-matchpaths\n     */\n    readonly matchPaths?: Array<CfnNetworkInsightsAccessScope.AccessScopePathRequestProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * The tags.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscope.html#cfn-ec2-networkinsightsaccessscope-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnNetworkInsightsAccessScopeProps`\n *\n * @param properties - the TypeScript properties of a `CfnNetworkInsightsAccessScopeProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnNetworkInsightsAccessScopePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('excludePaths', cdk.listValidator(CfnNetworkInsightsAccessScope_AccessScopePathRequestPropertyValidator))(properties.excludePaths));\n    errors.collect(cdk.propertyValidator('matchPaths', cdk.listValidator(CfnNetworkInsightsAccessScope_AccessScopePathRequestPropertyValidator))(properties.matchPaths));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnNetworkInsightsAccessScopeProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAccessScope` resource\n *\n * @param properties - the TypeScript properties of a `CfnNetworkInsightsAccessScopeProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAccessScope` resource.\n */\n// @ts-ignore TS6133\nfunction cfnNetworkInsightsAccessScopePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnNetworkInsightsAccessScopePropsValidator(properties).assertSuccess();\n    return {\n        ExcludePaths: cdk.listMapper(cfnNetworkInsightsAccessScopeAccessScopePathRequestPropertyToCloudFormation)(properties.excludePaths),\n        MatchPaths: cdk.listMapper(cfnNetworkInsightsAccessScopeAccessScopePathRequestPropertyToCloudFormation)(properties.matchPaths),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnNetworkInsightsAccessScopePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnNetworkInsightsAccessScopeProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnNetworkInsightsAccessScopeProps>();\n    ret.addPropertyResult('excludePaths', 'ExcludePaths', properties.ExcludePaths != null ? cfn_parse.FromCloudFormation.getArray(CfnNetworkInsightsAccessScopeAccessScopePathRequestPropertyFromCloudFormation)(properties.ExcludePaths) : undefined);\n    ret.addPropertyResult('matchPaths', 'MatchPaths', properties.MatchPaths != null ? cfn_parse.FromCloudFormation.getArray(CfnNetworkInsightsAccessScopeAccessScopePathRequestPropertyFromCloudFormation)(properties.MatchPaths) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::NetworkInsightsAccessScope`\n *\n * Describes a Network Access Scope. A Network Access Scope defines outbound (egress) and inbound (ingress) traffic patterns, including sources, destinations, paths, and traffic types.\n *\n * Network Access Analyzer identifies unintended network access to your resources on AWS . When you start an analysis on a Network Access Scope, Network Access Analyzer produces findings. For more information, see the [Network Access Analyzer User Guide](https://docs.aws.amazon.com/vpc/latest/network-access-analyzer/) .\n *\n * @cloudformationResource AWS::EC2::NetworkInsightsAccessScope\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscope.html\n */\nexport class CfnNetworkInsightsAccessScope extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::NetworkInsightsAccessScope\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnNetworkInsightsAccessScope {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnNetworkInsightsAccessScopePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnNetworkInsightsAccessScope(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The creation date.\n     * @cloudformationAttribute CreatedDate\n     */\n    public readonly attrCreatedDate: string;\n\n    /**\n     * The ARN of the Network Access Scope.\n     * @cloudformationAttribute NetworkInsightsAccessScopeArn\n     */\n    public readonly attrNetworkInsightsAccessScopeArn: string;\n\n    /**\n     * The ID of the Network Access Scope.\n     * @cloudformationAttribute NetworkInsightsAccessScopeId\n     */\n    public readonly attrNetworkInsightsAccessScopeId: string;\n\n    /**\n     * The last updated date.\n     * @cloudformationAttribute UpdatedDate\n     */\n    public readonly attrUpdatedDate: string;\n\n    /**\n     * The paths to exclude.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscope.html#cfn-ec2-networkinsightsaccessscope-excludepaths\n     */\n    public excludePaths: Array<CfnNetworkInsightsAccessScope.AccessScopePathRequestProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n    /**\n     * The paths to match.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscope.html#cfn-ec2-networkinsightsaccessscope-matchpaths\n     */\n    public matchPaths: Array<CfnNetworkInsightsAccessScope.AccessScopePathRequestProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n    /**\n     * The tags.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscope.html#cfn-ec2-networkinsightsaccessscope-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EC2::NetworkInsightsAccessScope`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnNetworkInsightsAccessScopeProps = {}) {\n        super(scope, id, { type: CfnNetworkInsightsAccessScope.CFN_RESOURCE_TYPE_NAME, properties: props });\n        this.attrCreatedDate = cdk.Token.asString(this.getAtt('CreatedDate'));\n        this.attrNetworkInsightsAccessScopeArn = cdk.Token.asString(this.getAtt('NetworkInsightsAccessScopeArn'));\n        this.attrNetworkInsightsAccessScopeId = cdk.Token.asString(this.getAtt('NetworkInsightsAccessScopeId'));\n        this.attrUpdatedDate = cdk.Token.asString(this.getAtt('UpdatedDate'));\n\n        this.excludePaths = props.excludePaths;\n        this.matchPaths = props.matchPaths;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::NetworkInsightsAccessScope\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnNetworkInsightsAccessScope.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            excludePaths: this.excludePaths,\n            matchPaths: this.matchPaths,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnNetworkInsightsAccessScopePropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnNetworkInsightsAccessScope {\n    /**\n     * Describes a path.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-accessscopepathrequest.html\n     */\n    export interface AccessScopePathRequestProperty {\n        /**\n         * The destination.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-accessscopepathrequest.html#cfn-ec2-networkinsightsaccessscope-accessscopepathrequest-destination\n         */\n        readonly destination?: CfnNetworkInsightsAccessScope.PathStatementRequestProperty | cdk.IResolvable;\n        /**\n         * The source.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-accessscopepathrequest.html#cfn-ec2-networkinsightsaccessscope-accessscopepathrequest-source\n         */\n        readonly source?: CfnNetworkInsightsAccessScope.PathStatementRequestProperty | cdk.IResolvable;\n        /**\n         * The through resources.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-accessscopepathrequest.html#cfn-ec2-networkinsightsaccessscope-accessscopepathrequest-throughresources\n         */\n        readonly throughResources?: Array<CfnNetworkInsightsAccessScope.ThroughResourcesStatementRequestProperty | cdk.IResolvable> | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AccessScopePathRequestProperty`\n *\n * @param properties - the TypeScript properties of a `AccessScopePathRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnNetworkInsightsAccessScope_AccessScopePathRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('destination', CfnNetworkInsightsAccessScope_PathStatementRequestPropertyValidator)(properties.destination));\n    errors.collect(cdk.propertyValidator('source', CfnNetworkInsightsAccessScope_PathStatementRequestPropertyValidator)(properties.source));\n    errors.collect(cdk.propertyValidator('throughResources', cdk.listValidator(CfnNetworkInsightsAccessScope_ThroughResourcesStatementRequestPropertyValidator))(properties.throughResources));\n    return errors.wrap('supplied properties not correct for \"AccessScopePathRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAccessScope.AccessScopePathRequest` resource\n *\n * @param properties - the TypeScript properties of a `AccessScopePathRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAccessScope.AccessScopePathRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnNetworkInsightsAccessScopeAccessScopePathRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnNetworkInsightsAccessScope_AccessScopePathRequestPropertyValidator(properties).assertSuccess();\n    return {\n        Destination: cfnNetworkInsightsAccessScopePathStatementRequestPropertyToCloudFormation(properties.destination),\n        Source: cfnNetworkInsightsAccessScopePathStatementRequestPropertyToCloudFormation(properties.source),\n        ThroughResources: cdk.listMapper(cfnNetworkInsightsAccessScopeThroughResourcesStatementRequestPropertyToCloudFormation)(properties.throughResources),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnNetworkInsightsAccessScopeAccessScopePathRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnNetworkInsightsAccessScope.AccessScopePathRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnNetworkInsightsAccessScope.AccessScopePathRequestProperty>();\n    ret.addPropertyResult('destination', 'Destination', properties.Destination != null ? CfnNetworkInsightsAccessScopePathStatementRequestPropertyFromCloudFormation(properties.Destination) : undefined);\n    ret.addPropertyResult('source', 'Source', properties.Source != null ? CfnNetworkInsightsAccessScopePathStatementRequestPropertyFromCloudFormation(properties.Source) : undefined);\n    ret.addPropertyResult('throughResources', 'ThroughResources', properties.ThroughResources != null ? cfn_parse.FromCloudFormation.getArray(CfnNetworkInsightsAccessScopeThroughResourcesStatementRequestPropertyFromCloudFormation)(properties.ThroughResources) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnNetworkInsightsAccessScope {\n    /**\n     * Describes a packet header statement.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-packetheaderstatementrequest.html\n     */\n    export interface PacketHeaderStatementRequestProperty {\n        /**\n         * The destination addresses.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-packetheaderstatementrequest.html#cfn-ec2-networkinsightsaccessscope-packetheaderstatementrequest-destinationaddresses\n         */\n        readonly destinationAddresses?: string[];\n        /**\n         * The destination ports.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-packetheaderstatementrequest.html#cfn-ec2-networkinsightsaccessscope-packetheaderstatementrequest-destinationports\n         */\n        readonly destinationPorts?: string[];\n        /**\n         * The destination prefix lists.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-packetheaderstatementrequest.html#cfn-ec2-networkinsightsaccessscope-packetheaderstatementrequest-destinationprefixlists\n         */\n        readonly destinationPrefixLists?: string[];\n        /**\n         * The protocols.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-packetheaderstatementrequest.html#cfn-ec2-networkinsightsaccessscope-packetheaderstatementrequest-protocols\n         */\n        readonly protocols?: string[];\n        /**\n         * The source addresses.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-packetheaderstatementrequest.html#cfn-ec2-networkinsightsaccessscope-packetheaderstatementrequest-sourceaddresses\n         */\n        readonly sourceAddresses?: string[];\n        /**\n         * The source ports.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-packetheaderstatementrequest.html#cfn-ec2-networkinsightsaccessscope-packetheaderstatementrequest-sourceports\n         */\n        readonly sourcePorts?: string[];\n        /**\n         * The source prefix lists.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-packetheaderstatementrequest.html#cfn-ec2-networkinsightsaccessscope-packetheaderstatementrequest-sourceprefixlists\n         */\n        readonly sourcePrefixLists?: string[];\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `PacketHeaderStatementRequestProperty`\n *\n * @param properties - the TypeScript properties of a `PacketHeaderStatementRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnNetworkInsightsAccessScope_PacketHeaderStatementRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('destinationAddresses', cdk.listValidator(cdk.validateString))(properties.destinationAddresses));\n    errors.collect(cdk.propertyValidator('destinationPorts', cdk.listValidator(cdk.validateString))(properties.destinationPorts));\n    errors.collect(cdk.propertyValidator('destinationPrefixLists', cdk.listValidator(cdk.validateString))(properties.destinationPrefixLists));\n    errors.collect(cdk.propertyValidator('protocols', cdk.listValidator(cdk.validateString))(properties.protocols));\n    errors.collect(cdk.propertyValidator('sourceAddresses', cdk.listValidator(cdk.validateString))(properties.sourceAddresses));\n    errors.collect(cdk.propertyValidator('sourcePorts', cdk.listValidator(cdk.validateString))(properties.sourcePorts));\n    errors.collect(cdk.propertyValidator('sourcePrefixLists', cdk.listValidator(cdk.validateString))(properties.sourcePrefixLists));\n    return errors.wrap('supplied properties not correct for \"PacketHeaderStatementRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAccessScope.PacketHeaderStatementRequest` resource\n *\n * @param properties - the TypeScript properties of a `PacketHeaderStatementRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAccessScope.PacketHeaderStatementRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnNetworkInsightsAccessScopePacketHeaderStatementRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnNetworkInsightsAccessScope_PacketHeaderStatementRequestPropertyValidator(properties).assertSuccess();\n    return {\n        DestinationAddresses: cdk.listMapper(cdk.stringToCloudFormation)(properties.destinationAddresses),\n        DestinationPorts: cdk.listMapper(cdk.stringToCloudFormation)(properties.destinationPorts),\n        DestinationPrefixLists: cdk.listMapper(cdk.stringToCloudFormation)(properties.destinationPrefixLists),\n        Protocols: cdk.listMapper(cdk.stringToCloudFormation)(properties.protocols),\n        SourceAddresses: cdk.listMapper(cdk.stringToCloudFormation)(properties.sourceAddresses),\n        SourcePorts: cdk.listMapper(cdk.stringToCloudFormation)(properties.sourcePorts),\n        SourcePrefixLists: cdk.listMapper(cdk.stringToCloudFormation)(properties.sourcePrefixLists),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnNetworkInsightsAccessScopePacketHeaderStatementRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnNetworkInsightsAccessScope.PacketHeaderStatementRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnNetworkInsightsAccessScope.PacketHeaderStatementRequestProperty>();\n    ret.addPropertyResult('destinationAddresses', 'DestinationAddresses', properties.DestinationAddresses != null ? cfn_parse.FromCloudFormation.getStringArray(properties.DestinationAddresses) : undefined);\n    ret.addPropertyResult('destinationPorts', 'DestinationPorts', properties.DestinationPorts != null ? cfn_parse.FromCloudFormation.getStringArray(properties.DestinationPorts) : undefined);\n    ret.addPropertyResult('destinationPrefixLists', 'DestinationPrefixLists', properties.DestinationPrefixLists != null ? cfn_parse.FromCloudFormation.getStringArray(properties.DestinationPrefixLists) : undefined);\n    ret.addPropertyResult('protocols', 'Protocols', properties.Protocols != null ? cfn_parse.FromCloudFormation.getStringArray(properties.Protocols) : undefined);\n    ret.addPropertyResult('sourceAddresses', 'SourceAddresses', properties.SourceAddresses != null ? cfn_parse.FromCloudFormation.getStringArray(properties.SourceAddresses) : undefined);\n    ret.addPropertyResult('sourcePorts', 'SourcePorts', properties.SourcePorts != null ? cfn_parse.FromCloudFormation.getStringArray(properties.SourcePorts) : undefined);\n    ret.addPropertyResult('sourcePrefixLists', 'SourcePrefixLists', properties.SourcePrefixLists != null ? cfn_parse.FromCloudFormation.getStringArray(properties.SourcePrefixLists) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnNetworkInsightsAccessScope {\n    /**\n     * Describes a path statement.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-pathstatementrequest.html\n     */\n    export interface PathStatementRequestProperty {\n        /**\n         * The packet header statement.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-pathstatementrequest.html#cfn-ec2-networkinsightsaccessscope-pathstatementrequest-packetheaderstatement\n         */\n        readonly packetHeaderStatement?: CfnNetworkInsightsAccessScope.PacketHeaderStatementRequestProperty | cdk.IResolvable;\n        /**\n         * The resource statement.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-pathstatementrequest.html#cfn-ec2-networkinsightsaccessscope-pathstatementrequest-resourcestatement\n         */\n        readonly resourceStatement?: CfnNetworkInsightsAccessScope.ResourceStatementRequestProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `PathStatementRequestProperty`\n *\n * @param properties - the TypeScript properties of a `PathStatementRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnNetworkInsightsAccessScope_PathStatementRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('packetHeaderStatement', CfnNetworkInsightsAccessScope_PacketHeaderStatementRequestPropertyValidator)(properties.packetHeaderStatement));\n    errors.collect(cdk.propertyValidator('resourceStatement', CfnNetworkInsightsAccessScope_ResourceStatementRequestPropertyValidator)(properties.resourceStatement));\n    return errors.wrap('supplied properties not correct for \"PathStatementRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAccessScope.PathStatementRequest` resource\n *\n * @param properties - the TypeScript properties of a `PathStatementRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAccessScope.PathStatementRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnNetworkInsightsAccessScopePathStatementRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnNetworkInsightsAccessScope_PathStatementRequestPropertyValidator(properties).assertSuccess();\n    return {\n        PacketHeaderStatement: cfnNetworkInsightsAccessScopePacketHeaderStatementRequestPropertyToCloudFormation(properties.packetHeaderStatement),\n        ResourceStatement: cfnNetworkInsightsAccessScopeResourceStatementRequestPropertyToCloudFormation(properties.resourceStatement),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnNetworkInsightsAccessScopePathStatementRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnNetworkInsightsAccessScope.PathStatementRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnNetworkInsightsAccessScope.PathStatementRequestProperty>();\n    ret.addPropertyResult('packetHeaderStatement', 'PacketHeaderStatement', properties.PacketHeaderStatement != null ? CfnNetworkInsightsAccessScopePacketHeaderStatementRequestPropertyFromCloudFormation(properties.PacketHeaderStatement) : undefined);\n    ret.addPropertyResult('resourceStatement', 'ResourceStatement', properties.ResourceStatement != null ? CfnNetworkInsightsAccessScopeResourceStatementRequestPropertyFromCloudFormation(properties.ResourceStatement) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnNetworkInsightsAccessScope {\n    /**\n     * Describes a resource statement.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-resourcestatementrequest.html\n     */\n    export interface ResourceStatementRequestProperty {\n        /**\n         * The resource types.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-resourcestatementrequest.html#cfn-ec2-networkinsightsaccessscope-resourcestatementrequest-resourcetypes\n         */\n        readonly resourceTypes?: string[];\n        /**\n         * The resources.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-resourcestatementrequest.html#cfn-ec2-networkinsightsaccessscope-resourcestatementrequest-resources\n         */\n        readonly resources?: string[];\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ResourceStatementRequestProperty`\n *\n * @param properties - the TypeScript properties of a `ResourceStatementRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnNetworkInsightsAccessScope_ResourceStatementRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('resourceTypes', cdk.listValidator(cdk.validateString))(properties.resourceTypes));\n    errors.collect(cdk.propertyValidator('resources', cdk.listValidator(cdk.validateString))(properties.resources));\n    return errors.wrap('supplied properties not correct for \"ResourceStatementRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAccessScope.ResourceStatementRequest` resource\n *\n * @param properties - the TypeScript properties of a `ResourceStatementRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAccessScope.ResourceStatementRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnNetworkInsightsAccessScopeResourceStatementRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnNetworkInsightsAccessScope_ResourceStatementRequestPropertyValidator(properties).assertSuccess();\n    return {\n        ResourceTypes: cdk.listMapper(cdk.stringToCloudFormation)(properties.resourceTypes),\n        Resources: cdk.listMapper(cdk.stringToCloudFormation)(properties.resources),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnNetworkInsightsAccessScopeResourceStatementRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnNetworkInsightsAccessScope.ResourceStatementRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnNetworkInsightsAccessScope.ResourceStatementRequestProperty>();\n    ret.addPropertyResult('resourceTypes', 'ResourceTypes', properties.ResourceTypes != null ? cfn_parse.FromCloudFormation.getStringArray(properties.ResourceTypes) : undefined);\n    ret.addPropertyResult('resources', 'Resources', properties.Resources != null ? cfn_parse.FromCloudFormation.getStringArray(properties.Resources) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnNetworkInsightsAccessScope {\n    /**\n     * Describes a through resource statement.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-throughresourcesstatementrequest.html\n     */\n    export interface ThroughResourcesStatementRequestProperty {\n        /**\n         * The resource statement.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-throughresourcesstatementrequest.html#cfn-ec2-networkinsightsaccessscope-throughresourcesstatementrequest-resourcestatement\n         */\n        readonly resourceStatement?: CfnNetworkInsightsAccessScope.ResourceStatementRequestProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ThroughResourcesStatementRequestProperty`\n *\n * @param properties - the TypeScript properties of a `ThroughResourcesStatementRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnNetworkInsightsAccessScope_ThroughResourcesStatementRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('resourceStatement', CfnNetworkInsightsAccessScope_ResourceStatementRequestPropertyValidator)(properties.resourceStatement));\n    return errors.wrap('supplied properties not correct for \"ThroughResourcesStatementRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAccessScope.ThroughResourcesStatementRequest` resource\n *\n * @param properties - the TypeScript properties of a `ThroughResourcesStatementRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAccessScope.ThroughResourcesStatementRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnNetworkInsightsAccessScopeThroughResourcesStatementRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnNetworkInsightsAccessScope_ThroughResourcesStatementRequestPropertyValidator(properties).assertSuccess();\n    return {\n        ResourceStatement: cfnNetworkInsightsAccessScopeResourceStatementRequestPropertyToCloudFormation(properties.resourceStatement),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnNetworkInsightsAccessScopeThroughResourcesStatementRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnNetworkInsightsAccessScope.ThroughResourcesStatementRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnNetworkInsightsAccessScope.ThroughResourcesStatementRequestProperty>();\n    ret.addPropertyResult('resourceStatement', 'ResourceStatement', properties.ResourceStatement != null ? CfnNetworkInsightsAccessScopeResourceStatementRequestPropertyFromCloudFormation(properties.ResourceStatement) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnNetworkInsightsAccessScopeAnalysis`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscopeanalysis.html\n */\nexport interface CfnNetworkInsightsAccessScopeAnalysisProps {\n\n    /**\n     * The ID of the Network Access Scope.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscopeanalysis.html#cfn-ec2-networkinsightsaccessscopeanalysis-networkinsightsaccessscopeid\n     */\n    readonly networkInsightsAccessScopeId: string;\n\n    /**\n     * The tags.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscopeanalysis.html#cfn-ec2-networkinsightsaccessscopeanalysis-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnNetworkInsightsAccessScopeAnalysisProps`\n *\n * @param properties - the TypeScript properties of a `CfnNetworkInsightsAccessScopeAnalysisProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnNetworkInsightsAccessScopeAnalysisPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('networkInsightsAccessScopeId', cdk.requiredValidator)(properties.networkInsightsAccessScopeId));\n    errors.collect(cdk.propertyValidator('networkInsightsAccessScopeId', cdk.validateString)(properties.networkInsightsAccessScopeId));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnNetworkInsightsAccessScopeAnalysisProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAccessScopeAnalysis` resource\n *\n * @param properties - the TypeScript properties of a `CfnNetworkInsightsAccessScopeAnalysisProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAccessScopeAnalysis` resource.\n */\n// @ts-ignore TS6133\nfunction cfnNetworkInsightsAccessScopeAnalysisPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnNetworkInsightsAccessScopeAnalysisPropsValidator(properties).assertSuccess();\n    return {\n        NetworkInsightsAccessScopeId: cdk.stringToCloudFormation(properties.networkInsightsAccessScopeId),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnNetworkInsightsAccessScopeAnalysisPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnNetworkInsightsAccessScopeAnalysisProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnNetworkInsightsAccessScopeAnalysisProps>();\n    ret.addPropertyResult('networkInsightsAccessScopeId', 'NetworkInsightsAccessScopeId', cfn_parse.FromCloudFormation.getString(properties.NetworkInsightsAccessScopeId));\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::NetworkInsightsAccessScopeAnalysis`\n *\n * Describes a Network Access Scope analysis.\n *\n * @cloudformationResource AWS::EC2::NetworkInsightsAccessScopeAnalysis\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscopeanalysis.html\n */\nexport class CfnNetworkInsightsAccessScopeAnalysis extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::NetworkInsightsAccessScopeAnalysis\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnNetworkInsightsAccessScopeAnalysis {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnNetworkInsightsAccessScopeAnalysisPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnNetworkInsightsAccessScopeAnalysis(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The number of network interfaces analyzed.\n     * @cloudformationAttribute AnalyzedEniCount\n     */\n    public readonly attrAnalyzedEniCount: number;\n\n    /**\n     * The end date of the analysis.\n     * @cloudformationAttribute EndDate\n     */\n    public readonly attrEndDate: string;\n\n    /**\n     * Indicates whether there are findings (true | false | unknown).\n     * @cloudformationAttribute FindingsFound\n     */\n    public readonly attrFindingsFound: string;\n\n    /**\n     * The ARN of the Network Access Scope analysis.\n     * @cloudformationAttribute NetworkInsightsAccessScopeAnalysisArn\n     */\n    public readonly attrNetworkInsightsAccessScopeAnalysisArn: string;\n\n    /**\n     * The ID of the Network Access Scope analysis.\n     * @cloudformationAttribute NetworkInsightsAccessScopeAnalysisId\n     */\n    public readonly attrNetworkInsightsAccessScopeAnalysisId: string;\n\n    /**\n     * The start date of the analysis.\n     * @cloudformationAttribute StartDate\n     */\n    public readonly attrStartDate: string;\n\n    /**\n     * The status of the analysis (running | succeeded | failed).\n     * @cloudformationAttribute Status\n     */\n    public readonly attrStatus: string;\n\n    /**\n     * The status message.\n     * @cloudformationAttribute StatusMessage\n     */\n    public readonly attrStatusMessage: string;\n\n    /**\n     * The ID of the Network Access Scope.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscopeanalysis.html#cfn-ec2-networkinsightsaccessscopeanalysis-networkinsightsaccessscopeid\n     */\n    public networkInsightsAccessScopeId: string;\n\n    /**\n     * The tags.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscopeanalysis.html#cfn-ec2-networkinsightsaccessscopeanalysis-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EC2::NetworkInsightsAccessScopeAnalysis`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnNetworkInsightsAccessScopeAnalysisProps) {\n        super(scope, id, { type: CfnNetworkInsightsAccessScopeAnalysis.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'networkInsightsAccessScopeId', this);\n        this.attrAnalyzedEniCount = cdk.Token.asNumber(this.getAtt('AnalyzedEniCount'));\n        this.attrEndDate = cdk.Token.asString(this.getAtt('EndDate'));\n        this.attrFindingsFound = cdk.Token.asString(this.getAtt('FindingsFound'));\n        this.attrNetworkInsightsAccessScopeAnalysisArn = cdk.Token.asString(this.getAtt('NetworkInsightsAccessScopeAnalysisArn'));\n        this.attrNetworkInsightsAccessScopeAnalysisId = cdk.Token.asString(this.getAtt('NetworkInsightsAccessScopeAnalysisId'));\n        this.attrStartDate = cdk.Token.asString(this.getAtt('StartDate'));\n        this.attrStatus = cdk.Token.asString(this.getAtt('Status'));\n        this.attrStatusMessage = cdk.Token.asString(this.getAtt('StatusMessage'));\n\n        this.networkInsightsAccessScopeId = props.networkInsightsAccessScopeId;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::NetworkInsightsAccessScopeAnalysis\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnNetworkInsightsAccessScopeAnalysis.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            networkInsightsAccessScopeId: this.networkInsightsAccessScopeId,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnNetworkInsightsAccessScopeAnalysisPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnNetworkInsightsAnalysis`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html\n */\nexport interface CfnNetworkInsightsAnalysisProps {\n\n    /**\n     * The ID of the path.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html#cfn-ec2-networkinsightsanalysis-networkinsightspathid\n     */\n    readonly networkInsightsPathId: string;\n\n    /**\n     * The Amazon Resource Names (ARN) of the resources that the path must traverse.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html#cfn-ec2-networkinsightsanalysis-filterinarns\n     */\n    readonly filterInArns?: string[];\n\n    /**\n     * The tags to apply.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html#cfn-ec2-networkinsightsanalysis-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnNetworkInsightsAnalysisProps`\n *\n * @param properties - the TypeScript properties of a `CfnNetworkInsightsAnalysisProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnNetworkInsightsAnalysisPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('filterInArns', cdk.listValidator(cdk.validateString))(properties.filterInArns));\n    errors.collect(cdk.propertyValidator('networkInsightsPathId', cdk.requiredValidator)(properties.networkInsightsPathId));\n    errors.collect(cdk.propertyValidator('networkInsightsPathId', cdk.validateString)(properties.networkInsightsPathId));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnNetworkInsightsAnalysisProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAnalysis` resource\n *\n * @param properties - the TypeScript properties of a `CfnNetworkInsightsAnalysisProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAnalysis` resource.\n */\n// @ts-ignore TS6133\nfunction cfnNetworkInsightsAnalysisPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnNetworkInsightsAnalysisPropsValidator(properties).assertSuccess();\n    return {\n        NetworkInsightsPathId: cdk.stringToCloudFormation(properties.networkInsightsPathId),\n        FilterInArns: cdk.listMapper(cdk.stringToCloudFormation)(properties.filterInArns),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnNetworkInsightsAnalysisPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnNetworkInsightsAnalysisProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnNetworkInsightsAnalysisProps>();\n    ret.addPropertyResult('networkInsightsPathId', 'NetworkInsightsPathId', cfn_parse.FromCloudFormation.getString(properties.NetworkInsightsPathId));\n    ret.addPropertyResult('filterInArns', 'FilterInArns', properties.FilterInArns != null ? cfn_parse.FromCloudFormation.getStringArray(properties.FilterInArns) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::NetworkInsightsAnalysis`\n *\n * Specifies a network insights analysis.\n *\n * @cloudformationResource AWS::EC2::NetworkInsightsAnalysis\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html\n */\nexport class CfnNetworkInsightsAnalysis extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::NetworkInsightsAnalysis\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnNetworkInsightsAnalysis {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnNetworkInsightsAnalysisPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnNetworkInsightsAnalysis(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * Potential intermediate components.\n     * @cloudformationAttribute AlternatePathHints\n     */\n    public readonly attrAlternatePathHints: cdk.IResolvable;\n\n    /**\n     * The explanations. For more information, see [Reachability Analyzer explanation codes](https://docs.aws.amazon.com/vpc/latest/reachability/explanation-codes.html) .\n     * @cloudformationAttribute Explanations\n     */\n    public readonly attrExplanations: cdk.IResolvable;\n\n    /**\n     * The components in the path from source to destination.\n     * @cloudformationAttribute ForwardPathComponents\n     */\n    public readonly attrForwardPathComponents: cdk.IResolvable;\n\n    /**\n     * The Amazon Resource Name (ARN) of the network insights analysis.\n     * @cloudformationAttribute NetworkInsightsAnalysisArn\n     */\n    public readonly attrNetworkInsightsAnalysisArn: string;\n\n    /**\n     * The ID of the network insights analysis.\n     * @cloudformationAttribute NetworkInsightsAnalysisId\n     */\n    public readonly attrNetworkInsightsAnalysisId: string;\n\n    /**\n     * Indicates whether the destination is reachable from the source.\n     * @cloudformationAttribute NetworkPathFound\n     */\n    public readonly attrNetworkPathFound: cdk.IResolvable;\n\n    /**\n     * The components in the path from destination to source.\n     * @cloudformationAttribute ReturnPathComponents\n     */\n    public readonly attrReturnPathComponents: cdk.IResolvable;\n\n    /**\n     * The time the analysis started.\n     * @cloudformationAttribute StartDate\n     */\n    public readonly attrStartDate: string;\n\n    /**\n     * The status of the network insights analysis.\n     * @cloudformationAttribute Status\n     */\n    public readonly attrStatus: string;\n\n    /**\n     * The status message, if the status is `failed` .\n     * @cloudformationAttribute StatusMessage\n     */\n    public readonly attrStatusMessage: string;\n\n    /**\n     * The ID of the path.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html#cfn-ec2-networkinsightsanalysis-networkinsightspathid\n     */\n    public networkInsightsPathId: string;\n\n    /**\n     * The Amazon Resource Names (ARN) of the resources that the path must traverse.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html#cfn-ec2-networkinsightsanalysis-filterinarns\n     */\n    public filterInArns: string[] | undefined;\n\n    /**\n     * The tags to apply.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html#cfn-ec2-networkinsightsanalysis-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EC2::NetworkInsightsAnalysis`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnNetworkInsightsAnalysisProps) {\n        super(scope, id, { type: CfnNetworkInsightsAnalysis.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'networkInsightsPathId', this);\n        this.attrAlternatePathHints = this.getAtt('AlternatePathHints');\n        this.attrExplanations = this.getAtt('Explanations');\n        this.attrForwardPathComponents = this.getAtt('ForwardPathComponents');\n        this.attrNetworkInsightsAnalysisArn = cdk.Token.asString(this.getAtt('NetworkInsightsAnalysisArn'));\n        this.attrNetworkInsightsAnalysisId = cdk.Token.asString(this.getAtt('NetworkInsightsAnalysisId'));\n        this.attrNetworkPathFound = this.getAtt('NetworkPathFound');\n        this.attrReturnPathComponents = this.getAtt('ReturnPathComponents');\n        this.attrStartDate = cdk.Token.asString(this.getAtt('StartDate'));\n        this.attrStatus = cdk.Token.asString(this.getAtt('Status'));\n        this.attrStatusMessage = cdk.Token.asString(this.getAtt('StatusMessage'));\n\n        this.networkInsightsPathId = props.networkInsightsPathId;\n        this.filterInArns = props.filterInArns;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::NetworkInsightsAnalysis\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnNetworkInsightsAnalysis.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            networkInsightsPathId: this.networkInsightsPathId,\n            filterInArns: this.filterInArns,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnNetworkInsightsAnalysisPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnNetworkInsightsAnalysis {\n    /**\n     * Describes an potential intermediate component of a feasible path.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-alternatepathhint.html\n     */\n    export interface AlternatePathHintProperty {\n        /**\n         * The Amazon Resource Name (ARN) of the component.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-alternatepathhint.html#cfn-ec2-networkinsightsanalysis-alternatepathhint-componentarn\n         */\n        readonly componentArn?: string;\n        /**\n         * The ID of the component.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-alternatepathhint.html#cfn-ec2-networkinsightsanalysis-alternatepathhint-componentid\n         */\n        readonly componentId?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AlternatePathHintProperty`\n *\n * @param properties - the TypeScript properties of a `AlternatePathHintProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnNetworkInsightsAnalysis_AlternatePathHintPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('componentArn', cdk.validateString)(properties.componentArn));\n    errors.collect(cdk.propertyValidator('componentId', cdk.validateString)(properties.componentId));\n    return errors.wrap('supplied properties not correct for \"AlternatePathHintProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAnalysis.AlternatePathHint` resource\n *\n * @param properties - the TypeScript properties of a `AlternatePathHintProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAnalysis.AlternatePathHint` resource.\n */\n// @ts-ignore TS6133\nfunction cfnNetworkInsightsAnalysisAlternatePathHintPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnNetworkInsightsAnalysis_AlternatePathHintPropertyValidator(properties).assertSuccess();\n    return {\n        ComponentArn: cdk.stringToCloudFormation(properties.componentArn),\n        ComponentId: cdk.stringToCloudFormation(properties.componentId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnNetworkInsightsAnalysisAlternatePathHintPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnNetworkInsightsAnalysis.AlternatePathHintProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnNetworkInsightsAnalysis.AlternatePathHintProperty>();\n    ret.addPropertyResult('componentArn', 'ComponentArn', properties.ComponentArn != null ? cfn_parse.FromCloudFormation.getString(properties.ComponentArn) : undefined);\n    ret.addPropertyResult('componentId', 'ComponentId', properties.ComponentId != null ? cfn_parse.FromCloudFormation.getString(properties.ComponentId) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnNetworkInsightsAnalysis {\n    /**\n     * Describes a network access control (ACL) rule.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisaclrule.html\n     */\n    export interface AnalysisAclRuleProperty {\n        /**\n         * The IPv4 address range, in CIDR notation.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisaclrule.html#cfn-ec2-networkinsightsanalysis-analysisaclrule-cidr\n         */\n        readonly cidr?: string;\n        /**\n         * Indicates whether the rule is an outbound rule.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisaclrule.html#cfn-ec2-networkinsightsanalysis-analysisaclrule-egress\n         */\n        readonly egress?: boolean | cdk.IResolvable;\n        /**\n         * The range of ports.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisaclrule.html#cfn-ec2-networkinsightsanalysis-analysisaclrule-portrange\n         */\n        readonly portRange?: CfnNetworkInsightsAnalysis.PortRangeProperty | cdk.IResolvable;\n        /**\n         * The protocol.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisaclrule.html#cfn-ec2-networkinsightsanalysis-analysisaclrule-protocol\n         */\n        readonly protocol?: string;\n        /**\n         * Indicates whether to allow or deny traffic that matches the rule.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisaclrule.html#cfn-ec2-networkinsightsanalysis-analysisaclrule-ruleaction\n         */\n        readonly ruleAction?: string;\n        /**\n         * The rule number.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisaclrule.html#cfn-ec2-networkinsightsanalysis-analysisaclrule-rulenumber\n         */\n        readonly ruleNumber?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AnalysisAclRuleProperty`\n *\n * @param properties - the TypeScript properties of a `AnalysisAclRuleProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnNetworkInsightsAnalysis_AnalysisAclRulePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('cidr', cdk.validateString)(properties.cidr));\n    errors.collect(cdk.propertyValidator('egress', cdk.validateBoolean)(properties.egress));\n    errors.collect(cdk.propertyValidator('portRange', CfnNetworkInsightsAnalysis_PortRangePropertyValidator)(properties.portRange));\n    errors.collect(cdk.propertyValidator('protocol', cdk.validateString)(properties.protocol));\n    errors.collect(cdk.propertyValidator('ruleAction', cdk.validateString)(properties.ruleAction));\n    errors.collect(cdk.propertyValidator('ruleNumber', cdk.validateNumber)(properties.ruleNumber));\n    return errors.wrap('supplied properties not correct for \"AnalysisAclRuleProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAnalysis.AnalysisAclRule` resource\n *\n * @param properties - the TypeScript properties of a `AnalysisAclRuleProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAnalysis.AnalysisAclRule` resource.\n */\n// @ts-ignore TS6133\nfunction cfnNetworkInsightsAnalysisAnalysisAclRulePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnNetworkInsightsAnalysis_AnalysisAclRulePropertyValidator(properties).assertSuccess();\n    return {\n        Cidr: cdk.stringToCloudFormation(properties.cidr),\n        Egress: cdk.booleanToCloudFormation(properties.egress),\n        PortRange: cfnNetworkInsightsAnalysisPortRangePropertyToCloudFormation(properties.portRange),\n        Protocol: cdk.stringToCloudFormation(properties.protocol),\n        RuleAction: cdk.stringToCloudFormation(properties.ruleAction),\n        RuleNumber: cdk.numberToCloudFormation(properties.ruleNumber),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnNetworkInsightsAnalysisAnalysisAclRulePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnNetworkInsightsAnalysis.AnalysisAclRuleProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnNetworkInsightsAnalysis.AnalysisAclRuleProperty>();\n    ret.addPropertyResult('cidr', 'Cidr', properties.Cidr != null ? cfn_parse.FromCloudFormation.getString(properties.Cidr) : undefined);\n    ret.addPropertyResult('egress', 'Egress', properties.Egress != null ? cfn_parse.FromCloudFormation.getBoolean(properties.Egress) : undefined);\n    ret.addPropertyResult('portRange', 'PortRange', properties.PortRange != null ? CfnNetworkInsightsAnalysisPortRangePropertyFromCloudFormation(properties.PortRange) : undefined);\n    ret.addPropertyResult('protocol', 'Protocol', properties.Protocol != null ? cfn_parse.FromCloudFormation.getString(properties.Protocol) : undefined);\n    ret.addPropertyResult('ruleAction', 'RuleAction', properties.RuleAction != null ? cfn_parse.FromCloudFormation.getString(properties.RuleAction) : undefined);\n    ret.addPropertyResult('ruleNumber', 'RuleNumber', properties.RuleNumber != null ? cfn_parse.FromCloudFormation.getNumber(properties.RuleNumber) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnNetworkInsightsAnalysis {\n    /**\n     * Describes a path component.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysiscomponent.html\n     */\n    export interface AnalysisComponentProperty {\n        /**\n         * The Amazon Resource Name (ARN) of the component.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysiscomponent.html#cfn-ec2-networkinsightsanalysis-analysiscomponent-arn\n         */\n        readonly arn?: string;\n        /**\n         * The ID of the component.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysiscomponent.html#cfn-ec2-networkinsightsanalysis-analysiscomponent-id\n         */\n        readonly id?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AnalysisComponentProperty`\n *\n * @param properties - the TypeScript properties of a `AnalysisComponentProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('arn', cdk.validateString)(properties.arn));\n    errors.collect(cdk.propertyValidator('id', cdk.validateString)(properties.id));\n    return errors.wrap('supplied properties not correct for \"AnalysisComponentProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAnalysis.AnalysisComponent` resource\n *\n * @param properties - the TypeScript properties of a `AnalysisComponentProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAnalysis.AnalysisComponent` resource.\n */\n// @ts-ignore TS6133\nfunction cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator(properties).assertSuccess();\n    return {\n        Arn: cdk.stringToCloudFormation(properties.arn),\n        Id: cdk.stringToCloudFormation(properties.id),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnNetworkInsightsAnalysis.AnalysisComponentProperty>();\n    ret.addPropertyResult('arn', 'Arn', properties.Arn != null ? cfn_parse.FromCloudFormation.getString(properties.Arn) : undefined);\n    ret.addPropertyResult('id', 'Id', properties.Id != null ? cfn_parse.FromCloudFormation.getString(properties.Id) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnNetworkInsightsAnalysis {\n    /**\n     * Describes a load balancer listener.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisloadbalancerlistener.html\n     */\n    export interface AnalysisLoadBalancerListenerProperty {\n        /**\n         * [Classic Load Balancers] The back-end port for the listener.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisloadbalancerlistener.html#cfn-ec2-networkinsightsanalysis-analysisloadbalancerlistener-instanceport\n         */\n        readonly instancePort?: number;\n        /**\n         * The port on which the load balancer is listening.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisloadbalancerlistener.html#cfn-ec2-networkinsightsanalysis-analysisloadbalancerlistener-loadbalancerport\n         */\n        readonly loadBalancerPort?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AnalysisLoadBalancerListenerProperty`\n *\n * @param properties - the TypeScript properties of a `AnalysisLoadBalancerListenerProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnNetworkInsightsAnalysis_AnalysisLoadBalancerListenerPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('instancePort', cdk.validateNumber)(properties.instancePort));\n    errors.collect(cdk.propertyValidator('loadBalancerPort', cdk.validateNumber)(properties.loadBalancerPort));\n    return errors.wrap('supplied properties not correct for \"AnalysisLoadBalancerListenerProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAnalysis.AnalysisLoadBalancerListener` resource\n *\n * @param properties - the TypeScript properties of a `AnalysisLoadBalancerListenerProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAnalysis.AnalysisLoadBalancerListener` resource.\n */\n// @ts-ignore TS6133\nfunction cfnNetworkInsightsAnalysisAnalysisLoadBalancerListenerPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnNetworkInsightsAnalysis_AnalysisLoadBalancerListenerPropertyValidator(properties).assertSuccess();\n    return {\n        InstancePort: cdk.numberToCloudFormation(properties.instancePort),\n        LoadBalancerPort: cdk.numberToCloudFormation(properties.loadBalancerPort),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnNetworkInsightsAnalysisAnalysisLoadBalancerListenerPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnNetworkInsightsAnalysis.AnalysisLoadBalancerListenerProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnNetworkInsightsAnalysis.AnalysisLoadBalancerListenerProperty>();\n    ret.addPropertyResult('instancePort', 'InstancePort', properties.InstancePort != null ? cfn_parse.FromCloudFormation.getNumber(properties.InstancePort) : undefined);\n    ret.addPropertyResult('loadBalancerPort', 'LoadBalancerPort', properties.LoadBalancerPort != null ? cfn_parse.FromCloudFormation.getNumber(properties.LoadBalancerPort) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnNetworkInsightsAnalysis {\n    /**\n     * Describes a load balancer target.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisloadbalancertarget.html\n     */\n    export interface AnalysisLoadBalancerTargetProperty {\n        /**\n         * The IP address.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisloadbalancertarget.html#cfn-ec2-networkinsightsanalysis-analysisloadbalancertarget-address\n         */\n        readonly address?: string;\n        /**\n         * The Availability Zone.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisloadbalancertarget.html#cfn-ec2-networkinsightsanalysis-analysisloadbalancertarget-availabilityzone\n         */\n        readonly availabilityZone?: string;\n        /**\n         * Information about the instance.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisloadbalancertarget.html#cfn-ec2-networkinsightsanalysis-analysisloadbalancertarget-instance\n         */\n        readonly instance?: CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable;\n        /**\n         * The port on which the target is listening.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisloadbalancertarget.html#cfn-ec2-networkinsightsanalysis-analysisloadbalancertarget-port\n         */\n        readonly port?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AnalysisLoadBalancerTargetProperty`\n *\n * @param properties - the TypeScript properties of a `AnalysisLoadBalancerTargetProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnNetworkInsightsAnalysis_AnalysisLoadBalancerTargetPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('address', cdk.validateString)(properties.address));\n    errors.collect(cdk.propertyValidator('availabilityZone', cdk.validateString)(properties.availabilityZone));\n    errors.collect(cdk.propertyValidator('instance', CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator)(properties.instance));\n    errors.collect(cdk.propertyValidator('port', cdk.validateNumber)(properties.port));\n    return errors.wrap('supplied properties not correct for \"AnalysisLoadBalancerTargetProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAnalysis.AnalysisLoadBalancerTarget` resource\n *\n * @param properties - the TypeScript properties of a `AnalysisLoadBalancerTargetProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAnalysis.AnalysisLoadBalancerTarget` resource.\n */\n// @ts-ignore TS6133\nfunction cfnNetworkInsightsAnalysisAnalysisLoadBalancerTargetPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnNetworkInsightsAnalysis_AnalysisLoadBalancerTargetPropertyValidator(properties).assertSuccess();\n    return {\n        Address: cdk.stringToCloudFormation(properties.address),\n        AvailabilityZone: cdk.stringToCloudFormation(properties.availabilityZone),\n        Instance: cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation(properties.instance),\n        Port: cdk.numberToCloudFormation(properties.port),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnNetworkInsightsAnalysisAnalysisLoadBalancerTargetPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnNetworkInsightsAnalysis.AnalysisLoadBalancerTargetProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnNetworkInsightsAnalysis.AnalysisLoadBalancerTargetProperty>();\n    ret.addPropertyResult('address', 'Address', properties.Address != null ? cfn_parse.FromCloudFormation.getString(properties.Address) : undefined);\n    ret.addPropertyResult('availabilityZone', 'AvailabilityZone', properties.AvailabilityZone != null ? cfn_parse.FromCloudFormation.getString(properties.AvailabilityZone) : undefined);\n    ret.addPropertyResult('instance', 'Instance', properties.Instance != null ? CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation(properties.Instance) : undefined);\n    ret.addPropertyResult('port', 'Port', properties.Port != null ? cfn_parse.FromCloudFormation.getNumber(properties.Port) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnNetworkInsightsAnalysis {\n    /**\n     * Describes a header. Reflects any changes made by a component as traffic passes through. The fields of an inbound header are null except for the first component of a path.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysispacketheader.html\n     */\n    export interface AnalysisPacketHeaderProperty {\n        /**\n         * The destination addresses.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysispacketheader.html#cfn-ec2-networkinsightsanalysis-analysispacketheader-destinationaddresses\n         */\n        readonly destinationAddresses?: string[];\n        /**\n         * The destination port ranges.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysispacketheader.html#cfn-ec2-networkinsightsanalysis-analysispacketheader-destinationportranges\n         */\n        readonly destinationPortRanges?: Array<CfnNetworkInsightsAnalysis.PortRangeProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * The protocol.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysispacketheader.html#cfn-ec2-networkinsightsanalysis-analysispacketheader-protocol\n         */\n        readonly protocol?: string;\n        /**\n         * The source addresses.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysispacketheader.html#cfn-ec2-networkinsightsanalysis-analysispacketheader-sourceaddresses\n         */\n        readonly sourceAddresses?: string[];\n        /**\n         * The source port ranges.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysispacketheader.html#cfn-ec2-networkinsightsanalysis-analysispacketheader-sourceportranges\n         */\n        readonly sourcePortRanges?: Array<CfnNetworkInsightsAnalysis.PortRangeProperty | cdk.IResolvable> | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AnalysisPacketHeaderProperty`\n *\n * @param properties - the TypeScript properties of a `AnalysisPacketHeaderProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnNetworkInsightsAnalysis_AnalysisPacketHeaderPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('destinationAddresses', cdk.listValidator(cdk.validateString))(properties.destinationAddresses));\n    errors.collect(cdk.propertyValidator('destinationPortRanges', cdk.listValidator(CfnNetworkInsightsAnalysis_PortRangePropertyValidator))(properties.destinationPortRanges));\n    errors.collect(cdk.propertyValidator('protocol', cdk.validateString)(properties.protocol));\n    errors.collect(cdk.propertyValidator('sourceAddresses', cdk.listValidator(cdk.validateString))(properties.sourceAddresses));\n    errors.collect(cdk.propertyValidator('sourcePortRanges', cdk.listValidator(CfnNetworkInsightsAnalysis_PortRangePropertyValidator))(properties.sourcePortRanges));\n    return errors.wrap('supplied properties not correct for \"AnalysisPacketHeaderProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAnalysis.AnalysisPacketHeader` resource\n *\n * @param properties - the TypeScript properties of a `AnalysisPacketHeaderProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAnalysis.AnalysisPacketHeader` resource.\n */\n// @ts-ignore TS6133\nfunction cfnNetworkInsightsAnalysisAnalysisPacketHeaderPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnNetworkInsightsAnalysis_AnalysisPacketHeaderPropertyValidator(properties).assertSuccess();\n    return {\n        DestinationAddresses: cdk.listMapper(cdk.stringToCloudFormation)(properties.destinationAddresses),\n        DestinationPortRanges: cdk.listMapper(cfnNetworkInsightsAnalysisPortRangePropertyToCloudFormation)(properties.destinationPortRanges),\n        Protocol: cdk.stringToCloudFormation(properties.protocol),\n        SourceAddresses: cdk.listMapper(cdk.stringToCloudFormation)(properties.sourceAddresses),\n        SourcePortRanges: cdk.listMapper(cfnNetworkInsightsAnalysisPortRangePropertyToCloudFormation)(properties.sourcePortRanges),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnNetworkInsightsAnalysisAnalysisPacketHeaderPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnNetworkInsightsAnalysis.AnalysisPacketHeaderProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnNetworkInsightsAnalysis.AnalysisPacketHeaderProperty>();\n    ret.addPropertyResult('destinationAddresses', 'DestinationAddresses', properties.DestinationAddresses != null ? cfn_parse.FromCloudFormation.getStringArray(properties.DestinationAddresses) : undefined);\n    ret.addPropertyResult('destinationPortRanges', 'DestinationPortRanges', properties.DestinationPortRanges != null ? cfn_parse.FromCloudFormation.getArray(CfnNetworkInsightsAnalysisPortRangePropertyFromCloudFormation)(properties.DestinationPortRanges) : undefined);\n    ret.addPropertyResult('protocol', 'Protocol', properties.Protocol != null ? cfn_parse.FromCloudFormation.getString(properties.Protocol) : undefined);\n    ret.addPropertyResult('sourceAddresses', 'SourceAddresses', properties.SourceAddresses != null ? cfn_parse.FromCloudFormation.getStringArray(properties.SourceAddresses) : undefined);\n    ret.addPropertyResult('sourcePortRanges', 'SourcePortRanges', properties.SourcePortRanges != null ? cfn_parse.FromCloudFormation.getArray(CfnNetworkInsightsAnalysisPortRangePropertyFromCloudFormation)(properties.SourcePortRanges) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnNetworkInsightsAnalysis {\n    /**\n     * Describes a route table route.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html\n     */\n    export interface AnalysisRouteTableRouteProperty {\n        /**\n         * The ID of a NAT gateway.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-natgatewayid\n         */\n        readonly natGatewayId?: string;\n        /**\n         * The ID of a network interface.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-networkinterfaceid\n         */\n        readonly networkInterfaceId?: string;\n        /**\n         * Describes how the route was created. The following are the possible values:\n         *\n         * - CreateRouteTable - The route was automatically created when the route table was created.\n         * - CreateRoute - The route was manually added to the route table.\n         * - EnableVgwRoutePropagation - The route was propagated by route propagation.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-origin\n         */\n        readonly origin?: string;\n        /**\n         * The ID of a transit gateway.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-transitgatewayid\n         */\n        readonly transitGatewayId?: string;\n        /**\n         * The ID of a VPC peering connection.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-vpcpeeringconnectionid\n         */\n        readonly vpcPeeringConnectionId?: string;\n        /**\n         * The destination IPv4 address, in CIDR notation.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-destinationcidr\n         */\n        readonly destinationCidr?: string;\n        /**\n         * The prefix of the AWS service .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-destinationprefixlistid\n         */\n        readonly destinationPrefixListId?: string;\n        /**\n         * The ID of an egress-only internet gateway.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-egressonlyinternetgatewayid\n         */\n        readonly egressOnlyInternetGatewayId?: string;\n        /**\n         * The ID of the gateway, such as an internet gateway or virtual private gateway.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-gatewayid\n         */\n        readonly gatewayId?: string;\n        /**\n         * The ID of the instance, such as a NAT instance.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-instanceid\n         */\n        readonly instanceId?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AnalysisRouteTableRouteProperty`\n *\n * @param properties - the TypeScript properties of a `AnalysisRouteTableRouteProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnNetworkInsightsAnalysis_AnalysisRouteTableRoutePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('natGatewayId', cdk.validateString)(properties.natGatewayId));\n    errors.collect(cdk.propertyValidator('networkInterfaceId', cdk.validateString)(properties.networkInterfaceId));\n    errors.collect(cdk.propertyValidator('origin', cdk.validateString)(properties.origin));\n    errors.collect(cdk.propertyValidator('transitGatewayId', cdk.validateString)(properties.transitGatewayId));\n    errors.collect(cdk.propertyValidator('vpcPeeringConnectionId', cdk.validateString)(properties.vpcPeeringConnectionId));\n    errors.collect(cdk.propertyValidator('destinationCidr', cdk.validateString)(properties.destinationCidr));\n    errors.collect(cdk.propertyValidator('destinationPrefixListId', cdk.validateString)(properties.destinationPrefixListId));\n    errors.collect(cdk.propertyValidator('egressOnlyInternetGatewayId', cdk.validateString)(properties.egressOnlyInternetGatewayId));\n    errors.collect(cdk.propertyValidator('gatewayId', cdk.validateString)(properties.gatewayId));\n    errors.collect(cdk.propertyValidator('instanceId', cdk.validateString)(properties.instanceId));\n    return errors.wrap('supplied properties not correct for \"AnalysisRouteTableRouteProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAnalysis.AnalysisRouteTableRoute` resource\n *\n * @param properties - the TypeScript properties of a `AnalysisRouteTableRouteProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAnalysis.AnalysisRouteTableRoute` resource.\n */\n// @ts-ignore TS6133\nfunction cfnNetworkInsightsAnalysisAnalysisRouteTableRoutePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnNetworkInsightsAnalysis_AnalysisRouteTableRoutePropertyValidator(properties).assertSuccess();\n    return {\n        NatGatewayId: cdk.stringToCloudFormation(properties.natGatewayId),\n        NetworkInterfaceId: cdk.stringToCloudFormation(properties.networkInterfaceId),\n        Origin: cdk.stringToCloudFormation(properties.origin),\n        TransitGatewayId: cdk.stringToCloudFormation(properties.transitGatewayId),\n        VpcPeeringConnectionId: cdk.stringToCloudFormation(properties.vpcPeeringConnectionId),\n        destinationCidr: cdk.stringToCloudFormation(properties.destinationCidr),\n        destinationPrefixListId: cdk.stringToCloudFormation(properties.destinationPrefixListId),\n        egressOnlyInternetGatewayId: cdk.stringToCloudFormation(properties.egressOnlyInternetGatewayId),\n        gatewayId: cdk.stringToCloudFormation(properties.gatewayId),\n        instanceId: cdk.stringToCloudFormation(properties.instanceId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnNetworkInsightsAnalysisAnalysisRouteTableRoutePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnNetworkInsightsAnalysis.AnalysisRouteTableRouteProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnNetworkInsightsAnalysis.AnalysisRouteTableRouteProperty>();\n    ret.addPropertyResult('natGatewayId', 'NatGatewayId', properties.NatGatewayId != null ? cfn_parse.FromCloudFormation.getString(properties.NatGatewayId) : undefined);\n    ret.addPropertyResult('networkInterfaceId', 'NetworkInterfaceId', properties.NetworkInterfaceId != null ? cfn_parse.FromCloudFormation.getString(properties.NetworkInterfaceId) : undefined);\n    ret.addPropertyResult('origin', 'Origin', properties.Origin != null ? cfn_parse.FromCloudFormation.getString(properties.Origin) : undefined);\n    ret.addPropertyResult('transitGatewayId', 'TransitGatewayId', properties.TransitGatewayId != null ? cfn_parse.FromCloudFormation.getString(properties.TransitGatewayId) : undefined);\n    ret.addPropertyResult('vpcPeeringConnectionId', 'VpcPeeringConnectionId', properties.VpcPeeringConnectionId != null ? cfn_parse.FromCloudFormation.getString(properties.VpcPeeringConnectionId) : undefined);\n    ret.addPropertyResult('destinationCidr', 'destinationCidr', properties.destinationCidr != null ? cfn_parse.FromCloudFormation.getString(properties.destinationCidr) : undefined);\n    ret.addPropertyResult('destinationPrefixListId', 'destinationPrefixListId', properties.destinationPrefixListId != null ? cfn_parse.FromCloudFormation.getString(properties.destinationPrefixListId) : undefined);\n    ret.addPropertyResult('egressOnlyInternetGatewayId', 'egressOnlyInternetGatewayId', properties.egressOnlyInternetGatewayId != null ? cfn_parse.FromCloudFormation.getString(properties.egressOnlyInternetGatewayId) : undefined);\n    ret.addPropertyResult('gatewayId', 'gatewayId', properties.gatewayId != null ? cfn_parse.FromCloudFormation.getString(properties.gatewayId) : undefined);\n    ret.addPropertyResult('instanceId', 'instanceId', properties.instanceId != null ? cfn_parse.FromCloudFormation.getString(properties.instanceId) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnNetworkInsightsAnalysis {\n    /**\n     * Describes a security group rule.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysissecuritygrouprule.html\n     */\n    export interface AnalysisSecurityGroupRuleProperty {\n        /**\n         * The IPv4 address range, in CIDR notation.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysissecuritygrouprule.html#cfn-ec2-networkinsightsanalysis-analysissecuritygrouprule-cidr\n         */\n        readonly cidr?: string;\n        /**\n         * The direction. The following are the possible values:\n         *\n         * - egress\n         * - ingress\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysissecuritygrouprule.html#cfn-ec2-networkinsightsanalysis-analysissecuritygrouprule-direction\n         */\n        readonly direction?: string;\n        /**\n         * The port range.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysissecuritygrouprule.html#cfn-ec2-networkinsightsanalysis-analysissecuritygrouprule-portrange\n         */\n        readonly portRange?: CfnNetworkInsightsAnalysis.PortRangeProperty | cdk.IResolvable;\n        /**\n         * The prefix list ID.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysissecuritygrouprule.html#cfn-ec2-networkinsightsanalysis-analysissecuritygrouprule-prefixlistid\n         */\n        readonly prefixListId?: string;\n        /**\n         * The protocol name.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysissecuritygrouprule.html#cfn-ec2-networkinsightsanalysis-analysissecuritygrouprule-protocol\n         */\n        readonly protocol?: string;\n        /**\n         * The security group ID.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysissecuritygrouprule.html#cfn-ec2-networkinsightsanalysis-analysissecuritygrouprule-securitygroupid\n         */\n        readonly securityGroupId?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AnalysisSecurityGroupRuleProperty`\n *\n * @param properties - the TypeScript properties of a `AnalysisSecurityGroupRuleProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnNetworkInsightsAnalysis_AnalysisSecurityGroupRulePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('cidr', cdk.validateString)(properties.cidr));\n    errors.collect(cdk.propertyValidator('direction', cdk.validateString)(properties.direction));\n    errors.collect(cdk.propertyValidator('portRange', CfnNetworkInsightsAnalysis_PortRangePropertyValidator)(properties.portRange));\n    errors.collect(cdk.propertyValidator('prefixListId', cdk.validateString)(properties.prefixListId));\n    errors.collect(cdk.propertyValidator('protocol', cdk.validateString)(properties.protocol));\n    errors.collect(cdk.propertyValidator('securityGroupId', cdk.validateString)(properties.securityGroupId));\n    return errors.wrap('supplied properties not correct for \"AnalysisSecurityGroupRuleProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAnalysis.AnalysisSecurityGroupRule` resource\n *\n * @param properties - the TypeScript properties of a `AnalysisSecurityGroupRuleProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAnalysis.AnalysisSecurityGroupRule` resource.\n */\n// @ts-ignore TS6133\nfunction cfnNetworkInsightsAnalysisAnalysisSecurityGroupRulePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnNetworkInsightsAnalysis_AnalysisSecurityGroupRulePropertyValidator(properties).assertSuccess();\n    return {\n        Cidr: cdk.stringToCloudFormation(properties.cidr),\n        Direction: cdk.stringToCloudFormation(properties.direction),\n        PortRange: cfnNetworkInsightsAnalysisPortRangePropertyToCloudFormation(properties.portRange),\n        PrefixListId: cdk.stringToCloudFormation(properties.prefixListId),\n        Protocol: cdk.stringToCloudFormation(properties.protocol),\n        SecurityGroupId: cdk.stringToCloudFormation(properties.securityGroupId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnNetworkInsightsAnalysisAnalysisSecurityGroupRulePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnNetworkInsightsAnalysis.AnalysisSecurityGroupRuleProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnNetworkInsightsAnalysis.AnalysisSecurityGroupRuleProperty>();\n    ret.addPropertyResult('cidr', 'Cidr', properties.Cidr != null ? cfn_parse.FromCloudFormation.getString(properties.Cidr) : undefined);\n    ret.addPropertyResult('direction', 'Direction', properties.Direction != null ? cfn_parse.FromCloudFormation.getString(properties.Direction) : undefined);\n    ret.addPropertyResult('portRange', 'PortRange', properties.PortRange != null ? CfnNetworkInsightsAnalysisPortRangePropertyFromCloudFormation(properties.PortRange) : undefined);\n    ret.addPropertyResult('prefixListId', 'PrefixListId', properties.PrefixListId != null ? cfn_parse.FromCloudFormation.getString(properties.PrefixListId) : undefined);\n    ret.addPropertyResult('protocol', 'Protocol', properties.Protocol != null ? cfn_parse.FromCloudFormation.getString(properties.Protocol) : undefined);\n    ret.addPropertyResult('securityGroupId', 'SecurityGroupId', properties.SecurityGroupId != null ? cfn_parse.FromCloudFormation.getString(properties.SecurityGroupId) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnNetworkInsightsAnalysis {\n    /**\n     * Describes an explanation code for an unreachable path. For more information, see [Reachability Analyzer explanation codes](https://docs.aws.amazon.com/vpc/latest/reachability/explanation-codes.html) .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html\n     */\n    export interface ExplanationProperty {\n        /**\n         * The network ACL.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-acl\n         */\n        readonly acl?: CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable;\n        /**\n         * The network ACL rule.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-aclrule\n         */\n        readonly aclRule?: CfnNetworkInsightsAnalysis.AnalysisAclRuleProperty | cdk.IResolvable;\n        /**\n         * The IPv4 address, in CIDR notation.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-address\n         */\n        readonly address?: string;\n        /**\n         * The IPv4 addresses, in CIDR notation.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-addresses\n         */\n        readonly addresses?: string[];\n        /**\n         * The resource to which the component is attached.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-attachedto\n         */\n        readonly attachedTo?: CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable;\n        /**\n         * The Availability Zones.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-availabilityzones\n         */\n        readonly availabilityZones?: string[];\n        /**\n         * The CIDR ranges.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-cidrs\n         */\n        readonly cidrs?: string[];\n        /**\n         * The listener for a Classic Load Balancer.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-classicloadbalancerlistener\n         */\n        readonly classicLoadBalancerListener?: CfnNetworkInsightsAnalysis.AnalysisLoadBalancerListenerProperty | cdk.IResolvable;\n        /**\n         * The component.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-component\n         */\n        readonly component?: CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable;\n        /**\n         * The customer gateway.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-customergateway\n         */\n        readonly customerGateway?: CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable;\n        /**\n         * The destination.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-destination\n         */\n        readonly destination?: CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable;\n        /**\n         * The destination VPC.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-destinationvpc\n         */\n        readonly destinationVpc?: CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable;\n        /**\n         * The direction. The following are the possible values:\n         *\n         * - egress\n         * - ingress\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-direction\n         */\n        readonly direction?: string;\n        /**\n         * The load balancer listener.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-elasticloadbalancerlistener\n         */\n        readonly elasticLoadBalancerListener?: CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable;\n        /**\n         * The explanation code.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-explanationcode\n         */\n        readonly explanationCode?: string;\n        /**\n         * The route table.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-ingressroutetable\n         */\n        readonly ingressRouteTable?: CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable;\n        /**\n         * The internet gateway.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-internetgateway\n         */\n        readonly internetGateway?: CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable;\n        /**\n         * The Amazon Resource Name (ARN) of the load balancer.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-loadbalancerarn\n         */\n        readonly loadBalancerArn?: string;\n        /**\n         * The listener port of the load balancer.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-loadbalancerlistenerport\n         */\n        readonly loadBalancerListenerPort?: number;\n        /**\n         * The target.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-loadbalancertarget\n         */\n        readonly loadBalancerTarget?: CfnNetworkInsightsAnalysis.AnalysisLoadBalancerTargetProperty | cdk.IResolvable;\n        /**\n         * The target group.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-loadbalancertargetgroup\n         */\n        readonly loadBalancerTargetGroup?: CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable;\n        /**\n         * The target groups.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-loadbalancertargetgroups\n         */\n        readonly loadBalancerTargetGroups?: Array<CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * The target port.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-loadbalancertargetport\n         */\n        readonly loadBalancerTargetPort?: number;\n        /**\n         * The missing component.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-missingcomponent\n         */\n        readonly missingComponent?: string;\n        /**\n         * The NAT gateway.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-natgateway\n         */\n        readonly natGateway?: CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable;\n        /**\n         * The network interface.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-networkinterface\n         */\n        readonly networkInterface?: CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable;\n        /**\n         * The packet field.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-packetfield\n         */\n        readonly packetField?: string;\n        /**\n         * The port.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-port\n         */\n        readonly port?: number;\n        /**\n         * The port ranges.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-portranges\n         */\n        readonly portRanges?: Array<CfnNetworkInsightsAnalysis.PortRangeProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * The prefix list.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-prefixlist\n         */\n        readonly prefixList?: CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable;\n        /**\n         * The protocols.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-protocols\n         */\n        readonly protocols?: string[];\n        /**\n         * The route table.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-routetable\n         */\n        readonly routeTable?: CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable;\n        /**\n         * The route table route.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-routetableroute\n         */\n        readonly routeTableRoute?: CfnNetworkInsightsAnalysis.AnalysisRouteTableRouteProperty | cdk.IResolvable;\n        /**\n         * The security group.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-securitygroup\n         */\n        readonly securityGroup?: CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable;\n        /**\n         * The security group rule.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-securitygrouprule\n         */\n        readonly securityGroupRule?: CfnNetworkInsightsAnalysis.AnalysisSecurityGroupRuleProperty | cdk.IResolvable;\n        /**\n         * The security groups.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-securitygroups\n         */\n        readonly securityGroups?: Array<CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * The source VPC.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-sourcevpc\n         */\n        readonly sourceVpc?: CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable;\n        /**\n         * The state.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-state\n         */\n        readonly state?: string;\n        /**\n         * The subnet.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-subnet\n         */\n        readonly subnet?: CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable;\n        /**\n         * The route table for the subnet.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-subnetroutetable\n         */\n        readonly subnetRouteTable?: CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable;\n        /**\n         * The component VPC.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-vpc\n         */\n        readonly vpc?: CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable;\n        /**\n         * The VPC peering connection.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-vpcpeeringconnection\n         */\n        readonly vpcPeeringConnection?: CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable;\n        /**\n         * The VPN connection.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-vpnconnection\n         */\n        readonly vpnConnection?: CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable;\n        /**\n         * The VPN gateway.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-vpngateway\n         */\n        readonly vpnGateway?: CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable;\n        /**\n         * The VPC endpoint.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-vpcendpoint\n         */\n        readonly vpcEndpoint?: CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ExplanationProperty`\n *\n * @param properties - the TypeScript properties of a `ExplanationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnNetworkInsightsAnalysis_ExplanationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('acl', CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator)(properties.acl));\n    errors.collect(cdk.propertyValidator('aclRule', CfnNetworkInsightsAnalysis_AnalysisAclRulePropertyValidator)(properties.aclRule));\n    errors.collect(cdk.propertyValidator('address', cdk.validateString)(properties.address));\n    errors.collect(cdk.propertyValidator('addresses', cdk.listValidator(cdk.validateString))(properties.addresses));\n    errors.collect(cdk.propertyValidator('attachedTo', CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator)(properties.attachedTo));\n    errors.collect(cdk.propertyValidator('availabilityZones', cdk.listValidator(cdk.validateString))(properties.availabilityZones));\n    errors.collect(cdk.propertyValidator('cidrs', cdk.listValidator(cdk.validateString))(properties.cidrs));\n    errors.collect(cdk.propertyValidator('classicLoadBalancerListener', CfnNetworkInsightsAnalysis_AnalysisLoadBalancerListenerPropertyValidator)(properties.classicLoadBalancerListener));\n    errors.collect(cdk.propertyValidator('component', CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator)(properties.component));\n    errors.collect(cdk.propertyValidator('customerGateway', CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator)(properties.customerGateway));\n    errors.collect(cdk.propertyValidator('destination', CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator)(properties.destination));\n    errors.collect(cdk.propertyValidator('destinationVpc', CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator)(properties.destinationVpc));\n    errors.collect(cdk.propertyValidator('direction', cdk.validateString)(properties.direction));\n    errors.collect(cdk.propertyValidator('elasticLoadBalancerListener', CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator)(properties.elasticLoadBalancerListener));\n    errors.collect(cdk.propertyValidator('explanationCode', cdk.validateString)(properties.explanationCode));\n    errors.collect(cdk.propertyValidator('ingressRouteTable', CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator)(properties.ingressRouteTable));\n    errors.collect(cdk.propertyValidator('internetGateway', CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator)(properties.internetGateway));\n    errors.collect(cdk.propertyValidator('loadBalancerArn', cdk.validateString)(properties.loadBalancerArn));\n    errors.collect(cdk.propertyValidator('loadBalancerListenerPort', cdk.validateNumber)(properties.loadBalancerListenerPort));\n    errors.collect(cdk.propertyValidator('loadBalancerTarget', CfnNetworkInsightsAnalysis_AnalysisLoadBalancerTargetPropertyValidator)(properties.loadBalancerTarget));\n    errors.collect(cdk.propertyValidator('loadBalancerTargetGroup', CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator)(properties.loadBalancerTargetGroup));\n    errors.collect(cdk.propertyValidator('loadBalancerTargetGroups', cdk.listValidator(CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator))(properties.loadBalancerTargetGroups));\n    errors.collect(cdk.propertyValidator('loadBalancerTargetPort', cdk.validateNumber)(properties.loadBalancerTargetPort));\n    errors.collect(cdk.propertyValidator('missingComponent', cdk.validateString)(properties.missingComponent));\n    errors.collect(cdk.propertyValidator('natGateway', CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator)(properties.natGateway));\n    errors.collect(cdk.propertyValidator('networkInterface', CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator)(properties.networkInterface));\n    errors.collect(cdk.propertyValidator('packetField', cdk.validateString)(properties.packetField));\n    errors.collect(cdk.propertyValidator('port', cdk.validateNumber)(properties.port));\n    errors.collect(cdk.propertyValidator('portRanges', cdk.listValidator(CfnNetworkInsightsAnalysis_PortRangePropertyValidator))(properties.portRanges));\n    errors.collect(cdk.propertyValidator('prefixList', CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator)(properties.prefixList));\n    errors.collect(cdk.propertyValidator('protocols', cdk.listValidator(cdk.validateString))(properties.protocols));\n    errors.collect(cdk.propertyValidator('routeTable', CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator)(properties.routeTable));\n    errors.collect(cdk.propertyValidator('routeTableRoute', CfnNetworkInsightsAnalysis_AnalysisRouteTableRoutePropertyValidator)(properties.routeTableRoute));\n    errors.collect(cdk.propertyValidator('securityGroup', CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator)(properties.securityGroup));\n    errors.collect(cdk.propertyValidator('securityGroupRule', CfnNetworkInsightsAnalysis_AnalysisSecurityGroupRulePropertyValidator)(properties.securityGroupRule));\n    errors.collect(cdk.propertyValidator('securityGroups', cdk.listValidator(CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator))(properties.securityGroups));\n    errors.collect(cdk.propertyValidator('sourceVpc', CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator)(properties.sourceVpc));\n    errors.collect(cdk.propertyValidator('state', cdk.validateString)(properties.state));\n    errors.collect(cdk.propertyValidator('subnet', CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator)(properties.subnet));\n    errors.collect(cdk.propertyValidator('subnetRouteTable', CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator)(properties.subnetRouteTable));\n    errors.collect(cdk.propertyValidator('vpc', CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator)(properties.vpc));\n    errors.collect(cdk.propertyValidator('vpcPeeringConnection', CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator)(properties.vpcPeeringConnection));\n    errors.collect(cdk.propertyValidator('vpnConnection', CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator)(properties.vpnConnection));\n    errors.collect(cdk.propertyValidator('vpnGateway', CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator)(properties.vpnGateway));\n    errors.collect(cdk.propertyValidator('vpcEndpoint', CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator)(properties.vpcEndpoint));\n    return errors.wrap('supplied properties not correct for \"ExplanationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAnalysis.Explanation` resource\n *\n * @param properties - the TypeScript properties of a `ExplanationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAnalysis.Explanation` resource.\n */\n// @ts-ignore TS6133\nfunction cfnNetworkInsightsAnalysisExplanationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnNetworkInsightsAnalysis_ExplanationPropertyValidator(properties).assertSuccess();\n    return {\n        Acl: cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation(properties.acl),\n        AclRule: cfnNetworkInsightsAnalysisAnalysisAclRulePropertyToCloudFormation(properties.aclRule),\n        Address: cdk.stringToCloudFormation(properties.address),\n        Addresses: cdk.listMapper(cdk.stringToCloudFormation)(properties.addresses),\n        AttachedTo: cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation(properties.attachedTo),\n        AvailabilityZones: cdk.listMapper(cdk.stringToCloudFormation)(properties.availabilityZones),\n        Cidrs: cdk.listMapper(cdk.stringToCloudFormation)(properties.cidrs),\n        ClassicLoadBalancerListener: cfnNetworkInsightsAnalysisAnalysisLoadBalancerListenerPropertyToCloudFormation(properties.classicLoadBalancerListener),\n        Component: cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation(properties.component),\n        CustomerGateway: cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation(properties.customerGateway),\n        Destination: cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation(properties.destination),\n        DestinationVpc: cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation(properties.destinationVpc),\n        Direction: cdk.stringToCloudFormation(properties.direction),\n        ElasticLoadBalancerListener: cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation(properties.elasticLoadBalancerListener),\n        ExplanationCode: cdk.stringToCloudFormation(properties.explanationCode),\n        IngressRouteTable: cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation(properties.ingressRouteTable),\n        InternetGateway: cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation(properties.internetGateway),\n        LoadBalancerArn: cdk.stringToCloudFormation(properties.loadBalancerArn),\n        LoadBalancerListenerPort: cdk.numberToCloudFormation(properties.loadBalancerListenerPort),\n        LoadBalancerTarget: cfnNetworkInsightsAnalysisAnalysisLoadBalancerTargetPropertyToCloudFormation(properties.loadBalancerTarget),\n        LoadBalancerTargetGroup: cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation(properties.loadBalancerTargetGroup),\n        LoadBalancerTargetGroups: cdk.listMapper(cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation)(properties.loadBalancerTargetGroups),\n        LoadBalancerTargetPort: cdk.numberToCloudFormation(properties.loadBalancerTargetPort),\n        MissingComponent: cdk.stringToCloudFormation(properties.missingComponent),\n        NatGateway: cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation(properties.natGateway),\n        NetworkInterface: cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation(properties.networkInterface),\n        PacketField: cdk.stringToCloudFormation(properties.packetField),\n        Port: cdk.numberToCloudFormation(properties.port),\n        PortRanges: cdk.listMapper(cfnNetworkInsightsAnalysisPortRangePropertyToCloudFormation)(properties.portRanges),\n        PrefixList: cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation(properties.prefixList),\n        Protocols: cdk.listMapper(cdk.stringToCloudFormation)(properties.protocols),\n        RouteTable: cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation(properties.routeTable),\n        RouteTableRoute: cfnNetworkInsightsAnalysisAnalysisRouteTableRoutePropertyToCloudFormation(properties.routeTableRoute),\n        SecurityGroup: cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation(properties.securityGroup),\n        SecurityGroupRule: cfnNetworkInsightsAnalysisAnalysisSecurityGroupRulePropertyToCloudFormation(properties.securityGroupRule),\n        SecurityGroups: cdk.listMapper(cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation)(properties.securityGroups),\n        SourceVpc: cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation(properties.sourceVpc),\n        State: cdk.stringToCloudFormation(properties.state),\n        Subnet: cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation(properties.subnet),\n        SubnetRouteTable: cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation(properties.subnetRouteTable),\n        Vpc: cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation(properties.vpc),\n        VpcPeeringConnection: cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation(properties.vpcPeeringConnection),\n        VpnConnection: cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation(properties.vpnConnection),\n        VpnGateway: cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation(properties.vpnGateway),\n        vpcEndpoint: cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation(properties.vpcEndpoint),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnNetworkInsightsAnalysisExplanationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnNetworkInsightsAnalysis.ExplanationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnNetworkInsightsAnalysis.ExplanationProperty>();\n    ret.addPropertyResult('acl', 'Acl', properties.Acl != null ? CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation(properties.Acl) : undefined);\n    ret.addPropertyResult('aclRule', 'AclRule', properties.AclRule != null ? CfnNetworkInsightsAnalysisAnalysisAclRulePropertyFromCloudFormation(properties.AclRule) : undefined);\n    ret.addPropertyResult('address', 'Address', properties.Address != null ? cfn_parse.FromCloudFormation.getString(properties.Address) : undefined);\n    ret.addPropertyResult('addresses', 'Addresses', properties.Addresses != null ? cfn_parse.FromCloudFormation.getStringArray(properties.Addresses) : undefined);\n    ret.addPropertyResult('attachedTo', 'AttachedTo', properties.AttachedTo != null ? CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation(properties.AttachedTo) : undefined);\n    ret.addPropertyResult('availabilityZones', 'AvailabilityZones', properties.AvailabilityZones != null ? cfn_parse.FromCloudFormation.getStringArray(properties.AvailabilityZones) : undefined);\n    ret.addPropertyResult('cidrs', 'Cidrs', properties.Cidrs != null ? cfn_parse.FromCloudFormation.getStringArray(properties.Cidrs) : undefined);\n    ret.addPropertyResult('classicLoadBalancerListener', 'ClassicLoadBalancerListener', properties.ClassicLoadBalancerListener != null ? CfnNetworkInsightsAnalysisAnalysisLoadBalancerListenerPropertyFromCloudFormation(properties.ClassicLoadBalancerListener) : undefined);\n    ret.addPropertyResult('component', 'Component', properties.Component != null ? CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation(properties.Component) : undefined);\n    ret.addPropertyResult('customerGateway', 'CustomerGateway', properties.CustomerGateway != null ? CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation(properties.CustomerGateway) : undefined);\n    ret.addPropertyResult('destination', 'Destination', properties.Destination != null ? CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation(properties.Destination) : undefined);\n    ret.addPropertyResult('destinationVpc', 'DestinationVpc', properties.DestinationVpc != null ? CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation(properties.DestinationVpc) : undefined);\n    ret.addPropertyResult('direction', 'Direction', properties.Direction != null ? cfn_parse.FromCloudFormation.getString(properties.Direction) : undefined);\n    ret.addPropertyResult('elasticLoadBalancerListener', 'ElasticLoadBalancerListener', properties.ElasticLoadBalancerListener != null ? CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation(properties.ElasticLoadBalancerListener) : undefined);\n    ret.addPropertyResult('explanationCode', 'ExplanationCode', properties.ExplanationCode != null ? cfn_parse.FromCloudFormation.getString(properties.ExplanationCode) : undefined);\n    ret.addPropertyResult('ingressRouteTable', 'IngressRouteTable', properties.IngressRouteTable != null ? CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation(properties.IngressRouteTable) : undefined);\n    ret.addPropertyResult('internetGateway', 'InternetGateway', properties.InternetGateway != null ? CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation(properties.InternetGateway) : undefined);\n    ret.addPropertyResult('loadBalancerArn', 'LoadBalancerArn', properties.LoadBalancerArn != null ? cfn_parse.FromCloudFormation.getString(properties.LoadBalancerArn) : undefined);\n    ret.addPropertyResult('loadBalancerListenerPort', 'LoadBalancerListenerPort', properties.LoadBalancerListenerPort != null ? cfn_parse.FromCloudFormation.getNumber(properties.LoadBalancerListenerPort) : undefined);\n    ret.addPropertyResult('loadBalancerTarget', 'LoadBalancerTarget', properties.LoadBalancerTarget != null ? CfnNetworkInsightsAnalysisAnalysisLoadBalancerTargetPropertyFromCloudFormation(properties.LoadBalancerTarget) : undefined);\n    ret.addPropertyResult('loadBalancerTargetGroup', 'LoadBalancerTargetGroup', properties.LoadBalancerTargetGroup != null ? CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation(properties.LoadBalancerTargetGroup) : undefined);\n    ret.addPropertyResult('loadBalancerTargetGroups', 'LoadBalancerTargetGroups', properties.LoadBalancerTargetGroups != null ? cfn_parse.FromCloudFormation.getArray(CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation)(properties.LoadBalancerTargetGroups) : undefined);\n    ret.addPropertyResult('loadBalancerTargetPort', 'LoadBalancerTargetPort', properties.LoadBalancerTargetPort != null ? cfn_parse.FromCloudFormation.getNumber(properties.LoadBalancerTargetPort) : undefined);\n    ret.addPropertyResult('missingComponent', 'MissingComponent', properties.MissingComponent != null ? cfn_parse.FromCloudFormation.getString(properties.MissingComponent) : undefined);\n    ret.addPropertyResult('natGateway', 'NatGateway', properties.NatGateway != null ? CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation(properties.NatGateway) : undefined);\n    ret.addPropertyResult('networkInterface', 'NetworkInterface', properties.NetworkInterface != null ? CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation(properties.NetworkInterface) : undefined);\n    ret.addPropertyResult('packetField', 'PacketField', properties.PacketField != null ? cfn_parse.FromCloudFormation.getString(properties.PacketField) : undefined);\n    ret.addPropertyResult('port', 'Port', properties.Port != null ? cfn_parse.FromCloudFormation.getNumber(properties.Port) : undefined);\n    ret.addPropertyResult('portRanges', 'PortRanges', properties.PortRanges != null ? cfn_parse.FromCloudFormation.getArray(CfnNetworkInsightsAnalysisPortRangePropertyFromCloudFormation)(properties.PortRanges) : undefined);\n    ret.addPropertyResult('prefixList', 'PrefixList', properties.PrefixList != null ? CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation(properties.PrefixList) : undefined);\n    ret.addPropertyResult('protocols', 'Protocols', properties.Protocols != null ? cfn_parse.FromCloudFormation.getStringArray(properties.Protocols) : undefined);\n    ret.addPropertyResult('routeTable', 'RouteTable', properties.RouteTable != null ? CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation(properties.RouteTable) : undefined);\n    ret.addPropertyResult('routeTableRoute', 'RouteTableRoute', properties.RouteTableRoute != null ? CfnNetworkInsightsAnalysisAnalysisRouteTableRoutePropertyFromCloudFormation(properties.RouteTableRoute) : undefined);\n    ret.addPropertyResult('securityGroup', 'SecurityGroup', properties.SecurityGroup != null ? CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation(properties.SecurityGroup) : undefined);\n    ret.addPropertyResult('securityGroupRule', 'SecurityGroupRule', properties.SecurityGroupRule != null ? CfnNetworkInsightsAnalysisAnalysisSecurityGroupRulePropertyFromCloudFormation(properties.SecurityGroupRule) : undefined);\n    ret.addPropertyResult('securityGroups', 'SecurityGroups', properties.SecurityGroups != null ? cfn_parse.FromCloudFormation.getArray(CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation)(properties.SecurityGroups) : undefined);\n    ret.addPropertyResult('sourceVpc', 'SourceVpc', properties.SourceVpc != null ? CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation(properties.SourceVpc) : undefined);\n    ret.addPropertyResult('state', 'State', properties.State != null ? cfn_parse.FromCloudFormation.getString(properties.State) : undefined);\n    ret.addPropertyResult('subnet', 'Subnet', properties.Subnet != null ? CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation(properties.Subnet) : undefined);\n    ret.addPropertyResult('subnetRouteTable', 'SubnetRouteTable', properties.SubnetRouteTable != null ? CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation(properties.SubnetRouteTable) : undefined);\n    ret.addPropertyResult('vpc', 'Vpc', properties.Vpc != null ? CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation(properties.Vpc) : undefined);\n    ret.addPropertyResult('vpcPeeringConnection', 'VpcPeeringConnection', properties.VpcPeeringConnection != null ? CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation(properties.VpcPeeringConnection) : undefined);\n    ret.addPropertyResult('vpnConnection', 'VpnConnection', properties.VpnConnection != null ? CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation(properties.VpnConnection) : undefined);\n    ret.addPropertyResult('vpnGateway', 'VpnGateway', properties.VpnGateway != null ? CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation(properties.VpnGateway) : undefined);\n    ret.addPropertyResult('vpcEndpoint', 'vpcEndpoint', properties.vpcEndpoint != null ? CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation(properties.vpcEndpoint) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnNetworkInsightsAnalysis {\n    /**\n     * Describes a path component.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html\n     */\n    export interface PathComponentProperty {\n        /**\n         * The network ACL rule.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-aclrule\n         */\n        readonly aclRule?: CfnNetworkInsightsAnalysis.AnalysisAclRuleProperty | cdk.IResolvable;\n        /**\n         * The component.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-component\n         */\n        readonly component?: CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable;\n        /**\n         * The destination VPC.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-destinationvpc\n         */\n        readonly destinationVpc?: CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable;\n        /**\n         * The inbound header.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-inboundheader\n         */\n        readonly inboundHeader?: CfnNetworkInsightsAnalysis.AnalysisPacketHeaderProperty | cdk.IResolvable;\n        /**\n         * The outbound header.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-outboundheader\n         */\n        readonly outboundHeader?: CfnNetworkInsightsAnalysis.AnalysisPacketHeaderProperty | cdk.IResolvable;\n        /**\n         * The route table route.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-routetableroute\n         */\n        readonly routeTableRoute?: CfnNetworkInsightsAnalysis.AnalysisRouteTableRouteProperty | cdk.IResolvable;\n        /**\n         * The security group rule.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-securitygrouprule\n         */\n        readonly securityGroupRule?: CfnNetworkInsightsAnalysis.AnalysisSecurityGroupRuleProperty | cdk.IResolvable;\n        /**\n         * The sequence number.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-sequencenumber\n         */\n        readonly sequenceNumber?: number;\n        /**\n         * The source VPC.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-sourcevpc\n         */\n        readonly sourceVpc?: CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable;\n        /**\n         * The subnet.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-subnet\n         */\n        readonly subnet?: CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable;\n        /**\n         * The component VPC.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-vpc\n         */\n        readonly vpc?: CfnNetworkInsightsAnalysis.AnalysisComponentProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `PathComponentProperty`\n *\n * @param properties - the TypeScript properties of a `PathComponentProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnNetworkInsightsAnalysis_PathComponentPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('aclRule', CfnNetworkInsightsAnalysis_AnalysisAclRulePropertyValidator)(properties.aclRule));\n    errors.collect(cdk.propertyValidator('component', CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator)(properties.component));\n    errors.collect(cdk.propertyValidator('destinationVpc', CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator)(properties.destinationVpc));\n    errors.collect(cdk.propertyValidator('inboundHeader', CfnNetworkInsightsAnalysis_AnalysisPacketHeaderPropertyValidator)(properties.inboundHeader));\n    errors.collect(cdk.propertyValidator('outboundHeader', CfnNetworkInsightsAnalysis_AnalysisPacketHeaderPropertyValidator)(properties.outboundHeader));\n    errors.collect(cdk.propertyValidator('routeTableRoute', CfnNetworkInsightsAnalysis_AnalysisRouteTableRoutePropertyValidator)(properties.routeTableRoute));\n    errors.collect(cdk.propertyValidator('securityGroupRule', CfnNetworkInsightsAnalysis_AnalysisSecurityGroupRulePropertyValidator)(properties.securityGroupRule));\n    errors.collect(cdk.propertyValidator('sequenceNumber', cdk.validateNumber)(properties.sequenceNumber));\n    errors.collect(cdk.propertyValidator('sourceVpc', CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator)(properties.sourceVpc));\n    errors.collect(cdk.propertyValidator('subnet', CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator)(properties.subnet));\n    errors.collect(cdk.propertyValidator('vpc', CfnNetworkInsightsAnalysis_AnalysisComponentPropertyValidator)(properties.vpc));\n    return errors.wrap('supplied properties not correct for \"PathComponentProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAnalysis.PathComponent` resource\n *\n * @param properties - the TypeScript properties of a `PathComponentProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAnalysis.PathComponent` resource.\n */\n// @ts-ignore TS6133\nfunction cfnNetworkInsightsAnalysisPathComponentPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnNetworkInsightsAnalysis_PathComponentPropertyValidator(properties).assertSuccess();\n    return {\n        AclRule: cfnNetworkInsightsAnalysisAnalysisAclRulePropertyToCloudFormation(properties.aclRule),\n        Component: cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation(properties.component),\n        DestinationVpc: cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation(properties.destinationVpc),\n        InboundHeader: cfnNetworkInsightsAnalysisAnalysisPacketHeaderPropertyToCloudFormation(properties.inboundHeader),\n        OutboundHeader: cfnNetworkInsightsAnalysisAnalysisPacketHeaderPropertyToCloudFormation(properties.outboundHeader),\n        RouteTableRoute: cfnNetworkInsightsAnalysisAnalysisRouteTableRoutePropertyToCloudFormation(properties.routeTableRoute),\n        SecurityGroupRule: cfnNetworkInsightsAnalysisAnalysisSecurityGroupRulePropertyToCloudFormation(properties.securityGroupRule),\n        SequenceNumber: cdk.numberToCloudFormation(properties.sequenceNumber),\n        SourceVpc: cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation(properties.sourceVpc),\n        Subnet: cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation(properties.subnet),\n        Vpc: cfnNetworkInsightsAnalysisAnalysisComponentPropertyToCloudFormation(properties.vpc),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnNetworkInsightsAnalysisPathComponentPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnNetworkInsightsAnalysis.PathComponentProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnNetworkInsightsAnalysis.PathComponentProperty>();\n    ret.addPropertyResult('aclRule', 'AclRule', properties.AclRule != null ? CfnNetworkInsightsAnalysisAnalysisAclRulePropertyFromCloudFormation(properties.AclRule) : undefined);\n    ret.addPropertyResult('component', 'Component', properties.Component != null ? CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation(properties.Component) : undefined);\n    ret.addPropertyResult('destinationVpc', 'DestinationVpc', properties.DestinationVpc != null ? CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation(properties.DestinationVpc) : undefined);\n    ret.addPropertyResult('inboundHeader', 'InboundHeader', properties.InboundHeader != null ? CfnNetworkInsightsAnalysisAnalysisPacketHeaderPropertyFromCloudFormation(properties.InboundHeader) : undefined);\n    ret.addPropertyResult('outboundHeader', 'OutboundHeader', properties.OutboundHeader != null ? CfnNetworkInsightsAnalysisAnalysisPacketHeaderPropertyFromCloudFormation(properties.OutboundHeader) : undefined);\n    ret.addPropertyResult('routeTableRoute', 'RouteTableRoute', properties.RouteTableRoute != null ? CfnNetworkInsightsAnalysisAnalysisRouteTableRoutePropertyFromCloudFormation(properties.RouteTableRoute) : undefined);\n    ret.addPropertyResult('securityGroupRule', 'SecurityGroupRule', properties.SecurityGroupRule != null ? CfnNetworkInsightsAnalysisAnalysisSecurityGroupRulePropertyFromCloudFormation(properties.SecurityGroupRule) : undefined);\n    ret.addPropertyResult('sequenceNumber', 'SequenceNumber', properties.SequenceNumber != null ? cfn_parse.FromCloudFormation.getNumber(properties.SequenceNumber) : undefined);\n    ret.addPropertyResult('sourceVpc', 'SourceVpc', properties.SourceVpc != null ? CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation(properties.SourceVpc) : undefined);\n    ret.addPropertyResult('subnet', 'Subnet', properties.Subnet != null ? CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation(properties.Subnet) : undefined);\n    ret.addPropertyResult('vpc', 'Vpc', properties.Vpc != null ? CfnNetworkInsightsAnalysisAnalysisComponentPropertyFromCloudFormation(properties.Vpc) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnNetworkInsightsAnalysis {\n    /**\n     * Describes a range of ports.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-portrange.html\n     */\n    export interface PortRangeProperty {\n        /**\n         * The first port in the range.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-portrange.html#cfn-ec2-networkinsightsanalysis-portrange-from\n         */\n        readonly from?: number;\n        /**\n         * The last port in the range.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-portrange.html#cfn-ec2-networkinsightsanalysis-portrange-to\n         */\n        readonly to?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `PortRangeProperty`\n *\n * @param properties - the TypeScript properties of a `PortRangeProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnNetworkInsightsAnalysis_PortRangePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('from', cdk.validateNumber)(properties.from));\n    errors.collect(cdk.propertyValidator('to', cdk.validateNumber)(properties.to));\n    return errors.wrap('supplied properties not correct for \"PortRangeProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAnalysis.PortRange` resource\n *\n * @param properties - the TypeScript properties of a `PortRangeProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsAnalysis.PortRange` resource.\n */\n// @ts-ignore TS6133\nfunction cfnNetworkInsightsAnalysisPortRangePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnNetworkInsightsAnalysis_PortRangePropertyValidator(properties).assertSuccess();\n    return {\n        From: cdk.numberToCloudFormation(properties.from),\n        To: cdk.numberToCloudFormation(properties.to),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnNetworkInsightsAnalysisPortRangePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnNetworkInsightsAnalysis.PortRangeProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnNetworkInsightsAnalysis.PortRangeProperty>();\n    ret.addPropertyResult('from', 'From', properties.From != null ? cfn_parse.FromCloudFormation.getNumber(properties.From) : undefined);\n    ret.addPropertyResult('to', 'To', properties.To != null ? cfn_parse.FromCloudFormation.getNumber(properties.To) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnNetworkInsightsPath`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html\n */\nexport interface CfnNetworkInsightsPathProps {\n\n    /**\n     * The AWS resource that is the destination of the path.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-destination\n     */\n    readonly destination: string;\n\n    /**\n     * The protocol.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-protocol\n     */\n    readonly protocol: string;\n\n    /**\n     * The AWS resource that is the source of the path.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-source\n     */\n    readonly source: string;\n\n    /**\n     * The IP address of the AWS resource that is the destination of the path.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-destinationip\n     */\n    readonly destinationIp?: string;\n\n    /**\n     * The destination port.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-destinationport\n     */\n    readonly destinationPort?: number;\n\n    /**\n     * The IP address of the AWS resource that is the source of the path.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-sourceip\n     */\n    readonly sourceIp?: string;\n\n    /**\n     * The tags to add to the path.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnNetworkInsightsPathProps`\n *\n * @param properties - the TypeScript properties of a `CfnNetworkInsightsPathProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnNetworkInsightsPathPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('destination', cdk.requiredValidator)(properties.destination));\n    errors.collect(cdk.propertyValidator('destination', cdk.validateString)(properties.destination));\n    errors.collect(cdk.propertyValidator('destinationIp', cdk.validateString)(properties.destinationIp));\n    errors.collect(cdk.propertyValidator('destinationPort', cdk.validateNumber)(properties.destinationPort));\n    errors.collect(cdk.propertyValidator('protocol', cdk.requiredValidator)(properties.protocol));\n    errors.collect(cdk.propertyValidator('protocol', cdk.validateString)(properties.protocol));\n    errors.collect(cdk.propertyValidator('source', cdk.requiredValidator)(properties.source));\n    errors.collect(cdk.propertyValidator('source', cdk.validateString)(properties.source));\n    errors.collect(cdk.propertyValidator('sourceIp', cdk.validateString)(properties.sourceIp));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnNetworkInsightsPathProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsPath` resource\n *\n * @param properties - the TypeScript properties of a `CfnNetworkInsightsPathProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::NetworkInsightsPath` resource.\n */\n// @ts-ignore TS6133\nfunction cfnNetworkInsightsPathPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnNetworkInsightsPathPropsValidator(properties).assertSuccess();\n    return {\n        Destination: cdk.stringToCloudFormation(properties.destination),\n        Protocol: cdk.stringToCloudFormation(properties.protocol),\n        Source: cdk.stringToCloudFormation(properties.source),\n        DestinationIp: cdk.stringToCloudFormation(properties.destinationIp),\n        DestinationPort: cdk.numberToCloudFormation(properties.destinationPort),\n        SourceIp: cdk.stringToCloudFormation(properties.sourceIp),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnNetworkInsightsPathPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnNetworkInsightsPathProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnNetworkInsightsPathProps>();\n    ret.addPropertyResult('destination', 'Destination', cfn_parse.FromCloudFormation.getString(properties.Destination));\n    ret.addPropertyResult('protocol', 'Protocol', cfn_parse.FromCloudFormation.getString(properties.Protocol));\n    ret.addPropertyResult('source', 'Source', cfn_parse.FromCloudFormation.getString(properties.Source));\n    ret.addPropertyResult('destinationIp', 'DestinationIp', properties.DestinationIp != null ? cfn_parse.FromCloudFormation.getString(properties.DestinationIp) : undefined);\n    ret.addPropertyResult('destinationPort', 'DestinationPort', properties.DestinationPort != null ? cfn_parse.FromCloudFormation.getNumber(properties.DestinationPort) : undefined);\n    ret.addPropertyResult('sourceIp', 'SourceIp', properties.SourceIp != null ? cfn_parse.FromCloudFormation.getString(properties.SourceIp) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::NetworkInsightsPath`\n *\n * Specifies a path to analyze for reachability.\n *\n * VPC Reachability Analyzer enables you to analyze and debug network reachability between two resources in your virtual private cloud (VPC). For more information, see the [Reachability Analyzer User Guide](https://docs.aws.amazon.com/vpc/latest/reachability/what-is-reachability-analyzer.html) .\n *\n * @cloudformationResource AWS::EC2::NetworkInsightsPath\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html\n */\nexport class CfnNetworkInsightsPath extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::NetworkInsightsPath\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnNetworkInsightsPath {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnNetworkInsightsPathPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnNetworkInsightsPath(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The time stamp when the path was created.\n     * @cloudformationAttribute CreatedDate\n     */\n    public readonly attrCreatedDate: string;\n\n    /**\n     * The Amazon Resource Name (ARN) of the path.\n     * @cloudformationAttribute NetworkInsightsPathArn\n     */\n    public readonly attrNetworkInsightsPathArn: string;\n\n    /**\n     * The ID of the path.\n     * @cloudformationAttribute NetworkInsightsPathId\n     */\n    public readonly attrNetworkInsightsPathId: string;\n\n    /**\n     * The AWS resource that is the destination of the path.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-destination\n     */\n    public destination: string;\n\n    /**\n     * The protocol.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-protocol\n     */\n    public protocol: string;\n\n    /**\n     * The AWS resource that is the source of the path.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-source\n     */\n    public source: string;\n\n    /**\n     * The IP address of the AWS resource that is the destination of the path.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-destinationip\n     */\n    public destinationIp: string | undefined;\n\n    /**\n     * The destination port.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-destinationport\n     */\n    public destinationPort: number | undefined;\n\n    /**\n     * The IP address of the AWS resource that is the source of the path.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-sourceip\n     */\n    public sourceIp: string | undefined;\n\n    /**\n     * The tags to add to the path.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EC2::NetworkInsightsPath`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnNetworkInsightsPathProps) {\n        super(scope, id, { type: CfnNetworkInsightsPath.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'destination', this);\n        cdk.requireProperty(props, 'protocol', this);\n        cdk.requireProperty(props, 'source', this);\n        this.attrCreatedDate = cdk.Token.asString(this.getAtt('CreatedDate'));\n        this.attrNetworkInsightsPathArn = cdk.Token.asString(this.getAtt('NetworkInsightsPathArn'));\n        this.attrNetworkInsightsPathId = cdk.Token.asString(this.getAtt('NetworkInsightsPathId'));\n\n        this.destination = props.destination;\n        this.protocol = props.protocol;\n        this.source = props.source;\n        this.destinationIp = props.destinationIp;\n        this.destinationPort = props.destinationPort;\n        this.sourceIp = props.sourceIp;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::NetworkInsightsPath\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnNetworkInsightsPath.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            destination: this.destination,\n            protocol: this.protocol,\n            source: this.source,\n            destinationIp: this.destinationIp,\n            destinationPort: this.destinationPort,\n            sourceIp: this.sourceIp,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnNetworkInsightsPathPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnNetworkInterface`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html\n */\nexport interface CfnNetworkInterfaceProps {\n\n    /**\n     * The ID of the subnet to associate with the network interface.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-subnetid\n     */\n    readonly subnetId: string;\n\n    /**\n     * A description for the network interface.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-description\n     */\n    readonly description?: string;\n\n    /**\n     * The security group IDs associated with this network interface.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-groupset\n     */\n    readonly groupSet?: string[];\n\n    /**\n     * The type of network interface. The default is `interface` . The supported values are `efa` and `trunk` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-interfacetype\n     */\n    readonly interfaceType?: string;\n\n    /**\n     * The number of IPv6 addresses to assign to a network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. To specify specific IPv6 addresses, use the `Ipv6Addresses` property and don't specify this property.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-ipv6addresscount\n     */\n    readonly ipv6AddressCount?: number;\n\n    /**\n     * One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet to associate with the network interface. If you're specifying a number of IPv6 addresses, use the `Ipv6AddressCount` property and don't specify this property.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-ipv6addresses\n     */\n    readonly ipv6Addresses?: Array<CfnNetworkInterface.InstanceIpv6AddressProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * Assigns a single private IP address to the network interface, which is used as the primary private IP address. If you want to specify multiple private IP address, use the `PrivateIpAddresses` property.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-privateipaddress\n     */\n    readonly privateIpAddress?: string;\n\n    /**\n     * Assigns private IP addresses to the network interface. You can specify a primary private IP address by setting the value of the `Primary` property to `true` in the `PrivateIpAddressSpecification` property. If you want EC2 to automatically assign private IP addresses, use the `SecondaryPrivateIpAddressCount` property and do not specify this property.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-privateipaddresses\n     */\n    readonly privateIpAddresses?: Array<CfnNetworkInterface.PrivateIpAddressSpecificationProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * The number of secondary private IPv4 addresses to assign to a network interface. When you specify a number of secondary IPv4 addresses, Amazon EC2 selects these IP addresses within the subnet's IPv4 CIDR range. You can't specify this option and specify more than one private IP address using `privateIpAddresses` .\n     *\n     * The number of IP addresses you can assign to a network interface varies by instance type. For more information, see [IP Addresses Per ENI Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI) in the *Amazon Virtual Private Cloud User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-secondaryprivateipaddresscount\n     */\n    readonly secondaryPrivateIpAddressCount?: number;\n\n    /**\n     * Enable or disable source/destination checks, which ensure that the instance is either the source or the destination of any traffic that it receives. If the value is `true` , source/destination checks are enabled; otherwise, they are disabled. The default value is `true` . You must disable source/destination checks if the instance runs services such as network address translation, routing, or firewalls.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-sourcedestcheck\n     */\n    readonly sourceDestCheck?: boolean | cdk.IResolvable;\n\n    /**\n     * An arbitrary set of tags (key-value pairs) for this network interface.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnNetworkInterfaceProps`\n *\n * @param properties - the TypeScript properties of a `CfnNetworkInterfaceProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnNetworkInterfacePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('groupSet', cdk.listValidator(cdk.validateString))(properties.groupSet));\n    errors.collect(cdk.propertyValidator('interfaceType', cdk.validateString)(properties.interfaceType));\n    errors.collect(cdk.propertyValidator('ipv6AddressCount', cdk.validateNumber)(properties.ipv6AddressCount));\n    errors.collect(cdk.propertyValidator('ipv6Addresses', cdk.listValidator(CfnNetworkInterface_InstanceIpv6AddressPropertyValidator))(properties.ipv6Addresses));\n    errors.collect(cdk.propertyValidator('privateIpAddress', cdk.validateString)(properties.privateIpAddress));\n    errors.collect(cdk.propertyValidator('privateIpAddresses', cdk.listValidator(CfnNetworkInterface_PrivateIpAddressSpecificationPropertyValidator))(properties.privateIpAddresses));\n    errors.collect(cdk.propertyValidator('secondaryPrivateIpAddressCount', cdk.validateNumber)(properties.secondaryPrivateIpAddressCount));\n    errors.collect(cdk.propertyValidator('sourceDestCheck', cdk.validateBoolean)(properties.sourceDestCheck));\n    errors.collect(cdk.propertyValidator('subnetId', cdk.requiredValidator)(properties.subnetId));\n    errors.collect(cdk.propertyValidator('subnetId', cdk.validateString)(properties.subnetId));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnNetworkInterfaceProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::NetworkInterface` resource\n *\n * @param properties - the TypeScript properties of a `CfnNetworkInterfaceProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::NetworkInterface` resource.\n */\n// @ts-ignore TS6133\nfunction cfnNetworkInterfacePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnNetworkInterfacePropsValidator(properties).assertSuccess();\n    return {\n        SubnetId: cdk.stringToCloudFormation(properties.subnetId),\n        Description: cdk.stringToCloudFormation(properties.description),\n        GroupSet: cdk.listMapper(cdk.stringToCloudFormation)(properties.groupSet),\n        InterfaceType: cdk.stringToCloudFormation(properties.interfaceType),\n        Ipv6AddressCount: cdk.numberToCloudFormation(properties.ipv6AddressCount),\n        Ipv6Addresses: cdk.listMapper(cfnNetworkInterfaceInstanceIpv6AddressPropertyToCloudFormation)(properties.ipv6Addresses),\n        PrivateIpAddress: cdk.stringToCloudFormation(properties.privateIpAddress),\n        PrivateIpAddresses: cdk.listMapper(cfnNetworkInterfacePrivateIpAddressSpecificationPropertyToCloudFormation)(properties.privateIpAddresses),\n        SecondaryPrivateIpAddressCount: cdk.numberToCloudFormation(properties.secondaryPrivateIpAddressCount),\n        SourceDestCheck: cdk.booleanToCloudFormation(properties.sourceDestCheck),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnNetworkInterfacePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnNetworkInterfaceProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnNetworkInterfaceProps>();\n    ret.addPropertyResult('subnetId', 'SubnetId', cfn_parse.FromCloudFormation.getString(properties.SubnetId));\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('groupSet', 'GroupSet', properties.GroupSet != null ? cfn_parse.FromCloudFormation.getStringArray(properties.GroupSet) : undefined);\n    ret.addPropertyResult('interfaceType', 'InterfaceType', properties.InterfaceType != null ? cfn_parse.FromCloudFormation.getString(properties.InterfaceType) : undefined);\n    ret.addPropertyResult('ipv6AddressCount', 'Ipv6AddressCount', properties.Ipv6AddressCount != null ? cfn_parse.FromCloudFormation.getNumber(properties.Ipv6AddressCount) : undefined);\n    ret.addPropertyResult('ipv6Addresses', 'Ipv6Addresses', properties.Ipv6Addresses != null ? cfn_parse.FromCloudFormation.getArray(CfnNetworkInterfaceInstanceIpv6AddressPropertyFromCloudFormation)(properties.Ipv6Addresses) : undefined);\n    ret.addPropertyResult('privateIpAddress', 'PrivateIpAddress', properties.PrivateIpAddress != null ? cfn_parse.FromCloudFormation.getString(properties.PrivateIpAddress) : undefined);\n    ret.addPropertyResult('privateIpAddresses', 'PrivateIpAddresses', properties.PrivateIpAddresses != null ? cfn_parse.FromCloudFormation.getArray(CfnNetworkInterfacePrivateIpAddressSpecificationPropertyFromCloudFormation)(properties.PrivateIpAddresses) : undefined);\n    ret.addPropertyResult('secondaryPrivateIpAddressCount', 'SecondaryPrivateIpAddressCount', properties.SecondaryPrivateIpAddressCount != null ? cfn_parse.FromCloudFormation.getNumber(properties.SecondaryPrivateIpAddressCount) : undefined);\n    ret.addPropertyResult('sourceDestCheck', 'SourceDestCheck', properties.SourceDestCheck != null ? cfn_parse.FromCloudFormation.getBoolean(properties.SourceDestCheck) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::NetworkInterface`\n *\n * Describes a network interface in an Amazon EC2 instance for AWS CloudFormation .\n *\n * @cloudformationResource AWS::EC2::NetworkInterface\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html\n */\nexport class CfnNetworkInterface extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::NetworkInterface\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnNetworkInterface {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnNetworkInterfacePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnNetworkInterface(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the network interface.\n     * @cloudformationAttribute Id\n     */\n    public readonly attrId: string;\n\n    /**\n     * The primary private IP address of the network interface. For example, `10.0.0.192` .\n     * @cloudformationAttribute PrimaryPrivateIpAddress\n     */\n    public readonly attrPrimaryPrivateIpAddress: string;\n\n    /**\n     * The secondary private IP addresses of the network interface. For example, `[\"10.0.0.161\", \"10.0.0.162\", \"10.0.0.163\"]` .\n     * @cloudformationAttribute SecondaryPrivateIpAddresses\n     */\n    public readonly attrSecondaryPrivateIpAddresses: string[];\n\n    /**\n     * The ID of the subnet to associate with the network interface.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-subnetid\n     */\n    public subnetId: string;\n\n    /**\n     * A description for the network interface.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-description\n     */\n    public description: string | undefined;\n\n    /**\n     * The security group IDs associated with this network interface.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-groupset\n     */\n    public groupSet: string[] | undefined;\n\n    /**\n     * The type of network interface. The default is `interface` . The supported values are `efa` and `trunk` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-interfacetype\n     */\n    public interfaceType: string | undefined;\n\n    /**\n     * The number of IPv6 addresses to assign to a network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. To specify specific IPv6 addresses, use the `Ipv6Addresses` property and don't specify this property.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-ipv6addresscount\n     */\n    public ipv6AddressCount: number | undefined;\n\n    /**\n     * One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet to associate with the network interface. If you're specifying a number of IPv6 addresses, use the `Ipv6AddressCount` property and don't specify this property.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-ipv6addresses\n     */\n    public ipv6Addresses: Array<CfnNetworkInterface.InstanceIpv6AddressProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n    /**\n     * Assigns a single private IP address to the network interface, which is used as the primary private IP address. If you want to specify multiple private IP address, use the `PrivateIpAddresses` property.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-privateipaddress\n     */\n    public privateIpAddress: string | undefined;\n\n    /**\n     * Assigns private IP addresses to the network interface. You can specify a primary private IP address by setting the value of the `Primary` property to `true` in the `PrivateIpAddressSpecification` property. If you want EC2 to automatically assign private IP addresses, use the `SecondaryPrivateIpAddressCount` property and do not specify this property.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-privateipaddresses\n     */\n    public privateIpAddresses: Array<CfnNetworkInterface.PrivateIpAddressSpecificationProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n    /**\n     * The number of secondary private IPv4 addresses to assign to a network interface. When you specify a number of secondary IPv4 addresses, Amazon EC2 selects these IP addresses within the subnet's IPv4 CIDR range. You can't specify this option and specify more than one private IP address using `privateIpAddresses` .\n     *\n     * The number of IP addresses you can assign to a network interface varies by instance type. For more information, see [IP Addresses Per ENI Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI) in the *Amazon Virtual Private Cloud User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-secondaryprivateipaddresscount\n     */\n    public secondaryPrivateIpAddressCount: number | undefined;\n\n    /**\n     * Enable or disable source/destination checks, which ensure that the instance is either the source or the destination of any traffic that it receives. If the value is `true` , source/destination checks are enabled; otherwise, they are disabled. The default value is `true` . You must disable source/destination checks if the instance runs services such as network address translation, routing, or firewalls.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-sourcedestcheck\n     */\n    public sourceDestCheck: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * An arbitrary set of tags (key-value pairs) for this network interface.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EC2::NetworkInterface`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnNetworkInterfaceProps) {\n        super(scope, id, { type: CfnNetworkInterface.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'subnetId', this);\n        this.attrId = cdk.Token.asString(this.getAtt('Id'));\n        this.attrPrimaryPrivateIpAddress = cdk.Token.asString(this.getAtt('PrimaryPrivateIpAddress'));\n        this.attrSecondaryPrivateIpAddresses = cdk.Token.asList(this.getAtt('SecondaryPrivateIpAddresses'));\n\n        this.subnetId = props.subnetId;\n        this.description = props.description;\n        this.groupSet = props.groupSet;\n        this.interfaceType = props.interfaceType;\n        this.ipv6AddressCount = props.ipv6AddressCount;\n        this.ipv6Addresses = props.ipv6Addresses;\n        this.privateIpAddress = props.privateIpAddress;\n        this.privateIpAddresses = props.privateIpAddresses;\n        this.secondaryPrivateIpAddressCount = props.secondaryPrivateIpAddressCount;\n        this.sourceDestCheck = props.sourceDestCheck;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::NetworkInterface\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnNetworkInterface.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            subnetId: this.subnetId,\n            description: this.description,\n            groupSet: this.groupSet,\n            interfaceType: this.interfaceType,\n            ipv6AddressCount: this.ipv6AddressCount,\n            ipv6Addresses: this.ipv6Addresses,\n            privateIpAddress: this.privateIpAddress,\n            privateIpAddresses: this.privateIpAddresses,\n            secondaryPrivateIpAddressCount: this.secondaryPrivateIpAddressCount,\n            sourceDestCheck: this.sourceDestCheck,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnNetworkInterfacePropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnNetworkInterface {\n    /**\n     * Describes the IPv6 addresses to associate with the network interface.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinterface-instanceipv6address.html\n     */\n    export interface InstanceIpv6AddressProperty {\n        /**\n         * An IPv6 address to associate with the network interface.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinterface-instanceipv6address.html#cfn-ec2-networkinterface-instanceipv6address-ipv6address\n         */\n        readonly ipv6Address: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `InstanceIpv6AddressProperty`\n *\n * @param properties - the TypeScript properties of a `InstanceIpv6AddressProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnNetworkInterface_InstanceIpv6AddressPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('ipv6Address', cdk.requiredValidator)(properties.ipv6Address));\n    errors.collect(cdk.propertyValidator('ipv6Address', cdk.validateString)(properties.ipv6Address));\n    return errors.wrap('supplied properties not correct for \"InstanceIpv6AddressProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::NetworkInterface.InstanceIpv6Address` resource\n *\n * @param properties - the TypeScript properties of a `InstanceIpv6AddressProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::NetworkInterface.InstanceIpv6Address` resource.\n */\n// @ts-ignore TS6133\nfunction cfnNetworkInterfaceInstanceIpv6AddressPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnNetworkInterface_InstanceIpv6AddressPropertyValidator(properties).assertSuccess();\n    return {\n        Ipv6Address: cdk.stringToCloudFormation(properties.ipv6Address),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnNetworkInterfaceInstanceIpv6AddressPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnNetworkInterface.InstanceIpv6AddressProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnNetworkInterface.InstanceIpv6AddressProperty>();\n    ret.addPropertyResult('ipv6Address', 'Ipv6Address', cfn_parse.FromCloudFormation.getString(properties.Ipv6Address));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnNetworkInterface {\n    /**\n     * Describes a secondary private IPv4 address for a network interface.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinterface-privateipaddressspecification.html\n     */\n    export interface PrivateIpAddressSpecificationProperty {\n        /**\n         * Sets the private IP address as the primary private address. You can set only one primary private IP address. If you don't specify a primary private IP address, Amazon EC2 automatically assigns a primary private IP address.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinterface-privateipaddressspecification.html#cfn-ec2-networkinterface-privateipaddressspecification-primary\n         */\n        readonly primary: boolean | cdk.IResolvable;\n        /**\n         * The private IP address of the network interface.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinterface-privateipaddressspecification.html#cfn-ec2-networkinterface-privateipaddressspecification-privateipaddress\n         */\n        readonly privateIpAddress: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `PrivateIpAddressSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `PrivateIpAddressSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnNetworkInterface_PrivateIpAddressSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('primary', cdk.requiredValidator)(properties.primary));\n    errors.collect(cdk.propertyValidator('primary', cdk.validateBoolean)(properties.primary));\n    errors.collect(cdk.propertyValidator('privateIpAddress', cdk.requiredValidator)(properties.privateIpAddress));\n    errors.collect(cdk.propertyValidator('privateIpAddress', cdk.validateString)(properties.privateIpAddress));\n    return errors.wrap('supplied properties not correct for \"PrivateIpAddressSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::NetworkInterface.PrivateIpAddressSpecification` resource\n *\n * @param properties - the TypeScript properties of a `PrivateIpAddressSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::NetworkInterface.PrivateIpAddressSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnNetworkInterfacePrivateIpAddressSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnNetworkInterface_PrivateIpAddressSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        Primary: cdk.booleanToCloudFormation(properties.primary),\n        PrivateIpAddress: cdk.stringToCloudFormation(properties.privateIpAddress),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnNetworkInterfacePrivateIpAddressSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnNetworkInterface.PrivateIpAddressSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnNetworkInterface.PrivateIpAddressSpecificationProperty>();\n    ret.addPropertyResult('primary', 'Primary', cfn_parse.FromCloudFormation.getBoolean(properties.Primary));\n    ret.addPropertyResult('privateIpAddress', 'PrivateIpAddress', cfn_parse.FromCloudFormation.getString(properties.PrivateIpAddress));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnNetworkInterfaceAttachment`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html\n */\nexport interface CfnNetworkInterfaceAttachmentProps {\n\n    /**\n     * The network interface's position in the attachment order. For example, the first attached network interface has a `DeviceIndex` of 0.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-deviceindex\n     */\n    readonly deviceIndex: string;\n\n    /**\n     * The ID of the instance to which you will attach the ENI.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-instanceid\n     */\n    readonly instanceId: string;\n\n    /**\n     * The ID of the ENI that you want to attach.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-networkinterfaceid\n     */\n    readonly networkInterfaceId: string;\n\n    /**\n     * Whether to delete the network interface when the instance terminates. By default, this value is set to `true` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-deleteonterm\n     */\n    readonly deleteOnTermination?: boolean | cdk.IResolvable;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnNetworkInterfaceAttachmentProps`\n *\n * @param properties - the TypeScript properties of a `CfnNetworkInterfaceAttachmentProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnNetworkInterfaceAttachmentPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('deleteOnTermination', cdk.validateBoolean)(properties.deleteOnTermination));\n    errors.collect(cdk.propertyValidator('deviceIndex', cdk.requiredValidator)(properties.deviceIndex));\n    errors.collect(cdk.propertyValidator('deviceIndex', cdk.validateString)(properties.deviceIndex));\n    errors.collect(cdk.propertyValidator('instanceId', cdk.requiredValidator)(properties.instanceId));\n    errors.collect(cdk.propertyValidator('instanceId', cdk.validateString)(properties.instanceId));\n    errors.collect(cdk.propertyValidator('networkInterfaceId', cdk.requiredValidator)(properties.networkInterfaceId));\n    errors.collect(cdk.propertyValidator('networkInterfaceId', cdk.validateString)(properties.networkInterfaceId));\n    return errors.wrap('supplied properties not correct for \"CfnNetworkInterfaceAttachmentProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::NetworkInterfaceAttachment` resource\n *\n * @param properties - the TypeScript properties of a `CfnNetworkInterfaceAttachmentProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::NetworkInterfaceAttachment` resource.\n */\n// @ts-ignore TS6133\nfunction cfnNetworkInterfaceAttachmentPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnNetworkInterfaceAttachmentPropsValidator(properties).assertSuccess();\n    return {\n        DeviceIndex: cdk.stringToCloudFormation(properties.deviceIndex),\n        InstanceId: cdk.stringToCloudFormation(properties.instanceId),\n        NetworkInterfaceId: cdk.stringToCloudFormation(properties.networkInterfaceId),\n        DeleteOnTermination: cdk.booleanToCloudFormation(properties.deleteOnTermination),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnNetworkInterfaceAttachmentPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnNetworkInterfaceAttachmentProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnNetworkInterfaceAttachmentProps>();\n    ret.addPropertyResult('deviceIndex', 'DeviceIndex', cfn_parse.FromCloudFormation.getString(properties.DeviceIndex));\n    ret.addPropertyResult('instanceId', 'InstanceId', cfn_parse.FromCloudFormation.getString(properties.InstanceId));\n    ret.addPropertyResult('networkInterfaceId', 'NetworkInterfaceId', cfn_parse.FromCloudFormation.getString(properties.NetworkInterfaceId));\n    ret.addPropertyResult('deleteOnTermination', 'DeleteOnTermination', properties.DeleteOnTermination != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DeleteOnTermination) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::NetworkInterfaceAttachment`\n *\n * Attaches an elastic network interface (ENI) to an Amazon EC2 instance. You can use this resource type to attach additional network interfaces to an instance without interruption.\n *\n * @cloudformationResource AWS::EC2::NetworkInterfaceAttachment\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html\n */\nexport class CfnNetworkInterfaceAttachment extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::NetworkInterfaceAttachment\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnNetworkInterfaceAttachment {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnNetworkInterfaceAttachmentPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnNetworkInterfaceAttachment(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The network interface's position in the attachment order. For example, the first attached network interface has a `DeviceIndex` of 0.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-deviceindex\n     */\n    public deviceIndex: string;\n\n    /**\n     * The ID of the instance to which you will attach the ENI.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-instanceid\n     */\n    public instanceId: string;\n\n    /**\n     * The ID of the ENI that you want to attach.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-networkinterfaceid\n     */\n    public networkInterfaceId: string;\n\n    /**\n     * Whether to delete the network interface when the instance terminates. By default, this value is set to `true` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-deleteonterm\n     */\n    public deleteOnTermination: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * Create a new `AWS::EC2::NetworkInterfaceAttachment`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnNetworkInterfaceAttachmentProps) {\n        super(scope, id, { type: CfnNetworkInterfaceAttachment.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'deviceIndex', this);\n        cdk.requireProperty(props, 'instanceId', this);\n        cdk.requireProperty(props, 'networkInterfaceId', this);\n\n        this.deviceIndex = props.deviceIndex;\n        this.instanceId = props.instanceId;\n        this.networkInterfaceId = props.networkInterfaceId;\n        this.deleteOnTermination = props.deleteOnTermination;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnNetworkInterfaceAttachment.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            deviceIndex: this.deviceIndex,\n            instanceId: this.instanceId,\n            networkInterfaceId: this.networkInterfaceId,\n            deleteOnTermination: this.deleteOnTermination,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnNetworkInterfaceAttachmentPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnNetworkInterfacePermission`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html\n */\nexport interface CfnNetworkInterfacePermissionProps {\n\n    /**\n     * The AWS account ID.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-awsaccountid\n     */\n    readonly awsAccountId: string;\n\n    /**\n     * The ID of the network interface.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-networkinterfaceid\n     */\n    readonly networkInterfaceId: string;\n\n    /**\n     * The type of permission to grant: `INSTANCE-ATTACH` or `EIP-ASSOCIATE` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-permission\n     */\n    readonly permission: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnNetworkInterfacePermissionProps`\n *\n * @param properties - the TypeScript properties of a `CfnNetworkInterfacePermissionProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnNetworkInterfacePermissionPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('awsAccountId', cdk.requiredValidator)(properties.awsAccountId));\n    errors.collect(cdk.propertyValidator('awsAccountId', cdk.validateString)(properties.awsAccountId));\n    errors.collect(cdk.propertyValidator('networkInterfaceId', cdk.requiredValidator)(properties.networkInterfaceId));\n    errors.collect(cdk.propertyValidator('networkInterfaceId', cdk.validateString)(properties.networkInterfaceId));\n    errors.collect(cdk.propertyValidator('permission', cdk.requiredValidator)(properties.permission));\n    errors.collect(cdk.propertyValidator('permission', cdk.validateString)(properties.permission));\n    return errors.wrap('supplied properties not correct for \"CfnNetworkInterfacePermissionProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::NetworkInterfacePermission` resource\n *\n * @param properties - the TypeScript properties of a `CfnNetworkInterfacePermissionProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::NetworkInterfacePermission` resource.\n */\n// @ts-ignore TS6133\nfunction cfnNetworkInterfacePermissionPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnNetworkInterfacePermissionPropsValidator(properties).assertSuccess();\n    return {\n        AwsAccountId: cdk.stringToCloudFormation(properties.awsAccountId),\n        NetworkInterfaceId: cdk.stringToCloudFormation(properties.networkInterfaceId),\n        Permission: cdk.stringToCloudFormation(properties.permission),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnNetworkInterfacePermissionPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnNetworkInterfacePermissionProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnNetworkInterfacePermissionProps>();\n    ret.addPropertyResult('awsAccountId', 'AwsAccountId', cfn_parse.FromCloudFormation.getString(properties.AwsAccountId));\n    ret.addPropertyResult('networkInterfaceId', 'NetworkInterfaceId', cfn_parse.FromCloudFormation.getString(properties.NetworkInterfaceId));\n    ret.addPropertyResult('permission', 'Permission', cfn_parse.FromCloudFormation.getString(properties.Permission));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::NetworkInterfacePermission`\n *\n * Specifies a permission for an Amazon EC2 network interface. For example, you can grant an AWS authorized partner account permission to attach the specified network interface to an instance in their account.\n *\n * @cloudformationResource AWS::EC2::NetworkInterfacePermission\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html\n */\nexport class CfnNetworkInterfacePermission extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::NetworkInterfacePermission\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnNetworkInterfacePermission {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnNetworkInterfacePermissionPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnNetworkInterfacePermission(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The AWS account ID.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-awsaccountid\n     */\n    public awsAccountId: string;\n\n    /**\n     * The ID of the network interface.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-networkinterfaceid\n     */\n    public networkInterfaceId: string;\n\n    /**\n     * The type of permission to grant: `INSTANCE-ATTACH` or `EIP-ASSOCIATE` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-permission\n     */\n    public permission: string;\n\n    /**\n     * Create a new `AWS::EC2::NetworkInterfacePermission`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnNetworkInterfacePermissionProps) {\n        super(scope, id, { type: CfnNetworkInterfacePermission.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'awsAccountId', this);\n        cdk.requireProperty(props, 'networkInterfaceId', this);\n        cdk.requireProperty(props, 'permission', this);\n\n        this.awsAccountId = props.awsAccountId;\n        this.networkInterfaceId = props.networkInterfaceId;\n        this.permission = props.permission;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnNetworkInterfacePermission.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            awsAccountId: this.awsAccountId,\n            networkInterfaceId: this.networkInterfaceId,\n            permission: this.permission,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnNetworkInterfacePermissionPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnPlacementGroup`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html\n */\nexport interface CfnPlacementGroupProps {\n\n    /**\n     * The placement strategy.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html#cfn-ec2-placementgroup-strategy\n     */\n    readonly strategy?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnPlacementGroupProps`\n *\n * @param properties - the TypeScript properties of a `CfnPlacementGroupProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnPlacementGroupPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('strategy', cdk.validateString)(properties.strategy));\n    return errors.wrap('supplied properties not correct for \"CfnPlacementGroupProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::PlacementGroup` resource\n *\n * @param properties - the TypeScript properties of a `CfnPlacementGroupProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::PlacementGroup` resource.\n */\n// @ts-ignore TS6133\nfunction cfnPlacementGroupPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnPlacementGroupPropsValidator(properties).assertSuccess();\n    return {\n        Strategy: cdk.stringToCloudFormation(properties.strategy),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnPlacementGroupPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnPlacementGroupProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnPlacementGroupProps>();\n    ret.addPropertyResult('strategy', 'Strategy', properties.Strategy != null ? cfn_parse.FromCloudFormation.getString(properties.Strategy) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::PlacementGroup`\n *\n * Specifies a placement group in which to launch instances. The strategy of the placement group determines how the instances are organized within the group.\n *\n * A `cluster` placement group is a logical grouping of instances within a single Availability Zone that benefit from low network latency, high network throughput. A `spread` placement group places instances on distinct hardware. A `partition` placement group places groups of instances in different partitions, where instances in one partition do not share the same hardware with instances in another partition.\n *\n * For more information, see [Placement Groups](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html) in the *Amazon EC2 User Guide* .\n *\n * @cloudformationResource AWS::EC2::PlacementGroup\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html\n */\nexport class CfnPlacementGroup extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::PlacementGroup\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnPlacementGroup {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnPlacementGroupPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnPlacementGroup(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The placement strategy.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html#cfn-ec2-placementgroup-strategy\n     */\n    public strategy: string | undefined;\n\n    /**\n     * Create a new `AWS::EC2::PlacementGroup`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnPlacementGroupProps = {}) {\n        super(scope, id, { type: CfnPlacementGroup.CFN_RESOURCE_TYPE_NAME, properties: props });\n\n        this.strategy = props.strategy;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnPlacementGroup.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            strategy: this.strategy,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnPlacementGroupPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnPrefixList`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html\n */\nexport interface CfnPrefixListProps {\n\n    /**\n     * The IP address type.\n     *\n     * Valid Values: `IPv4` | `IPv6`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-addressfamily\n     */\n    readonly addressFamily: string;\n\n    /**\n     * The maximum number of entries for the prefix list.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-maxentries\n     */\n    readonly maxEntries: number;\n\n    /**\n     * A name for the prefix list.\n     *\n     * Constraints: Up to 255 characters in length. The name cannot start with `com.amazonaws` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-prefixlistname\n     */\n    readonly prefixListName: string;\n\n    /**\n     * One or more entries for the prefix list.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-entries\n     */\n    readonly entries?: Array<CfnPrefixList.EntryProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * The tags for the prefix list.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnPrefixListProps`\n *\n * @param properties - the TypeScript properties of a `CfnPrefixListProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnPrefixListPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('addressFamily', cdk.requiredValidator)(properties.addressFamily));\n    errors.collect(cdk.propertyValidator('addressFamily', cdk.validateString)(properties.addressFamily));\n    errors.collect(cdk.propertyValidator('entries', cdk.listValidator(CfnPrefixList_EntryPropertyValidator))(properties.entries));\n    errors.collect(cdk.propertyValidator('maxEntries', cdk.requiredValidator)(properties.maxEntries));\n    errors.collect(cdk.propertyValidator('maxEntries', cdk.validateNumber)(properties.maxEntries));\n    errors.collect(cdk.propertyValidator('prefixListName', cdk.requiredValidator)(properties.prefixListName));\n    errors.collect(cdk.propertyValidator('prefixListName', cdk.validateString)(properties.prefixListName));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnPrefixListProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::PrefixList` resource\n *\n * @param properties - the TypeScript properties of a `CfnPrefixListProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::PrefixList` resource.\n */\n// @ts-ignore TS6133\nfunction cfnPrefixListPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnPrefixListPropsValidator(properties).assertSuccess();\n    return {\n        AddressFamily: cdk.stringToCloudFormation(properties.addressFamily),\n        MaxEntries: cdk.numberToCloudFormation(properties.maxEntries),\n        PrefixListName: cdk.stringToCloudFormation(properties.prefixListName),\n        Entries: cdk.listMapper(cfnPrefixListEntryPropertyToCloudFormation)(properties.entries),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnPrefixListPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnPrefixListProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnPrefixListProps>();\n    ret.addPropertyResult('addressFamily', 'AddressFamily', cfn_parse.FromCloudFormation.getString(properties.AddressFamily));\n    ret.addPropertyResult('maxEntries', 'MaxEntries', cfn_parse.FromCloudFormation.getNumber(properties.MaxEntries));\n    ret.addPropertyResult('prefixListName', 'PrefixListName', cfn_parse.FromCloudFormation.getString(properties.PrefixListName));\n    ret.addPropertyResult('entries', 'Entries', properties.Entries != null ? cfn_parse.FromCloudFormation.getArray(CfnPrefixListEntryPropertyFromCloudFormation)(properties.Entries) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::PrefixList`\n *\n * Specifies a managed prefix list. You can add one or more entries to the prefix list. Each entry consists of a CIDR block and an optional description.\n *\n * You must specify the maximum number of entries for the prefix list. The maximum number of entries cannot be changed later.\n *\n * @cloudformationResource AWS::EC2::PrefixList\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html\n */\nexport class CfnPrefixList extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::PrefixList\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnPrefixList {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnPrefixListPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnPrefixList(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ARN of the prefix list. For example, `arn:aws:ec2:us-east-1:123456789012:prefix-list/pl-0123123123123abcd` .\n     * @cloudformationAttribute Arn\n     */\n    public readonly attrArn: string;\n\n    /**\n     * The ID of the owner of the prefix list. For example, `123456789012` .\n     * @cloudformationAttribute OwnerId\n     */\n    public readonly attrOwnerId: string;\n\n    /**\n     * The ID of the prefix list. For example, `pl-0123123123123abcd` .\n     * @cloudformationAttribute PrefixListId\n     */\n    public readonly attrPrefixListId: string;\n\n    /**\n     * The version of the prefix list. For example, `1` .\n     * @cloudformationAttribute Version\n     */\n    public readonly attrVersion: number;\n\n    /**\n     * The IP address type.\n     *\n     * Valid Values: `IPv4` | `IPv6`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-addressfamily\n     */\n    public addressFamily: string;\n\n    /**\n     * The maximum number of entries for the prefix list.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-maxentries\n     */\n    public maxEntries: number;\n\n    /**\n     * A name for the prefix list.\n     *\n     * Constraints: Up to 255 characters in length. The name cannot start with `com.amazonaws` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-prefixlistname\n     */\n    public prefixListName: string;\n\n    /**\n     * One or more entries for the prefix list.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-entries\n     */\n    public entries: Array<CfnPrefixList.EntryProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n    /**\n     * The tags for the prefix list.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EC2::PrefixList`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnPrefixListProps) {\n        super(scope, id, { type: CfnPrefixList.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'addressFamily', this);\n        cdk.requireProperty(props, 'maxEntries', this);\n        cdk.requireProperty(props, 'prefixListName', this);\n        this.attrArn = cdk.Token.asString(this.getAtt('Arn'));\n        this.attrOwnerId = cdk.Token.asString(this.getAtt('OwnerId'));\n        this.attrPrefixListId = cdk.Token.asString(this.getAtt('PrefixListId'));\n        this.attrVersion = cdk.Token.asNumber(this.getAtt('Version'));\n\n        this.addressFamily = props.addressFamily;\n        this.maxEntries = props.maxEntries;\n        this.prefixListName = props.prefixListName;\n        this.entries = props.entries;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::PrefixList\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnPrefixList.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            addressFamily: this.addressFamily,\n            maxEntries: this.maxEntries,\n            prefixListName: this.prefixListName,\n            entries: this.entries,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnPrefixListPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnPrefixList {\n    /**\n     * An entry for a prefix list.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-prefixlist-entry.html\n     */\n    export interface EntryProperty {\n        /**\n         * The CIDR block.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-prefixlist-entry.html#cfn-ec2-prefixlist-entry-cidr\n         */\n        readonly cidr: string;\n        /**\n         * A description for the entry.\n         *\n         * Constraints: Up to 255 characters in length.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-prefixlist-entry.html#cfn-ec2-prefixlist-entry-description\n         */\n        readonly description?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `EntryProperty`\n *\n * @param properties - the TypeScript properties of a `EntryProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnPrefixList_EntryPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('cidr', cdk.requiredValidator)(properties.cidr));\n    errors.collect(cdk.propertyValidator('cidr', cdk.validateString)(properties.cidr));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    return errors.wrap('supplied properties not correct for \"EntryProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::PrefixList.Entry` resource\n *\n * @param properties - the TypeScript properties of a `EntryProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::PrefixList.Entry` resource.\n */\n// @ts-ignore TS6133\nfunction cfnPrefixListEntryPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnPrefixList_EntryPropertyValidator(properties).assertSuccess();\n    return {\n        Cidr: cdk.stringToCloudFormation(properties.cidr),\n        Description: cdk.stringToCloudFormation(properties.description),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnPrefixListEntryPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnPrefixList.EntryProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnPrefixList.EntryProperty>();\n    ret.addPropertyResult('cidr', 'Cidr', cfn_parse.FromCloudFormation.getString(properties.Cidr));\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnRoute`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html\n */\nexport interface CfnRouteProps {\n\n    /**\n     * The ID of the route table. The routing table must be associated with the same VPC that the virtual private gateway is attached to.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-routetableid\n     */\n    readonly routeTableId: string;\n\n    /**\n     * The ID of the carrier gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-carriergatewayid\n     */\n    readonly carrierGatewayId?: string;\n\n    /**\n     * The IPv4 CIDR block used for the destination match.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-destinationcidrblock\n     */\n    readonly destinationCidrBlock?: string;\n\n    /**\n     * The IPv6 CIDR block used for the destination match.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-destinationipv6cidrblock\n     */\n    readonly destinationIpv6CidrBlock?: string;\n\n    /**\n     * The ID of the egress-only internet gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-egressonlyinternetgatewayid\n     */\n    readonly egressOnlyInternetGatewayId?: string;\n\n    /**\n     * The ID of an internet gateway or virtual private gateway attached to your VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-gatewayid\n     */\n    readonly gatewayId?: string;\n\n    /**\n     * The ID of a NAT instance in your VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-instanceid\n     */\n    readonly instanceId?: string;\n\n    /**\n     * The ID of the local gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-localgatewayid\n     */\n    readonly localGatewayId?: string;\n\n    /**\n     * The ID of a NAT gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-natgatewayid\n     */\n    readonly natGatewayId?: string;\n\n    /**\n     * The ID of the network interface.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-networkinterfaceid\n     */\n    readonly networkInterfaceId?: string;\n\n    /**\n     * The ID of a transit gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-transitgatewayid\n     */\n    readonly transitGatewayId?: string;\n\n    /**\n     * The ID of a VPC endpoint. Supported for Gateway Load Balancer endpoints only.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-vpcendpointid\n     */\n    readonly vpcEndpointId?: string;\n\n    /**\n     * The ID of a VPC peering connection.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-vpcpeeringconnectionid\n     */\n    readonly vpcPeeringConnectionId?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnRouteProps`\n *\n * @param properties - the TypeScript properties of a `CfnRouteProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnRoutePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('carrierGatewayId', cdk.validateString)(properties.carrierGatewayId));\n    errors.collect(cdk.propertyValidator('destinationCidrBlock', cdk.validateString)(properties.destinationCidrBlock));\n    errors.collect(cdk.propertyValidator('destinationIpv6CidrBlock', cdk.validateString)(properties.destinationIpv6CidrBlock));\n    errors.collect(cdk.propertyValidator('egressOnlyInternetGatewayId', cdk.validateString)(properties.egressOnlyInternetGatewayId));\n    errors.collect(cdk.propertyValidator('gatewayId', cdk.validateString)(properties.gatewayId));\n    errors.collect(cdk.propertyValidator('instanceId', cdk.validateString)(properties.instanceId));\n    errors.collect(cdk.propertyValidator('localGatewayId', cdk.validateString)(properties.localGatewayId));\n    errors.collect(cdk.propertyValidator('natGatewayId', cdk.validateString)(properties.natGatewayId));\n    errors.collect(cdk.propertyValidator('networkInterfaceId', cdk.validateString)(properties.networkInterfaceId));\n    errors.collect(cdk.propertyValidator('routeTableId', cdk.requiredValidator)(properties.routeTableId));\n    errors.collect(cdk.propertyValidator('routeTableId', cdk.validateString)(properties.routeTableId));\n    errors.collect(cdk.propertyValidator('transitGatewayId', cdk.validateString)(properties.transitGatewayId));\n    errors.collect(cdk.propertyValidator('vpcEndpointId', cdk.validateString)(properties.vpcEndpointId));\n    errors.collect(cdk.propertyValidator('vpcPeeringConnectionId', cdk.validateString)(properties.vpcPeeringConnectionId));\n    return errors.wrap('supplied properties not correct for \"CfnRouteProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::Route` resource\n *\n * @param properties - the TypeScript properties of a `CfnRouteProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::Route` resource.\n */\n// @ts-ignore TS6133\nfunction cfnRoutePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnRoutePropsValidator(properties).assertSuccess();\n    return {\n        RouteTableId: cdk.stringToCloudFormation(properties.routeTableId),\n        CarrierGatewayId: cdk.stringToCloudFormation(properties.carrierGatewayId),\n        DestinationCidrBlock: cdk.stringToCloudFormation(properties.destinationCidrBlock),\n        DestinationIpv6CidrBlock: cdk.stringToCloudFormation(properties.destinationIpv6CidrBlock),\n        EgressOnlyInternetGatewayId: cdk.stringToCloudFormation(properties.egressOnlyInternetGatewayId),\n        GatewayId: cdk.stringToCloudFormation(properties.gatewayId),\n        InstanceId: cdk.stringToCloudFormation(properties.instanceId),\n        LocalGatewayId: cdk.stringToCloudFormation(properties.localGatewayId),\n        NatGatewayId: cdk.stringToCloudFormation(properties.natGatewayId),\n        NetworkInterfaceId: cdk.stringToCloudFormation(properties.networkInterfaceId),\n        TransitGatewayId: cdk.stringToCloudFormation(properties.transitGatewayId),\n        VpcEndpointId: cdk.stringToCloudFormation(properties.vpcEndpointId),\n        VpcPeeringConnectionId: cdk.stringToCloudFormation(properties.vpcPeeringConnectionId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnRoutePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnRouteProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnRouteProps>();\n    ret.addPropertyResult('routeTableId', 'RouteTableId', cfn_parse.FromCloudFormation.getString(properties.RouteTableId));\n    ret.addPropertyResult('carrierGatewayId', 'CarrierGatewayId', properties.CarrierGatewayId != null ? cfn_parse.FromCloudFormation.getString(properties.CarrierGatewayId) : undefined);\n    ret.addPropertyResult('destinationCidrBlock', 'DestinationCidrBlock', properties.DestinationCidrBlock != null ? cfn_parse.FromCloudFormation.getString(properties.DestinationCidrBlock) : undefined);\n    ret.addPropertyResult('destinationIpv6CidrBlock', 'DestinationIpv6CidrBlock', properties.DestinationIpv6CidrBlock != null ? cfn_parse.FromCloudFormation.getString(properties.DestinationIpv6CidrBlock) : undefined);\n    ret.addPropertyResult('egressOnlyInternetGatewayId', 'EgressOnlyInternetGatewayId', properties.EgressOnlyInternetGatewayId != null ? cfn_parse.FromCloudFormation.getString(properties.EgressOnlyInternetGatewayId) : undefined);\n    ret.addPropertyResult('gatewayId', 'GatewayId', properties.GatewayId != null ? cfn_parse.FromCloudFormation.getString(properties.GatewayId) : undefined);\n    ret.addPropertyResult('instanceId', 'InstanceId', properties.InstanceId != null ? cfn_parse.FromCloudFormation.getString(properties.InstanceId) : undefined);\n    ret.addPropertyResult('localGatewayId', 'LocalGatewayId', properties.LocalGatewayId != null ? cfn_parse.FromCloudFormation.getString(properties.LocalGatewayId) : undefined);\n    ret.addPropertyResult('natGatewayId', 'NatGatewayId', properties.NatGatewayId != null ? cfn_parse.FromCloudFormation.getString(properties.NatGatewayId) : undefined);\n    ret.addPropertyResult('networkInterfaceId', 'NetworkInterfaceId', properties.NetworkInterfaceId != null ? cfn_parse.FromCloudFormation.getString(properties.NetworkInterfaceId) : undefined);\n    ret.addPropertyResult('transitGatewayId', 'TransitGatewayId', properties.TransitGatewayId != null ? cfn_parse.FromCloudFormation.getString(properties.TransitGatewayId) : undefined);\n    ret.addPropertyResult('vpcEndpointId', 'VpcEndpointId', properties.VpcEndpointId != null ? cfn_parse.FromCloudFormation.getString(properties.VpcEndpointId) : undefined);\n    ret.addPropertyResult('vpcPeeringConnectionId', 'VpcPeeringConnectionId', properties.VpcPeeringConnectionId != null ? cfn_parse.FromCloudFormation.getString(properties.VpcPeeringConnectionId) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::Route`\n *\n * Specifies a route in a route table within a VPC.\n *\n * You must specify either `DestinationCidrBlock` or `DestinationIpv6CidrBlock` , plus the ID of one of the target resources.\n *\n * If you create a route that references a transit gateway in the same template where you create the transit gateway, you must declare a dependency on the transit gateway attachment. The route table cannot use the transit gateway until it has successfully attached to the VPC. Add a [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) in the `AWS::EC2::Route` resource to explicitly declare a dependency on the `AWS::EC2::TransitGatewayAttachment` resource.\n *\n * @cloudformationResource AWS::EC2::Route\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html\n */\nexport class CfnRoute extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::Route\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnRoute {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnRoutePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnRoute(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the route table. The routing table must be associated with the same VPC that the virtual private gateway is attached to.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-routetableid\n     */\n    public routeTableId: string;\n\n    /**\n     * The ID of the carrier gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-carriergatewayid\n     */\n    public carrierGatewayId: string | undefined;\n\n    /**\n     * The IPv4 CIDR block used for the destination match.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-destinationcidrblock\n     */\n    public destinationCidrBlock: string | undefined;\n\n    /**\n     * The IPv6 CIDR block used for the destination match.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-destinationipv6cidrblock\n     */\n    public destinationIpv6CidrBlock: string | undefined;\n\n    /**\n     * The ID of the egress-only internet gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-egressonlyinternetgatewayid\n     */\n    public egressOnlyInternetGatewayId: string | undefined;\n\n    /**\n     * The ID of an internet gateway or virtual private gateway attached to your VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-gatewayid\n     */\n    public gatewayId: string | undefined;\n\n    /**\n     * The ID of a NAT instance in your VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-instanceid\n     */\n    public instanceId: string | undefined;\n\n    /**\n     * The ID of the local gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-localgatewayid\n     */\n    public localGatewayId: string | undefined;\n\n    /**\n     * The ID of a NAT gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-natgatewayid\n     */\n    public natGatewayId: string | undefined;\n\n    /**\n     * The ID of the network interface.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-networkinterfaceid\n     */\n    public networkInterfaceId: string | undefined;\n\n    /**\n     * The ID of a transit gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-transitgatewayid\n     */\n    public transitGatewayId: string | undefined;\n\n    /**\n     * The ID of a VPC endpoint. Supported for Gateway Load Balancer endpoints only.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-vpcendpointid\n     */\n    public vpcEndpointId: string | undefined;\n\n    /**\n     * The ID of a VPC peering connection.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-vpcpeeringconnectionid\n     */\n    public vpcPeeringConnectionId: string | undefined;\n\n    /**\n     * Create a new `AWS::EC2::Route`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnRouteProps) {\n        super(scope, id, { type: CfnRoute.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'routeTableId', this);\n\n        this.routeTableId = props.routeTableId;\n        this.carrierGatewayId = props.carrierGatewayId;\n        this.destinationCidrBlock = props.destinationCidrBlock;\n        this.destinationIpv6CidrBlock = props.destinationIpv6CidrBlock;\n        this.egressOnlyInternetGatewayId = props.egressOnlyInternetGatewayId;\n        this.gatewayId = props.gatewayId;\n        this.instanceId = props.instanceId;\n        this.localGatewayId = props.localGatewayId;\n        this.natGatewayId = props.natGatewayId;\n        this.networkInterfaceId = props.networkInterfaceId;\n        this.transitGatewayId = props.transitGatewayId;\n        this.vpcEndpointId = props.vpcEndpointId;\n        this.vpcPeeringConnectionId = props.vpcPeeringConnectionId;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnRoute.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            routeTableId: this.routeTableId,\n            carrierGatewayId: this.carrierGatewayId,\n            destinationCidrBlock: this.destinationCidrBlock,\n            destinationIpv6CidrBlock: this.destinationIpv6CidrBlock,\n            egressOnlyInternetGatewayId: this.egressOnlyInternetGatewayId,\n            gatewayId: this.gatewayId,\n            instanceId: this.instanceId,\n            localGatewayId: this.localGatewayId,\n            natGatewayId: this.natGatewayId,\n            networkInterfaceId: this.networkInterfaceId,\n            transitGatewayId: this.transitGatewayId,\n            vpcEndpointId: this.vpcEndpointId,\n            vpcPeeringConnectionId: this.vpcPeeringConnectionId,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnRoutePropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnRouteTable`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routetable.html\n */\nexport interface CfnRouteTableProps {\n\n    /**\n     * The ID of the VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routetable.html#cfn-ec2-routetable-vpcid\n     */\n    readonly vpcId: string;\n\n    /**\n     * Any tags assigned to the route table.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routetable.html#cfn-ec2-routetable-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnRouteTableProps`\n *\n * @param properties - the TypeScript properties of a `CfnRouteTableProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnRouteTablePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.requiredValidator)(properties.vpcId));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.validateString)(properties.vpcId));\n    return errors.wrap('supplied properties not correct for \"CfnRouteTableProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::RouteTable` resource\n *\n * @param properties - the TypeScript properties of a `CfnRouteTableProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::RouteTable` resource.\n */\n// @ts-ignore TS6133\nfunction cfnRouteTablePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnRouteTablePropsValidator(properties).assertSuccess();\n    return {\n        VpcId: cdk.stringToCloudFormation(properties.vpcId),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnRouteTablePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnRouteTableProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnRouteTableProps>();\n    ret.addPropertyResult('vpcId', 'VpcId', cfn_parse.FromCloudFormation.getString(properties.VpcId));\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::RouteTable`\n *\n * Specifies a route table for a specified VPC. After you create a route table, you can add routes and associate the table with a subnet.\n *\n * For more information, see [Route Tables](https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html) in the *Amazon Virtual Private Cloud User Guide* .\n *\n * @cloudformationResource AWS::EC2::RouteTable\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routetable.html\n */\nexport class CfnRouteTable extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::RouteTable\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnRouteTable {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnRouteTablePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnRouteTable(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the route table.\n     * @cloudformationAttribute RouteTableId\n     */\n    public readonly attrRouteTableId: string;\n\n    /**\n     * The ID of the VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routetable.html#cfn-ec2-routetable-vpcid\n     */\n    public vpcId: string;\n\n    /**\n     * Any tags assigned to the route table.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routetable.html#cfn-ec2-routetable-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EC2::RouteTable`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnRouteTableProps) {\n        super(scope, id, { type: CfnRouteTable.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'vpcId', this);\n        this.attrRouteTableId = cdk.Token.asString(this.getAtt('RouteTableId'));\n\n        this.vpcId = props.vpcId;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::RouteTable\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnRouteTable.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            vpcId: this.vpcId,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnRouteTablePropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnSecurityGroup`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html\n */\nexport interface CfnSecurityGroupProps {\n\n    /**\n     * A description for the security group. This is informational only.\n     *\n     * Constraints: Up to 255 characters in length\n     *\n     * Constraints for EC2-Classic: ASCII characters\n     *\n     * Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-groupdescription\n     */\n    readonly groupDescription: string;\n\n    /**\n     * The name of the security group.\n     *\n     * Constraints: Up to 255 characters in length. Cannot start with `sg-` .\n     *\n     * Constraints for EC2-Classic: ASCII characters\n     *\n     * Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-groupname\n     */\n    readonly groupName?: string;\n\n    /**\n     * [VPC only] The outbound rules associated with the security group. There is a short interruption during which you cannot connect to the security group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-securitygroupegress\n     */\n    readonly securityGroupEgress?: Array<CfnSecurityGroup.EgressProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * The inbound rules associated with the security group. There is a short interruption during which you cannot connect to the security group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-securitygroupingress\n     */\n    readonly securityGroupIngress?: Array<CfnSecurityGroup.IngressProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * Any tags assigned to the security group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n\n    /**\n     * [VPC only] The ID of the VPC for the security group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-vpcid\n     */\n    readonly vpcId?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnSecurityGroupProps`\n *\n * @param properties - the TypeScript properties of a `CfnSecurityGroupProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnSecurityGroupPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('groupDescription', cdk.requiredValidator)(properties.groupDescription));\n    errors.collect(cdk.propertyValidator('groupDescription', cdk.validateString)(properties.groupDescription));\n    errors.collect(cdk.propertyValidator('groupName', cdk.validateString)(properties.groupName));\n    errors.collect(cdk.propertyValidator('securityGroupEgress', cdk.listValidator(CfnSecurityGroup_EgressPropertyValidator))(properties.securityGroupEgress));\n    errors.collect(cdk.propertyValidator('securityGroupIngress', cdk.listValidator(CfnSecurityGroup_IngressPropertyValidator))(properties.securityGroupIngress));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.validateString)(properties.vpcId));\n    return errors.wrap('supplied properties not correct for \"CfnSecurityGroupProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SecurityGroup` resource\n *\n * @param properties - the TypeScript properties of a `CfnSecurityGroupProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SecurityGroup` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSecurityGroupPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSecurityGroupPropsValidator(properties).assertSuccess();\n    return {\n        GroupDescription: cdk.stringToCloudFormation(properties.groupDescription),\n        GroupName: cdk.stringToCloudFormation(properties.groupName),\n        SecurityGroupEgress: cdk.listMapper(cfnSecurityGroupEgressPropertyToCloudFormation)(properties.securityGroupEgress),\n        SecurityGroupIngress: cdk.listMapper(cfnSecurityGroupIngressPropertyToCloudFormation)(properties.securityGroupIngress),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n        VpcId: cdk.stringToCloudFormation(properties.vpcId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSecurityGroupPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSecurityGroupProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSecurityGroupProps>();\n    ret.addPropertyResult('groupDescription', 'GroupDescription', cfn_parse.FromCloudFormation.getString(properties.GroupDescription));\n    ret.addPropertyResult('groupName', 'GroupName', properties.GroupName != null ? cfn_parse.FromCloudFormation.getString(properties.GroupName) : undefined);\n    ret.addPropertyResult('securityGroupEgress', 'SecurityGroupEgress', properties.SecurityGroupEgress != null ? cfn_parse.FromCloudFormation.getArray(CfnSecurityGroupEgressPropertyFromCloudFormation)(properties.SecurityGroupEgress) : undefined);\n    ret.addPropertyResult('securityGroupIngress', 'SecurityGroupIngress', properties.SecurityGroupIngress != null ? cfn_parse.FromCloudFormation.getArray(CfnSecurityGroupIngressPropertyFromCloudFormation)(properties.SecurityGroupIngress) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addPropertyResult('vpcId', 'VpcId', properties.VpcId != null ? cfn_parse.FromCloudFormation.getString(properties.VpcId) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::SecurityGroup`\n *\n * Specifies a security group. To create a security group, use the [VpcId](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-vpcid) property to specify the VPC for which to create the security group.\n *\n * This type supports updates. For more information about updating stacks, see [AWS CloudFormation Stacks Updates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html) .\n *\n * > To cross-reference two security groups in the ingress and egress rules of those security groups, use the [AWS::EC2::SecurityGroupEgress](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html) and [AWS::EC2::SecurityGroupIngress](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-ingress.html) resources to define your rules. Do not use the embedded ingress and egress rules in the `AWS::EC2::SecurityGroup` . Doing so creates a circular dependency, which AWS CloudFormation doesn't allow.\n *\n * @cloudformationResource AWS::EC2::SecurityGroup\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html\n */\nexport class CfnSecurityGroup extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::SecurityGroup\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnSecurityGroup {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnSecurityGroupPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnSecurityGroup(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The group ID of the specified security group, such as `sg-94b3a1f6` .\n     * @cloudformationAttribute GroupId\n     */\n    public readonly attrGroupId: string;\n\n    /**\n     * The physical ID of the VPC. You can obtain the physical ID by using a reference to an [AWS::EC2::VPC](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html) , such as: `{ \"Ref\" : \"myVPC\" }` .\n     * @cloudformationAttribute VpcId\n     */\n    public readonly attrVpcId: string;\n\n    /**\n     * A description for the security group. This is informational only.\n     *\n     * Constraints: Up to 255 characters in length\n     *\n     * Constraints for EC2-Classic: ASCII characters\n     *\n     * Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-groupdescription\n     */\n    public groupDescription: string;\n\n    /**\n     * The name of the security group.\n     *\n     * Constraints: Up to 255 characters in length. Cannot start with `sg-` .\n     *\n     * Constraints for EC2-Classic: ASCII characters\n     *\n     * Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-groupname\n     */\n    public groupName: string | undefined;\n\n    /**\n     * [VPC only] The outbound rules associated with the security group. There is a short interruption during which you cannot connect to the security group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-securitygroupegress\n     */\n    public securityGroupEgress: Array<CfnSecurityGroup.EgressProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n    /**\n     * The inbound rules associated with the security group. There is a short interruption during which you cannot connect to the security group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-securitygroupingress\n     */\n    public securityGroupIngress: Array<CfnSecurityGroup.IngressProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n    /**\n     * Any tags assigned to the security group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * [VPC only] The ID of the VPC for the security group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-vpcid\n     */\n    public vpcId: string | undefined;\n\n    /**\n     * Create a new `AWS::EC2::SecurityGroup`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnSecurityGroupProps) {\n        super(scope, id, { type: CfnSecurityGroup.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'groupDescription', this);\n        this.attrGroupId = cdk.Token.asString(this.getAtt('GroupId'));\n        this.attrVpcId = cdk.Token.asString(this.getAtt('VpcId'));\n\n        this.groupDescription = props.groupDescription;\n        this.groupName = props.groupName;\n        this.securityGroupEgress = props.securityGroupEgress;\n        this.securityGroupIngress = props.securityGroupIngress;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::SecurityGroup\", props.tags, { tagPropertyName: 'tags' });\n        this.vpcId = props.vpcId;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnSecurityGroup.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            groupDescription: this.groupDescription,\n            groupName: this.groupName,\n            securityGroupEgress: this.securityGroupEgress,\n            securityGroupIngress: this.securityGroupIngress,\n            tags: this.tags.renderTags(),\n            vpcId: this.vpcId,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnSecurityGroupPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnSecurityGroup {\n    /**\n     * [EC2-VPC only] Adds the specified egress rules to a security group for use with a VPC.\n     *\n     * An outbound rule permits instances to send traffic to the specified destination IPv4 or IPv6 CIDR address ranges, or to the specified destination security groups for the same VPC.\n     *\n     * You specify a protocol for each rule (for example, TCP). For the TCP and UDP protocols, you must also specify the destination port or port range. For the ICMP protocol, you must also specify the ICMP type and code. You can use -1 for the type or code to mean all types or all codes.\n     *\n     * You must specify only one of the following properties: `CidrIp` , `CidrIpv6` , `DestinationPrefixListId` , or `DestinationSecurityGroupId` .\n     *\n     * You must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ). If you do not specify one of these parameters, the stack will launch successfully but the rule will not be added to the security group.\n     *\n     * Rule changes are propagated to affected instances as quickly as possible. However, a small delay might occur.\n     *\n     * For more information about VPC security group limits, see [Amazon VPC Limits](https://docs.aws.amazon.com/vpc/latest/userguide/amazon-vpc-limits.html) .\n     *\n     * Use `SecurityGroup.Ingress` and `SecurityGroup.Egress` only when necessary, typically to allow security groups to reference each other in ingress and egress rules. Otherwise, use the embedded ingress and egress rules of the security group. For more information, see [Amazon EC2 Security Groups](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html) .\n     *\n     * The EC2 Security Group Rule is an embedded property of the `AWS::EC2::SecurityGroup` type.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html\n     */\n    export interface EgressProperty {\n        /**\n         * The IPv4 address range, in CIDR format.\n         *\n         * You must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).\n         *\n         * For examples of rules that you can add to security groups for specific access scenarios, see [Security group rules for different use cases](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html) in the *Amazon EC2 User Guide* .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-cidrip\n         */\n        readonly cidrIp?: string;\n        /**\n         * The IPv6 address range, in CIDR format.\n         *\n         * You must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).\n         *\n         * For examples of rules that you can add to security groups for specific access scenarios, see [Security group rules for different use cases](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html) in the *Amazon EC2 User Guide* .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-cidripv6\n         */\n        readonly cidrIpv6?: string;\n        /**\n         * A description for the security group rule.\n         *\n         * Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-description\n         */\n        readonly description?: string;\n        /**\n         * [EC2-VPC only] The prefix list IDs for the destination AWS service. This is the AWS service that you want to access through a VPC endpoint from instances associated with the security group.\n         *\n         * You must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-destinationprefixlistid\n         */\n        readonly destinationPrefixListId?: string;\n        /**\n         * The ID of the destination VPC security group.\n         *\n         * You must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-destsecgroupid\n         */\n        readonly destinationSecurityGroupId?: string;\n        /**\n         * The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of `-1` indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-fromport\n         */\n        readonly fromPort?: number;\n        /**\n         * The IP protocol name ( `tcp` , `udp` , `icmp` , `icmpv6` ) or number (see [Protocol Numbers](https://docs.aws.amazon.com/http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml) ).\n         *\n         * [VPC only] Use `-1` to specify all protocols. When authorizing security group rules, specifying `-1` or a protocol number other than `tcp` , `udp` , `icmp` , or `icmpv6` allows traffic on all ports, regardless of any port range you specify. For `tcp` , `udp` , and `icmp` , you must specify a port range. For `icmpv6` , the port range is optional; if you omit the port range, traffic for all types and codes is allowed.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-ipprotocol\n         */\n        readonly ipProtocol: string;\n        /**\n         * The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of `-1` indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-toport\n         */\n        readonly toPort?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `EgressProperty`\n *\n * @param properties - the TypeScript properties of a `EgressProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSecurityGroup_EgressPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('cidrIp', cdk.validateString)(properties.cidrIp));\n    errors.collect(cdk.propertyValidator('cidrIpv6', cdk.validateString)(properties.cidrIpv6));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('destinationPrefixListId', cdk.validateString)(properties.destinationPrefixListId));\n    errors.collect(cdk.propertyValidator('destinationSecurityGroupId', cdk.validateString)(properties.destinationSecurityGroupId));\n    errors.collect(cdk.propertyValidator('fromPort', cdk.validateNumber)(properties.fromPort));\n    errors.collect(cdk.propertyValidator('ipProtocol', cdk.requiredValidator)(properties.ipProtocol));\n    errors.collect(cdk.propertyValidator('ipProtocol', cdk.validateString)(properties.ipProtocol));\n    errors.collect(cdk.propertyValidator('toPort', cdk.validateNumber)(properties.toPort));\n    return errors.wrap('supplied properties not correct for \"EgressProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SecurityGroup.Egress` resource\n *\n * @param properties - the TypeScript properties of a `EgressProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SecurityGroup.Egress` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSecurityGroupEgressPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSecurityGroup_EgressPropertyValidator(properties).assertSuccess();\n    return {\n        CidrIp: cdk.stringToCloudFormation(properties.cidrIp),\n        CidrIpv6: cdk.stringToCloudFormation(properties.cidrIpv6),\n        Description: cdk.stringToCloudFormation(properties.description),\n        DestinationPrefixListId: cdk.stringToCloudFormation(properties.destinationPrefixListId),\n        DestinationSecurityGroupId: cdk.stringToCloudFormation(properties.destinationSecurityGroupId),\n        FromPort: cdk.numberToCloudFormation(properties.fromPort),\n        IpProtocol: cdk.stringToCloudFormation(properties.ipProtocol),\n        ToPort: cdk.numberToCloudFormation(properties.toPort),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSecurityGroupEgressPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSecurityGroup.EgressProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSecurityGroup.EgressProperty>();\n    ret.addPropertyResult('cidrIp', 'CidrIp', properties.CidrIp != null ? cfn_parse.FromCloudFormation.getString(properties.CidrIp) : undefined);\n    ret.addPropertyResult('cidrIpv6', 'CidrIpv6', properties.CidrIpv6 != null ? cfn_parse.FromCloudFormation.getString(properties.CidrIpv6) : undefined);\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('destinationPrefixListId', 'DestinationPrefixListId', properties.DestinationPrefixListId != null ? cfn_parse.FromCloudFormation.getString(properties.DestinationPrefixListId) : undefined);\n    ret.addPropertyResult('destinationSecurityGroupId', 'DestinationSecurityGroupId', properties.DestinationSecurityGroupId != null ? cfn_parse.FromCloudFormation.getString(properties.DestinationSecurityGroupId) : undefined);\n    ret.addPropertyResult('fromPort', 'FromPort', properties.FromPort != null ? cfn_parse.FromCloudFormation.getNumber(properties.FromPort) : undefined);\n    ret.addPropertyResult('ipProtocol', 'IpProtocol', cfn_parse.FromCloudFormation.getString(properties.IpProtocol));\n    ret.addPropertyResult('toPort', 'ToPort', properties.ToPort != null ? cfn_parse.FromCloudFormation.getNumber(properties.ToPort) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSecurityGroup {\n    /**\n     * Adds an inbound rule to a security group.\n     *\n     * An inbound rule permits instances to receive traffic from the specified IPv4 or IPv6 CIDR address range, or from the instances associated with the specified security group.\n     *\n     * You must specify only one of the following properties: `CidrIp` , `CidrIpv6` , `SourcePrefixListId` , `SourceSecurityGroupId` , or `SourceSecurityGroupName` .\n     *\n     * You specify a protocol for each rule (for example, TCP). For TCP and UDP, you must also specify a port or port range. For ICMP/ICMPv6, you must also specify the ICMP/ICMPv6 type and code. You can use -1 to mean all types or all codes.\n     *\n     * You must specify a source security group ( `SourcePrefixListId` , `SourceSecurityGroupId` , or `SourceSecurityGroupName` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ). If you do not specify one of these parameters, the stack will launch successfully but the rule will not be added to the security group.\n     *\n     * Rule changes are propagated to instances within the security group as quickly as possible. However, a small delay might occur.\n     *\n     * The EC2 Security Group Rule is an embedded property of the `AWS::EC2::SecurityGroup` type.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html\n     */\n    export interface IngressProperty {\n        /**\n         * The IPv4 address range, in CIDR format.\n         *\n         * You must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).\n         *\n         * For examples of rules that you can add to security groups for specific access scenarios, see [Security group rules for different use cases](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html) in the *Amazon EC2 User Guide* .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-cidrip\n         */\n        readonly cidrIp?: string;\n        /**\n         * The IPv6 address range, in CIDR format.\n         *\n         * You must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).\n         *\n         * For examples of rules that you can add to security groups for specific access scenarios, see [Security group rules for different use cases](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html) in the *Amazon EC2 User Guide* .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-cidripv6\n         */\n        readonly cidrIpv6?: string;\n        /**\n         * Updates the description of an ingress (inbound) security group rule. You can replace an existing description, or add a description to a rule that did not have one previously.\n         *\n         * Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-description\n         */\n        readonly description?: string;\n        /**\n         * The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of `-1` indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-fromport\n         */\n        readonly fromPort?: number;\n        /**\n         * The IP protocol name ( `tcp` , `udp` , `icmp` , `icmpv6` ) or number (see [Protocol Numbers](https://docs.aws.amazon.com/http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml) ).\n         *\n         * [VPC only] Use `-1` to specify all protocols. When authorizing security group rules, specifying `-1` or a protocol number other than `tcp` , `udp` , `icmp` , or `icmpv6` allows traffic on all ports, regardless of any port range you specify. For `tcp` , `udp` , and `icmp` , you must specify a port range. For `icmpv6` , the port range is optional; if you omit the port range, traffic for all types and codes is allowed.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-ipprotocol\n         */\n        readonly ipProtocol: string;\n        /**\n         * [EC2-VPC only] The ID of a prefix list.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-securitygroup-ingress-sourceprefixlistid\n         */\n        readonly sourcePrefixListId?: string;\n        /**\n         * The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-sourcesecuritygroupid\n         */\n        readonly sourceSecurityGroupId?: string;\n        /**\n         * [EC2-Classic, default VPC] The name of the source security group. You can't specify this parameter in combination with an IP address range. Creates rules that grant full ICMP, UDP, and TCP access.\n         *\n         * You must specify the `GroupName` property or the `GroupId` property. For security groups that are in a VPC, you must use the `GroupId` property.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-sourcesecuritygroupname\n         */\n        readonly sourceSecurityGroupName?: string;\n        /**\n         * [nondefault VPC] The AWS account ID for the source security group, if the source security group is in a different account. You can't specify this property with an IP address range. Creates rules that grant full ICMP, UDP, and TCP access.\n         *\n         * If you specify `SourceSecurityGroupName` or `SourceSecurityGroupId` and that security group is owned by a different account than the account creating the stack, you must specify the `SourceSecurityGroupOwnerId` ; otherwise, this property is optional.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-sourcesecuritygroupownerid\n         */\n        readonly sourceSecurityGroupOwnerId?: string;\n        /**\n         * The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of `-1` indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-toport\n         */\n        readonly toPort?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `IngressProperty`\n *\n * @param properties - the TypeScript properties of a `IngressProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSecurityGroup_IngressPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('cidrIp', cdk.validateString)(properties.cidrIp));\n    errors.collect(cdk.propertyValidator('cidrIpv6', cdk.validateString)(properties.cidrIpv6));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('fromPort', cdk.validateNumber)(properties.fromPort));\n    errors.collect(cdk.propertyValidator('ipProtocol', cdk.requiredValidator)(properties.ipProtocol));\n    errors.collect(cdk.propertyValidator('ipProtocol', cdk.validateString)(properties.ipProtocol));\n    errors.collect(cdk.propertyValidator('sourcePrefixListId', cdk.validateString)(properties.sourcePrefixListId));\n    errors.collect(cdk.propertyValidator('sourceSecurityGroupId', cdk.validateString)(properties.sourceSecurityGroupId));\n    errors.collect(cdk.propertyValidator('sourceSecurityGroupName', cdk.validateString)(properties.sourceSecurityGroupName));\n    errors.collect(cdk.propertyValidator('sourceSecurityGroupOwnerId', cdk.validateString)(properties.sourceSecurityGroupOwnerId));\n    errors.collect(cdk.propertyValidator('toPort', cdk.validateNumber)(properties.toPort));\n    return errors.wrap('supplied properties not correct for \"IngressProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SecurityGroup.Ingress` resource\n *\n * @param properties - the TypeScript properties of a `IngressProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SecurityGroup.Ingress` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSecurityGroupIngressPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSecurityGroup_IngressPropertyValidator(properties).assertSuccess();\n    return {\n        CidrIp: cdk.stringToCloudFormation(properties.cidrIp),\n        CidrIpv6: cdk.stringToCloudFormation(properties.cidrIpv6),\n        Description: cdk.stringToCloudFormation(properties.description),\n        FromPort: cdk.numberToCloudFormation(properties.fromPort),\n        IpProtocol: cdk.stringToCloudFormation(properties.ipProtocol),\n        SourcePrefixListId: cdk.stringToCloudFormation(properties.sourcePrefixListId),\n        SourceSecurityGroupId: cdk.stringToCloudFormation(properties.sourceSecurityGroupId),\n        SourceSecurityGroupName: cdk.stringToCloudFormation(properties.sourceSecurityGroupName),\n        SourceSecurityGroupOwnerId: cdk.stringToCloudFormation(properties.sourceSecurityGroupOwnerId),\n        ToPort: cdk.numberToCloudFormation(properties.toPort),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSecurityGroupIngressPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSecurityGroup.IngressProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSecurityGroup.IngressProperty>();\n    ret.addPropertyResult('cidrIp', 'CidrIp', properties.CidrIp != null ? cfn_parse.FromCloudFormation.getString(properties.CidrIp) : undefined);\n    ret.addPropertyResult('cidrIpv6', 'CidrIpv6', properties.CidrIpv6 != null ? cfn_parse.FromCloudFormation.getString(properties.CidrIpv6) : undefined);\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('fromPort', 'FromPort', properties.FromPort != null ? cfn_parse.FromCloudFormation.getNumber(properties.FromPort) : undefined);\n    ret.addPropertyResult('ipProtocol', 'IpProtocol', cfn_parse.FromCloudFormation.getString(properties.IpProtocol));\n    ret.addPropertyResult('sourcePrefixListId', 'SourcePrefixListId', properties.SourcePrefixListId != null ? cfn_parse.FromCloudFormation.getString(properties.SourcePrefixListId) : undefined);\n    ret.addPropertyResult('sourceSecurityGroupId', 'SourceSecurityGroupId', properties.SourceSecurityGroupId != null ? cfn_parse.FromCloudFormation.getString(properties.SourceSecurityGroupId) : undefined);\n    ret.addPropertyResult('sourceSecurityGroupName', 'SourceSecurityGroupName', properties.SourceSecurityGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.SourceSecurityGroupName) : undefined);\n    ret.addPropertyResult('sourceSecurityGroupOwnerId', 'SourceSecurityGroupOwnerId', properties.SourceSecurityGroupOwnerId != null ? cfn_parse.FromCloudFormation.getString(properties.SourceSecurityGroupOwnerId) : undefined);\n    ret.addPropertyResult('toPort', 'ToPort', properties.ToPort != null ? cfn_parse.FromCloudFormation.getNumber(properties.ToPort) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnSecurityGroupEgress`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html\n */\nexport interface CfnSecurityGroupEgressProps {\n\n    /**\n     * The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-groupid\n     */\n    readonly groupId: string;\n\n    /**\n     * The IP protocol name ( `tcp` , `udp` , `icmp` , `icmpv6` ) or number (see [Protocol Numbers](https://docs.aws.amazon.com/http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml) ).\n     *\n     * [VPC only] Use `-1` to specify all protocols. When authorizing security group rules, specifying `-1` or a protocol number other than `tcp` , `udp` , `icmp` , or `icmpv6` allows traffic on all ports, regardless of any port range you specify. For `tcp` , `udp` , and `icmp` , you must specify a port range. For `icmpv6` , the port range is optional; if you omit the port range, traffic for all types and codes is allowed.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-ipprotocol\n     */\n    readonly ipProtocol: string;\n\n    /**\n     * The IPv4 address range, in CIDR format.\n     *\n     * You must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).\n     *\n     * For examples of rules that you can add to security groups for specific access scenarios, see [Security group rules for different use cases](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html) in the *Amazon EC2 User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-cidrip\n     */\n    readonly cidrIp?: string;\n\n    /**\n     * The IPv6 address range, in CIDR format.\n     *\n     * You must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).\n     *\n     * For examples of rules that you can add to security groups for specific access scenarios, see [Security group rules for different use cases](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html) in the *Amazon EC2 User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-cidripv6\n     */\n    readonly cidrIpv6?: string;\n\n    /**\n     * The description of an egress (outbound) security group rule.\n     *\n     * Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-description\n     */\n    readonly description?: string;\n\n    /**\n     * [EC2-VPC only] The prefix list IDs for an AWS service. This is the AWS service that you want to access through a VPC endpoint from instances associated with the security group.\n     *\n     * You must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-destinationprefixlistid\n     */\n    readonly destinationPrefixListId?: string;\n\n    /**\n     * The ID of the security group.\n     *\n     * You must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-destinationsecuritygroupid\n     */\n    readonly destinationSecurityGroupId?: string;\n\n    /**\n     * The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of `-1` indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-fromport\n     */\n    readonly fromPort?: number;\n\n    /**\n     * The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of `-1` indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-toport\n     */\n    readonly toPort?: number;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnSecurityGroupEgressProps`\n *\n * @param properties - the TypeScript properties of a `CfnSecurityGroupEgressProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnSecurityGroupEgressPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('cidrIp', cdk.validateString)(properties.cidrIp));\n    errors.collect(cdk.propertyValidator('cidrIpv6', cdk.validateString)(properties.cidrIpv6));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('destinationPrefixListId', cdk.validateString)(properties.destinationPrefixListId));\n    errors.collect(cdk.propertyValidator('destinationSecurityGroupId', cdk.validateString)(properties.destinationSecurityGroupId));\n    errors.collect(cdk.propertyValidator('fromPort', cdk.validateNumber)(properties.fromPort));\n    errors.collect(cdk.propertyValidator('groupId', cdk.requiredValidator)(properties.groupId));\n    errors.collect(cdk.propertyValidator('groupId', cdk.validateString)(properties.groupId));\n    errors.collect(cdk.propertyValidator('ipProtocol', cdk.requiredValidator)(properties.ipProtocol));\n    errors.collect(cdk.propertyValidator('ipProtocol', cdk.validateString)(properties.ipProtocol));\n    errors.collect(cdk.propertyValidator('toPort', cdk.validateNumber)(properties.toPort));\n    return errors.wrap('supplied properties not correct for \"CfnSecurityGroupEgressProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SecurityGroupEgress` resource\n *\n * @param properties - the TypeScript properties of a `CfnSecurityGroupEgressProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SecurityGroupEgress` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSecurityGroupEgressPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSecurityGroupEgressPropsValidator(properties).assertSuccess();\n    return {\n        GroupId: cdk.stringToCloudFormation(properties.groupId),\n        IpProtocol: cdk.stringToCloudFormation(properties.ipProtocol),\n        CidrIp: cdk.stringToCloudFormation(properties.cidrIp),\n        CidrIpv6: cdk.stringToCloudFormation(properties.cidrIpv6),\n        Description: cdk.stringToCloudFormation(properties.description),\n        DestinationPrefixListId: cdk.stringToCloudFormation(properties.destinationPrefixListId),\n        DestinationSecurityGroupId: cdk.stringToCloudFormation(properties.destinationSecurityGroupId),\n        FromPort: cdk.numberToCloudFormation(properties.fromPort),\n        ToPort: cdk.numberToCloudFormation(properties.toPort),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSecurityGroupEgressPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSecurityGroupEgressProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSecurityGroupEgressProps>();\n    ret.addPropertyResult('groupId', 'GroupId', cfn_parse.FromCloudFormation.getString(properties.GroupId));\n    ret.addPropertyResult('ipProtocol', 'IpProtocol', cfn_parse.FromCloudFormation.getString(properties.IpProtocol));\n    ret.addPropertyResult('cidrIp', 'CidrIp', properties.CidrIp != null ? cfn_parse.FromCloudFormation.getString(properties.CidrIp) : undefined);\n    ret.addPropertyResult('cidrIpv6', 'CidrIpv6', properties.CidrIpv6 != null ? cfn_parse.FromCloudFormation.getString(properties.CidrIpv6) : undefined);\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('destinationPrefixListId', 'DestinationPrefixListId', properties.DestinationPrefixListId != null ? cfn_parse.FromCloudFormation.getString(properties.DestinationPrefixListId) : undefined);\n    ret.addPropertyResult('destinationSecurityGroupId', 'DestinationSecurityGroupId', properties.DestinationSecurityGroupId != null ? cfn_parse.FromCloudFormation.getString(properties.DestinationSecurityGroupId) : undefined);\n    ret.addPropertyResult('fromPort', 'FromPort', properties.FromPort != null ? cfn_parse.FromCloudFormation.getNumber(properties.FromPort) : undefined);\n    ret.addPropertyResult('toPort', 'ToPort', properties.ToPort != null ? cfn_parse.FromCloudFormation.getNumber(properties.ToPort) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::SecurityGroupEgress`\n *\n * [EC2-VPC only] Adds the specified egress rules to a security group for use with a VPC.\n *\n * An outbound rule permits instances to send traffic to the specified destination IPv4 or IPv6 CIDR address ranges, or to the specified destination security groups for the same VPC.\n *\n * You specify a protocol for each rule (for example, TCP). For the TCP and UDP protocols, you must also specify the destination port or port range. For the ICMP protocol, you must also specify the ICMP type and code. You can use -1 for the type or code to mean all types or all codes.\n *\n * You must specify only one of the following properties: `CidrIp` , `CidrIpv6` , `DestinationPrefixListId` , or `DestinationSecurityGroupId` .\n *\n * You must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ). If you do not specify one of these parameters, the stack will launch successfully but the rule will not be added to the security group.\n *\n * Rule changes are propagated to affected instances as quickly as possible. However, a small delay might occur.\n *\n * For more information about VPC security group limits, see [Amazon VPC Limits](https://docs.aws.amazon.com/vpc/latest/userguide/amazon-vpc-limits.html) .\n *\n * Use `AWS::EC2::SecurityGroupIngress` and `AWS::EC2::SecurityGroupEgress` only when necessary, typically to allow security groups to reference each other in ingress and egress rules. Otherwise, use the embedded ingress and egress rules of the security group. For more information, see [Amazon EC2 Security Groups](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html) .\n *\n * @cloudformationResource AWS::EC2::SecurityGroupEgress\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html\n */\nexport class CfnSecurityGroupEgress extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::SecurityGroupEgress\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnSecurityGroupEgress {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnSecurityGroupEgressPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnSecurityGroupEgress(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-groupid\n     */\n    public groupId: string;\n\n    /**\n     * The IP protocol name ( `tcp` , `udp` , `icmp` , `icmpv6` ) or number (see [Protocol Numbers](https://docs.aws.amazon.com/http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml) ).\n     *\n     * [VPC only] Use `-1` to specify all protocols. When authorizing security group rules, specifying `-1` or a protocol number other than `tcp` , `udp` , `icmp` , or `icmpv6` allows traffic on all ports, regardless of any port range you specify. For `tcp` , `udp` , and `icmp` , you must specify a port range. For `icmpv6` , the port range is optional; if you omit the port range, traffic for all types and codes is allowed.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-ipprotocol\n     */\n    public ipProtocol: string;\n\n    /**\n     * The IPv4 address range, in CIDR format.\n     *\n     * You must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).\n     *\n     * For examples of rules that you can add to security groups for specific access scenarios, see [Security group rules for different use cases](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html) in the *Amazon EC2 User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-cidrip\n     */\n    public cidrIp: string | undefined;\n\n    /**\n     * The IPv6 address range, in CIDR format.\n     *\n     * You must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).\n     *\n     * For examples of rules that you can add to security groups for specific access scenarios, see [Security group rules for different use cases](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html) in the *Amazon EC2 User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-cidripv6\n     */\n    public cidrIpv6: string | undefined;\n\n    /**\n     * The description of an egress (outbound) security group rule.\n     *\n     * Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-description\n     */\n    public description: string | undefined;\n\n    /**\n     * [EC2-VPC only] The prefix list IDs for an AWS service. This is the AWS service that you want to access through a VPC endpoint from instances associated with the security group.\n     *\n     * You must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-destinationprefixlistid\n     */\n    public destinationPrefixListId: string | undefined;\n\n    /**\n     * The ID of the security group.\n     *\n     * You must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-destinationsecuritygroupid\n     */\n    public destinationSecurityGroupId: string | undefined;\n\n    /**\n     * The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of `-1` indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-fromport\n     */\n    public fromPort: number | undefined;\n\n    /**\n     * The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of `-1` indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-toport\n     */\n    public toPort: number | undefined;\n\n    /**\n     * Create a new `AWS::EC2::SecurityGroupEgress`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnSecurityGroupEgressProps) {\n        super(scope, id, { type: CfnSecurityGroupEgress.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'groupId', this);\n        cdk.requireProperty(props, 'ipProtocol', this);\n\n        this.groupId = props.groupId;\n        this.ipProtocol = props.ipProtocol;\n        this.cidrIp = props.cidrIp;\n        this.cidrIpv6 = props.cidrIpv6;\n        this.description = props.description;\n        this.destinationPrefixListId = props.destinationPrefixListId;\n        this.destinationSecurityGroupId = props.destinationSecurityGroupId;\n        this.fromPort = props.fromPort;\n        this.toPort = props.toPort;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnSecurityGroupEgress.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            groupId: this.groupId,\n            ipProtocol: this.ipProtocol,\n            cidrIp: this.cidrIp,\n            cidrIpv6: this.cidrIpv6,\n            description: this.description,\n            destinationPrefixListId: this.destinationPrefixListId,\n            destinationSecurityGroupId: this.destinationSecurityGroupId,\n            fromPort: this.fromPort,\n            toPort: this.toPort,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnSecurityGroupEgressPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnSecurityGroupIngress`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html\n */\nexport interface CfnSecurityGroupIngressProps {\n\n    /**\n     * The IP protocol name ( `tcp` , `udp` , `icmp` , `icmpv6` ) or number (see [Protocol Numbers](https://docs.aws.amazon.com/http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml) ).\n     *\n     * [VPC only] Use `-1` to specify all protocols. When authorizing security group rules, specifying `-1` or a protocol number other than `tcp` , `udp` , `icmp` , or `icmpv6` allows traffic on all ports, regardless of any port range you specify. For `tcp` , `udp` , and `icmp` , you must specify a port range. For `icmpv6` , the port range is optional; if you omit the port range, traffic for all types and codes is allowed.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-ipprotocol\n     */\n    readonly ipProtocol: string;\n\n    /**\n     * The IPv4 address range, in CIDR format.\n     *\n     * You must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).\n     *\n     * For examples of rules that you can add to security groups for specific access scenarios, see [Security group rules for different use cases](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html) in the *Amazon EC2 User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-cidrip\n     */\n    readonly cidrIp?: string;\n\n    /**\n     * The IPv6 address range, in CIDR format.\n     *\n     * You must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).\n     *\n     * For examples of rules that you can add to security groups for specific access scenarios, see [Security group rules for different use cases](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html) in the *Amazon EC2 User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-cidripv6\n     */\n    readonly cidrIpv6?: string;\n\n    /**\n     * Updates the description of an ingress (inbound) security group rule. You can replace an existing description, or add a description to a rule that did not have one previously.\n     *\n     * Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-description\n     */\n    readonly description?: string;\n\n    /**\n     * The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of `-1` indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.\n     *\n     * Use this for ICMP and any protocol that uses ports.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-fromport\n     */\n    readonly fromPort?: number;\n\n    /**\n     * The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.\n     *\n     * You must specify the `GroupName` property or the `GroupId` property. For security groups that are in a VPC, you must use the `GroupId` property.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-groupid\n     */\n    readonly groupId?: string;\n\n    /**\n     * The name of the security group.\n     *\n     * Constraints: Up to 255 characters in length. Cannot start with `sg-` .\n     *\n     * Constraints for EC2-Classic: ASCII characters\n     *\n     * Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-groupname\n     */\n    readonly groupName?: string;\n\n    /**\n     * [EC2-VPC only] The ID of a prefix list.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-securitygroupingress-sourceprefixlistid\n     */\n    readonly sourcePrefixListId?: string;\n\n    /**\n     * The ID of the security group. You must specify either the security group ID or the security group name. For security groups in a nondefault VPC, you must specify the security group ID.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupid\n     */\n    readonly sourceSecurityGroupId?: string;\n\n    /**\n     * [EC2-Classic, default VPC] The name of the source security group. You can't specify this parameter in combination with an IP address range. Creates rules that grant full ICMP, UDP, and TCP access.\n     *\n     * You must specify the `GroupName` property or the `GroupId` property. For security groups that are in a VPC, you must use the `GroupId` property.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupname\n     */\n    readonly sourceSecurityGroupName?: string;\n\n    /**\n     * [nondefault VPC] The AWS account ID for the source security group, if the source security group is in a different account. You can't specify this property with an IP address range. Creates rules that grant full ICMP, UDP, and TCP access.\n     *\n     * If you specify `SourceSecurityGroupName` or `SourceSecurityGroupId` and that security group is owned by a different account than the account creating the stack, you must specify the `SourceSecurityGroupOwnerId` ; otherwise, this property is optional.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupownerid\n     */\n    readonly sourceSecurityGroupOwnerId?: string;\n\n    /**\n     * The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of `-1` indicates all ICMP/ICMPv6 codes for the specified ICMP type. If you specify all ICMP/ICMPv6 types, you must specify all codes.\n     *\n     * Use this for ICMP and any protocol that uses ports.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-toport\n     */\n    readonly toPort?: number;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnSecurityGroupIngressProps`\n *\n * @param properties - the TypeScript properties of a `CfnSecurityGroupIngressProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnSecurityGroupIngressPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('cidrIp', cdk.validateString)(properties.cidrIp));\n    errors.collect(cdk.propertyValidator('cidrIpv6', cdk.validateString)(properties.cidrIpv6));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('fromPort', cdk.validateNumber)(properties.fromPort));\n    errors.collect(cdk.propertyValidator('groupId', cdk.validateString)(properties.groupId));\n    errors.collect(cdk.propertyValidator('groupName', cdk.validateString)(properties.groupName));\n    errors.collect(cdk.propertyValidator('ipProtocol', cdk.requiredValidator)(properties.ipProtocol));\n    errors.collect(cdk.propertyValidator('ipProtocol', cdk.validateString)(properties.ipProtocol));\n    errors.collect(cdk.propertyValidator('sourcePrefixListId', cdk.validateString)(properties.sourcePrefixListId));\n    errors.collect(cdk.propertyValidator('sourceSecurityGroupId', cdk.validateString)(properties.sourceSecurityGroupId));\n    errors.collect(cdk.propertyValidator('sourceSecurityGroupName', cdk.validateString)(properties.sourceSecurityGroupName));\n    errors.collect(cdk.propertyValidator('sourceSecurityGroupOwnerId', cdk.validateString)(properties.sourceSecurityGroupOwnerId));\n    errors.collect(cdk.propertyValidator('toPort', cdk.validateNumber)(properties.toPort));\n    return errors.wrap('supplied properties not correct for \"CfnSecurityGroupIngressProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SecurityGroupIngress` resource\n *\n * @param properties - the TypeScript properties of a `CfnSecurityGroupIngressProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SecurityGroupIngress` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSecurityGroupIngressPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSecurityGroupIngressPropsValidator(properties).assertSuccess();\n    return {\n        IpProtocol: cdk.stringToCloudFormation(properties.ipProtocol),\n        CidrIp: cdk.stringToCloudFormation(properties.cidrIp),\n        CidrIpv6: cdk.stringToCloudFormation(properties.cidrIpv6),\n        Description: cdk.stringToCloudFormation(properties.description),\n        FromPort: cdk.numberToCloudFormation(properties.fromPort),\n        GroupId: cdk.stringToCloudFormation(properties.groupId),\n        GroupName: cdk.stringToCloudFormation(properties.groupName),\n        SourcePrefixListId: cdk.stringToCloudFormation(properties.sourcePrefixListId),\n        SourceSecurityGroupId: cdk.stringToCloudFormation(properties.sourceSecurityGroupId),\n        SourceSecurityGroupName: cdk.stringToCloudFormation(properties.sourceSecurityGroupName),\n        SourceSecurityGroupOwnerId: cdk.stringToCloudFormation(properties.sourceSecurityGroupOwnerId),\n        ToPort: cdk.numberToCloudFormation(properties.toPort),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSecurityGroupIngressPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSecurityGroupIngressProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSecurityGroupIngressProps>();\n    ret.addPropertyResult('ipProtocol', 'IpProtocol', cfn_parse.FromCloudFormation.getString(properties.IpProtocol));\n    ret.addPropertyResult('cidrIp', 'CidrIp', properties.CidrIp != null ? cfn_parse.FromCloudFormation.getString(properties.CidrIp) : undefined);\n    ret.addPropertyResult('cidrIpv6', 'CidrIpv6', properties.CidrIpv6 != null ? cfn_parse.FromCloudFormation.getString(properties.CidrIpv6) : undefined);\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('fromPort', 'FromPort', properties.FromPort != null ? cfn_parse.FromCloudFormation.getNumber(properties.FromPort) : undefined);\n    ret.addPropertyResult('groupId', 'GroupId', properties.GroupId != null ? cfn_parse.FromCloudFormation.getString(properties.GroupId) : undefined);\n    ret.addPropertyResult('groupName', 'GroupName', properties.GroupName != null ? cfn_parse.FromCloudFormation.getString(properties.GroupName) : undefined);\n    ret.addPropertyResult('sourcePrefixListId', 'SourcePrefixListId', properties.SourcePrefixListId != null ? cfn_parse.FromCloudFormation.getString(properties.SourcePrefixListId) : undefined);\n    ret.addPropertyResult('sourceSecurityGroupId', 'SourceSecurityGroupId', properties.SourceSecurityGroupId != null ? cfn_parse.FromCloudFormation.getString(properties.SourceSecurityGroupId) : undefined);\n    ret.addPropertyResult('sourceSecurityGroupName', 'SourceSecurityGroupName', properties.SourceSecurityGroupName != null ? cfn_parse.FromCloudFormation.getString(properties.SourceSecurityGroupName) : undefined);\n    ret.addPropertyResult('sourceSecurityGroupOwnerId', 'SourceSecurityGroupOwnerId', properties.SourceSecurityGroupOwnerId != null ? cfn_parse.FromCloudFormation.getString(properties.SourceSecurityGroupOwnerId) : undefined);\n    ret.addPropertyResult('toPort', 'ToPort', properties.ToPort != null ? cfn_parse.FromCloudFormation.getNumber(properties.ToPort) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::SecurityGroupIngress`\n *\n * Adds an inbound rule to a security group.\n *\n * An inbound rule permits instances to receive traffic from the specified IPv4 or IPv6 CIDR address range, or from the instances associated with the specified security group.\n *\n * You must specify only one of the following properties: `CidrIp` , `CidrIpv6` , `SourcePrefixListId` , `SourceSecurityGroupId` , or `SourceSecurityGroupName` .\n *\n * You specify a protocol for each rule (for example, TCP). For TCP and UDP, you must also specify a port or port range. For ICMP/ICMPv6, you must also specify the ICMP/ICMPv6 type and code. You can use -1 to mean all types or all codes.\n *\n * You must specify a source security group ( `SourcePrefixListId` , `SourceSecurityGroupId` , or `SourceSecurityGroupName` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ). If you do not specify one of these parameters, the stack will launch successfully but the rule will not be added to the security group.\n *\n * Rule changes are propagated to instances within the security group as quickly as possible. However, a small delay might occur.\n *\n * @cloudformationResource AWS::EC2::SecurityGroupIngress\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html\n */\nexport class CfnSecurityGroupIngress extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::SecurityGroupIngress\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnSecurityGroupIngress {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnSecurityGroupIngressPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnSecurityGroupIngress(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The IP protocol name ( `tcp` , `udp` , `icmp` , `icmpv6` ) or number (see [Protocol Numbers](https://docs.aws.amazon.com/http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml) ).\n     *\n     * [VPC only] Use `-1` to specify all protocols. When authorizing security group rules, specifying `-1` or a protocol number other than `tcp` , `udp` , `icmp` , or `icmpv6` allows traffic on all ports, regardless of any port range you specify. For `tcp` , `udp` , and `icmp` , you must specify a port range. For `icmpv6` , the port range is optional; if you omit the port range, traffic for all types and codes is allowed.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-ipprotocol\n     */\n    public ipProtocol: string;\n\n    /**\n     * The IPv4 address range, in CIDR format.\n     *\n     * You must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).\n     *\n     * For examples of rules that you can add to security groups for specific access scenarios, see [Security group rules for different use cases](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html) in the *Amazon EC2 User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-cidrip\n     */\n    public cidrIp: string | undefined;\n\n    /**\n     * The IPv6 address range, in CIDR format.\n     *\n     * You must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).\n     *\n     * For examples of rules that you can add to security groups for specific access scenarios, see [Security group rules for different use cases](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html) in the *Amazon EC2 User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-cidripv6\n     */\n    public cidrIpv6: string | undefined;\n\n    /**\n     * Updates the description of an ingress (inbound) security group rule. You can replace an existing description, or add a description to a rule that did not have one previously.\n     *\n     * Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-description\n     */\n    public description: string | undefined;\n\n    /**\n     * The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of `-1` indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.\n     *\n     * Use this for ICMP and any protocol that uses ports.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-fromport\n     */\n    public fromPort: number | undefined;\n\n    /**\n     * The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.\n     *\n     * You must specify the `GroupName` property or the `GroupId` property. For security groups that are in a VPC, you must use the `GroupId` property.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-groupid\n     */\n    public groupId: string | undefined;\n\n    /**\n     * The name of the security group.\n     *\n     * Constraints: Up to 255 characters in length. Cannot start with `sg-` .\n     *\n     * Constraints for EC2-Classic: ASCII characters\n     *\n     * Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-groupname\n     */\n    public groupName: string | undefined;\n\n    /**\n     * [EC2-VPC only] The ID of a prefix list.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-securitygroupingress-sourceprefixlistid\n     */\n    public sourcePrefixListId: string | undefined;\n\n    /**\n     * The ID of the security group. You must specify either the security group ID or the security group name. For security groups in a nondefault VPC, you must specify the security group ID.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupid\n     */\n    public sourceSecurityGroupId: string | undefined;\n\n    /**\n     * [EC2-Classic, default VPC] The name of the source security group. You can't specify this parameter in combination with an IP address range. Creates rules that grant full ICMP, UDP, and TCP access.\n     *\n     * You must specify the `GroupName` property or the `GroupId` property. For security groups that are in a VPC, you must use the `GroupId` property.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupname\n     */\n    public sourceSecurityGroupName: string | undefined;\n\n    /**\n     * [nondefault VPC] The AWS account ID for the source security group, if the source security group is in a different account. You can't specify this property with an IP address range. Creates rules that grant full ICMP, UDP, and TCP access.\n     *\n     * If you specify `SourceSecurityGroupName` or `SourceSecurityGroupId` and that security group is owned by a different account than the account creating the stack, you must specify the `SourceSecurityGroupOwnerId` ; otherwise, this property is optional.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupownerid\n     */\n    public sourceSecurityGroupOwnerId: string | undefined;\n\n    /**\n     * The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of `-1` indicates all ICMP/ICMPv6 codes for the specified ICMP type. If you specify all ICMP/ICMPv6 types, you must specify all codes.\n     *\n     * Use this for ICMP and any protocol that uses ports.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-toport\n     */\n    public toPort: number | undefined;\n\n    /**\n     * Create a new `AWS::EC2::SecurityGroupIngress`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnSecurityGroupIngressProps) {\n        super(scope, id, { type: CfnSecurityGroupIngress.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'ipProtocol', this);\n\n        this.ipProtocol = props.ipProtocol;\n        this.cidrIp = props.cidrIp;\n        this.cidrIpv6 = props.cidrIpv6;\n        this.description = props.description;\n        this.fromPort = props.fromPort;\n        this.groupId = props.groupId;\n        this.groupName = props.groupName;\n        this.sourcePrefixListId = props.sourcePrefixListId;\n        this.sourceSecurityGroupId = props.sourceSecurityGroupId;\n        this.sourceSecurityGroupName = props.sourceSecurityGroupName;\n        this.sourceSecurityGroupOwnerId = props.sourceSecurityGroupOwnerId;\n        this.toPort = props.toPort;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnSecurityGroupIngress.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            ipProtocol: this.ipProtocol,\n            cidrIp: this.cidrIp,\n            cidrIpv6: this.cidrIpv6,\n            description: this.description,\n            fromPort: this.fromPort,\n            groupId: this.groupId,\n            groupName: this.groupName,\n            sourcePrefixListId: this.sourcePrefixListId,\n            sourceSecurityGroupId: this.sourceSecurityGroupId,\n            sourceSecurityGroupName: this.sourceSecurityGroupName,\n            sourceSecurityGroupOwnerId: this.sourceSecurityGroupOwnerId,\n            toPort: this.toPort,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnSecurityGroupIngressPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnSpotFleet`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html\n */\nexport interface CfnSpotFleetProps {\n\n    /**\n     * Describes the configuration of a Spot Fleet request.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata\n     */\n    readonly spotFleetRequestConfigData: CfnSpotFleet.SpotFleetRequestConfigDataProperty | cdk.IResolvable;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnSpotFleetProps`\n *\n * @param properties - the TypeScript properties of a `CfnSpotFleetProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleetPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('spotFleetRequestConfigData', cdk.requiredValidator)(properties.spotFleetRequestConfigData));\n    errors.collect(cdk.propertyValidator('spotFleetRequestConfigData', CfnSpotFleet_SpotFleetRequestConfigDataPropertyValidator)(properties.spotFleetRequestConfigData));\n    return errors.wrap('supplied properties not correct for \"CfnSpotFleetProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet` resource\n *\n * @param properties - the TypeScript properties of a `CfnSpotFleetProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleetPropsValidator(properties).assertSuccess();\n    return {\n        SpotFleetRequestConfigData: cfnSpotFleetSpotFleetRequestConfigDataPropertyToCloudFormation(properties.spotFleetRequestConfigData),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleetProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleetProps>();\n    ret.addPropertyResult('spotFleetRequestConfigData', 'SpotFleetRequestConfigData', CfnSpotFleetSpotFleetRequestConfigDataPropertyFromCloudFormation(properties.SpotFleetRequestConfigData));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::SpotFleet`\n *\n * Specifies a Spot Fleet request. A Spot Fleet request contains the configuration information to launch a fleet, or group, of instances.\n *\n * The Spot Fleet request specifies the total target capacity and the On-Demand target capacity for the fleet. Amazon EC2 calculates the difference between the total capacity and On-Demand capacity, and launches the difference as Spot capacity.\n *\n * The Spot Fleet request can include multiple launch specifications that vary by instance type, AMI, Availability Zone, or subnet.\n *\n * By default, the Spot Fleet requests Spot Instances in the Spot pool where the price per unit is the lowest. Each launch specification can include its own instance weighting that reflects the value of the instance type to your application workload.\n *\n * Alternatively, you can specify that the Spot Fleet distribute the target capacity across the Spot pools included in its launch specifications. By ensuring that the Spot Instances in your Spot Fleet are in different Spot pools, you can improve the availability of your fleet.\n *\n * You can specify tags for the Spot Instances. You cannot tag other resource types in a Spot Fleet request because only the `instance` resource type is supported.\n *\n * For more information, see [Spot Fleet Requests](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-requests.html) in the *Amazon EC2 User Guide for Linux Instances* .\n *\n * @cloudformationResource AWS::EC2::SpotFleet\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html\n */\nexport class CfnSpotFleet extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::SpotFleet\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnSpotFleet {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnSpotFleetPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnSpotFleet(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the Spot Fleet.\n     * @cloudformationAttribute Id\n     */\n    public readonly attrId: string;\n\n    /**\n     * Describes the configuration of a Spot Fleet request.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata\n     */\n    public spotFleetRequestConfigData: CfnSpotFleet.SpotFleetRequestConfigDataProperty | cdk.IResolvable;\n\n    /**\n     * Create a new `AWS::EC2::SpotFleet`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnSpotFleetProps) {\n        super(scope, id, { type: CfnSpotFleet.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'spotFleetRequestConfigData', this);\n        this.attrId = cdk.Token.asString(this.getAtt('Id'));\n\n        this.spotFleetRequestConfigData = props.spotFleetRequestConfigData;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnSpotFleet.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            spotFleetRequestConfigData: this.spotFleetRequestConfigData,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnSpotFleetPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnSpotFleet {\n    /**\n     * The minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips) on an instance. To exclude accelerator-enabled instance types, set `Max` to `0` .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-acceleratorcountrequest.html\n     */\n    export interface AcceleratorCountRequestProperty {\n        /**\n         * The maximum number of accelerators. To specify no maximum limit, omit this parameter. To exclude accelerator-enabled instance types, set `Max` to `0` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-acceleratorcountrequest.html#cfn-ec2-spotfleet-acceleratorcountrequest-max\n         */\n        readonly max?: number;\n        /**\n         * The minimum number of accelerators. To specify no minimum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-acceleratorcountrequest.html#cfn-ec2-spotfleet-acceleratorcountrequest-min\n         */\n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AcceleratorCountRequestProperty`\n *\n * @param properties - the TypeScript properties of a `AcceleratorCountRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleet_AcceleratorCountRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"AcceleratorCountRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.AcceleratorCountRequest` resource\n *\n * @param properties - the TypeScript properties of a `AcceleratorCountRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.AcceleratorCountRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetAcceleratorCountRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleet_AcceleratorCountRequestPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetAcceleratorCountRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleet.AcceleratorCountRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleet.AcceleratorCountRequestProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSpotFleet {\n    /**\n     * The minimum and maximum amount of total accelerator memory, in MiB.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-acceleratortotalmemorymibrequest.html\n     */\n    export interface AcceleratorTotalMemoryMiBRequestProperty {\n        /**\n         * The maximum amount of accelerator memory, in MiB. To specify no maximum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-acceleratortotalmemorymibrequest.html#cfn-ec2-spotfleet-acceleratortotalmemorymibrequest-max\n         */\n        readonly max?: number;\n        /**\n         * The minimum amount of accelerator memory, in MiB. To specify no minimum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-acceleratortotalmemorymibrequest.html#cfn-ec2-spotfleet-acceleratortotalmemorymibrequest-min\n         */\n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AcceleratorTotalMemoryMiBRequestProperty`\n *\n * @param properties - the TypeScript properties of a `AcceleratorTotalMemoryMiBRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleet_AcceleratorTotalMemoryMiBRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"AcceleratorTotalMemoryMiBRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.AcceleratorTotalMemoryMiBRequest` resource\n *\n * @param properties - the TypeScript properties of a `AcceleratorTotalMemoryMiBRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.AcceleratorTotalMemoryMiBRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetAcceleratorTotalMemoryMiBRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleet_AcceleratorTotalMemoryMiBRequestPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetAcceleratorTotalMemoryMiBRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleet.AcceleratorTotalMemoryMiBRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleet.AcceleratorTotalMemoryMiBRequestProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSpotFleet {\n    /**\n     * The minimum and maximum baseline bandwidth to Amazon EBS, in Mbps. For more information, see [Amazon EBS\u2013optimized instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html) in the *Amazon EC2 User Guide* .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-baselineebsbandwidthmbpsrequest.html\n     */\n    export interface BaselineEbsBandwidthMbpsRequestProperty {\n        /**\n         * The maximum baseline bandwidth, in Mbps. To specify no maximum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-baselineebsbandwidthmbpsrequest.html#cfn-ec2-spotfleet-baselineebsbandwidthmbpsrequest-max\n         */\n        readonly max?: number;\n        /**\n         * The minimum baseline bandwidth, in Mbps. To specify no minimum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-baselineebsbandwidthmbpsrequest.html#cfn-ec2-spotfleet-baselineebsbandwidthmbpsrequest-min\n         */\n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `BaselineEbsBandwidthMbpsRequestProperty`\n *\n * @param properties - the TypeScript properties of a `BaselineEbsBandwidthMbpsRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleet_BaselineEbsBandwidthMbpsRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"BaselineEbsBandwidthMbpsRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.BaselineEbsBandwidthMbpsRequest` resource\n *\n * @param properties - the TypeScript properties of a `BaselineEbsBandwidthMbpsRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.BaselineEbsBandwidthMbpsRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetBaselineEbsBandwidthMbpsRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleet_BaselineEbsBandwidthMbpsRequestPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetBaselineEbsBandwidthMbpsRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleet.BaselineEbsBandwidthMbpsRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleet.BaselineEbsBandwidthMbpsRequestProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSpotFleet {\n    /**\n     * Specifies a block device mapping.\n     *\n     * You can specify `Ebs` or `VirtualName` , but not both.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-blockdevicemapping.html\n     */\n    export interface BlockDeviceMappingProperty {\n        /**\n         * The device name (for example, `/dev/sdh` or `xvdh` ).\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-blockdevicemapping.html#cfn-ec2-spotfleet-blockdevicemapping-devicename\n         */\n        readonly deviceName: string;\n        /**\n         * Parameters used to automatically set up EBS volumes when the instance is launched.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-blockdevicemapping.html#cfn-ec2-spotfleet-blockdevicemapping-ebs\n         */\n        readonly ebs?: CfnSpotFleet.EbsBlockDeviceProperty | cdk.IResolvable;\n        /**\n         * To omit the device from the block device mapping, specify an empty string. When this property is specified, the device is removed from the block device mapping regardless of the assigned value.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-blockdevicemapping.html#cfn-ec2-spotfleet-blockdevicemapping-nodevice\n         */\n        readonly noDevice?: string;\n        /**\n         * The virtual device name ( `ephemeral` N). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for `ephemeral0` and `ephemeral1` . The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.\n         *\n         * NVMe instance store volumes are automatically enumerated and assigned a device name. Including them in your block device mapping has no effect.\n         *\n         * Constraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-blockdevicemapping.html#cfn-ec2-spotfleet-blockdevicemapping-virtualname\n         */\n        readonly virtualName?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `BlockDeviceMappingProperty`\n *\n * @param properties - the TypeScript properties of a `BlockDeviceMappingProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleet_BlockDeviceMappingPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('deviceName', cdk.requiredValidator)(properties.deviceName));\n    errors.collect(cdk.propertyValidator('deviceName', cdk.validateString)(properties.deviceName));\n    errors.collect(cdk.propertyValidator('ebs', CfnSpotFleet_EbsBlockDevicePropertyValidator)(properties.ebs));\n    errors.collect(cdk.propertyValidator('noDevice', cdk.validateString)(properties.noDevice));\n    errors.collect(cdk.propertyValidator('virtualName', cdk.validateString)(properties.virtualName));\n    return errors.wrap('supplied properties not correct for \"BlockDeviceMappingProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.BlockDeviceMapping` resource\n *\n * @param properties - the TypeScript properties of a `BlockDeviceMappingProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.BlockDeviceMapping` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetBlockDeviceMappingPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleet_BlockDeviceMappingPropertyValidator(properties).assertSuccess();\n    return {\n        DeviceName: cdk.stringToCloudFormation(properties.deviceName),\n        Ebs: cfnSpotFleetEbsBlockDevicePropertyToCloudFormation(properties.ebs),\n        NoDevice: cdk.stringToCloudFormation(properties.noDevice),\n        VirtualName: cdk.stringToCloudFormation(properties.virtualName),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetBlockDeviceMappingPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleet.BlockDeviceMappingProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleet.BlockDeviceMappingProperty>();\n    ret.addPropertyResult('deviceName', 'DeviceName', cfn_parse.FromCloudFormation.getString(properties.DeviceName));\n    ret.addPropertyResult('ebs', 'Ebs', properties.Ebs != null ? CfnSpotFleetEbsBlockDevicePropertyFromCloudFormation(properties.Ebs) : undefined);\n    ret.addPropertyResult('noDevice', 'NoDevice', properties.NoDevice != null ? cfn_parse.FromCloudFormation.getString(properties.NoDevice) : undefined);\n    ret.addPropertyResult('virtualName', 'VirtualName', properties.VirtualName != null ? cfn_parse.FromCloudFormation.getString(properties.VirtualName) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSpotFleet {\n    /**\n     * Specifies a Classic Load Balancer.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-classicloadbalancer.html\n     */\n    export interface ClassicLoadBalancerProperty {\n        /**\n         * The name of the load balancer.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-classicloadbalancer.html#cfn-ec2-spotfleet-classicloadbalancer-name\n         */\n        readonly name: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ClassicLoadBalancerProperty`\n *\n * @param properties - the TypeScript properties of a `ClassicLoadBalancerProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleet_ClassicLoadBalancerPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('name', cdk.requiredValidator)(properties.name));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    return errors.wrap('supplied properties not correct for \"ClassicLoadBalancerProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.ClassicLoadBalancer` resource\n *\n * @param properties - the TypeScript properties of a `ClassicLoadBalancerProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.ClassicLoadBalancer` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetClassicLoadBalancerPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleet_ClassicLoadBalancerPropertyValidator(properties).assertSuccess();\n    return {\n        Name: cdk.stringToCloudFormation(properties.name),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetClassicLoadBalancerPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleet.ClassicLoadBalancerProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleet.ClassicLoadBalancerProperty>();\n    ret.addPropertyResult('name', 'Name', cfn_parse.FromCloudFormation.getString(properties.Name));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSpotFleet {\n    /**\n     * Specifies the Classic Load Balancers to attach to a Spot Fleet. Spot Fleet registers the running Spot Instances with these Classic Load Balancers.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-classicloadbalancersconfig.html\n     */\n    export interface ClassicLoadBalancersConfigProperty {\n        /**\n         * One or more Classic Load Balancers.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-classicloadbalancersconfig.html#cfn-ec2-spotfleet-classicloadbalancersconfig-classicloadbalancers\n         */\n        readonly classicLoadBalancers: Array<CfnSpotFleet.ClassicLoadBalancerProperty | cdk.IResolvable> | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ClassicLoadBalancersConfigProperty`\n *\n * @param properties - the TypeScript properties of a `ClassicLoadBalancersConfigProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleet_ClassicLoadBalancersConfigPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('classicLoadBalancers', cdk.requiredValidator)(properties.classicLoadBalancers));\n    errors.collect(cdk.propertyValidator('classicLoadBalancers', cdk.listValidator(CfnSpotFleet_ClassicLoadBalancerPropertyValidator))(properties.classicLoadBalancers));\n    return errors.wrap('supplied properties not correct for \"ClassicLoadBalancersConfigProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.ClassicLoadBalancersConfig` resource\n *\n * @param properties - the TypeScript properties of a `ClassicLoadBalancersConfigProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.ClassicLoadBalancersConfig` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetClassicLoadBalancersConfigPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleet_ClassicLoadBalancersConfigPropertyValidator(properties).assertSuccess();\n    return {\n        ClassicLoadBalancers: cdk.listMapper(cfnSpotFleetClassicLoadBalancerPropertyToCloudFormation)(properties.classicLoadBalancers),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetClassicLoadBalancersConfigPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleet.ClassicLoadBalancersConfigProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleet.ClassicLoadBalancersConfigProperty>();\n    ret.addPropertyResult('classicLoadBalancers', 'ClassicLoadBalancers', cfn_parse.FromCloudFormation.getArray(CfnSpotFleetClassicLoadBalancerPropertyFromCloudFormation)(properties.ClassicLoadBalancers));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSpotFleet {\n    /**\n     * Describes a block device for an EBS volume.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-ebsblockdevice.html\n     */\n    export interface EbsBlockDeviceProperty {\n        /**\n         * Indicates whether the EBS volume is deleted on instance termination. For more information, see [Preserving Amazon EBS volumes on instance termination](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) in the *Amazon EC2 User Guide* .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-ebsblockdevice.html#cfn-ec2-spotfleet-ebsblockdevice-deleteontermination\n         */\n        readonly deleteOnTermination?: boolean | cdk.IResolvable;\n        /**\n         * Indicates whether the encryption state of an EBS volume is changed while being restored from a backing snapshot. The effect of setting the encryption state to `true` depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see [Amazon EBS Encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-parameters) in the *Amazon EC2 User Guide* .\n         *\n         * In no case can you remove encryption from an encrypted volume.\n         *\n         * Encrypted volumes can only be attached to instances that support Amazon EBS encryption. For more information, see [Supported Instance Types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances) .\n         *\n         * This parameter is not returned by [DescribeImageAttribute](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImageAttribute.html) .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-ebsblockdevice.html#cfn-ec2-spotfleet-ebsblockdevice-encrypted\n         */\n        readonly encrypted?: boolean | cdk.IResolvable;\n        /**\n         * The number of I/O operations per second (IOPS). For `gp3` , `io1` , and `io2` volumes, this represents the number of IOPS that are provisioned for the volume. For `gp2` volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting.\n         *\n         * The following are the supported values for each volume type:\n         *\n         * - `gp3` : 3,000-16,000 IOPS\n         * - `io1` : 100-64,000 IOPS\n         * - `io2` : 100-64,000 IOPS\n         *\n         * For `io1` and `io2` volumes, we guarantee 64,000 IOPS only for [Instances built on the Nitro System](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances) . Other instance families guarantee performance up to 32,000 IOPS.\n         *\n         * This parameter is required for `io1` and `io2` volumes. The default for `gp3` volumes is 3,000 IOPS. This parameter is not supported for `gp2` , `st1` , `sc1` , or `standard` volumes.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-ebsblockdevice.html#cfn-ec2-spotfleet-ebsblockdevice-iops\n         */\n        readonly iops?: number;\n        /**\n         * The ID of the snapshot.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-ebsblockdevice.html#cfn-ec2-spotfleet-ebsblockdevice-snapshotid\n         */\n        readonly snapshotId?: string;\n        /**\n         * The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size. If you specify a snapshot, the default is the snapshot size. You can specify a volume size that is equal to or larger than the snapshot size.\n         *\n         * The following are the supported volumes sizes for each volume type:\n         *\n         * - `gp2` and `gp3` :1-16,384\n         * - `io1` and `io2` : 4-16,384\n         * - `st1` and `sc1` : 125-16,384\n         * - `standard` : 1-1,024\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-ebsblockdevice.html#cfn-ec2-spotfleet-ebsblockdevice-volumesize\n         */\n        readonly volumeSize?: number;\n        /**\n         * The volume type. For more information, see [Amazon EBS volume types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html) in the *Amazon EC2 User Guide* . If the volume type is `io1` or `io2` , you must specify the IOPS that the volume supports.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-ebsblockdevice.html#cfn-ec2-spotfleet-ebsblockdevice-volumetype\n         */\n        readonly volumeType?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `EbsBlockDeviceProperty`\n *\n * @param properties - the TypeScript properties of a `EbsBlockDeviceProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleet_EbsBlockDevicePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('deleteOnTermination', cdk.validateBoolean)(properties.deleteOnTermination));\n    errors.collect(cdk.propertyValidator('encrypted', cdk.validateBoolean)(properties.encrypted));\n    errors.collect(cdk.propertyValidator('iops', cdk.validateNumber)(properties.iops));\n    errors.collect(cdk.propertyValidator('snapshotId', cdk.validateString)(properties.snapshotId));\n    errors.collect(cdk.propertyValidator('volumeSize', cdk.validateNumber)(properties.volumeSize));\n    errors.collect(cdk.propertyValidator('volumeType', cdk.validateString)(properties.volumeType));\n    return errors.wrap('supplied properties not correct for \"EbsBlockDeviceProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.EbsBlockDevice` resource\n *\n * @param properties - the TypeScript properties of a `EbsBlockDeviceProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.EbsBlockDevice` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetEbsBlockDevicePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleet_EbsBlockDevicePropertyValidator(properties).assertSuccess();\n    return {\n        DeleteOnTermination: cdk.booleanToCloudFormation(properties.deleteOnTermination),\n        Encrypted: cdk.booleanToCloudFormation(properties.encrypted),\n        Iops: cdk.numberToCloudFormation(properties.iops),\n        SnapshotId: cdk.stringToCloudFormation(properties.snapshotId),\n        VolumeSize: cdk.numberToCloudFormation(properties.volumeSize),\n        VolumeType: cdk.stringToCloudFormation(properties.volumeType),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetEbsBlockDevicePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleet.EbsBlockDeviceProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleet.EbsBlockDeviceProperty>();\n    ret.addPropertyResult('deleteOnTermination', 'DeleteOnTermination', properties.DeleteOnTermination != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DeleteOnTermination) : undefined);\n    ret.addPropertyResult('encrypted', 'Encrypted', properties.Encrypted != null ? cfn_parse.FromCloudFormation.getBoolean(properties.Encrypted) : undefined);\n    ret.addPropertyResult('iops', 'Iops', properties.Iops != null ? cfn_parse.FromCloudFormation.getNumber(properties.Iops) : undefined);\n    ret.addPropertyResult('snapshotId', 'SnapshotId', properties.SnapshotId != null ? cfn_parse.FromCloudFormation.getString(properties.SnapshotId) : undefined);\n    ret.addPropertyResult('volumeSize', 'VolumeSize', properties.VolumeSize != null ? cfn_parse.FromCloudFormation.getNumber(properties.VolumeSize) : undefined);\n    ret.addPropertyResult('volumeType', 'VolumeType', properties.VolumeType != null ? cfn_parse.FromCloudFormation.getString(properties.VolumeType) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSpotFleet {\n    /**\n     * Describes the Amazon EC2 launch template and the launch template version that can be used by a Spot Fleet request to configure Amazon EC2 instances. For information about launch templates, see [Launching an instance from a launch template](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html) in the *Amazon EC2 User Guide for Linux Instances* .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-fleetlaunchtemplatespecification.html\n     */\n    export interface FleetLaunchTemplateSpecificationProperty {\n        /**\n         * The ID of the launch template. If you specify the template ID, you can't specify the template name.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-fleetlaunchtemplatespecification.html#cfn-ec2-spotfleet-fleetlaunchtemplatespecification-launchtemplateid\n         */\n        readonly launchTemplateId?: string;\n        /**\n         * The name of the launch template. You must specify either a template name or a template ID.\n         *\n         * Minimum length of 3. Maximum length of 128. Names must match the following pattern: `[a-zA-Z0-9\\(\\)\\.-/_]+`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-fleetlaunchtemplatespecification.html#cfn-ec2-spotfleet-fleetlaunchtemplatespecification-launchtemplatename\n         */\n        readonly launchTemplateName?: string;\n        /**\n         * The version number of the launch template. You must specify a version number.\n         *\n         * Minimum length of 1. Maximum length of 255. Versions must fit the following pattern: `[\\ u0020-\\ uD7FF\\ uE000-\\ uFFFD\\ uD800\\ uDC00-\\ uDBFF\\ uDFFF\\r\\n\\t]*`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-fleetlaunchtemplatespecification.html#cfn-ec2-spotfleet-fleetlaunchtemplatespecification-version\n         */\n        readonly version: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `FleetLaunchTemplateSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `FleetLaunchTemplateSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleet_FleetLaunchTemplateSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('launchTemplateId', cdk.validateString)(properties.launchTemplateId));\n    errors.collect(cdk.propertyValidator('launchTemplateName', cdk.validateString)(properties.launchTemplateName));\n    errors.collect(cdk.propertyValidator('version', cdk.requiredValidator)(properties.version));\n    errors.collect(cdk.propertyValidator('version', cdk.validateString)(properties.version));\n    return errors.wrap('supplied properties not correct for \"FleetLaunchTemplateSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.FleetLaunchTemplateSpecification` resource\n *\n * @param properties - the TypeScript properties of a `FleetLaunchTemplateSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.FleetLaunchTemplateSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetFleetLaunchTemplateSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleet_FleetLaunchTemplateSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        LaunchTemplateId: cdk.stringToCloudFormation(properties.launchTemplateId),\n        LaunchTemplateName: cdk.stringToCloudFormation(properties.launchTemplateName),\n        Version: cdk.stringToCloudFormation(properties.version),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetFleetLaunchTemplateSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleet.FleetLaunchTemplateSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleet.FleetLaunchTemplateSpecificationProperty>();\n    ret.addPropertyResult('launchTemplateId', 'LaunchTemplateId', properties.LaunchTemplateId != null ? cfn_parse.FromCloudFormation.getString(properties.LaunchTemplateId) : undefined);\n    ret.addPropertyResult('launchTemplateName', 'LaunchTemplateName', properties.LaunchTemplateName != null ? cfn_parse.FromCloudFormation.getString(properties.LaunchTemplateName) : undefined);\n    ret.addPropertyResult('version', 'Version', cfn_parse.FromCloudFormation.getString(properties.Version));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSpotFleet {\n    /**\n     * Describes a security group.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-groupidentifier.html\n     */\n    export interface GroupIdentifierProperty {\n        /**\n         * The ID of the security group.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-groupidentifier.html#cfn-ec2-spotfleet-groupidentifier-groupid\n         */\n        readonly groupId: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `GroupIdentifierProperty`\n *\n * @param properties - the TypeScript properties of a `GroupIdentifierProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleet_GroupIdentifierPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('groupId', cdk.requiredValidator)(properties.groupId));\n    errors.collect(cdk.propertyValidator('groupId', cdk.validateString)(properties.groupId));\n    return errors.wrap('supplied properties not correct for \"GroupIdentifierProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.GroupIdentifier` resource\n *\n * @param properties - the TypeScript properties of a `GroupIdentifierProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.GroupIdentifier` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetGroupIdentifierPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleet_GroupIdentifierPropertyValidator(properties).assertSuccess();\n    return {\n        GroupId: cdk.stringToCloudFormation(properties.groupId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetGroupIdentifierPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleet.GroupIdentifierProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleet.GroupIdentifierProperty>();\n    ret.addPropertyResult('groupId', 'GroupId', cfn_parse.FromCloudFormation.getString(properties.GroupId));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSpotFleet {\n    /**\n     * Describes an IAM instance profile.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-iaminstanceprofilespecification.html\n     */\n    export interface IamInstanceProfileSpecificationProperty {\n        /**\n         * The Amazon Resource Name (ARN) of the instance profile.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-iaminstanceprofilespecification.html#cfn-ec2-spotfleet-iaminstanceprofilespecification-arn\n         */\n        readonly arn?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `IamInstanceProfileSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `IamInstanceProfileSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleet_IamInstanceProfileSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('arn', cdk.validateString)(properties.arn));\n    return errors.wrap('supplied properties not correct for \"IamInstanceProfileSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.IamInstanceProfileSpecification` resource\n *\n * @param properties - the TypeScript properties of a `IamInstanceProfileSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.IamInstanceProfileSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetIamInstanceProfileSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleet_IamInstanceProfileSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        Arn: cdk.stringToCloudFormation(properties.arn),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetIamInstanceProfileSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleet.IamInstanceProfileSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleet.IamInstanceProfileSpecificationProperty>();\n    ret.addPropertyResult('arn', 'Arn', properties.Arn != null ? cfn_parse.FromCloudFormation.getString(properties.Arn) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSpotFleet {\n    /**\n     * Describes an IPv6 address.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instanceipv6address.html\n     */\n    export interface InstanceIpv6AddressProperty {\n        /**\n         * The IPv6 address.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instanceipv6address.html#cfn-ec2-spotfleet-instanceipv6address-ipv6address\n         */\n        readonly ipv6Address: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `InstanceIpv6AddressProperty`\n *\n * @param properties - the TypeScript properties of a `InstanceIpv6AddressProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleet_InstanceIpv6AddressPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('ipv6Address', cdk.requiredValidator)(properties.ipv6Address));\n    errors.collect(cdk.propertyValidator('ipv6Address', cdk.validateString)(properties.ipv6Address));\n    return errors.wrap('supplied properties not correct for \"InstanceIpv6AddressProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.InstanceIpv6Address` resource\n *\n * @param properties - the TypeScript properties of a `InstanceIpv6AddressProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.InstanceIpv6Address` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetInstanceIpv6AddressPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleet_InstanceIpv6AddressPropertyValidator(properties).assertSuccess();\n    return {\n        Ipv6Address: cdk.stringToCloudFormation(properties.ipv6Address),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetInstanceIpv6AddressPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleet.InstanceIpv6AddressProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleet.InstanceIpv6AddressProperty>();\n    ret.addPropertyResult('ipv6Address', 'Ipv6Address', cfn_parse.FromCloudFormation.getString(properties.Ipv6Address));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSpotFleet {\n    /**\n     * Describes a network interface.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html\n     */\n    export interface InstanceNetworkInterfaceSpecificationProperty {\n        /**\n         * Indicates whether to assign a public IPv4 address to an instance you launch in a VPC. The public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one. You cannot specify more than one network interface in the request. If launching into a default subnet, the default value is `true` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-associatepublicipaddress\n         */\n        readonly associatePublicIpAddress?: boolean | cdk.IResolvable;\n        /**\n         * Indicates whether the network interface is deleted when the instance is terminated.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-deleteontermination\n         */\n        readonly deleteOnTermination?: boolean | cdk.IResolvable;\n        /**\n         * The description of the network interface. Applies only if creating a network interface when launching an instance.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-description\n         */\n        readonly description?: string;\n        /**\n         * The position of the network interface in the attachment order. A primary network interface has a device index of 0.\n         *\n         * If you specify a network interface when launching an instance, you must specify the device index.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-deviceindex\n         */\n        readonly deviceIndex?: number;\n        /**\n         * The IDs of the security groups for the network interface. Applies only if creating a network interface when launching an instance.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-groups\n         */\n        readonly groups?: string[];\n        /**\n         * A number of IPv6 addresses to assign to the network interface. Amazon EC2 chooses the IPv6 addresses from the range of the subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you've specified a minimum number of instances to launch.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-ipv6addresscount\n         */\n        readonly ipv6AddressCount?: number;\n        /**\n         * One or more IPv6 addresses to assign to the network interface. You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you've specified a minimum number of instances to launch.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-ipv6addresses\n         */\n        readonly ipv6Addresses?: Array<CfnSpotFleet.InstanceIpv6AddressProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * The ID of the network interface.\n         *\n         * If you are creating a Spot Fleet, omit this parameter because you can\u2019t specify a network interface ID in a launch specification.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-networkinterfaceid\n         */\n        readonly networkInterfaceId?: string;\n        /**\n         * One or more private IPv4 addresses to assign to the network interface. Only one private IPv4 address can be designated as primary. You cannot specify this option if you're launching more than one instance in a [RunInstances](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html) request.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-privateipaddresses\n         */\n        readonly privateIpAddresses?: Array<CfnSpotFleet.PrivateIpAddressSpecificationProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * The number of secondary private IPv4 addresses. You can't specify this option and specify more than one private IP address using the private IP addresses option. You cannot specify this option if you're launching more than one instance in a [RunInstances](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html) request.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-secondaryprivateipaddresscount\n         */\n        readonly secondaryPrivateIpAddressCount?: number;\n        /**\n         * The ID of the subnet associated with the network interface. Applies only if creating a network interface when launching an instance.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-subnetid\n         */\n        readonly subnetId?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `InstanceNetworkInterfaceSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `InstanceNetworkInterfaceSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleet_InstanceNetworkInterfaceSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('associatePublicIpAddress', cdk.validateBoolean)(properties.associatePublicIpAddress));\n    errors.collect(cdk.propertyValidator('deleteOnTermination', cdk.validateBoolean)(properties.deleteOnTermination));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('deviceIndex', cdk.validateNumber)(properties.deviceIndex));\n    errors.collect(cdk.propertyValidator('groups', cdk.listValidator(cdk.validateString))(properties.groups));\n    errors.collect(cdk.propertyValidator('ipv6AddressCount', cdk.validateNumber)(properties.ipv6AddressCount));\n    errors.collect(cdk.propertyValidator('ipv6Addresses', cdk.listValidator(CfnSpotFleet_InstanceIpv6AddressPropertyValidator))(properties.ipv6Addresses));\n    errors.collect(cdk.propertyValidator('networkInterfaceId', cdk.validateString)(properties.networkInterfaceId));\n    errors.collect(cdk.propertyValidator('privateIpAddresses', cdk.listValidator(CfnSpotFleet_PrivateIpAddressSpecificationPropertyValidator))(properties.privateIpAddresses));\n    errors.collect(cdk.propertyValidator('secondaryPrivateIpAddressCount', cdk.validateNumber)(properties.secondaryPrivateIpAddressCount));\n    errors.collect(cdk.propertyValidator('subnetId', cdk.validateString)(properties.subnetId));\n    return errors.wrap('supplied properties not correct for \"InstanceNetworkInterfaceSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.InstanceNetworkInterfaceSpecification` resource\n *\n * @param properties - the TypeScript properties of a `InstanceNetworkInterfaceSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.InstanceNetworkInterfaceSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetInstanceNetworkInterfaceSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleet_InstanceNetworkInterfaceSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        AssociatePublicIpAddress: cdk.booleanToCloudFormation(properties.associatePublicIpAddress),\n        DeleteOnTermination: cdk.booleanToCloudFormation(properties.deleteOnTermination),\n        Description: cdk.stringToCloudFormation(properties.description),\n        DeviceIndex: cdk.numberToCloudFormation(properties.deviceIndex),\n        Groups: cdk.listMapper(cdk.stringToCloudFormation)(properties.groups),\n        Ipv6AddressCount: cdk.numberToCloudFormation(properties.ipv6AddressCount),\n        Ipv6Addresses: cdk.listMapper(cfnSpotFleetInstanceIpv6AddressPropertyToCloudFormation)(properties.ipv6Addresses),\n        NetworkInterfaceId: cdk.stringToCloudFormation(properties.networkInterfaceId),\n        PrivateIpAddresses: cdk.listMapper(cfnSpotFleetPrivateIpAddressSpecificationPropertyToCloudFormation)(properties.privateIpAddresses),\n        SecondaryPrivateIpAddressCount: cdk.numberToCloudFormation(properties.secondaryPrivateIpAddressCount),\n        SubnetId: cdk.stringToCloudFormation(properties.subnetId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetInstanceNetworkInterfaceSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty>();\n    ret.addPropertyResult('associatePublicIpAddress', 'AssociatePublicIpAddress', properties.AssociatePublicIpAddress != null ? cfn_parse.FromCloudFormation.getBoolean(properties.AssociatePublicIpAddress) : undefined);\n    ret.addPropertyResult('deleteOnTermination', 'DeleteOnTermination', properties.DeleteOnTermination != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DeleteOnTermination) : undefined);\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('deviceIndex', 'DeviceIndex', properties.DeviceIndex != null ? cfn_parse.FromCloudFormation.getNumber(properties.DeviceIndex) : undefined);\n    ret.addPropertyResult('groups', 'Groups', properties.Groups != null ? cfn_parse.FromCloudFormation.getStringArray(properties.Groups) : undefined);\n    ret.addPropertyResult('ipv6AddressCount', 'Ipv6AddressCount', properties.Ipv6AddressCount != null ? cfn_parse.FromCloudFormation.getNumber(properties.Ipv6AddressCount) : undefined);\n    ret.addPropertyResult('ipv6Addresses', 'Ipv6Addresses', properties.Ipv6Addresses != null ? cfn_parse.FromCloudFormation.getArray(CfnSpotFleetInstanceIpv6AddressPropertyFromCloudFormation)(properties.Ipv6Addresses) : undefined);\n    ret.addPropertyResult('networkInterfaceId', 'NetworkInterfaceId', properties.NetworkInterfaceId != null ? cfn_parse.FromCloudFormation.getString(properties.NetworkInterfaceId) : undefined);\n    ret.addPropertyResult('privateIpAddresses', 'PrivateIpAddresses', properties.PrivateIpAddresses != null ? cfn_parse.FromCloudFormation.getArray(CfnSpotFleetPrivateIpAddressSpecificationPropertyFromCloudFormation)(properties.PrivateIpAddresses) : undefined);\n    ret.addPropertyResult('secondaryPrivateIpAddressCount', 'SecondaryPrivateIpAddressCount', properties.SecondaryPrivateIpAddressCount != null ? cfn_parse.FromCloudFormation.getNumber(properties.SecondaryPrivateIpAddressCount) : undefined);\n    ret.addPropertyResult('subnetId', 'SubnetId', properties.SubnetId != null ? cfn_parse.FromCloudFormation.getString(properties.SubnetId) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSpotFleet {\n    /**\n     * The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with these attributes.\n     *\n     * When you specify multiple parameters, you get instance types that satisfy all of the specified parameters. If you specify multiple values for a parameter, you get instance types that satisfy any of the specified values.\n     *\n     * > You must specify `VCpuCount` and `MemoryMiB` . All other parameters are optional. Any unspecified optional parameter is set to its default.\n     *\n     * For more information, see [Attribute-based instance type selection for EC2 Fleet](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html) , [Attribute-based instance type selection for Spot Fleet](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-attribute-based-instance-type-selection.html) , and [Spot placement score](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-placement-score.html) in the *Amazon EC2 User Guide* .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html\n     */\n    export interface InstanceRequirementsRequestProperty {\n        /**\n         * The minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips) on an instance.\n         *\n         * To exclude accelerator-enabled instance types, set `Max` to `0` .\n         *\n         * Default: No minimum or maximum limits\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-acceleratorcount\n         */\n        readonly acceleratorCount?: CfnSpotFleet.AcceleratorCountRequestProperty | cdk.IResolvable;\n        /**\n         * Indicates whether instance types must have accelerators by specific manufacturers.\n         *\n         * - For instance types with NVIDIA devices, specify `nvidia` .\n         * - For instance types with AMD devices, specify `amd` .\n         * - For instance types with AWS devices, specify `amazon-web-services` .\n         * - For instance types with Xilinx devices, specify `xilinx` .\n         *\n         * Default: Any manufacturer\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-acceleratormanufacturers\n         */\n        readonly acceleratorManufacturers?: string[];\n        /**\n         * The accelerators that must be on the instance type.\n         *\n         * - For instance types with NVIDIA A100 GPUs, specify `a100` .\n         * - For instance types with NVIDIA V100 GPUs, specify `v100` .\n         * - For instance types with NVIDIA K80 GPUs, specify `k80` .\n         * - For instance types with NVIDIA T4 GPUs, specify `t4` .\n         * - For instance types with NVIDIA M60 GPUs, specify `m60` .\n         * - For instance types with AMD Radeon Pro V520 GPUs, specify `radeon-pro-v520` .\n         * - For instance types with Xilinx VU9P FPGAs, specify `vu9p` .\n         *\n         * Default: Any accelerator\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-acceleratornames\n         */\n        readonly acceleratorNames?: string[];\n        /**\n         * The minimum and maximum amount of total accelerator memory, in MiB.\n         *\n         * Default: No minimum or maximum limits\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-acceleratortotalmemorymib\n         */\n        readonly acceleratorTotalMemoryMiB?: CfnSpotFleet.AcceleratorTotalMemoryMiBRequestProperty | cdk.IResolvable;\n        /**\n         * The accelerator types that must be on the instance type.\n         *\n         * - To include instance types with GPU hardware, specify `gpu` .\n         * - To include instance types with FPGA hardware, specify `fpga` .\n         * - To include instance types with inference hardware, specify `inference` .\n         *\n         * Default: Any accelerator type\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-acceleratortypes\n         */\n        readonly acceleratorTypes?: string[];\n        /**\n         * Indicates whether bare metal instance types must be included, excluded, or required.\n         *\n         * - To include bare metal instance types, specify `included` .\n         * - To require only bare metal instance types, specify `required` .\n         * - To exclude bare metal instance types, specify `excluded` .\n         *\n         * Default: `excluded`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-baremetal\n         */\n        readonly bareMetal?: string;\n        /**\n         * The minimum and maximum baseline bandwidth to Amazon EBS, in Mbps. For more information, see [Amazon EBS\u2013optimized instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html) in the *Amazon EC2 User Guide* .\n         *\n         * Default: No minimum or maximum limits\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-baselineebsbandwidthmbps\n         */\n        readonly baselineEbsBandwidthMbps?: CfnSpotFleet.BaselineEbsBandwidthMbpsRequestProperty | cdk.IResolvable;\n        /**\n         * Indicates whether burstable performance T instance types are included, excluded, or required. For more information, see [Burstable performance instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html) .\n         *\n         * - To include burstable performance instance types, specify `included` .\n         * - To require only burstable performance instance types, specify `required` .\n         * - To exclude burstable performance instance types, specify `excluded` .\n         *\n         * Default: `excluded`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-burstableperformance\n         */\n        readonly burstablePerformance?: string;\n        /**\n         * The CPU manufacturers to include.\n         *\n         * - For instance types with Intel CPUs, specify `intel` .\n         * - For instance types with AMD CPUs, specify `amd` .\n         * - For instance types with AWS CPUs, specify `amazon-web-services` .\n         *\n         * > Don't confuse the CPU manufacturer with the CPU architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you specify in your launch template.\n         *\n         * Default: Any manufacturer\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-cpumanufacturers\n         */\n        readonly cpuManufacturers?: string[];\n        /**\n         * The instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk ( `*` ), to exclude an instance family, type, size, or generation. The following are examples: `m5.8xlarge` , `c5*.*` , `m5a.*` , `r*` , `*3*` .\n         *\n         * For example, if you specify `c5*` ,Amazon EC2 will exclude the entire C5 instance family, which includes all C5a and C5n instance types. If you specify `m5a.*` , Amazon EC2 will exclude all the M5a instance types, but not the M5n instance types.\n         *\n         * Default: No excluded instance types\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-excludedinstancetypes\n         */\n        readonly excludedInstanceTypes?: string[];\n        /**\n         * Indicates whether current or previous generation instance types are included. The current generation instance types are recommended for use. Current generation instance types are typically the latest two to three generations in each instance family. For more information, see [Instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the *Amazon EC2 User Guide* .\n         *\n         * For current generation instance types, specify `current` .\n         *\n         * For previous generation instance types, specify `previous` .\n         *\n         * Default: Current and previous generation instance types\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-instancegenerations\n         */\n        readonly instanceGenerations?: string[];\n        /**\n         * Indicates whether instance types with instance store volumes are included, excluded, or required. For more information, [Amazon EC2 instance store](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html) in the *Amazon EC2 User Guide* .\n         *\n         * - To include instance types with instance store volumes, specify `included` .\n         * - To require only instance types with instance store volumes, specify `required` .\n         * - To exclude instance types with instance store volumes, specify `excluded` .\n         *\n         * Default: `included`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-localstorage\n         */\n        readonly localStorage?: string;\n        /**\n         * The type of local storage that is required.\n         *\n         * - For instance types with hard disk drive (HDD) storage, specify `hdd` .\n         * - For instance types with solid state drive (SDD) storage, specify `sdd` .\n         *\n         * Default: `hdd` and `sdd`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-localstoragetypes\n         */\n        readonly localStorageTypes?: string[];\n        /**\n         * The minimum and maximum amount of memory per vCPU, in GiB.\n         *\n         * Default: No minimum or maximum limits\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-memorygibpervcpu\n         */\n        readonly memoryGiBPerVCpu?: CfnSpotFleet.MemoryGiBPerVCpuRequestProperty | cdk.IResolvable;\n        /**\n         * The minimum and maximum amount of memory, in MiB.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-memorymib\n         */\n        readonly memoryMiB?: CfnSpotFleet.MemoryMiBRequestProperty | cdk.IResolvable;\n        /**\n         * The minimum and maximum number of network interfaces.\n         *\n         * Default: No minimum or maximum limits\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-networkinterfacecount\n         */\n        readonly networkInterfaceCount?: CfnSpotFleet.NetworkInterfaceCountRequestProperty | cdk.IResolvable;\n        /**\n         * The price protection threshold for On-Demand Instances. This is the maximum you\u2019ll pay for an On-Demand Instance, expressed as a percentage above the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 selects instance types with your attributes, it excludes instance types priced above your threshold.\n         *\n         * The parameter accepts an integer, which Amazon EC2 interprets as a percentage.\n         *\n         * To turn off price protection, specify a high value, such as `999999` .\n         *\n         * This parameter is not supported for [GetSpotPlacementScores](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html) and [GetInstanceTypesFromInstanceRequirements](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceTypesFromInstanceRequirements.html) .\n         *\n         * > If you set `TargetCapacityUnitType` to `vcpu` or `memory-mib` , the price protection threshold is applied based on the per-vCPU or per-memory price instead of the per-instance price.\n         *\n         * Default: `20`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-ondemandmaxpricepercentageoverlowestprice\n         */\n        readonly onDemandMaxPricePercentageOverLowestPrice?: number;\n        /**\n         * Indicates whether instance types must support hibernation for On-Demand Instances.\n         *\n         * This parameter is not supported for [GetSpotPlacementScores](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html) .\n         *\n         * Default: `false`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-requirehibernatesupport\n         */\n        readonly requireHibernateSupport?: boolean | cdk.IResolvable;\n        /**\n         * The price protection threshold for Spot Instance. This is the maximum you\u2019ll pay for an Spot Instance, expressed as a percentage above the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 selects instance types with your attributes, it excludes instance types priced above your threshold.\n         *\n         * The parameter accepts an integer, which Amazon EC2 interprets as a percentage.\n         *\n         * To turn off price protection, specify a high value, such as `999999` .\n         *\n         * This parameter is not supported for [GetSpotPlacementScores](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html) and [GetInstanceTypesFromInstanceRequirements](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceTypesFromInstanceRequirements.html) .\n         *\n         * > If you set `TargetCapacityUnitType` to `vcpu` or `memory-mib` , the price protection threshold is applied based on the per-vCPU or per-memory price instead of the per-instance price.\n         *\n         * Default: `100`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-spotmaxpricepercentageoverlowestprice\n         */\n        readonly spotMaxPricePercentageOverLowestPrice?: number;\n        /**\n         * The minimum and maximum amount of total local storage, in GB.\n         *\n         * Default: No minimum or maximum limits\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-totallocalstoragegb\n         */\n        readonly totalLocalStorageGb?: CfnSpotFleet.TotalLocalStorageGBRequestProperty | cdk.IResolvable;\n        /**\n         * The minimum and maximum number of vCPUs.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-vcpucount\n         */\n        readonly vCpuCount?: CfnSpotFleet.VCpuCountRangeRequestProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `InstanceRequirementsRequestProperty`\n *\n * @param properties - the TypeScript properties of a `InstanceRequirementsRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleet_InstanceRequirementsRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('acceleratorCount', CfnSpotFleet_AcceleratorCountRequestPropertyValidator)(properties.acceleratorCount));\n    errors.collect(cdk.propertyValidator('acceleratorManufacturers', cdk.listValidator(cdk.validateString))(properties.acceleratorManufacturers));\n    errors.collect(cdk.propertyValidator('acceleratorNames', cdk.listValidator(cdk.validateString))(properties.acceleratorNames));\n    errors.collect(cdk.propertyValidator('acceleratorTotalMemoryMiB', CfnSpotFleet_AcceleratorTotalMemoryMiBRequestPropertyValidator)(properties.acceleratorTotalMemoryMiB));\n    errors.collect(cdk.propertyValidator('acceleratorTypes', cdk.listValidator(cdk.validateString))(properties.acceleratorTypes));\n    errors.collect(cdk.propertyValidator('bareMetal', cdk.validateString)(properties.bareMetal));\n    errors.collect(cdk.propertyValidator('baselineEbsBandwidthMbps', CfnSpotFleet_BaselineEbsBandwidthMbpsRequestPropertyValidator)(properties.baselineEbsBandwidthMbps));\n    errors.collect(cdk.propertyValidator('burstablePerformance', cdk.validateString)(properties.burstablePerformance));\n    errors.collect(cdk.propertyValidator('cpuManufacturers', cdk.listValidator(cdk.validateString))(properties.cpuManufacturers));\n    errors.collect(cdk.propertyValidator('excludedInstanceTypes', cdk.listValidator(cdk.validateString))(properties.excludedInstanceTypes));\n    errors.collect(cdk.propertyValidator('instanceGenerations', cdk.listValidator(cdk.validateString))(properties.instanceGenerations));\n    errors.collect(cdk.propertyValidator('localStorage', cdk.validateString)(properties.localStorage));\n    errors.collect(cdk.propertyValidator('localStorageTypes', cdk.listValidator(cdk.validateString))(properties.localStorageTypes));\n    errors.collect(cdk.propertyValidator('memoryGiBPerVCpu', CfnSpotFleet_MemoryGiBPerVCpuRequestPropertyValidator)(properties.memoryGiBPerVCpu));\n    errors.collect(cdk.propertyValidator('memoryMiB', CfnSpotFleet_MemoryMiBRequestPropertyValidator)(properties.memoryMiB));\n    errors.collect(cdk.propertyValidator('networkInterfaceCount', CfnSpotFleet_NetworkInterfaceCountRequestPropertyValidator)(properties.networkInterfaceCount));\n    errors.collect(cdk.propertyValidator('onDemandMaxPricePercentageOverLowestPrice', cdk.validateNumber)(properties.onDemandMaxPricePercentageOverLowestPrice));\n    errors.collect(cdk.propertyValidator('requireHibernateSupport', cdk.validateBoolean)(properties.requireHibernateSupport));\n    errors.collect(cdk.propertyValidator('spotMaxPricePercentageOverLowestPrice', cdk.validateNumber)(properties.spotMaxPricePercentageOverLowestPrice));\n    errors.collect(cdk.propertyValidator('totalLocalStorageGb', CfnSpotFleet_TotalLocalStorageGBRequestPropertyValidator)(properties.totalLocalStorageGb));\n    errors.collect(cdk.propertyValidator('vCpuCount', CfnSpotFleet_VCpuCountRangeRequestPropertyValidator)(properties.vCpuCount));\n    return errors.wrap('supplied properties not correct for \"InstanceRequirementsRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.InstanceRequirementsRequest` resource\n *\n * @param properties - the TypeScript properties of a `InstanceRequirementsRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.InstanceRequirementsRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetInstanceRequirementsRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleet_InstanceRequirementsRequestPropertyValidator(properties).assertSuccess();\n    return {\n        AcceleratorCount: cfnSpotFleetAcceleratorCountRequestPropertyToCloudFormation(properties.acceleratorCount),\n        AcceleratorManufacturers: cdk.listMapper(cdk.stringToCloudFormation)(properties.acceleratorManufacturers),\n        AcceleratorNames: cdk.listMapper(cdk.stringToCloudFormation)(properties.acceleratorNames),\n        AcceleratorTotalMemoryMiB: cfnSpotFleetAcceleratorTotalMemoryMiBRequestPropertyToCloudFormation(properties.acceleratorTotalMemoryMiB),\n        AcceleratorTypes: cdk.listMapper(cdk.stringToCloudFormation)(properties.acceleratorTypes),\n        BareMetal: cdk.stringToCloudFormation(properties.bareMetal),\n        BaselineEbsBandwidthMbps: cfnSpotFleetBaselineEbsBandwidthMbpsRequestPropertyToCloudFormation(properties.baselineEbsBandwidthMbps),\n        BurstablePerformance: cdk.stringToCloudFormation(properties.burstablePerformance),\n        CpuManufacturers: cdk.listMapper(cdk.stringToCloudFormation)(properties.cpuManufacturers),\n        ExcludedInstanceTypes: cdk.listMapper(cdk.stringToCloudFormation)(properties.excludedInstanceTypes),\n        InstanceGenerations: cdk.listMapper(cdk.stringToCloudFormation)(properties.instanceGenerations),\n        LocalStorage: cdk.stringToCloudFormation(properties.localStorage),\n        LocalStorageTypes: cdk.listMapper(cdk.stringToCloudFormation)(properties.localStorageTypes),\n        MemoryGiBPerVCpu: cfnSpotFleetMemoryGiBPerVCpuRequestPropertyToCloudFormation(properties.memoryGiBPerVCpu),\n        MemoryMiB: cfnSpotFleetMemoryMiBRequestPropertyToCloudFormation(properties.memoryMiB),\n        NetworkInterfaceCount: cfnSpotFleetNetworkInterfaceCountRequestPropertyToCloudFormation(properties.networkInterfaceCount),\n        OnDemandMaxPricePercentageOverLowestPrice: cdk.numberToCloudFormation(properties.onDemandMaxPricePercentageOverLowestPrice),\n        RequireHibernateSupport: cdk.booleanToCloudFormation(properties.requireHibernateSupport),\n        SpotMaxPricePercentageOverLowestPrice: cdk.numberToCloudFormation(properties.spotMaxPricePercentageOverLowestPrice),\n        TotalLocalStorageGB: cfnSpotFleetTotalLocalStorageGBRequestPropertyToCloudFormation(properties.totalLocalStorageGb),\n        VCpuCount: cfnSpotFleetVCpuCountRangeRequestPropertyToCloudFormation(properties.vCpuCount),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetInstanceRequirementsRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleet.InstanceRequirementsRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleet.InstanceRequirementsRequestProperty>();\n    ret.addPropertyResult('acceleratorCount', 'AcceleratorCount', properties.AcceleratorCount != null ? CfnSpotFleetAcceleratorCountRequestPropertyFromCloudFormation(properties.AcceleratorCount) : undefined);\n    ret.addPropertyResult('acceleratorManufacturers', 'AcceleratorManufacturers', properties.AcceleratorManufacturers != null ? cfn_parse.FromCloudFormation.getStringArray(properties.AcceleratorManufacturers) : undefined);\n    ret.addPropertyResult('acceleratorNames', 'AcceleratorNames', properties.AcceleratorNames != null ? cfn_parse.FromCloudFormation.getStringArray(properties.AcceleratorNames) : undefined);\n    ret.addPropertyResult('acceleratorTotalMemoryMiB', 'AcceleratorTotalMemoryMiB', properties.AcceleratorTotalMemoryMiB != null ? CfnSpotFleetAcceleratorTotalMemoryMiBRequestPropertyFromCloudFormation(properties.AcceleratorTotalMemoryMiB) : undefined);\n    ret.addPropertyResult('acceleratorTypes', 'AcceleratorTypes', properties.AcceleratorTypes != null ? cfn_parse.FromCloudFormation.getStringArray(properties.AcceleratorTypes) : undefined);\n    ret.addPropertyResult('bareMetal', 'BareMetal', properties.BareMetal != null ? cfn_parse.FromCloudFormation.getString(properties.BareMetal) : undefined);\n    ret.addPropertyResult('baselineEbsBandwidthMbps', 'BaselineEbsBandwidthMbps', properties.BaselineEbsBandwidthMbps != null ? CfnSpotFleetBaselineEbsBandwidthMbpsRequestPropertyFromCloudFormation(properties.BaselineEbsBandwidthMbps) : undefined);\n    ret.addPropertyResult('burstablePerformance', 'BurstablePerformance', properties.BurstablePerformance != null ? cfn_parse.FromCloudFormation.getString(properties.BurstablePerformance) : undefined);\n    ret.addPropertyResult('cpuManufacturers', 'CpuManufacturers', properties.CpuManufacturers != null ? cfn_parse.FromCloudFormation.getStringArray(properties.CpuManufacturers) : undefined);\n    ret.addPropertyResult('excludedInstanceTypes', 'ExcludedInstanceTypes', properties.ExcludedInstanceTypes != null ? cfn_parse.FromCloudFormation.getStringArray(properties.ExcludedInstanceTypes) : undefined);\n    ret.addPropertyResult('instanceGenerations', 'InstanceGenerations', properties.InstanceGenerations != null ? cfn_parse.FromCloudFormation.getStringArray(properties.InstanceGenerations) : undefined);\n    ret.addPropertyResult('localStorage', 'LocalStorage', properties.LocalStorage != null ? cfn_parse.FromCloudFormation.getString(properties.LocalStorage) : undefined);\n    ret.addPropertyResult('localStorageTypes', 'LocalStorageTypes', properties.LocalStorageTypes != null ? cfn_parse.FromCloudFormation.getStringArray(properties.LocalStorageTypes) : undefined);\n    ret.addPropertyResult('memoryGiBPerVCpu', 'MemoryGiBPerVCpu', properties.MemoryGiBPerVCpu != null ? CfnSpotFleetMemoryGiBPerVCpuRequestPropertyFromCloudFormation(properties.MemoryGiBPerVCpu) : undefined);\n    ret.addPropertyResult('memoryMiB', 'MemoryMiB', properties.MemoryMiB != null ? CfnSpotFleetMemoryMiBRequestPropertyFromCloudFormation(properties.MemoryMiB) : undefined);\n    ret.addPropertyResult('networkInterfaceCount', 'NetworkInterfaceCount', properties.NetworkInterfaceCount != null ? CfnSpotFleetNetworkInterfaceCountRequestPropertyFromCloudFormation(properties.NetworkInterfaceCount) : undefined);\n    ret.addPropertyResult('onDemandMaxPricePercentageOverLowestPrice', 'OnDemandMaxPricePercentageOverLowestPrice', properties.OnDemandMaxPricePercentageOverLowestPrice != null ? cfn_parse.FromCloudFormation.getNumber(properties.OnDemandMaxPricePercentageOverLowestPrice) : undefined);\n    ret.addPropertyResult('requireHibernateSupport', 'RequireHibernateSupport', properties.RequireHibernateSupport != null ? cfn_parse.FromCloudFormation.getBoolean(properties.RequireHibernateSupport) : undefined);\n    ret.addPropertyResult('spotMaxPricePercentageOverLowestPrice', 'SpotMaxPricePercentageOverLowestPrice', properties.SpotMaxPricePercentageOverLowestPrice != null ? cfn_parse.FromCloudFormation.getNumber(properties.SpotMaxPricePercentageOverLowestPrice) : undefined);\n    ret.addPropertyResult('totalLocalStorageGb', 'TotalLocalStorageGB', properties.TotalLocalStorageGB != null ? CfnSpotFleetTotalLocalStorageGBRequestPropertyFromCloudFormation(properties.TotalLocalStorageGB) : undefined);\n    ret.addPropertyResult('vCpuCount', 'VCpuCount', properties.VCpuCount != null ? CfnSpotFleetVCpuCountRangeRequestPropertyFromCloudFormation(properties.VCpuCount) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSpotFleet {\n    /**\n     * Specifies a launch template and overrides.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateconfig.html\n     */\n    export interface LaunchTemplateConfigProperty {\n        /**\n         * The launch template.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateconfig.html#cfn-ec2-spotfleet-launchtemplateconfig-launchtemplatespecification\n         */\n        readonly launchTemplateSpecification?: CfnSpotFleet.FleetLaunchTemplateSpecificationProperty | cdk.IResolvable;\n        /**\n         * Any parameters that you specify override the same parameters in the launch template.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateconfig.html#cfn-ec2-spotfleet-launchtemplateconfig-overrides\n         */\n        readonly overrides?: Array<CfnSpotFleet.LaunchTemplateOverridesProperty | cdk.IResolvable> | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `LaunchTemplateConfigProperty`\n *\n * @param properties - the TypeScript properties of a `LaunchTemplateConfigProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleet_LaunchTemplateConfigPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('launchTemplateSpecification', CfnSpotFleet_FleetLaunchTemplateSpecificationPropertyValidator)(properties.launchTemplateSpecification));\n    errors.collect(cdk.propertyValidator('overrides', cdk.listValidator(CfnSpotFleet_LaunchTemplateOverridesPropertyValidator))(properties.overrides));\n    return errors.wrap('supplied properties not correct for \"LaunchTemplateConfigProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.LaunchTemplateConfig` resource\n *\n * @param properties - the TypeScript properties of a `LaunchTemplateConfigProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.LaunchTemplateConfig` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetLaunchTemplateConfigPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleet_LaunchTemplateConfigPropertyValidator(properties).assertSuccess();\n    return {\n        LaunchTemplateSpecification: cfnSpotFleetFleetLaunchTemplateSpecificationPropertyToCloudFormation(properties.launchTemplateSpecification),\n        Overrides: cdk.listMapper(cfnSpotFleetLaunchTemplateOverridesPropertyToCloudFormation)(properties.overrides),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetLaunchTemplateConfigPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleet.LaunchTemplateConfigProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleet.LaunchTemplateConfigProperty>();\n    ret.addPropertyResult('launchTemplateSpecification', 'LaunchTemplateSpecification', properties.LaunchTemplateSpecification != null ? CfnSpotFleetFleetLaunchTemplateSpecificationPropertyFromCloudFormation(properties.LaunchTemplateSpecification) : undefined);\n    ret.addPropertyResult('overrides', 'Overrides', properties.Overrides != null ? cfn_parse.FromCloudFormation.getArray(CfnSpotFleetLaunchTemplateOverridesPropertyFromCloudFormation)(properties.Overrides) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSpotFleet {\n    /**\n     * Specifies overrides for a launch template.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html\n     */\n    export interface LaunchTemplateOverridesProperty {\n        /**\n         * The Availability Zone in which to launch the instances.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-availabilityzone\n         */\n        readonly availabilityZone?: string;\n        /**\n         * The instance requirements. When you specify instance requirements, Amazon EC2 will identify instance types with the provided requirements, and then use your On-Demand and Spot allocation strategies to launch instances from these instance types, in the same way as when you specify a list of instance types.\n         *\n         * > If you specify `InstanceRequirements` , you can't specify `InstanceTypes` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-instancerequirements\n         */\n        readonly instanceRequirements?: CfnSpotFleet.InstanceRequirementsRequestProperty | cdk.IResolvable;\n        /**\n         * The instance type.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-instancetype\n         */\n        readonly instanceType?: string;\n        /**\n         * The priority for the launch template override. The highest priority is launched first.\n         *\n         * If `OnDemandAllocationStrategy` is set to `prioritized` , Spot Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity.\n         *\n         * If the Spot `AllocationStrategy` is set to `capacityOptimizedPrioritized` , Spot Fleet uses priority on a best-effort basis to determine which launch template override to use in fulfilling Spot capacity, but optimizes for capacity first.\n         *\n         * Valid values are whole numbers starting at `0` . The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. You can set the same priority for different launch template overrides.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-priority\n         */\n        readonly priority?: number;\n        /**\n         * The maximum price per unit hour that you are willing to pay for a Spot Instance.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-spotprice\n         */\n        readonly spotPrice?: string;\n        /**\n         * The ID of the subnet in which to launch the instances.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-subnetid\n         */\n        readonly subnetId?: string;\n        /**\n         * The number of units provided by the specified instance type.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-weightedcapacity\n         */\n        readonly weightedCapacity?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `LaunchTemplateOverridesProperty`\n *\n * @param properties - the TypeScript properties of a `LaunchTemplateOverridesProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleet_LaunchTemplateOverridesPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('availabilityZone', cdk.validateString)(properties.availabilityZone));\n    errors.collect(cdk.propertyValidator('instanceRequirements', CfnSpotFleet_InstanceRequirementsRequestPropertyValidator)(properties.instanceRequirements));\n    errors.collect(cdk.propertyValidator('instanceType', cdk.validateString)(properties.instanceType));\n    errors.collect(cdk.propertyValidator('priority', cdk.validateNumber)(properties.priority));\n    errors.collect(cdk.propertyValidator('spotPrice', cdk.validateString)(properties.spotPrice));\n    errors.collect(cdk.propertyValidator('subnetId', cdk.validateString)(properties.subnetId));\n    errors.collect(cdk.propertyValidator('weightedCapacity', cdk.validateNumber)(properties.weightedCapacity));\n    return errors.wrap('supplied properties not correct for \"LaunchTemplateOverridesProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.LaunchTemplateOverrides` resource\n *\n * @param properties - the TypeScript properties of a `LaunchTemplateOverridesProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.LaunchTemplateOverrides` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetLaunchTemplateOverridesPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleet_LaunchTemplateOverridesPropertyValidator(properties).assertSuccess();\n    return {\n        AvailabilityZone: cdk.stringToCloudFormation(properties.availabilityZone),\n        InstanceRequirements: cfnSpotFleetInstanceRequirementsRequestPropertyToCloudFormation(properties.instanceRequirements),\n        InstanceType: cdk.stringToCloudFormation(properties.instanceType),\n        Priority: cdk.numberToCloudFormation(properties.priority),\n        SpotPrice: cdk.stringToCloudFormation(properties.spotPrice),\n        SubnetId: cdk.stringToCloudFormation(properties.subnetId),\n        WeightedCapacity: cdk.numberToCloudFormation(properties.weightedCapacity),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetLaunchTemplateOverridesPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleet.LaunchTemplateOverridesProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleet.LaunchTemplateOverridesProperty>();\n    ret.addPropertyResult('availabilityZone', 'AvailabilityZone', properties.AvailabilityZone != null ? cfn_parse.FromCloudFormation.getString(properties.AvailabilityZone) : undefined);\n    ret.addPropertyResult('instanceRequirements', 'InstanceRequirements', properties.InstanceRequirements != null ? CfnSpotFleetInstanceRequirementsRequestPropertyFromCloudFormation(properties.InstanceRequirements) : undefined);\n    ret.addPropertyResult('instanceType', 'InstanceType', properties.InstanceType != null ? cfn_parse.FromCloudFormation.getString(properties.InstanceType) : undefined);\n    ret.addPropertyResult('priority', 'Priority', properties.Priority != null ? cfn_parse.FromCloudFormation.getNumber(properties.Priority) : undefined);\n    ret.addPropertyResult('spotPrice', 'SpotPrice', properties.SpotPrice != null ? cfn_parse.FromCloudFormation.getString(properties.SpotPrice) : undefined);\n    ret.addPropertyResult('subnetId', 'SubnetId', properties.SubnetId != null ? cfn_parse.FromCloudFormation.getString(properties.SubnetId) : undefined);\n    ret.addPropertyResult('weightedCapacity', 'WeightedCapacity', properties.WeightedCapacity != null ? cfn_parse.FromCloudFormation.getNumber(properties.WeightedCapacity) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSpotFleet {\n    /**\n     * Specifies the Classic Load Balancers and target groups to attach to a Spot Fleet request.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-loadbalancersconfig.html\n     */\n    export interface LoadBalancersConfigProperty {\n        /**\n         * The Classic Load Balancers.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-loadbalancersconfig.html#cfn-ec2-spotfleet-loadbalancersconfig-classicloadbalancersconfig\n         */\n        readonly classicLoadBalancersConfig?: CfnSpotFleet.ClassicLoadBalancersConfigProperty | cdk.IResolvable;\n        /**\n         * The target groups.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-loadbalancersconfig.html#cfn-ec2-spotfleet-loadbalancersconfig-targetgroupsconfig\n         */\n        readonly targetGroupsConfig?: CfnSpotFleet.TargetGroupsConfigProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `LoadBalancersConfigProperty`\n *\n * @param properties - the TypeScript properties of a `LoadBalancersConfigProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleet_LoadBalancersConfigPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('classicLoadBalancersConfig', CfnSpotFleet_ClassicLoadBalancersConfigPropertyValidator)(properties.classicLoadBalancersConfig));\n    errors.collect(cdk.propertyValidator('targetGroupsConfig', CfnSpotFleet_TargetGroupsConfigPropertyValidator)(properties.targetGroupsConfig));\n    return errors.wrap('supplied properties not correct for \"LoadBalancersConfigProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.LoadBalancersConfig` resource\n *\n * @param properties - the TypeScript properties of a `LoadBalancersConfigProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.LoadBalancersConfig` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetLoadBalancersConfigPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleet_LoadBalancersConfigPropertyValidator(properties).assertSuccess();\n    return {\n        ClassicLoadBalancersConfig: cfnSpotFleetClassicLoadBalancersConfigPropertyToCloudFormation(properties.classicLoadBalancersConfig),\n        TargetGroupsConfig: cfnSpotFleetTargetGroupsConfigPropertyToCloudFormation(properties.targetGroupsConfig),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetLoadBalancersConfigPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleet.LoadBalancersConfigProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleet.LoadBalancersConfigProperty>();\n    ret.addPropertyResult('classicLoadBalancersConfig', 'ClassicLoadBalancersConfig', properties.ClassicLoadBalancersConfig != null ? CfnSpotFleetClassicLoadBalancersConfigPropertyFromCloudFormation(properties.ClassicLoadBalancersConfig) : undefined);\n    ret.addPropertyResult('targetGroupsConfig', 'TargetGroupsConfig', properties.TargetGroupsConfig != null ? CfnSpotFleetTargetGroupsConfigPropertyFromCloudFormation(properties.TargetGroupsConfig) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSpotFleet {\n    /**\n     * The minimum and maximum amount of memory per vCPU, in GiB.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-memorygibpervcpurequest.html\n     */\n    export interface MemoryGiBPerVCpuRequestProperty {\n        /**\n         * The maximum amount of memory per vCPU, in GiB. To specify no maximum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-memorygibpervcpurequest.html#cfn-ec2-spotfleet-memorygibpervcpurequest-max\n         */\n        readonly max?: number;\n        /**\n         * The minimum amount of memory per vCPU, in GiB. To specify no minimum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-memorygibpervcpurequest.html#cfn-ec2-spotfleet-memorygibpervcpurequest-min\n         */\n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `MemoryGiBPerVCpuRequestProperty`\n *\n * @param properties - the TypeScript properties of a `MemoryGiBPerVCpuRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleet_MemoryGiBPerVCpuRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"MemoryGiBPerVCpuRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.MemoryGiBPerVCpuRequest` resource\n *\n * @param properties - the TypeScript properties of a `MemoryGiBPerVCpuRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.MemoryGiBPerVCpuRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetMemoryGiBPerVCpuRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleet_MemoryGiBPerVCpuRequestPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetMemoryGiBPerVCpuRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleet.MemoryGiBPerVCpuRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleet.MemoryGiBPerVCpuRequestProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSpotFleet {\n    /**\n     * The minimum and maximum amount of memory, in MiB.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-memorymibrequest.html\n     */\n    export interface MemoryMiBRequestProperty {\n        /**\n         * The maximum amount of memory, in MiB. To specify no maximum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-memorymibrequest.html#cfn-ec2-spotfleet-memorymibrequest-max\n         */\n        readonly max?: number;\n        /**\n         * The minimum amount of memory, in MiB. To specify no minimum limit, specify `0` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-memorymibrequest.html#cfn-ec2-spotfleet-memorymibrequest-min\n         */\n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `MemoryMiBRequestProperty`\n *\n * @param properties - the TypeScript properties of a `MemoryMiBRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleet_MemoryMiBRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"MemoryMiBRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.MemoryMiBRequest` resource\n *\n * @param properties - the TypeScript properties of a `MemoryMiBRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.MemoryMiBRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetMemoryMiBRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleet_MemoryMiBRequestPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetMemoryMiBRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleet.MemoryMiBRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleet.MemoryMiBRequestProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSpotFleet {\n    /**\n     * The minimum and maximum number of network interfaces.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-networkinterfacecountrequest.html\n     */\n    export interface NetworkInterfaceCountRequestProperty {\n        /**\n         * The maximum number of network interfaces. To specify no maximum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-networkinterfacecountrequest.html#cfn-ec2-spotfleet-networkinterfacecountrequest-max\n         */\n        readonly max?: number;\n        /**\n         * The minimum number of network interfaces. To specify no minimum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-networkinterfacecountrequest.html#cfn-ec2-spotfleet-networkinterfacecountrequest-min\n         */\n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `NetworkInterfaceCountRequestProperty`\n *\n * @param properties - the TypeScript properties of a `NetworkInterfaceCountRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleet_NetworkInterfaceCountRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"NetworkInterfaceCountRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.NetworkInterfaceCountRequest` resource\n *\n * @param properties - the TypeScript properties of a `NetworkInterfaceCountRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.NetworkInterfaceCountRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetNetworkInterfaceCountRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleet_NetworkInterfaceCountRequestPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetNetworkInterfaceCountRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleet.NetworkInterfaceCountRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleet.NetworkInterfaceCountRequestProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSpotFleet {\n    /**\n     * Describes a secondary private IPv4 address for a network interface.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-privateipaddressspecification.html\n     */\n    export interface PrivateIpAddressSpecificationProperty {\n        /**\n         * Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-privateipaddressspecification.html#cfn-ec2-spotfleet-privateipaddressspecification-primary\n         */\n        readonly primary?: boolean | cdk.IResolvable;\n        /**\n         * The private IPv4 addresses.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-privateipaddressspecification.html#cfn-ec2-spotfleet-privateipaddressspecification-privateipaddress\n         */\n        readonly privateIpAddress: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `PrivateIpAddressSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `PrivateIpAddressSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleet_PrivateIpAddressSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('primary', cdk.validateBoolean)(properties.primary));\n    errors.collect(cdk.propertyValidator('privateIpAddress', cdk.requiredValidator)(properties.privateIpAddress));\n    errors.collect(cdk.propertyValidator('privateIpAddress', cdk.validateString)(properties.privateIpAddress));\n    return errors.wrap('supplied properties not correct for \"PrivateIpAddressSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.PrivateIpAddressSpecification` resource\n *\n * @param properties - the TypeScript properties of a `PrivateIpAddressSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.PrivateIpAddressSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetPrivateIpAddressSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleet_PrivateIpAddressSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        Primary: cdk.booleanToCloudFormation(properties.primary),\n        PrivateIpAddress: cdk.stringToCloudFormation(properties.privateIpAddress),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetPrivateIpAddressSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleet.PrivateIpAddressSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleet.PrivateIpAddressSpecificationProperty>();\n    ret.addPropertyResult('primary', 'Primary', properties.Primary != null ? cfn_parse.FromCloudFormation.getBoolean(properties.Primary) : undefined);\n    ret.addPropertyResult('privateIpAddress', 'PrivateIpAddress', cfn_parse.FromCloudFormation.getString(properties.PrivateIpAddress));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSpotFleet {\n    /**\n     * The Spot Instance replacement strategy to use when Amazon EC2 emits a signal that your Spot Instance is at an elevated risk of being interrupted. For more information, see [Capacity rebalancing](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-capacity-rebalance.html) in the *Amazon EC2 User Guide for Linux Instances* .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotcapacityrebalance.html\n     */\n    export interface SpotCapacityRebalanceProperty {\n        /**\n         * The replacement strategy to use. Only available for fleets of type `maintain` .\n         *\n         * `launch` - Spot Fleet launches a new replacement Spot Instance when a rebalance notification is emitted for an existing Spot Instance in the fleet. Spot Fleet does not terminate the instances that receive a rebalance notification. You can terminate the old instances, or you can leave them running. You are charged for all instances while they are running.\n         *\n         * `launch-before-terminate` - Spot Fleet launches a new replacement Spot Instance when a rebalance notification is emitted for an existing Spot Instance in the fleet, and then, after a delay that you specify (in `TerminationDelay` ), terminates the instances that received a rebalance notification.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotcapacityrebalance.html#cfn-ec2-spotfleet-spotcapacityrebalance-replacementstrategy\n         */\n        readonly replacementStrategy?: string;\n        /**\n         * The amount of time (in seconds) that Amazon EC2 waits before terminating the old Spot Instance after launching a new replacement Spot Instance.\n         *\n         * Required when `ReplacementStrategy` is set to `launch-before-terminate` .\n         *\n         * Not valid when `ReplacementStrategy` is set to `launch` .\n         *\n         * Valid values: Minimum value of `120` seconds. Maximum value of `7200` seconds.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotcapacityrebalance.html#cfn-ec2-spotfleet-spotcapacityrebalance-terminationdelay\n         */\n        readonly terminationDelay?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `SpotCapacityRebalanceProperty`\n *\n * @param properties - the TypeScript properties of a `SpotCapacityRebalanceProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleet_SpotCapacityRebalancePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('replacementStrategy', cdk.validateString)(properties.replacementStrategy));\n    errors.collect(cdk.propertyValidator('terminationDelay', cdk.validateNumber)(properties.terminationDelay));\n    return errors.wrap('supplied properties not correct for \"SpotCapacityRebalanceProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.SpotCapacityRebalance` resource\n *\n * @param properties - the TypeScript properties of a `SpotCapacityRebalanceProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.SpotCapacityRebalance` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetSpotCapacityRebalancePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleet_SpotCapacityRebalancePropertyValidator(properties).assertSuccess();\n    return {\n        ReplacementStrategy: cdk.stringToCloudFormation(properties.replacementStrategy),\n        TerminationDelay: cdk.numberToCloudFormation(properties.terminationDelay),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetSpotCapacityRebalancePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleet.SpotCapacityRebalanceProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleet.SpotCapacityRebalanceProperty>();\n    ret.addPropertyResult('replacementStrategy', 'ReplacementStrategy', properties.ReplacementStrategy != null ? cfn_parse.FromCloudFormation.getString(properties.ReplacementStrategy) : undefined);\n    ret.addPropertyResult('terminationDelay', 'TerminationDelay', properties.TerminationDelay != null ? cfn_parse.FromCloudFormation.getNumber(properties.TerminationDelay) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSpotFleet {\n    /**\n     * Specifies the launch specification for one or more Spot Instances. If you include On-Demand capacity in your fleet request, you can't use `SpotFleetLaunchSpecification` ; you must use [LaunchTemplateConfig](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateconfig.html) .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html\n     */\n    export interface SpotFleetLaunchSpecificationProperty {\n        /**\n         * One or more block devices that are mapped to the Spot Instances. You can't specify both a snapshot ID and an encryption value. This is because only blank volumes can be encrypted on creation. If a snapshot is the basis for a volume, it is not blank and its encryption status is used for the volume encryption status.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-blockdevicemappings\n         */\n        readonly blockDeviceMappings?: Array<CfnSpotFleet.BlockDeviceMappingProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * Indicates whether the instances are optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.\n         *\n         * Default: `false`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-ebsoptimized\n         */\n        readonly ebsOptimized?: boolean | cdk.IResolvable;\n        /**\n         * The IAM instance profile.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-iaminstanceprofile\n         */\n        readonly iamInstanceProfile?: CfnSpotFleet.IamInstanceProfileSpecificationProperty | cdk.IResolvable;\n        /**\n         * The ID of the AMI.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-imageid\n         */\n        readonly imageId: string;\n        /**\n         * The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with those attributes.\n         *\n         * > If you specify `InstanceRequirements` , you can't specify `InstanceTypes` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-instancerequirements\n         */\n        readonly instanceRequirements?: CfnSpotFleet.InstanceRequirementsRequestProperty | cdk.IResolvable;\n        /**\n         * The instance type.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-instancetype\n         */\n        readonly instanceType?: string;\n        /**\n         * The ID of the kernel.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-kernelid\n         */\n        readonly kernelId?: string;\n        /**\n         * The name of the key pair.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-keyname\n         */\n        readonly keyName?: string;\n        /**\n         * Enable or disable monitoring for the instances.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-monitoring\n         */\n        readonly monitoring?: CfnSpotFleet.SpotFleetMonitoringProperty | cdk.IResolvable;\n        /**\n         * One or more network interfaces. If you specify a network interface, you must specify subnet IDs and security group IDs using the network interface.\n         *\n         * > `SpotFleetLaunchSpecification` currently does not support Elastic Fabric Adapter (EFA). To specify an EFA, you must use [LaunchTemplateConfig](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_LaunchTemplateConfig.html) .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-networkinterfaces\n         */\n        readonly networkInterfaces?: Array<CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * The placement information.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-placement\n         */\n        readonly placement?: CfnSpotFleet.SpotPlacementProperty | cdk.IResolvable;\n        /**\n         * The ID of the RAM disk. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, refer to the AWS Resource Center and search for the kernel ID.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-ramdiskid\n         */\n        readonly ramdiskId?: string;\n        /**\n         * One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-securitygroups\n         */\n        readonly securityGroups?: Array<CfnSpotFleet.GroupIdentifierProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * The maximum price per unit hour that you are willing to pay for a Spot Instance. If this value is not specified, the default is the Spot price specified for the fleet. To determine the Spot price per unit hour, divide the Spot price by the value of `WeightedCapacity` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-spotprice\n         */\n        readonly spotPrice?: string;\n        /**\n         * The IDs of the subnets in which to launch the instances. To specify multiple subnets, separate them using commas; for example, \"subnet-1234abcdeexample1, subnet-0987cdef6example2\".\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-subnetid\n         */\n        readonly subnetId?: string;\n        /**\n         * The tags to apply during creation.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-tagspecifications\n         */\n        readonly tagSpecifications?: Array<CfnSpotFleet.SpotFleetTagSpecificationProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * The Base64-encoded user data that instances use when starting up.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-userdata\n         */\n        readonly userData?: string;\n        /**\n         * The number of units provided by the specified instance type. These are the same units that you chose to set the target capacity in terms of instances, or a performance characteristic such as vCPUs, memory, or I/O.\n         *\n         * If the target capacity divided by this value is not a whole number, Amazon EC2 rounds the number of instances to the next whole number. If this value is not specified, the default is 1.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-weightedcapacity\n         */\n        readonly weightedCapacity?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `SpotFleetLaunchSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `SpotFleetLaunchSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleet_SpotFleetLaunchSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('blockDeviceMappings', cdk.listValidator(CfnSpotFleet_BlockDeviceMappingPropertyValidator))(properties.blockDeviceMappings));\n    errors.collect(cdk.propertyValidator('ebsOptimized', cdk.validateBoolean)(properties.ebsOptimized));\n    errors.collect(cdk.propertyValidator('iamInstanceProfile', CfnSpotFleet_IamInstanceProfileSpecificationPropertyValidator)(properties.iamInstanceProfile));\n    errors.collect(cdk.propertyValidator('imageId', cdk.requiredValidator)(properties.imageId));\n    errors.collect(cdk.propertyValidator('imageId', cdk.validateString)(properties.imageId));\n    errors.collect(cdk.propertyValidator('instanceRequirements', CfnSpotFleet_InstanceRequirementsRequestPropertyValidator)(properties.instanceRequirements));\n    errors.collect(cdk.propertyValidator('instanceType', cdk.validateString)(properties.instanceType));\n    errors.collect(cdk.propertyValidator('kernelId', cdk.validateString)(properties.kernelId));\n    errors.collect(cdk.propertyValidator('keyName', cdk.validateString)(properties.keyName));\n    errors.collect(cdk.propertyValidator('monitoring', CfnSpotFleet_SpotFleetMonitoringPropertyValidator)(properties.monitoring));\n    errors.collect(cdk.propertyValidator('networkInterfaces', cdk.listValidator(CfnSpotFleet_InstanceNetworkInterfaceSpecificationPropertyValidator))(properties.networkInterfaces));\n    errors.collect(cdk.propertyValidator('placement', CfnSpotFleet_SpotPlacementPropertyValidator)(properties.placement));\n    errors.collect(cdk.propertyValidator('ramdiskId', cdk.validateString)(properties.ramdiskId));\n    errors.collect(cdk.propertyValidator('securityGroups', cdk.listValidator(CfnSpotFleet_GroupIdentifierPropertyValidator))(properties.securityGroups));\n    errors.collect(cdk.propertyValidator('spotPrice', cdk.validateString)(properties.spotPrice));\n    errors.collect(cdk.propertyValidator('subnetId', cdk.validateString)(properties.subnetId));\n    errors.collect(cdk.propertyValidator('tagSpecifications', cdk.listValidator(CfnSpotFleet_SpotFleetTagSpecificationPropertyValidator))(properties.tagSpecifications));\n    errors.collect(cdk.propertyValidator('userData', cdk.validateString)(properties.userData));\n    errors.collect(cdk.propertyValidator('weightedCapacity', cdk.validateNumber)(properties.weightedCapacity));\n    return errors.wrap('supplied properties not correct for \"SpotFleetLaunchSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.SpotFleetLaunchSpecification` resource\n *\n * @param properties - the TypeScript properties of a `SpotFleetLaunchSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.SpotFleetLaunchSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetSpotFleetLaunchSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleet_SpotFleetLaunchSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        BlockDeviceMappings: cdk.listMapper(cfnSpotFleetBlockDeviceMappingPropertyToCloudFormation)(properties.blockDeviceMappings),\n        EbsOptimized: cdk.booleanToCloudFormation(properties.ebsOptimized),\n        IamInstanceProfile: cfnSpotFleetIamInstanceProfileSpecificationPropertyToCloudFormation(properties.iamInstanceProfile),\n        ImageId: cdk.stringToCloudFormation(properties.imageId),\n        InstanceRequirements: cfnSpotFleetInstanceRequirementsRequestPropertyToCloudFormation(properties.instanceRequirements),\n        InstanceType: cdk.stringToCloudFormation(properties.instanceType),\n        KernelId: cdk.stringToCloudFormation(properties.kernelId),\n        KeyName: cdk.stringToCloudFormation(properties.keyName),\n        Monitoring: cfnSpotFleetSpotFleetMonitoringPropertyToCloudFormation(properties.monitoring),\n        NetworkInterfaces: cdk.listMapper(cfnSpotFleetInstanceNetworkInterfaceSpecificationPropertyToCloudFormation)(properties.networkInterfaces),\n        Placement: cfnSpotFleetSpotPlacementPropertyToCloudFormation(properties.placement),\n        RamdiskId: cdk.stringToCloudFormation(properties.ramdiskId),\n        SecurityGroups: cdk.listMapper(cfnSpotFleetGroupIdentifierPropertyToCloudFormation)(properties.securityGroups),\n        SpotPrice: cdk.stringToCloudFormation(properties.spotPrice),\n        SubnetId: cdk.stringToCloudFormation(properties.subnetId),\n        TagSpecifications: cdk.listMapper(cfnSpotFleetSpotFleetTagSpecificationPropertyToCloudFormation)(properties.tagSpecifications),\n        UserData: cdk.stringToCloudFormation(properties.userData),\n        WeightedCapacity: cdk.numberToCloudFormation(properties.weightedCapacity),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetSpotFleetLaunchSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleet.SpotFleetLaunchSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleet.SpotFleetLaunchSpecificationProperty>();\n    ret.addPropertyResult('blockDeviceMappings', 'BlockDeviceMappings', properties.BlockDeviceMappings != null ? cfn_parse.FromCloudFormation.getArray(CfnSpotFleetBlockDeviceMappingPropertyFromCloudFormation)(properties.BlockDeviceMappings) : undefined);\n    ret.addPropertyResult('ebsOptimized', 'EbsOptimized', properties.EbsOptimized != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EbsOptimized) : undefined);\n    ret.addPropertyResult('iamInstanceProfile', 'IamInstanceProfile', properties.IamInstanceProfile != null ? CfnSpotFleetIamInstanceProfileSpecificationPropertyFromCloudFormation(properties.IamInstanceProfile) : undefined);\n    ret.addPropertyResult('imageId', 'ImageId', cfn_parse.FromCloudFormation.getString(properties.ImageId));\n    ret.addPropertyResult('instanceRequirements', 'InstanceRequirements', properties.InstanceRequirements != null ? CfnSpotFleetInstanceRequirementsRequestPropertyFromCloudFormation(properties.InstanceRequirements) : undefined);\n    ret.addPropertyResult('instanceType', 'InstanceType', properties.InstanceType != null ? cfn_parse.FromCloudFormation.getString(properties.InstanceType) : undefined);\n    ret.addPropertyResult('kernelId', 'KernelId', properties.KernelId != null ? cfn_parse.FromCloudFormation.getString(properties.KernelId) : undefined);\n    ret.addPropertyResult('keyName', 'KeyName', properties.KeyName != null ? cfn_parse.FromCloudFormation.getString(properties.KeyName) : undefined);\n    ret.addPropertyResult('monitoring', 'Monitoring', properties.Monitoring != null ? CfnSpotFleetSpotFleetMonitoringPropertyFromCloudFormation(properties.Monitoring) : undefined);\n    ret.addPropertyResult('networkInterfaces', 'NetworkInterfaces', properties.NetworkInterfaces != null ? cfn_parse.FromCloudFormation.getArray(CfnSpotFleetInstanceNetworkInterfaceSpecificationPropertyFromCloudFormation)(properties.NetworkInterfaces) : undefined);\n    ret.addPropertyResult('placement', 'Placement', properties.Placement != null ? CfnSpotFleetSpotPlacementPropertyFromCloudFormation(properties.Placement) : undefined);\n    ret.addPropertyResult('ramdiskId', 'RamdiskId', properties.RamdiskId != null ? cfn_parse.FromCloudFormation.getString(properties.RamdiskId) : undefined);\n    ret.addPropertyResult('securityGroups', 'SecurityGroups', properties.SecurityGroups != null ? cfn_parse.FromCloudFormation.getArray(CfnSpotFleetGroupIdentifierPropertyFromCloudFormation)(properties.SecurityGroups) : undefined);\n    ret.addPropertyResult('spotPrice', 'SpotPrice', properties.SpotPrice != null ? cfn_parse.FromCloudFormation.getString(properties.SpotPrice) : undefined);\n    ret.addPropertyResult('subnetId', 'SubnetId', properties.SubnetId != null ? cfn_parse.FromCloudFormation.getString(properties.SubnetId) : undefined);\n    ret.addPropertyResult('tagSpecifications', 'TagSpecifications', properties.TagSpecifications != null ? cfn_parse.FromCloudFormation.getArray(CfnSpotFleetSpotFleetTagSpecificationPropertyFromCloudFormation)(properties.TagSpecifications) : undefined);\n    ret.addPropertyResult('userData', 'UserData', properties.UserData != null ? cfn_parse.FromCloudFormation.getString(properties.UserData) : undefined);\n    ret.addPropertyResult('weightedCapacity', 'WeightedCapacity', properties.WeightedCapacity != null ? cfn_parse.FromCloudFormation.getNumber(properties.WeightedCapacity) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSpotFleet {\n    /**\n     * Describes whether monitoring is enabled.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetmonitoring.html\n     */\n    export interface SpotFleetMonitoringProperty {\n        /**\n         * Enables monitoring for the instance.\n         *\n         * Default: `false`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetmonitoring.html#cfn-ec2-spotfleet-spotfleetmonitoring-enabled\n         */\n        readonly enabled?: boolean | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `SpotFleetMonitoringProperty`\n *\n * @param properties - the TypeScript properties of a `SpotFleetMonitoringProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleet_SpotFleetMonitoringPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('enabled', cdk.validateBoolean)(properties.enabled));\n    return errors.wrap('supplied properties not correct for \"SpotFleetMonitoringProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.SpotFleetMonitoring` resource\n *\n * @param properties - the TypeScript properties of a `SpotFleetMonitoringProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.SpotFleetMonitoring` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetSpotFleetMonitoringPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleet_SpotFleetMonitoringPropertyValidator(properties).assertSuccess();\n    return {\n        Enabled: cdk.booleanToCloudFormation(properties.enabled),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetSpotFleetMonitoringPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleet.SpotFleetMonitoringProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleet.SpotFleetMonitoringProperty>();\n    ret.addPropertyResult('enabled', 'Enabled', properties.Enabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.Enabled) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSpotFleet {\n    /**\n     * Specifies the configuration of a Spot Fleet request. For more information, see [How Spot Fleet Works](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet.html) in the *Amazon EC2 User Guide for Linux Instances* .\n     *\n     * You must specify either `LaunchSpecifications` or `LaunchTemplateConfigs` .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html\n     */\n    export interface SpotFleetRequestConfigDataProperty {\n        /**\n         * Indicates how to allocate the target Spot Instance capacity across the Spot Instance pools specified by the Spot Fleet request.\n         *\n         * If the allocation strategy is `lowestPrice` , Spot Fleet launches instances from the Spot Instance pools with the lowest price. This is the default allocation strategy.\n         *\n         * If the allocation strategy is `diversified` , Spot Fleet launches instances from all the Spot Instance pools that you specify.\n         *\n         * If the allocation strategy is `capacityOptimized` (recommended), Spot Fleet launches instances from Spot Instance pools with optimal capacity for the number of instances that are launching. To give certain instance types a higher chance of launching first, use `capacityOptimizedPrioritized` . Set a priority for each instance type by using the `Priority` parameter for `LaunchTemplateOverrides` . You can assign the same priority to different `LaunchTemplateOverrides` . EC2 implements the priorities on a best-effort basis, but optimizes for capacity first. `capacityOptimizedPrioritized` is supported only if your Spot Fleet uses a launch template. Note that if the `OnDemandAllocationStrategy` is set to `prioritized` , the same priority is applied when fulfilling On-Demand capacity.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-allocationstrategy\n         */\n        readonly allocationStrategy?: string;\n        /**\n         * Reserved.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-context\n         */\n        readonly context?: string;\n        /**\n         * Indicates whether running Spot Instances should be terminated if you decrease the target capacity of the Spot Fleet request below the current size of the Spot Fleet.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-excesscapacityterminationpolicy\n         */\n        readonly excessCapacityTerminationPolicy?: string;\n        /**\n         * The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that grants the Spot Fleet the permission to request, launch, terminate, and tag instances on your behalf. For more information, see [Spot Fleet Prerequisites](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-requests.html#spot-fleet-prerequisites) in the *Amazon EC2 User Guide for Linux Instances* . Spot Fleet can terminate Spot Instances on your behalf when you cancel its Spot Fleet request or when the Spot Fleet request expires, if you set `TerminateInstancesWithExpiration` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-iamfleetrole\n         */\n        readonly iamFleetRole: string;\n        /**\n         * The behavior when a Spot Instance is interrupted. The default is `terminate` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-instanceinterruptionbehavior\n         */\n        readonly instanceInterruptionBehavior?: string;\n        /**\n         * The number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot *AllocationStrategy* is set to `lowest-price` . Spot Fleet selects the cheapest Spot pools and evenly allocates your target Spot capacity across the number of Spot pools that you specify.\n         *\n         * Note that Spot Fleet attempts to draw Spot Instances from the number of pools that you specify on a best effort basis. If a pool runs out of Spot capacity before fulfilling your target capacity, Spot Fleet will continue to fulfill your request by drawing from the next cheapest pool. To ensure that your target capacity is met, you might receive Spot Instances from more than the number of pools that you specified. Similarly, if most of the pools have no Spot capacity, you might receive your full target capacity from fewer than the number of pools that you specified.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-instancepoolstousecount\n         */\n        readonly instancePoolsToUseCount?: number;\n        /**\n         * The launch specifications for the Spot Fleet request. If you specify `LaunchSpecifications` , you can't specify `LaunchTemplateConfigs` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications\n         */\n        readonly launchSpecifications?: Array<CfnSpotFleet.SpotFleetLaunchSpecificationProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * The launch template and overrides. If you specify `LaunchTemplateConfigs` , you can't specify `LaunchSpecifications` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-launchtemplateconfigs\n         */\n        readonly launchTemplateConfigs?: Array<CfnSpotFleet.LaunchTemplateConfigProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * One or more Classic Load Balancers and target groups to attach to the Spot Fleet request. Spot Fleet registers the running Spot Instances with the specified Classic Load Balancers and target groups.\n         *\n         * With Network Load Balancers, Spot Fleet cannot register instances that have the following instance types: C1, CC1, CC2, CG1, CG2, CR1, CS1, G1, G2, HI1, HS1, M1, M2, M3, and T1.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-loadbalancersconfig\n         */\n        readonly loadBalancersConfig?: CfnSpotFleet.LoadBalancersConfigProperty | cdk.IResolvable;\n        /**\n         * The order of the launch template overrides to use in fulfilling On-Demand capacity. If you specify `lowestPrice` , Spot Fleet uses price to determine the order, launching the lowest price first. If you specify `prioritized` , Spot Fleet uses the priority that you assign to each Spot Fleet launch template override, launching the highest priority first. If you do not specify a value, Spot Fleet defaults to `lowestPrice` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-ondemandallocationstrategy\n         */\n        readonly onDemandAllocationStrategy?: string;\n        /**\n         * The maximum amount per hour for On-Demand Instances that you're willing to pay. You can use the `onDemandMaxTotalPrice` parameter, the `spotMaxTotalPrice` parameter, or both parameters to ensure that your fleet cost does not exceed your budget. If you set a maximum price per hour for the On-Demand Instances and Spot Instances in your request, Spot Fleet will launch instances until it reaches the maximum amount you're willing to pay. When the maximum amount you're willing to pay is reached, the fleet stops launching instances even if it hasn\u2019t met the target capacity.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-ondemandmaxtotalprice\n         */\n        readonly onDemandMaxTotalPrice?: string;\n        /**\n         * The number of On-Demand units to request. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is `maintain` , you can specify a target capacity of 0 and add capacity later.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-ondemandtargetcapacity\n         */\n        readonly onDemandTargetCapacity?: number;\n        /**\n         * Indicates whether Spot Fleet should replace unhealthy instances.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-replaceunhealthyinstances\n         */\n        readonly replaceUnhealthyInstances?: boolean | cdk.IResolvable;\n        /**\n         * The strategies for managing your Spot Instances that are at an elevated risk of being interrupted.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-spotmaintenancestrategies\n         */\n        readonly spotMaintenanceStrategies?: CfnSpotFleet.SpotMaintenanceStrategiesProperty | cdk.IResolvable;\n        /**\n         * The maximum amount per hour for Spot Instances that you're willing to pay. You can use the `spotdMaxTotalPrice` parameter, the `onDemandMaxTotalPrice` parameter, or both parameters to ensure that your fleet cost does not exceed your budget. If you set a maximum price per hour for the On-Demand Instances and Spot Instances in your request, Spot Fleet will launch instances until it reaches the maximum amount you're willing to pay. When the maximum amount you're willing to pay is reached, the fleet stops launching instances even if it hasn\u2019t met the target capacity.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-spotmaxtotalprice\n         */\n        readonly spotMaxTotalPrice?: string;\n        /**\n         * The maximum price per unit hour that you are willing to pay for a Spot Instance. The default is the On-Demand price.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-spotprice\n         */\n        readonly spotPrice?: string;\n        /**\n         * The number of units to request for the Spot Fleet. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is `maintain` , you can specify a target capacity of 0 and add capacity later.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-targetcapacity\n         */\n        readonly targetCapacity: number;\n        /**\n         * The unit for the target capacity.\n         *\n         * Default: `units` (translates to number of instances)\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-targetcapacityunittype\n         */\n        readonly targetCapacityUnitType?: string;\n        /**\n         * Indicates whether running Spot Instances are terminated when the Spot Fleet request expires.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-terminateinstanceswithexpiration\n         */\n        readonly terminateInstancesWithExpiration?: boolean | cdk.IResolvable;\n        /**\n         * The type of request. Indicates whether the Spot Fleet only requests the target capacity or also attempts to maintain it. When this value is `request` , the Spot Fleet only places the required requests. It does not attempt to replenish Spot Instances if capacity is diminished, nor does it submit requests in alternative Spot pools if capacity is not available. When this value is `maintain` , the Spot Fleet maintains the target capacity. The Spot Fleet places the required requests to meet capacity and automatically replenishes any interrupted instances. Default: `maintain` . `instant` is listed but is not used by Spot Fleet.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-type\n         */\n        readonly type?: string;\n        /**\n         * The start date and time of the request, in UTC format ( *YYYY* - *MM* - *DD* T *HH* : *MM* : *SS* Z). By default, Amazon EC2 starts fulfilling the request immediately.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-validfrom\n         */\n        readonly validFrom?: string;\n        /**\n         * The end date and time of the request, in UTC format ( *YYYY* - *MM* - *DD* T *HH* : *MM* : *SS* Z). After the end date and time, no new Spot Instance requests are placed or able to fulfill the request. If no value is specified, the Spot Fleet request remains until you cancel it.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-validuntil\n         */\n        readonly validUntil?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `SpotFleetRequestConfigDataProperty`\n *\n * @param properties - the TypeScript properties of a `SpotFleetRequestConfigDataProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleet_SpotFleetRequestConfigDataPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('allocationStrategy', cdk.validateString)(properties.allocationStrategy));\n    errors.collect(cdk.propertyValidator('context', cdk.validateString)(properties.context));\n    errors.collect(cdk.propertyValidator('excessCapacityTerminationPolicy', cdk.validateString)(properties.excessCapacityTerminationPolicy));\n    errors.collect(cdk.propertyValidator('iamFleetRole', cdk.requiredValidator)(properties.iamFleetRole));\n    errors.collect(cdk.propertyValidator('iamFleetRole', cdk.validateString)(properties.iamFleetRole));\n    errors.collect(cdk.propertyValidator('instanceInterruptionBehavior', cdk.validateString)(properties.instanceInterruptionBehavior));\n    errors.collect(cdk.propertyValidator('instancePoolsToUseCount', cdk.validateNumber)(properties.instancePoolsToUseCount));\n    errors.collect(cdk.propertyValidator('launchSpecifications', cdk.listValidator(CfnSpotFleet_SpotFleetLaunchSpecificationPropertyValidator))(properties.launchSpecifications));\n    errors.collect(cdk.propertyValidator('launchTemplateConfigs', cdk.listValidator(CfnSpotFleet_LaunchTemplateConfigPropertyValidator))(properties.launchTemplateConfigs));\n    errors.collect(cdk.propertyValidator('loadBalancersConfig', CfnSpotFleet_LoadBalancersConfigPropertyValidator)(properties.loadBalancersConfig));\n    errors.collect(cdk.propertyValidator('onDemandAllocationStrategy', cdk.validateString)(properties.onDemandAllocationStrategy));\n    errors.collect(cdk.propertyValidator('onDemandMaxTotalPrice', cdk.validateString)(properties.onDemandMaxTotalPrice));\n    errors.collect(cdk.propertyValidator('onDemandTargetCapacity', cdk.validateNumber)(properties.onDemandTargetCapacity));\n    errors.collect(cdk.propertyValidator('replaceUnhealthyInstances', cdk.validateBoolean)(properties.replaceUnhealthyInstances));\n    errors.collect(cdk.propertyValidator('spotMaintenanceStrategies', CfnSpotFleet_SpotMaintenanceStrategiesPropertyValidator)(properties.spotMaintenanceStrategies));\n    errors.collect(cdk.propertyValidator('spotMaxTotalPrice', cdk.validateString)(properties.spotMaxTotalPrice));\n    errors.collect(cdk.propertyValidator('spotPrice', cdk.validateString)(properties.spotPrice));\n    errors.collect(cdk.propertyValidator('targetCapacity', cdk.requiredValidator)(properties.targetCapacity));\n    errors.collect(cdk.propertyValidator('targetCapacity', cdk.validateNumber)(properties.targetCapacity));\n    errors.collect(cdk.propertyValidator('targetCapacityUnitType', cdk.validateString)(properties.targetCapacityUnitType));\n    errors.collect(cdk.propertyValidator('terminateInstancesWithExpiration', cdk.validateBoolean)(properties.terminateInstancesWithExpiration));\n    errors.collect(cdk.propertyValidator('type', cdk.validateString)(properties.type));\n    errors.collect(cdk.propertyValidator('validFrom', cdk.validateString)(properties.validFrom));\n    errors.collect(cdk.propertyValidator('validUntil', cdk.validateString)(properties.validUntil));\n    return errors.wrap('supplied properties not correct for \"SpotFleetRequestConfigDataProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.SpotFleetRequestConfigData` resource\n *\n * @param properties - the TypeScript properties of a `SpotFleetRequestConfigDataProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.SpotFleetRequestConfigData` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetSpotFleetRequestConfigDataPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleet_SpotFleetRequestConfigDataPropertyValidator(properties).assertSuccess();\n    return {\n        AllocationStrategy: cdk.stringToCloudFormation(properties.allocationStrategy),\n        Context: cdk.stringToCloudFormation(properties.context),\n        ExcessCapacityTerminationPolicy: cdk.stringToCloudFormation(properties.excessCapacityTerminationPolicy),\n        IamFleetRole: cdk.stringToCloudFormation(properties.iamFleetRole),\n        InstanceInterruptionBehavior: cdk.stringToCloudFormation(properties.instanceInterruptionBehavior),\n        InstancePoolsToUseCount: cdk.numberToCloudFormation(properties.instancePoolsToUseCount),\n        LaunchSpecifications: cdk.listMapper(cfnSpotFleetSpotFleetLaunchSpecificationPropertyToCloudFormation)(properties.launchSpecifications),\n        LaunchTemplateConfigs: cdk.listMapper(cfnSpotFleetLaunchTemplateConfigPropertyToCloudFormation)(properties.launchTemplateConfigs),\n        LoadBalancersConfig: cfnSpotFleetLoadBalancersConfigPropertyToCloudFormation(properties.loadBalancersConfig),\n        OnDemandAllocationStrategy: cdk.stringToCloudFormation(properties.onDemandAllocationStrategy),\n        OnDemandMaxTotalPrice: cdk.stringToCloudFormation(properties.onDemandMaxTotalPrice),\n        OnDemandTargetCapacity: cdk.numberToCloudFormation(properties.onDemandTargetCapacity),\n        ReplaceUnhealthyInstances: cdk.booleanToCloudFormation(properties.replaceUnhealthyInstances),\n        SpotMaintenanceStrategies: cfnSpotFleetSpotMaintenanceStrategiesPropertyToCloudFormation(properties.spotMaintenanceStrategies),\n        SpotMaxTotalPrice: cdk.stringToCloudFormation(properties.spotMaxTotalPrice),\n        SpotPrice: cdk.stringToCloudFormation(properties.spotPrice),\n        TargetCapacity: cdk.numberToCloudFormation(properties.targetCapacity),\n        TargetCapacityUnitType: cdk.stringToCloudFormation(properties.targetCapacityUnitType),\n        TerminateInstancesWithExpiration: cdk.booleanToCloudFormation(properties.terminateInstancesWithExpiration),\n        Type: cdk.stringToCloudFormation(properties.type),\n        ValidFrom: cdk.stringToCloudFormation(properties.validFrom),\n        ValidUntil: cdk.stringToCloudFormation(properties.validUntil),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetSpotFleetRequestConfigDataPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleet.SpotFleetRequestConfigDataProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleet.SpotFleetRequestConfigDataProperty>();\n    ret.addPropertyResult('allocationStrategy', 'AllocationStrategy', properties.AllocationStrategy != null ? cfn_parse.FromCloudFormation.getString(properties.AllocationStrategy) : undefined);\n    ret.addPropertyResult('context', 'Context', properties.Context != null ? cfn_parse.FromCloudFormation.getString(properties.Context) : undefined);\n    ret.addPropertyResult('excessCapacityTerminationPolicy', 'ExcessCapacityTerminationPolicy', properties.ExcessCapacityTerminationPolicy != null ? cfn_parse.FromCloudFormation.getString(properties.ExcessCapacityTerminationPolicy) : undefined);\n    ret.addPropertyResult('iamFleetRole', 'IamFleetRole', cfn_parse.FromCloudFormation.getString(properties.IamFleetRole));\n    ret.addPropertyResult('instanceInterruptionBehavior', 'InstanceInterruptionBehavior', properties.InstanceInterruptionBehavior != null ? cfn_parse.FromCloudFormation.getString(properties.InstanceInterruptionBehavior) : undefined);\n    ret.addPropertyResult('instancePoolsToUseCount', 'InstancePoolsToUseCount', properties.InstancePoolsToUseCount != null ? cfn_parse.FromCloudFormation.getNumber(properties.InstancePoolsToUseCount) : undefined);\n    ret.addPropertyResult('launchSpecifications', 'LaunchSpecifications', properties.LaunchSpecifications != null ? cfn_parse.FromCloudFormation.getArray(CfnSpotFleetSpotFleetLaunchSpecificationPropertyFromCloudFormation)(properties.LaunchSpecifications) : undefined);\n    ret.addPropertyResult('launchTemplateConfigs', 'LaunchTemplateConfigs', properties.LaunchTemplateConfigs != null ? cfn_parse.FromCloudFormation.getArray(CfnSpotFleetLaunchTemplateConfigPropertyFromCloudFormation)(properties.LaunchTemplateConfigs) : undefined);\n    ret.addPropertyResult('loadBalancersConfig', 'LoadBalancersConfig', properties.LoadBalancersConfig != null ? CfnSpotFleetLoadBalancersConfigPropertyFromCloudFormation(properties.LoadBalancersConfig) : undefined);\n    ret.addPropertyResult('onDemandAllocationStrategy', 'OnDemandAllocationStrategy', properties.OnDemandAllocationStrategy != null ? cfn_parse.FromCloudFormation.getString(properties.OnDemandAllocationStrategy) : undefined);\n    ret.addPropertyResult('onDemandMaxTotalPrice', 'OnDemandMaxTotalPrice', properties.OnDemandMaxTotalPrice != null ? cfn_parse.FromCloudFormation.getString(properties.OnDemandMaxTotalPrice) : undefined);\n    ret.addPropertyResult('onDemandTargetCapacity', 'OnDemandTargetCapacity', properties.OnDemandTargetCapacity != null ? cfn_parse.FromCloudFormation.getNumber(properties.OnDemandTargetCapacity) : undefined);\n    ret.addPropertyResult('replaceUnhealthyInstances', 'ReplaceUnhealthyInstances', properties.ReplaceUnhealthyInstances != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ReplaceUnhealthyInstances) : undefined);\n    ret.addPropertyResult('spotMaintenanceStrategies', 'SpotMaintenanceStrategies', properties.SpotMaintenanceStrategies != null ? CfnSpotFleetSpotMaintenanceStrategiesPropertyFromCloudFormation(properties.SpotMaintenanceStrategies) : undefined);\n    ret.addPropertyResult('spotMaxTotalPrice', 'SpotMaxTotalPrice', properties.SpotMaxTotalPrice != null ? cfn_parse.FromCloudFormation.getString(properties.SpotMaxTotalPrice) : undefined);\n    ret.addPropertyResult('spotPrice', 'SpotPrice', properties.SpotPrice != null ? cfn_parse.FromCloudFormation.getString(properties.SpotPrice) : undefined);\n    ret.addPropertyResult('targetCapacity', 'TargetCapacity', cfn_parse.FromCloudFormation.getNumber(properties.TargetCapacity));\n    ret.addPropertyResult('targetCapacityUnitType', 'TargetCapacityUnitType', properties.TargetCapacityUnitType != null ? cfn_parse.FromCloudFormation.getString(properties.TargetCapacityUnitType) : undefined);\n    ret.addPropertyResult('terminateInstancesWithExpiration', 'TerminateInstancesWithExpiration', properties.TerminateInstancesWithExpiration != null ? cfn_parse.FromCloudFormation.getBoolean(properties.TerminateInstancesWithExpiration) : undefined);\n    ret.addPropertyResult('type', 'Type', properties.Type != null ? cfn_parse.FromCloudFormation.getString(properties.Type) : undefined);\n    ret.addPropertyResult('validFrom', 'ValidFrom', properties.ValidFrom != null ? cfn_parse.FromCloudFormation.getString(properties.ValidFrom) : undefined);\n    ret.addPropertyResult('validUntil', 'ValidUntil', properties.ValidUntil != null ? cfn_parse.FromCloudFormation.getString(properties.ValidUntil) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSpotFleet {\n    /**\n     * The tags for a Spot Fleet resource.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleettagspecification.html\n     */\n    export interface SpotFleetTagSpecificationProperty {\n        /**\n         * The type of resource. Currently, the only resource type that is supported is `instance` . To tag the Spot Fleet request on creation, use the `TagSpecifications` parameter in [`SpotFleetRequestConfigData`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SpotFleetRequestConfigData.html) .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleettagspecification.html#cfn-ec2-spotfleet-spotfleettagspecification-resourcetype\n         */\n        readonly resourceType?: string;\n        /**\n         * The tags.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleettagspecification.html#cfn-ec2-spotfleet-spotfleettagspecification-tags\n         */\n        readonly tags?: cdk.CfnTag[];\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `SpotFleetTagSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `SpotFleetTagSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleet_SpotFleetTagSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('resourceType', cdk.validateString)(properties.resourceType));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"SpotFleetTagSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.SpotFleetTagSpecification` resource\n *\n * @param properties - the TypeScript properties of a `SpotFleetTagSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.SpotFleetTagSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetSpotFleetTagSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleet_SpotFleetTagSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        ResourceType: cdk.stringToCloudFormation(properties.resourceType),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetSpotFleetTagSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleet.SpotFleetTagSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleet.SpotFleetTagSpecificationProperty>();\n    ret.addPropertyResult('resourceType', 'ResourceType', properties.ResourceType != null ? cfn_parse.FromCloudFormation.getString(properties.ResourceType) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSpotFleet {\n    /**\n     * The strategies for managing your Spot Instances that are at an elevated risk of being interrupted.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotmaintenancestrategies.html\n     */\n    export interface SpotMaintenanceStrategiesProperty {\n        /**\n         * The Spot Instance replacement strategy to use when Amazon EC2 emits a signal that your Spot Instance is at an elevated risk of being interrupted. For more information, see [Capacity rebalancing](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-capacity-rebalance.html) in the *Amazon EC2 User Guide for Linux Instances* .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotmaintenancestrategies.html#cfn-ec2-spotfleet-spotmaintenancestrategies-capacityrebalance\n         */\n        readonly capacityRebalance?: CfnSpotFleet.SpotCapacityRebalanceProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `SpotMaintenanceStrategiesProperty`\n *\n * @param properties - the TypeScript properties of a `SpotMaintenanceStrategiesProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleet_SpotMaintenanceStrategiesPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('capacityRebalance', CfnSpotFleet_SpotCapacityRebalancePropertyValidator)(properties.capacityRebalance));\n    return errors.wrap('supplied properties not correct for \"SpotMaintenanceStrategiesProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.SpotMaintenanceStrategies` resource\n *\n * @param properties - the TypeScript properties of a `SpotMaintenanceStrategiesProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.SpotMaintenanceStrategies` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetSpotMaintenanceStrategiesPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleet_SpotMaintenanceStrategiesPropertyValidator(properties).assertSuccess();\n    return {\n        CapacityRebalance: cfnSpotFleetSpotCapacityRebalancePropertyToCloudFormation(properties.capacityRebalance),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetSpotMaintenanceStrategiesPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleet.SpotMaintenanceStrategiesProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleet.SpotMaintenanceStrategiesProperty>();\n    ret.addPropertyResult('capacityRebalance', 'CapacityRebalance', properties.CapacityRebalance != null ? CfnSpotFleetSpotCapacityRebalancePropertyFromCloudFormation(properties.CapacityRebalance) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSpotFleet {\n    /**\n     * Describes Spot Instance placement.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotplacement.html\n     */\n    export interface SpotPlacementProperty {\n        /**\n         * The Availability Zone.\n         *\n         * To specify multiple Availability Zones, separate them using commas; for example, \"us-west-2a, us-west-2b\".\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotplacement.html#cfn-ec2-spotfleet-spotplacement-availabilityzone\n         */\n        readonly availabilityZone?: string;\n        /**\n         * The name of the placement group.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotplacement.html#cfn-ec2-spotfleet-spotplacement-groupname\n         */\n        readonly groupName?: string;\n        /**\n         * The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of `dedicated` runs on single-tenant hardware. The `host` tenancy is not supported for Spot Instances.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotplacement.html#cfn-ec2-spotfleet-spotplacement-tenancy\n         */\n        readonly tenancy?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `SpotPlacementProperty`\n *\n * @param properties - the TypeScript properties of a `SpotPlacementProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleet_SpotPlacementPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('availabilityZone', cdk.validateString)(properties.availabilityZone));\n    errors.collect(cdk.propertyValidator('groupName', cdk.validateString)(properties.groupName));\n    errors.collect(cdk.propertyValidator('tenancy', cdk.validateString)(properties.tenancy));\n    return errors.wrap('supplied properties not correct for \"SpotPlacementProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.SpotPlacement` resource\n *\n * @param properties - the TypeScript properties of a `SpotPlacementProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.SpotPlacement` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetSpotPlacementPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleet_SpotPlacementPropertyValidator(properties).assertSuccess();\n    return {\n        AvailabilityZone: cdk.stringToCloudFormation(properties.availabilityZone),\n        GroupName: cdk.stringToCloudFormation(properties.groupName),\n        Tenancy: cdk.stringToCloudFormation(properties.tenancy),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetSpotPlacementPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleet.SpotPlacementProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleet.SpotPlacementProperty>();\n    ret.addPropertyResult('availabilityZone', 'AvailabilityZone', properties.AvailabilityZone != null ? cfn_parse.FromCloudFormation.getString(properties.AvailabilityZone) : undefined);\n    ret.addPropertyResult('groupName', 'GroupName', properties.GroupName != null ? cfn_parse.FromCloudFormation.getString(properties.GroupName) : undefined);\n    ret.addPropertyResult('tenancy', 'Tenancy', properties.Tenancy != null ? cfn_parse.FromCloudFormation.getString(properties.Tenancy) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSpotFleet {\n    /**\n     * Describes a load balancer target group.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-targetgroup.html\n     */\n    export interface TargetGroupProperty {\n        /**\n         * The Amazon Resource Name (ARN) of the target group.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-targetgroup.html#cfn-ec2-spotfleet-targetgroup-arn\n         */\n        readonly arn: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `TargetGroupProperty`\n *\n * @param properties - the TypeScript properties of a `TargetGroupProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleet_TargetGroupPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('arn', cdk.requiredValidator)(properties.arn));\n    errors.collect(cdk.propertyValidator('arn', cdk.validateString)(properties.arn));\n    return errors.wrap('supplied properties not correct for \"TargetGroupProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.TargetGroup` resource\n *\n * @param properties - the TypeScript properties of a `TargetGroupProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.TargetGroup` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetTargetGroupPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleet_TargetGroupPropertyValidator(properties).assertSuccess();\n    return {\n        Arn: cdk.stringToCloudFormation(properties.arn),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetTargetGroupPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleet.TargetGroupProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleet.TargetGroupProperty>();\n    ret.addPropertyResult('arn', 'Arn', cfn_parse.FromCloudFormation.getString(properties.Arn));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSpotFleet {\n    /**\n     * Describes the target groups to attach to a Spot Fleet. Spot Fleet registers the running Spot Instances with these target groups.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-targetgroupsconfig.html\n     */\n    export interface TargetGroupsConfigProperty {\n        /**\n         * One or more target groups.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-targetgroupsconfig.html#cfn-ec2-spotfleet-targetgroupsconfig-targetgroups\n         */\n        readonly targetGroups: Array<CfnSpotFleet.TargetGroupProperty | cdk.IResolvable> | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `TargetGroupsConfigProperty`\n *\n * @param properties - the TypeScript properties of a `TargetGroupsConfigProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleet_TargetGroupsConfigPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('targetGroups', cdk.requiredValidator)(properties.targetGroups));\n    errors.collect(cdk.propertyValidator('targetGroups', cdk.listValidator(CfnSpotFleet_TargetGroupPropertyValidator))(properties.targetGroups));\n    return errors.wrap('supplied properties not correct for \"TargetGroupsConfigProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.TargetGroupsConfig` resource\n *\n * @param properties - the TypeScript properties of a `TargetGroupsConfigProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.TargetGroupsConfig` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetTargetGroupsConfigPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleet_TargetGroupsConfigPropertyValidator(properties).assertSuccess();\n    return {\n        TargetGroups: cdk.listMapper(cfnSpotFleetTargetGroupPropertyToCloudFormation)(properties.targetGroups),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetTargetGroupsConfigPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleet.TargetGroupsConfigProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleet.TargetGroupsConfigProperty>();\n    ret.addPropertyResult('targetGroups', 'TargetGroups', cfn_parse.FromCloudFormation.getArray(CfnSpotFleetTargetGroupPropertyFromCloudFormation)(properties.TargetGroups));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSpotFleet {\n    /**\n     * The minimum and maximum amount of total local storage, in GB.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-totallocalstoragegbrequest.html\n     */\n    export interface TotalLocalStorageGBRequestProperty {\n        /**\n         * The maximum amount of total local storage, in GB. To specify no maximum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-totallocalstoragegbrequest.html#cfn-ec2-spotfleet-totallocalstoragegbrequest-max\n         */\n        readonly max?: number;\n        /**\n         * The minimum amount of total local storage, in GB. To specify no minimum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-totallocalstoragegbrequest.html#cfn-ec2-spotfleet-totallocalstoragegbrequest-min\n         */\n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `TotalLocalStorageGBRequestProperty`\n *\n * @param properties - the TypeScript properties of a `TotalLocalStorageGBRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleet_TotalLocalStorageGBRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"TotalLocalStorageGBRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.TotalLocalStorageGBRequest` resource\n *\n * @param properties - the TypeScript properties of a `TotalLocalStorageGBRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.TotalLocalStorageGBRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetTotalLocalStorageGBRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleet_TotalLocalStorageGBRequestPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetTotalLocalStorageGBRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleet.TotalLocalStorageGBRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleet.TotalLocalStorageGBRequestProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSpotFleet {\n    /**\n     * The minimum and maximum number of vCPUs.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-vcpucountrangerequest.html\n     */\n    export interface VCpuCountRangeRequestProperty {\n        /**\n         * The maximum number of vCPUs. To specify no maximum limit, omit this parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-vcpucountrangerequest.html#cfn-ec2-spotfleet-vcpucountrangerequest-max\n         */\n        readonly max?: number;\n        /**\n         * The minimum number of vCPUs. To specify no minimum limit, specify `0` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-vcpucountrangerequest.html#cfn-ec2-spotfleet-vcpucountrangerequest-min\n         */\n        readonly min?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `VCpuCountRangeRequestProperty`\n *\n * @param properties - the TypeScript properties of a `VCpuCountRangeRequestProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSpotFleet_VCpuCountRangeRequestPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('max', cdk.validateNumber)(properties.max));\n    errors.collect(cdk.propertyValidator('min', cdk.validateNumber)(properties.min));\n    return errors.wrap('supplied properties not correct for \"VCpuCountRangeRequestProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.VCpuCountRangeRequest` resource\n *\n * @param properties - the TypeScript properties of a `VCpuCountRangeRequestProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SpotFleet.VCpuCountRangeRequest` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSpotFleetVCpuCountRangeRequestPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSpotFleet_VCpuCountRangeRequestPropertyValidator(properties).assertSuccess();\n    return {\n        Max: cdk.numberToCloudFormation(properties.max),\n        Min: cdk.numberToCloudFormation(properties.min),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSpotFleetVCpuCountRangeRequestPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSpotFleet.VCpuCountRangeRequestProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSpotFleet.VCpuCountRangeRequestProperty>();\n    ret.addPropertyResult('max', 'Max', properties.Max != null ? cfn_parse.FromCloudFormation.getNumber(properties.Max) : undefined);\n    ret.addPropertyResult('min', 'Min', properties.Min != null ? cfn_parse.FromCloudFormation.getNumber(properties.Min) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnSubnet`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html\n */\nexport interface CfnSubnetProps {\n\n    /**\n     * The ID of the VPC the subnet is in.\n     *\n     * If you update this property, you must also update the `CidrBlock` property.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-vpcid\n     */\n    readonly vpcId: string;\n\n    /**\n     * Indicates whether a network interface created in this subnet receives an IPv6 address. The default value is `false` .\n     *\n     * If you specify `AssignIpv6AddressOnCreation` , you must also specify `Ipv6CidrBlock` .\n     *\n     * If you specify `AssignIpv6AddressOnCreation` , you cannot specify `MapPublicIpOnLaunch` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-assignipv6addressoncreation\n     */\n    readonly assignIpv6AddressOnCreation?: boolean | cdk.IResolvable;\n\n    /**\n     * The Availability Zone of the subnet.\n     *\n     * If you update this property, you must also update the `CidrBlock` property.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-availabilityzone\n     */\n    readonly availabilityZone?: string;\n\n    /**\n     * The AZ ID of the subnet.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-availabilityzoneid\n     */\n    readonly availabilityZoneId?: string;\n\n    /**\n     * The IPv4 CIDR block assigned to the subnet.\n     *\n     * If you update this property, we create a new subnet, and then delete the existing one.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-cidrblock\n     */\n    readonly cidrBlock?: string;\n\n    /**\n     * Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. For more information, see [DNS64 and NAT64](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html#nat-gateway-nat64-dns64) in the *Amazon Virtual Private Cloud User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-enabledns64\n     */\n    readonly enableDns64?: boolean | cdk.IResolvable;\n\n    /**\n     * The IPv6 CIDR block.\n     *\n     * If you specify `AssignIpv6AddressOnCreation` , you must also specify `Ipv6CidrBlock` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-ipv6cidrblock\n     */\n    readonly ipv6CidrBlock?: string;\n\n    /**\n     * Indicates whether this is an IPv6 only subnet. For more information, see [Subnet basics](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html#subnet-basics) in the *Amazon Virtual Private Cloud User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-ipv6native\n     */\n    readonly ipv6Native?: boolean | cdk.IResolvable;\n\n    /**\n     * Indicates whether instances launched in this subnet receive a public IPv4 address. The default value is `false` .\n     *\n     * If you specify `MapPublicIpOnLaunch` , you cannot specify `AssignIpv6AddressOnCreation` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-mappubliciponlaunch\n     */\n    readonly mapPublicIpOnLaunch?: boolean | cdk.IResolvable;\n\n    /**\n     * The Amazon Resource Name (ARN) of the Outpost.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-outpostarn\n     */\n    readonly outpostArn?: string;\n\n    /**\n     * The hostname type for EC2 instances launched into this subnet and how DNS A and AAAA record queries to the instances should be handled. For more information, see [Amazon EC2 instance hostname types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-naming.html) in the *Amazon Elastic Compute Cloud User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-privatednsnameoptionsonlaunch\n     */\n    readonly privateDnsNameOptionsOnLaunch?: any | cdk.IResolvable;\n\n    /**\n     * Any tags assigned to the subnet.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnSubnetProps`\n *\n * @param properties - the TypeScript properties of a `CfnSubnetProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnSubnetPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('assignIpv6AddressOnCreation', cdk.validateBoolean)(properties.assignIpv6AddressOnCreation));\n    errors.collect(cdk.propertyValidator('availabilityZone', cdk.validateString)(properties.availabilityZone));\n    errors.collect(cdk.propertyValidator('availabilityZoneId', cdk.validateString)(properties.availabilityZoneId));\n    errors.collect(cdk.propertyValidator('cidrBlock', cdk.validateString)(properties.cidrBlock));\n    errors.collect(cdk.propertyValidator('enableDns64', cdk.validateBoolean)(properties.enableDns64));\n    errors.collect(cdk.propertyValidator('ipv6CidrBlock', cdk.validateString)(properties.ipv6CidrBlock));\n    errors.collect(cdk.propertyValidator('ipv6Native', cdk.validateBoolean)(properties.ipv6Native));\n    errors.collect(cdk.propertyValidator('mapPublicIpOnLaunch', cdk.validateBoolean)(properties.mapPublicIpOnLaunch));\n    errors.collect(cdk.propertyValidator('outpostArn', cdk.validateString)(properties.outpostArn));\n    errors.collect(cdk.propertyValidator('privateDnsNameOptionsOnLaunch', cdk.validateObject)(properties.privateDnsNameOptionsOnLaunch));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.requiredValidator)(properties.vpcId));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.validateString)(properties.vpcId));\n    return errors.wrap('supplied properties not correct for \"CfnSubnetProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::Subnet` resource\n *\n * @param properties - the TypeScript properties of a `CfnSubnetProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::Subnet` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSubnetPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSubnetPropsValidator(properties).assertSuccess();\n    return {\n        VpcId: cdk.stringToCloudFormation(properties.vpcId),\n        AssignIpv6AddressOnCreation: cdk.booleanToCloudFormation(properties.assignIpv6AddressOnCreation),\n        AvailabilityZone: cdk.stringToCloudFormation(properties.availabilityZone),\n        AvailabilityZoneId: cdk.stringToCloudFormation(properties.availabilityZoneId),\n        CidrBlock: cdk.stringToCloudFormation(properties.cidrBlock),\n        EnableDns64: cdk.booleanToCloudFormation(properties.enableDns64),\n        Ipv6CidrBlock: cdk.stringToCloudFormation(properties.ipv6CidrBlock),\n        Ipv6Native: cdk.booleanToCloudFormation(properties.ipv6Native),\n        MapPublicIpOnLaunch: cdk.booleanToCloudFormation(properties.mapPublicIpOnLaunch),\n        OutpostArn: cdk.stringToCloudFormation(properties.outpostArn),\n        PrivateDnsNameOptionsOnLaunch: cdk.objectToCloudFormation(properties.privateDnsNameOptionsOnLaunch),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSubnetPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSubnetProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSubnetProps>();\n    ret.addPropertyResult('vpcId', 'VpcId', cfn_parse.FromCloudFormation.getString(properties.VpcId));\n    ret.addPropertyResult('assignIpv6AddressOnCreation', 'AssignIpv6AddressOnCreation', properties.AssignIpv6AddressOnCreation != null ? cfn_parse.FromCloudFormation.getBoolean(properties.AssignIpv6AddressOnCreation) : undefined);\n    ret.addPropertyResult('availabilityZone', 'AvailabilityZone', properties.AvailabilityZone != null ? cfn_parse.FromCloudFormation.getString(properties.AvailabilityZone) : undefined);\n    ret.addPropertyResult('availabilityZoneId', 'AvailabilityZoneId', properties.AvailabilityZoneId != null ? cfn_parse.FromCloudFormation.getString(properties.AvailabilityZoneId) : undefined);\n    ret.addPropertyResult('cidrBlock', 'CidrBlock', properties.CidrBlock != null ? cfn_parse.FromCloudFormation.getString(properties.CidrBlock) : undefined);\n    ret.addPropertyResult('enableDns64', 'EnableDns64', properties.EnableDns64 != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableDns64) : undefined);\n    ret.addPropertyResult('ipv6CidrBlock', 'Ipv6CidrBlock', properties.Ipv6CidrBlock != null ? cfn_parse.FromCloudFormation.getString(properties.Ipv6CidrBlock) : undefined);\n    ret.addPropertyResult('ipv6Native', 'Ipv6Native', properties.Ipv6Native != null ? cfn_parse.FromCloudFormation.getBoolean(properties.Ipv6Native) : undefined);\n    ret.addPropertyResult('mapPublicIpOnLaunch', 'MapPublicIpOnLaunch', properties.MapPublicIpOnLaunch != null ? cfn_parse.FromCloudFormation.getBoolean(properties.MapPublicIpOnLaunch) : undefined);\n    ret.addPropertyResult('outpostArn', 'OutpostArn', properties.OutpostArn != null ? cfn_parse.FromCloudFormation.getString(properties.OutpostArn) : undefined);\n    ret.addPropertyResult('privateDnsNameOptionsOnLaunch', 'PrivateDnsNameOptionsOnLaunch', properties.PrivateDnsNameOptionsOnLaunch != null ? cfn_parse.FromCloudFormation.getAny(properties.PrivateDnsNameOptionsOnLaunch) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::Subnet`\n *\n * Specifies a subnet for a VPC.\n *\n * When you create each subnet, you provide the VPC ID and IPv4 CIDR block for the subnet. After you create a subnet, you can't change its CIDR block. The size of the subnet's IPv4 CIDR block can be the same as a VPC's IPv4 CIDR block, or a subset of a VPC's IPv4 CIDR block. If you create more than one subnet in a VPC, the subnets' CIDR blocks must not overlap. The smallest IPv4 subnet (and VPC) you can create uses a /28 netmask (16 IPv4 addresses), and the largest uses a /16 netmask (65,536 IPv4 addresses).\n *\n * If you've associated an IPv6 CIDR block with your VPC, you can create a subnet with an IPv6 CIDR block that uses a /64 prefix length.\n *\n * @cloudformationResource AWS::EC2::Subnet\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html\n */\nexport class CfnSubnet extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::Subnet\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnSubnet {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnSubnetPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnSubnet(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The Availability Zone of this subnet. For example:\n     *\n     * `{ \"Fn::GetAtt\" : [ \"mySubnet\", \"AvailabilityZone\" ] }`\n     * @cloudformationAttribute AvailabilityZone\n     */\n    public readonly attrAvailabilityZone: string;\n\n    /**\n     * The IPv6 CIDR blocks that are associated with the subnet, such as `[ 2001:db8:1234:1a00::/64 ]` .\n     * @cloudformationAttribute Ipv6CidrBlocks\n     */\n    public readonly attrIpv6CidrBlocks: string[];\n\n    /**\n     * The ID of the network ACL that is associated with the subnet's VPC, such as `acl-5fb85d36` .\n     * @cloudformationAttribute NetworkAclAssociationId\n     */\n    public readonly attrNetworkAclAssociationId: string;\n\n    /**\n     * The Amazon Resource Name (ARN) of the Outpost.\n     * @cloudformationAttribute OutpostArn\n     */\n    public readonly attrOutpostArn: string;\n\n    /**\n     * The ID of the subnet.\n     * @cloudformationAttribute SubnetId\n     */\n    public readonly attrSubnetId: string;\n\n    /**\n     * The ID of the subnet's VPC, such as `vpc-11ad4878` .\n     * @cloudformationAttribute VpcId\n     */\n    public readonly attrVpcId: string;\n\n    /**\n     * The ID of the VPC the subnet is in.\n     *\n     * If you update this property, you must also update the `CidrBlock` property.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-vpcid\n     */\n    public vpcId: string;\n\n    /**\n     * Indicates whether a network interface created in this subnet receives an IPv6 address. The default value is `false` .\n     *\n     * If you specify `AssignIpv6AddressOnCreation` , you must also specify `Ipv6CidrBlock` .\n     *\n     * If you specify `AssignIpv6AddressOnCreation` , you cannot specify `MapPublicIpOnLaunch` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-assignipv6addressoncreation\n     */\n    public assignIpv6AddressOnCreation: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * The Availability Zone of the subnet.\n     *\n     * If you update this property, you must also update the `CidrBlock` property.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-availabilityzone\n     */\n    public availabilityZone: string | undefined;\n\n    /**\n     * The AZ ID of the subnet.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-availabilityzoneid\n     */\n    public availabilityZoneId: string | undefined;\n\n    /**\n     * The IPv4 CIDR block assigned to the subnet.\n     *\n     * If you update this property, we create a new subnet, and then delete the existing one.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-cidrblock\n     */\n    public cidrBlock: string | undefined;\n\n    /**\n     * Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. For more information, see [DNS64 and NAT64](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html#nat-gateway-nat64-dns64) in the *Amazon Virtual Private Cloud User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-enabledns64\n     */\n    public enableDns64: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * The IPv6 CIDR block.\n     *\n     * If you specify `AssignIpv6AddressOnCreation` , you must also specify `Ipv6CidrBlock` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-ipv6cidrblock\n     */\n    public ipv6CidrBlock: string | undefined;\n\n    /**\n     * Indicates whether this is an IPv6 only subnet. For more information, see [Subnet basics](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html#subnet-basics) in the *Amazon Virtual Private Cloud User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-ipv6native\n     */\n    public ipv6Native: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * Indicates whether instances launched in this subnet receive a public IPv4 address. The default value is `false` .\n     *\n     * If you specify `MapPublicIpOnLaunch` , you cannot specify `AssignIpv6AddressOnCreation` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-mappubliciponlaunch\n     */\n    public mapPublicIpOnLaunch: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * The Amazon Resource Name (ARN) of the Outpost.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-outpostarn\n     */\n    public outpostArn: string | undefined;\n\n    /**\n     * The hostname type for EC2 instances launched into this subnet and how DNS A and AAAA record queries to the instances should be handled. For more information, see [Amazon EC2 instance hostname types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-naming.html) in the *Amazon Elastic Compute Cloud User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-privatednsnameoptionsonlaunch\n     */\n    public privateDnsNameOptionsOnLaunch: any | cdk.IResolvable | undefined;\n\n    /**\n     * Any tags assigned to the subnet.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EC2::Subnet`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnSubnetProps) {\n        super(scope, id, { type: CfnSubnet.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'vpcId', this);\n        this.attrAvailabilityZone = cdk.Token.asString(this.getAtt('AvailabilityZone'));\n        this.attrIpv6CidrBlocks = cdk.Token.asList(this.getAtt('Ipv6CidrBlocks'));\n        this.attrNetworkAclAssociationId = cdk.Token.asString(this.getAtt('NetworkAclAssociationId'));\n        this.attrOutpostArn = cdk.Token.asString(this.getAtt('OutpostArn'));\n        this.attrSubnetId = cdk.Token.asString(this.getAtt('SubnetId'));\n        this.attrVpcId = cdk.Token.asString(this.getAtt('VpcId'));\n\n        this.vpcId = props.vpcId;\n        this.assignIpv6AddressOnCreation = props.assignIpv6AddressOnCreation;\n        this.availabilityZone = props.availabilityZone;\n        this.availabilityZoneId = props.availabilityZoneId;\n        this.cidrBlock = props.cidrBlock;\n        this.enableDns64 = props.enableDns64;\n        this.ipv6CidrBlock = props.ipv6CidrBlock;\n        this.ipv6Native = props.ipv6Native;\n        this.mapPublicIpOnLaunch = props.mapPublicIpOnLaunch;\n        this.outpostArn = props.outpostArn;\n        this.privateDnsNameOptionsOnLaunch = props.privateDnsNameOptionsOnLaunch;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::Subnet\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnSubnet.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            vpcId: this.vpcId,\n            assignIpv6AddressOnCreation: this.assignIpv6AddressOnCreation,\n            availabilityZone: this.availabilityZone,\n            availabilityZoneId: this.availabilityZoneId,\n            cidrBlock: this.cidrBlock,\n            enableDns64: this.enableDns64,\n            ipv6CidrBlock: this.ipv6CidrBlock,\n            ipv6Native: this.ipv6Native,\n            mapPublicIpOnLaunch: this.mapPublicIpOnLaunch,\n            outpostArn: this.outpostArn,\n            privateDnsNameOptionsOnLaunch: this.privateDnsNameOptionsOnLaunch,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnSubnetPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnSubnetCidrBlock`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html\n */\nexport interface CfnSubnetCidrBlockProps {\n\n    /**\n     * The IPv6 network range for the subnet, in CIDR notation. The subnet size must use a /64 prefix length.\n     *\n     * This parameter is required for an IPv6 only subnet.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html#cfn-ec2-subnetcidrblock-ipv6cidrblock\n     */\n    readonly ipv6CidrBlock: string;\n\n    /**\n     * The ID of the subnet.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html#cfn-ec2-subnetcidrblock-subnetid\n     */\n    readonly subnetId: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnSubnetCidrBlockProps`\n *\n * @param properties - the TypeScript properties of a `CfnSubnetCidrBlockProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnSubnetCidrBlockPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('ipv6CidrBlock', cdk.requiredValidator)(properties.ipv6CidrBlock));\n    errors.collect(cdk.propertyValidator('ipv6CidrBlock', cdk.validateString)(properties.ipv6CidrBlock));\n    errors.collect(cdk.propertyValidator('subnetId', cdk.requiredValidator)(properties.subnetId));\n    errors.collect(cdk.propertyValidator('subnetId', cdk.validateString)(properties.subnetId));\n    return errors.wrap('supplied properties not correct for \"CfnSubnetCidrBlockProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SubnetCidrBlock` resource\n *\n * @param properties - the TypeScript properties of a `CfnSubnetCidrBlockProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SubnetCidrBlock` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSubnetCidrBlockPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSubnetCidrBlockPropsValidator(properties).assertSuccess();\n    return {\n        Ipv6CidrBlock: cdk.stringToCloudFormation(properties.ipv6CidrBlock),\n        SubnetId: cdk.stringToCloudFormation(properties.subnetId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSubnetCidrBlockPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSubnetCidrBlockProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSubnetCidrBlockProps>();\n    ret.addPropertyResult('ipv6CidrBlock', 'Ipv6CidrBlock', cfn_parse.FromCloudFormation.getString(properties.Ipv6CidrBlock));\n    ret.addPropertyResult('subnetId', 'SubnetId', cfn_parse.FromCloudFormation.getString(properties.SubnetId));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::SubnetCidrBlock`\n *\n * Associates a CIDR block with your subnet. You can associate a single IPv6 CIDR block with your subnet. An IPv6 CIDR block must have a prefix length of /64.\n *\n * @cloudformationResource AWS::EC2::SubnetCidrBlock\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html\n */\nexport class CfnSubnetCidrBlock extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::SubnetCidrBlock\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnSubnetCidrBlock {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnSubnetCidrBlockPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnSubnetCidrBlock(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The IPv6 network range for the subnet, in CIDR notation. The subnet size must use a /64 prefix length.\n     *\n     * This parameter is required for an IPv6 only subnet.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html#cfn-ec2-subnetcidrblock-ipv6cidrblock\n     */\n    public ipv6CidrBlock: string;\n\n    /**\n     * The ID of the subnet.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html#cfn-ec2-subnetcidrblock-subnetid\n     */\n    public subnetId: string;\n\n    /**\n     * Create a new `AWS::EC2::SubnetCidrBlock`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnSubnetCidrBlockProps) {\n        super(scope, id, { type: CfnSubnetCidrBlock.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'ipv6CidrBlock', this);\n        cdk.requireProperty(props, 'subnetId', this);\n\n        this.ipv6CidrBlock = props.ipv6CidrBlock;\n        this.subnetId = props.subnetId;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnSubnetCidrBlock.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            ipv6CidrBlock: this.ipv6CidrBlock,\n            subnetId: this.subnetId,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnSubnetCidrBlockPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnSubnetNetworkAclAssociation`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html\n */\nexport interface CfnSubnetNetworkAclAssociationProps {\n\n    /**\n     * The ID of the network ACL.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html#cfn-ec2-subnetnetworkaclassociation-networkaclid\n     */\n    readonly networkAclId: string;\n\n    /**\n     * The ID of the subnet.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html#cfn-ec2-subnetnetworkaclassociation-associationid\n     */\n    readonly subnetId: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnSubnetNetworkAclAssociationProps`\n *\n * @param properties - the TypeScript properties of a `CfnSubnetNetworkAclAssociationProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnSubnetNetworkAclAssociationPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('networkAclId', cdk.requiredValidator)(properties.networkAclId));\n    errors.collect(cdk.propertyValidator('networkAclId', cdk.validateString)(properties.networkAclId));\n    errors.collect(cdk.propertyValidator('subnetId', cdk.requiredValidator)(properties.subnetId));\n    errors.collect(cdk.propertyValidator('subnetId', cdk.validateString)(properties.subnetId));\n    return errors.wrap('supplied properties not correct for \"CfnSubnetNetworkAclAssociationProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SubnetNetworkAclAssociation` resource\n *\n * @param properties - the TypeScript properties of a `CfnSubnetNetworkAclAssociationProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SubnetNetworkAclAssociation` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSubnetNetworkAclAssociationPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSubnetNetworkAclAssociationPropsValidator(properties).assertSuccess();\n    return {\n        NetworkAclId: cdk.stringToCloudFormation(properties.networkAclId),\n        SubnetId: cdk.stringToCloudFormation(properties.subnetId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSubnetNetworkAclAssociationPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSubnetNetworkAclAssociationProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSubnetNetworkAclAssociationProps>();\n    ret.addPropertyResult('networkAclId', 'NetworkAclId', cfn_parse.FromCloudFormation.getString(properties.NetworkAclId));\n    ret.addPropertyResult('subnetId', 'SubnetId', cfn_parse.FromCloudFormation.getString(properties.SubnetId));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::SubnetNetworkAclAssociation`\n *\n * Associates a subnet with a network ACL. For more information, see [ReplaceNetworkAclAssociation](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ReplaceNetworkAclAssociation.html) in the *Amazon EC2 API Reference* .\n *\n * When `AWS::EC2::SubnetNetworkAclAssociation` resources are created during create or update operations, AWS CloudFormation adopts existing resources that share the same key properties (the properties that contribute to uniquely identify the resource). However, if the operation fails and rolls back, AWS CloudFormation deletes the previously out-of-band resources. You can protect against this behavior by using `Retain` deletion policies. For more information, see [DeletionPolicy Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html) .\n *\n * @cloudformationResource AWS::EC2::SubnetNetworkAclAssociation\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html\n */\nexport class CfnSubnetNetworkAclAssociation extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::SubnetNetworkAclAssociation\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnSubnetNetworkAclAssociation {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnSubnetNetworkAclAssociationPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnSubnetNetworkAclAssociation(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * Returns the value of this object's [SubnetId](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html) property.\n     * @cloudformationAttribute AssociationId\n     */\n    public readonly attrAssociationId: string;\n\n    /**\n     * The ID of the network ACL.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html#cfn-ec2-subnetnetworkaclassociation-networkaclid\n     */\n    public networkAclId: string;\n\n    /**\n     * The ID of the subnet.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html#cfn-ec2-subnetnetworkaclassociation-associationid\n     */\n    public subnetId: string;\n\n    /**\n     * Create a new `AWS::EC2::SubnetNetworkAclAssociation`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnSubnetNetworkAclAssociationProps) {\n        super(scope, id, { type: CfnSubnetNetworkAclAssociation.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'networkAclId', this);\n        cdk.requireProperty(props, 'subnetId', this);\n        this.attrAssociationId = cdk.Token.asString(this.getAtt('AssociationId'));\n\n        this.networkAclId = props.networkAclId;\n        this.subnetId = props.subnetId;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnSubnetNetworkAclAssociation.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            networkAclId: this.networkAclId,\n            subnetId: this.subnetId,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnSubnetNetworkAclAssociationPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnSubnetRouteTableAssociation`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetroutetableassociation.html\n */\nexport interface CfnSubnetRouteTableAssociationProps {\n\n    /**\n     * The ID of the route table.\n     *\n     * The physical ID changes when the route table ID is changed.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetroutetableassociation.html#cfn-ec2-subnetroutetableassociation-routetableid\n     */\n    readonly routeTableId: string;\n\n    /**\n     * The ID of the subnet.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetroutetableassociation.html#cfn-ec2-subnetroutetableassociation-subnetid\n     */\n    readonly subnetId: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnSubnetRouteTableAssociationProps`\n *\n * @param properties - the TypeScript properties of a `CfnSubnetRouteTableAssociationProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnSubnetRouteTableAssociationPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('routeTableId', cdk.requiredValidator)(properties.routeTableId));\n    errors.collect(cdk.propertyValidator('routeTableId', cdk.validateString)(properties.routeTableId));\n    errors.collect(cdk.propertyValidator('subnetId', cdk.requiredValidator)(properties.subnetId));\n    errors.collect(cdk.propertyValidator('subnetId', cdk.validateString)(properties.subnetId));\n    return errors.wrap('supplied properties not correct for \"CfnSubnetRouteTableAssociationProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::SubnetRouteTableAssociation` resource\n *\n * @param properties - the TypeScript properties of a `CfnSubnetRouteTableAssociationProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::SubnetRouteTableAssociation` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSubnetRouteTableAssociationPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSubnetRouteTableAssociationPropsValidator(properties).assertSuccess();\n    return {\n        RouteTableId: cdk.stringToCloudFormation(properties.routeTableId),\n        SubnetId: cdk.stringToCloudFormation(properties.subnetId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSubnetRouteTableAssociationPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSubnetRouteTableAssociationProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSubnetRouteTableAssociationProps>();\n    ret.addPropertyResult('routeTableId', 'RouteTableId', cfn_parse.FromCloudFormation.getString(properties.RouteTableId));\n    ret.addPropertyResult('subnetId', 'SubnetId', cfn_parse.FromCloudFormation.getString(properties.SubnetId));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::SubnetRouteTableAssociation`\n *\n * Associates a subnet with a route table. The subnet and route table must be in the same VPC. This association causes traffic originating from the subnet to be routed according to the routes in the route table. A route table can be associated with multiple subnets. If you want to associate a route table with a VPC, see [AWS::EC2::RouteTable](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route-table.html) .\n *\n * @cloudformationResource AWS::EC2::SubnetRouteTableAssociation\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetroutetableassociation.html\n */\nexport class CfnSubnetRouteTableAssociation extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::SubnetRouteTableAssociation\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnSubnetRouteTableAssociation {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnSubnetRouteTableAssociationPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnSubnetRouteTableAssociation(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the subnet route table association.\n     * @cloudformationAttribute Id\n     */\n    public readonly attrId: string;\n\n    /**\n     * The ID of the route table.\n     *\n     * The physical ID changes when the route table ID is changed.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetroutetableassociation.html#cfn-ec2-subnetroutetableassociation-routetableid\n     */\n    public routeTableId: string;\n\n    /**\n     * The ID of the subnet.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetroutetableassociation.html#cfn-ec2-subnetroutetableassociation-subnetid\n     */\n    public subnetId: string;\n\n    /**\n     * Create a new `AWS::EC2::SubnetRouteTableAssociation`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnSubnetRouteTableAssociationProps) {\n        super(scope, id, { type: CfnSubnetRouteTableAssociation.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'routeTableId', this);\n        cdk.requireProperty(props, 'subnetId', this);\n        this.attrId = cdk.Token.asString(this.getAtt('Id'));\n\n        this.routeTableId = props.routeTableId;\n        this.subnetId = props.subnetId;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnSubnetRouteTableAssociation.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            routeTableId: this.routeTableId,\n            subnetId: this.subnetId,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnSubnetRouteTableAssociationPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnTrafficMirrorFilter`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html\n */\nexport interface CfnTrafficMirrorFilterProps {\n\n    /**\n     * The description of the Traffic Mirror filter.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html#cfn-ec2-trafficmirrorfilter-description\n     */\n    readonly description?: string;\n\n    /**\n     * The network service traffic that is associated with the Traffic Mirror filter.\n     *\n     * Valid values are `amazon-dns` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html#cfn-ec2-trafficmirrorfilter-networkservices\n     */\n    readonly networkServices?: string[];\n\n    /**\n     * The tags to assign to a Traffic Mirror filter.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html#cfn-ec2-trafficmirrorfilter-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnTrafficMirrorFilterProps`\n *\n * @param properties - the TypeScript properties of a `CfnTrafficMirrorFilterProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnTrafficMirrorFilterPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('networkServices', cdk.listValidator(cdk.validateString))(properties.networkServices));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnTrafficMirrorFilterProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::TrafficMirrorFilter` resource\n *\n * @param properties - the TypeScript properties of a `CfnTrafficMirrorFilterProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::TrafficMirrorFilter` resource.\n */\n// @ts-ignore TS6133\nfunction cfnTrafficMirrorFilterPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnTrafficMirrorFilterPropsValidator(properties).assertSuccess();\n    return {\n        Description: cdk.stringToCloudFormation(properties.description),\n        NetworkServices: cdk.listMapper(cdk.stringToCloudFormation)(properties.networkServices),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnTrafficMirrorFilterPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnTrafficMirrorFilterProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnTrafficMirrorFilterProps>();\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('networkServices', 'NetworkServices', properties.NetworkServices != null ? cfn_parse.FromCloudFormation.getStringArray(properties.NetworkServices) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::TrafficMirrorFilter`\n *\n * Specifies a Traffic Mirror filter.\n *\n * A Traffic Mirror filter is a set of rules that defines the traffic to mirror.\n *\n * By default, no traffic is mirrored. To mirror traffic, use [AWS::EC2::TrafficMirrorFilterRule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html) to add Traffic Mirror rules to the filter. The rules you add define what traffic gets mirrored.\n *\n * @cloudformationResource AWS::EC2::TrafficMirrorFilter\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html\n */\nexport class CfnTrafficMirrorFilter extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::TrafficMirrorFilter\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnTrafficMirrorFilter {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnTrafficMirrorFilterPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnTrafficMirrorFilter(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The description of the Traffic Mirror filter.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html#cfn-ec2-trafficmirrorfilter-description\n     */\n    public description: string | undefined;\n\n    /**\n     * The network service traffic that is associated with the Traffic Mirror filter.\n     *\n     * Valid values are `amazon-dns` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html#cfn-ec2-trafficmirrorfilter-networkservices\n     */\n    public networkServices: string[] | undefined;\n\n    /**\n     * The tags to assign to a Traffic Mirror filter.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html#cfn-ec2-trafficmirrorfilter-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EC2::TrafficMirrorFilter`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnTrafficMirrorFilterProps = {}) {\n        super(scope, id, { type: CfnTrafficMirrorFilter.CFN_RESOURCE_TYPE_NAME, properties: props });\n\n        this.description = props.description;\n        this.networkServices = props.networkServices;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::TrafficMirrorFilter\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnTrafficMirrorFilter.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            description: this.description,\n            networkServices: this.networkServices,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnTrafficMirrorFilterPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnTrafficMirrorFilterRule`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html\n */\nexport interface CfnTrafficMirrorFilterRuleProps {\n\n    /**\n     * The destination CIDR block to assign to the Traffic Mirror rule.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-destinationcidrblock\n     */\n    readonly destinationCidrBlock: string;\n\n    /**\n     * The action to take on the filtered traffic.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-ruleaction\n     */\n    readonly ruleAction: string;\n\n    /**\n     * The number of the Traffic Mirror rule. This number must be unique for each Traffic Mirror rule in a given direction. The rules are processed in ascending order by rule number.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-rulenumber\n     */\n    readonly ruleNumber: number;\n\n    /**\n     * The source CIDR block to assign to the Traffic Mirror rule.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-sourcecidrblock\n     */\n    readonly sourceCidrBlock: string;\n\n    /**\n     * The type of traffic.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-trafficdirection\n     */\n    readonly trafficDirection: string;\n\n    /**\n     * The ID of the filter that this rule is associated with.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-trafficmirrorfilterid\n     */\n    readonly trafficMirrorFilterId: string;\n\n    /**\n     * The description of the Traffic Mirror rule.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-description\n     */\n    readonly description?: string;\n\n    /**\n     * The destination port range.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-destinationportrange\n     */\n    readonly destinationPortRange?: CfnTrafficMirrorFilterRule.TrafficMirrorPortRangeProperty | cdk.IResolvable;\n\n    /**\n     * The protocol, for example UDP, to assign to the Traffic Mirror rule.\n     *\n     * For information about the protocol value, see [Protocol Numbers](https://docs.aws.amazon.com/https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml) on the Internet Assigned Numbers Authority (IANA) website.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-protocol\n     */\n    readonly protocol?: number;\n\n    /**\n     * The source port range.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-sourceportrange\n     */\n    readonly sourcePortRange?: CfnTrafficMirrorFilterRule.TrafficMirrorPortRangeProperty | cdk.IResolvable;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnTrafficMirrorFilterRuleProps`\n *\n * @param properties - the TypeScript properties of a `CfnTrafficMirrorFilterRuleProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnTrafficMirrorFilterRulePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('destinationCidrBlock', cdk.requiredValidator)(properties.destinationCidrBlock));\n    errors.collect(cdk.propertyValidator('destinationCidrBlock', cdk.validateString)(properties.destinationCidrBlock));\n    errors.collect(cdk.propertyValidator('destinationPortRange', CfnTrafficMirrorFilterRule_TrafficMirrorPortRangePropertyValidator)(properties.destinationPortRange));\n    errors.collect(cdk.propertyValidator('protocol', cdk.validateNumber)(properties.protocol));\n    errors.collect(cdk.propertyValidator('ruleAction', cdk.requiredValidator)(properties.ruleAction));\n    errors.collect(cdk.propertyValidator('ruleAction', cdk.validateString)(properties.ruleAction));\n    errors.collect(cdk.propertyValidator('ruleNumber', cdk.requiredValidator)(properties.ruleNumber));\n    errors.collect(cdk.propertyValidator('ruleNumber', cdk.validateNumber)(properties.ruleNumber));\n    errors.collect(cdk.propertyValidator('sourceCidrBlock', cdk.requiredValidator)(properties.sourceCidrBlock));\n    errors.collect(cdk.propertyValidator('sourceCidrBlock', cdk.validateString)(properties.sourceCidrBlock));\n    errors.collect(cdk.propertyValidator('sourcePortRange', CfnTrafficMirrorFilterRule_TrafficMirrorPortRangePropertyValidator)(properties.sourcePortRange));\n    errors.collect(cdk.propertyValidator('trafficDirection', cdk.requiredValidator)(properties.trafficDirection));\n    errors.collect(cdk.propertyValidator('trafficDirection', cdk.validateString)(properties.trafficDirection));\n    errors.collect(cdk.propertyValidator('trafficMirrorFilterId', cdk.requiredValidator)(properties.trafficMirrorFilterId));\n    errors.collect(cdk.propertyValidator('trafficMirrorFilterId', cdk.validateString)(properties.trafficMirrorFilterId));\n    return errors.wrap('supplied properties not correct for \"CfnTrafficMirrorFilterRuleProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::TrafficMirrorFilterRule` resource\n *\n * @param properties - the TypeScript properties of a `CfnTrafficMirrorFilterRuleProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::TrafficMirrorFilterRule` resource.\n */\n// @ts-ignore TS6133\nfunction cfnTrafficMirrorFilterRulePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnTrafficMirrorFilterRulePropsValidator(properties).assertSuccess();\n    return {\n        DestinationCidrBlock: cdk.stringToCloudFormation(properties.destinationCidrBlock),\n        RuleAction: cdk.stringToCloudFormation(properties.ruleAction),\n        RuleNumber: cdk.numberToCloudFormation(properties.ruleNumber),\n        SourceCidrBlock: cdk.stringToCloudFormation(properties.sourceCidrBlock),\n        TrafficDirection: cdk.stringToCloudFormation(properties.trafficDirection),\n        TrafficMirrorFilterId: cdk.stringToCloudFormation(properties.trafficMirrorFilterId),\n        Description: cdk.stringToCloudFormation(properties.description),\n        DestinationPortRange: cfnTrafficMirrorFilterRuleTrafficMirrorPortRangePropertyToCloudFormation(properties.destinationPortRange),\n        Protocol: cdk.numberToCloudFormation(properties.protocol),\n        SourcePortRange: cfnTrafficMirrorFilterRuleTrafficMirrorPortRangePropertyToCloudFormation(properties.sourcePortRange),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnTrafficMirrorFilterRulePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnTrafficMirrorFilterRuleProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnTrafficMirrorFilterRuleProps>();\n    ret.addPropertyResult('destinationCidrBlock', 'DestinationCidrBlock', cfn_parse.FromCloudFormation.getString(properties.DestinationCidrBlock));\n    ret.addPropertyResult('ruleAction', 'RuleAction', cfn_parse.FromCloudFormation.getString(properties.RuleAction));\n    ret.addPropertyResult('ruleNumber', 'RuleNumber', cfn_parse.FromCloudFormation.getNumber(properties.RuleNumber));\n    ret.addPropertyResult('sourceCidrBlock', 'SourceCidrBlock', cfn_parse.FromCloudFormation.getString(properties.SourceCidrBlock));\n    ret.addPropertyResult('trafficDirection', 'TrafficDirection', cfn_parse.FromCloudFormation.getString(properties.TrafficDirection));\n    ret.addPropertyResult('trafficMirrorFilterId', 'TrafficMirrorFilterId', cfn_parse.FromCloudFormation.getString(properties.TrafficMirrorFilterId));\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('destinationPortRange', 'DestinationPortRange', properties.DestinationPortRange != null ? CfnTrafficMirrorFilterRuleTrafficMirrorPortRangePropertyFromCloudFormation(properties.DestinationPortRange) : undefined);\n    ret.addPropertyResult('protocol', 'Protocol', properties.Protocol != null ? cfn_parse.FromCloudFormation.getNumber(properties.Protocol) : undefined);\n    ret.addPropertyResult('sourcePortRange', 'SourcePortRange', properties.SourcePortRange != null ? CfnTrafficMirrorFilterRuleTrafficMirrorPortRangePropertyFromCloudFormation(properties.SourcePortRange) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::TrafficMirrorFilterRule`\n *\n * Creates a Traffic Mirror filter rule.\n *\n * A Traffic Mirror rule defines the Traffic Mirror source traffic to mirror.\n *\n * You need the Traffic Mirror filter ID when you create the rule.\n *\n * @cloudformationResource AWS::EC2::TrafficMirrorFilterRule\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html\n */\nexport class CfnTrafficMirrorFilterRule extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::TrafficMirrorFilterRule\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnTrafficMirrorFilterRule {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnTrafficMirrorFilterRulePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnTrafficMirrorFilterRule(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The destination CIDR block to assign to the Traffic Mirror rule.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-destinationcidrblock\n     */\n    public destinationCidrBlock: string;\n\n    /**\n     * The action to take on the filtered traffic.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-ruleaction\n     */\n    public ruleAction: string;\n\n    /**\n     * The number of the Traffic Mirror rule. This number must be unique for each Traffic Mirror rule in a given direction. The rules are processed in ascending order by rule number.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-rulenumber\n     */\n    public ruleNumber: number;\n\n    /**\n     * The source CIDR block to assign to the Traffic Mirror rule.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-sourcecidrblock\n     */\n    public sourceCidrBlock: string;\n\n    /**\n     * The type of traffic.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-trafficdirection\n     */\n    public trafficDirection: string;\n\n    /**\n     * The ID of the filter that this rule is associated with.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-trafficmirrorfilterid\n     */\n    public trafficMirrorFilterId: string;\n\n    /**\n     * The description of the Traffic Mirror rule.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-description\n     */\n    public description: string | undefined;\n\n    /**\n     * The destination port range.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-destinationportrange\n     */\n    public destinationPortRange: CfnTrafficMirrorFilterRule.TrafficMirrorPortRangeProperty | cdk.IResolvable | undefined;\n\n    /**\n     * The protocol, for example UDP, to assign to the Traffic Mirror rule.\n     *\n     * For information about the protocol value, see [Protocol Numbers](https://docs.aws.amazon.com/https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml) on the Internet Assigned Numbers Authority (IANA) website.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-protocol\n     */\n    public protocol: number | undefined;\n\n    /**\n     * The source port range.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-sourceportrange\n     */\n    public sourcePortRange: CfnTrafficMirrorFilterRule.TrafficMirrorPortRangeProperty | cdk.IResolvable | undefined;\n\n    /**\n     * Create a new `AWS::EC2::TrafficMirrorFilterRule`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnTrafficMirrorFilterRuleProps) {\n        super(scope, id, { type: CfnTrafficMirrorFilterRule.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'destinationCidrBlock', this);\n        cdk.requireProperty(props, 'ruleAction', this);\n        cdk.requireProperty(props, 'ruleNumber', this);\n        cdk.requireProperty(props, 'sourceCidrBlock', this);\n        cdk.requireProperty(props, 'trafficDirection', this);\n        cdk.requireProperty(props, 'trafficMirrorFilterId', this);\n\n        this.destinationCidrBlock = props.destinationCidrBlock;\n        this.ruleAction = props.ruleAction;\n        this.ruleNumber = props.ruleNumber;\n        this.sourceCidrBlock = props.sourceCidrBlock;\n        this.trafficDirection = props.trafficDirection;\n        this.trafficMirrorFilterId = props.trafficMirrorFilterId;\n        this.description = props.description;\n        this.destinationPortRange = props.destinationPortRange;\n        this.protocol = props.protocol;\n        this.sourcePortRange = props.sourcePortRange;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnTrafficMirrorFilterRule.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            destinationCidrBlock: this.destinationCidrBlock,\n            ruleAction: this.ruleAction,\n            ruleNumber: this.ruleNumber,\n            sourceCidrBlock: this.sourceCidrBlock,\n            trafficDirection: this.trafficDirection,\n            trafficMirrorFilterId: this.trafficMirrorFilterId,\n            description: this.description,\n            destinationPortRange: this.destinationPortRange,\n            protocol: this.protocol,\n            sourcePortRange: this.sourcePortRange,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnTrafficMirrorFilterRulePropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnTrafficMirrorFilterRule {\n    /**\n     * Describes the Traffic Mirror port range.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-trafficmirrorfilterrule-trafficmirrorportrange.html\n     */\n    export interface TrafficMirrorPortRangeProperty {\n        /**\n         * The start of the Traffic Mirror port range. This applies to the TCP and UDP protocols.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-trafficmirrorfilterrule-trafficmirrorportrange.html#cfn-ec2-trafficmirrorfilterrule-trafficmirrorportrange-fromport\n         */\n        readonly fromPort: number;\n        /**\n         * The end of the Traffic Mirror port range. This applies to the TCP and UDP protocols.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-trafficmirrorfilterrule-trafficmirrorportrange.html#cfn-ec2-trafficmirrorfilterrule-trafficmirrorportrange-toport\n         */\n        readonly toPort: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `TrafficMirrorPortRangeProperty`\n *\n * @param properties - the TypeScript properties of a `TrafficMirrorPortRangeProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnTrafficMirrorFilterRule_TrafficMirrorPortRangePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('fromPort', cdk.requiredValidator)(properties.fromPort));\n    errors.collect(cdk.propertyValidator('fromPort', cdk.validateNumber)(properties.fromPort));\n    errors.collect(cdk.propertyValidator('toPort', cdk.requiredValidator)(properties.toPort));\n    errors.collect(cdk.propertyValidator('toPort', cdk.validateNumber)(properties.toPort));\n    return errors.wrap('supplied properties not correct for \"TrafficMirrorPortRangeProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::TrafficMirrorFilterRule.TrafficMirrorPortRange` resource\n *\n * @param properties - the TypeScript properties of a `TrafficMirrorPortRangeProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::TrafficMirrorFilterRule.TrafficMirrorPortRange` resource.\n */\n// @ts-ignore TS6133\nfunction cfnTrafficMirrorFilterRuleTrafficMirrorPortRangePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnTrafficMirrorFilterRule_TrafficMirrorPortRangePropertyValidator(properties).assertSuccess();\n    return {\n        FromPort: cdk.numberToCloudFormation(properties.fromPort),\n        ToPort: cdk.numberToCloudFormation(properties.toPort),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnTrafficMirrorFilterRuleTrafficMirrorPortRangePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnTrafficMirrorFilterRule.TrafficMirrorPortRangeProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnTrafficMirrorFilterRule.TrafficMirrorPortRangeProperty>();\n    ret.addPropertyResult('fromPort', 'FromPort', cfn_parse.FromCloudFormation.getNumber(properties.FromPort));\n    ret.addPropertyResult('toPort', 'ToPort', cfn_parse.FromCloudFormation.getNumber(properties.ToPort));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnTrafficMirrorSession`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html\n */\nexport interface CfnTrafficMirrorSessionProps {\n\n    /**\n     * The ID of the source network interface.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-networkinterfaceid\n     */\n    readonly networkInterfaceId: string;\n\n    /**\n     * The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions. The first session with a matching filter is the one that mirrors the packets.\n     *\n     * Valid values are 1-32766.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-sessionnumber\n     */\n    readonly sessionNumber: number;\n\n    /**\n     * The ID of the Traffic Mirror filter.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-trafficmirrorfilterid\n     */\n    readonly trafficMirrorFilterId: string;\n\n    /**\n     * The ID of the Traffic Mirror target.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-trafficmirrortargetid\n     */\n    readonly trafficMirrorTargetId: string;\n\n    /**\n     * The description of the Traffic Mirror session.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-description\n     */\n    readonly description?: string;\n\n    /**\n     * The number of bytes in each packet to mirror. These are bytes after the VXLAN header. Do not specify this parameter when you want to mirror the entire packet. To mirror a subset of the packet, set this to the length (in bytes) that you want to mirror. For example, if you set this value to 100, then the first 100 bytes that meet the filter criteria are copied to the target.\n     *\n     * If you do not want to mirror the entire packet, use the `PacketLength` parameter to specify the number of bytes in each packet to mirror.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-packetlength\n     */\n    readonly packetLength?: number;\n\n    /**\n     * The tags to assign to a Traffic Mirror session.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n\n    /**\n     * The VXLAN ID for the Traffic Mirror session. For more information about the VXLAN protocol, see [RFC 7348](https://docs.aws.amazon.com/https://tools.ietf.org/html/rfc7348) . If you do not specify a `VirtualNetworkId` , an account-wide unique id is chosen at random.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-virtualnetworkid\n     */\n    readonly virtualNetworkId?: number;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnTrafficMirrorSessionProps`\n *\n * @param properties - the TypeScript properties of a `CfnTrafficMirrorSessionProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnTrafficMirrorSessionPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('networkInterfaceId', cdk.requiredValidator)(properties.networkInterfaceId));\n    errors.collect(cdk.propertyValidator('networkInterfaceId', cdk.validateString)(properties.networkInterfaceId));\n    errors.collect(cdk.propertyValidator('packetLength', cdk.validateNumber)(properties.packetLength));\n    errors.collect(cdk.propertyValidator('sessionNumber', cdk.requiredValidator)(properties.sessionNumber));\n    errors.collect(cdk.propertyValidator('sessionNumber', cdk.validateNumber)(properties.sessionNumber));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('trafficMirrorFilterId', cdk.requiredValidator)(properties.trafficMirrorFilterId));\n    errors.collect(cdk.propertyValidator('trafficMirrorFilterId', cdk.validateString)(properties.trafficMirrorFilterId));\n    errors.collect(cdk.propertyValidator('trafficMirrorTargetId', cdk.requiredValidator)(properties.trafficMirrorTargetId));\n    errors.collect(cdk.propertyValidator('trafficMirrorTargetId', cdk.validateString)(properties.trafficMirrorTargetId));\n    errors.collect(cdk.propertyValidator('virtualNetworkId', cdk.validateNumber)(properties.virtualNetworkId));\n    return errors.wrap('supplied properties not correct for \"CfnTrafficMirrorSessionProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::TrafficMirrorSession` resource\n *\n * @param properties - the TypeScript properties of a `CfnTrafficMirrorSessionProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::TrafficMirrorSession` resource.\n */\n// @ts-ignore TS6133\nfunction cfnTrafficMirrorSessionPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnTrafficMirrorSessionPropsValidator(properties).assertSuccess();\n    return {\n        NetworkInterfaceId: cdk.stringToCloudFormation(properties.networkInterfaceId),\n        SessionNumber: cdk.numberToCloudFormation(properties.sessionNumber),\n        TrafficMirrorFilterId: cdk.stringToCloudFormation(properties.trafficMirrorFilterId),\n        TrafficMirrorTargetId: cdk.stringToCloudFormation(properties.trafficMirrorTargetId),\n        Description: cdk.stringToCloudFormation(properties.description),\n        PacketLength: cdk.numberToCloudFormation(properties.packetLength),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n        VirtualNetworkId: cdk.numberToCloudFormation(properties.virtualNetworkId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnTrafficMirrorSessionPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnTrafficMirrorSessionProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnTrafficMirrorSessionProps>();\n    ret.addPropertyResult('networkInterfaceId', 'NetworkInterfaceId', cfn_parse.FromCloudFormation.getString(properties.NetworkInterfaceId));\n    ret.addPropertyResult('sessionNumber', 'SessionNumber', cfn_parse.FromCloudFormation.getNumber(properties.SessionNumber));\n    ret.addPropertyResult('trafficMirrorFilterId', 'TrafficMirrorFilterId', cfn_parse.FromCloudFormation.getString(properties.TrafficMirrorFilterId));\n    ret.addPropertyResult('trafficMirrorTargetId', 'TrafficMirrorTargetId', cfn_parse.FromCloudFormation.getString(properties.TrafficMirrorTargetId));\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('packetLength', 'PacketLength', properties.PacketLength != null ? cfn_parse.FromCloudFormation.getNumber(properties.PacketLength) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addPropertyResult('virtualNetworkId', 'VirtualNetworkId', properties.VirtualNetworkId != null ? cfn_parse.FromCloudFormation.getNumber(properties.VirtualNetworkId) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::TrafficMirrorSession`\n *\n * Creates a Traffic Mirror session.\n *\n * A Traffic Mirror session actively copies packets from a Traffic Mirror source to a Traffic Mirror target. Create a filter, and then assign it to the session to define a subset of the traffic to mirror, for example all TCP traffic.\n *\n * The Traffic Mirror source and the Traffic Mirror target (monitoring appliances) can be in the same VPC, or in a different VPC connected via VPC peering or a transit gateway.\n *\n * By default, no traffic is mirrored. Use [AWS::EC2::TrafficMirrorFilterRule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html) to specify filter rules that specify the traffic to mirror.\n *\n * @cloudformationResource AWS::EC2::TrafficMirrorSession\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html\n */\nexport class CfnTrafficMirrorSession extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::TrafficMirrorSession\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnTrafficMirrorSession {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnTrafficMirrorSessionPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnTrafficMirrorSession(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the source network interface.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-networkinterfaceid\n     */\n    public networkInterfaceId: string;\n\n    /**\n     * The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions. The first session with a matching filter is the one that mirrors the packets.\n     *\n     * Valid values are 1-32766.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-sessionnumber\n     */\n    public sessionNumber: number;\n\n    /**\n     * The ID of the Traffic Mirror filter.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-trafficmirrorfilterid\n     */\n    public trafficMirrorFilterId: string;\n\n    /**\n     * The ID of the Traffic Mirror target.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-trafficmirrortargetid\n     */\n    public trafficMirrorTargetId: string;\n\n    /**\n     * The description of the Traffic Mirror session.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-description\n     */\n    public description: string | undefined;\n\n    /**\n     * The number of bytes in each packet to mirror. These are bytes after the VXLAN header. Do not specify this parameter when you want to mirror the entire packet. To mirror a subset of the packet, set this to the length (in bytes) that you want to mirror. For example, if you set this value to 100, then the first 100 bytes that meet the filter criteria are copied to the target.\n     *\n     * If you do not want to mirror the entire packet, use the `PacketLength` parameter to specify the number of bytes in each packet to mirror.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-packetlength\n     */\n    public packetLength: number | undefined;\n\n    /**\n     * The tags to assign to a Traffic Mirror session.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * The VXLAN ID for the Traffic Mirror session. For more information about the VXLAN protocol, see [RFC 7348](https://docs.aws.amazon.com/https://tools.ietf.org/html/rfc7348) . If you do not specify a `VirtualNetworkId` , an account-wide unique id is chosen at random.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-virtualnetworkid\n     */\n    public virtualNetworkId: number | undefined;\n\n    /**\n     * Create a new `AWS::EC2::TrafficMirrorSession`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnTrafficMirrorSessionProps) {\n        super(scope, id, { type: CfnTrafficMirrorSession.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'networkInterfaceId', this);\n        cdk.requireProperty(props, 'sessionNumber', this);\n        cdk.requireProperty(props, 'trafficMirrorFilterId', this);\n        cdk.requireProperty(props, 'trafficMirrorTargetId', this);\n\n        this.networkInterfaceId = props.networkInterfaceId;\n        this.sessionNumber = props.sessionNumber;\n        this.trafficMirrorFilterId = props.trafficMirrorFilterId;\n        this.trafficMirrorTargetId = props.trafficMirrorTargetId;\n        this.description = props.description;\n        this.packetLength = props.packetLength;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::TrafficMirrorSession\", props.tags, { tagPropertyName: 'tags' });\n        this.virtualNetworkId = props.virtualNetworkId;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnTrafficMirrorSession.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            networkInterfaceId: this.networkInterfaceId,\n            sessionNumber: this.sessionNumber,\n            trafficMirrorFilterId: this.trafficMirrorFilterId,\n            trafficMirrorTargetId: this.trafficMirrorTargetId,\n            description: this.description,\n            packetLength: this.packetLength,\n            tags: this.tags.renderTags(),\n            virtualNetworkId: this.virtualNetworkId,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnTrafficMirrorSessionPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnTrafficMirrorTarget`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html\n */\nexport interface CfnTrafficMirrorTargetProps {\n\n    /**\n     * The description of the Traffic Mirror target.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html#cfn-ec2-trafficmirrortarget-description\n     */\n    readonly description?: string;\n\n    /**\n     * The network interface ID that is associated with the target.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html#cfn-ec2-trafficmirrortarget-networkinterfaceid\n     */\n    readonly networkInterfaceId?: string;\n\n    /**\n     * The Amazon Resource Name (ARN) of the Network Load Balancer that is associated with the target.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html#cfn-ec2-trafficmirrortarget-networkloadbalancerarn\n     */\n    readonly networkLoadBalancerArn?: string;\n\n    /**\n     * The tags to assign to the Traffic Mirror target.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html#cfn-ec2-trafficmirrortarget-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnTrafficMirrorTargetProps`\n *\n * @param properties - the TypeScript properties of a `CfnTrafficMirrorTargetProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnTrafficMirrorTargetPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('networkInterfaceId', cdk.validateString)(properties.networkInterfaceId));\n    errors.collect(cdk.propertyValidator('networkLoadBalancerArn', cdk.validateString)(properties.networkLoadBalancerArn));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnTrafficMirrorTargetProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::TrafficMirrorTarget` resource\n *\n * @param properties - the TypeScript properties of a `CfnTrafficMirrorTargetProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::TrafficMirrorTarget` resource.\n */\n// @ts-ignore TS6133\nfunction cfnTrafficMirrorTargetPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnTrafficMirrorTargetPropsValidator(properties).assertSuccess();\n    return {\n        Description: cdk.stringToCloudFormation(properties.description),\n        NetworkInterfaceId: cdk.stringToCloudFormation(properties.networkInterfaceId),\n        NetworkLoadBalancerArn: cdk.stringToCloudFormation(properties.networkLoadBalancerArn),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnTrafficMirrorTargetPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnTrafficMirrorTargetProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnTrafficMirrorTargetProps>();\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('networkInterfaceId', 'NetworkInterfaceId', properties.NetworkInterfaceId != null ? cfn_parse.FromCloudFormation.getString(properties.NetworkInterfaceId) : undefined);\n    ret.addPropertyResult('networkLoadBalancerArn', 'NetworkLoadBalancerArn', properties.NetworkLoadBalancerArn != null ? cfn_parse.FromCloudFormation.getString(properties.NetworkLoadBalancerArn) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::TrafficMirrorTarget`\n *\n * Specifies a target for your Traffic Mirror session.\n *\n * A Traffic Mirror target is the destination for mirrored traffic. The Traffic Mirror source and the Traffic Mirror target (monitoring appliances) can be in the same VPC, or in different VPCs connected via VPC peering or a transit gateway.\n *\n * A Traffic Mirror target can be a network interface, or a Network Load Balancer.\n *\n * To use the target in a Traffic Mirror session, use [AWS::EC2::TrafficMirrorSession](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html) .\n *\n * @cloudformationResource AWS::EC2::TrafficMirrorTarget\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html\n */\nexport class CfnTrafficMirrorTarget extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::TrafficMirrorTarget\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnTrafficMirrorTarget {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnTrafficMirrorTargetPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnTrafficMirrorTarget(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The description of the Traffic Mirror target.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html#cfn-ec2-trafficmirrortarget-description\n     */\n    public description: string | undefined;\n\n    /**\n     * The network interface ID that is associated with the target.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html#cfn-ec2-trafficmirrortarget-networkinterfaceid\n     */\n    public networkInterfaceId: string | undefined;\n\n    /**\n     * The Amazon Resource Name (ARN) of the Network Load Balancer that is associated with the target.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html#cfn-ec2-trafficmirrortarget-networkloadbalancerarn\n     */\n    public networkLoadBalancerArn: string | undefined;\n\n    /**\n     * The tags to assign to the Traffic Mirror target.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html#cfn-ec2-trafficmirrortarget-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EC2::TrafficMirrorTarget`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnTrafficMirrorTargetProps = {}) {\n        super(scope, id, { type: CfnTrafficMirrorTarget.CFN_RESOURCE_TYPE_NAME, properties: props });\n\n        this.description = props.description;\n        this.networkInterfaceId = props.networkInterfaceId;\n        this.networkLoadBalancerArn = props.networkLoadBalancerArn;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::TrafficMirrorTarget\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnTrafficMirrorTarget.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            description: this.description,\n            networkInterfaceId: this.networkInterfaceId,\n            networkLoadBalancerArn: this.networkLoadBalancerArn,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnTrafficMirrorTargetPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnTransitGateway`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html\n */\nexport interface CfnTransitGatewayProps {\n\n    /**\n     * A private Autonomous System Number (ASN) for the Amazon side of a BGP session. The range is 64512 to 65534 for 16-bit ASNs. The default is 64512.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-amazonsideasn\n     */\n    readonly amazonSideAsn?: number;\n\n    /**\n     * The ID of the default association route table.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-associationdefaultroutetableid\n     */\n    readonly associationDefaultRouteTableId?: string;\n\n    /**\n     * Enable or disable automatic acceptance of attachment requests. Disabled by default.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-autoacceptsharedattachments\n     */\n    readonly autoAcceptSharedAttachments?: string;\n\n    /**\n     * Enable or disable automatic association with the default association route table. Enabled by default.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-defaultroutetableassociation\n     */\n    readonly defaultRouteTableAssociation?: string;\n\n    /**\n     * Enable or disable automatic propagation of routes to the default propagation route table. Enabled by default.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-defaultroutetablepropagation\n     */\n    readonly defaultRouteTablePropagation?: string;\n\n    /**\n     * The description of the transit gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-description\n     */\n    readonly description?: string;\n\n    /**\n     * Enable or disable DNS support. Enabled by default.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-dnssupport\n     */\n    readonly dnsSupport?: string;\n\n    /**\n     * Indicates whether multicast is enabled on the transit gateway\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-multicastsupport\n     */\n    readonly multicastSupport?: string;\n\n    /**\n     * The ID of the default propagation route table.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-propagationdefaultroutetableid\n     */\n    readonly propagationDefaultRouteTableId?: string;\n\n    /**\n     * The tags for the transit gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n\n    /**\n     * The transit gateway CIDR blocks.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-transitgatewaycidrblocks\n     */\n    readonly transitGatewayCidrBlocks?: string[];\n\n    /**\n     * Enable or disable Equal Cost Multipath Protocol support. Enabled by default.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-vpnecmpsupport\n     */\n    readonly vpnEcmpSupport?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnTransitGatewayProps`\n *\n * @param properties - the TypeScript properties of a `CfnTransitGatewayProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnTransitGatewayPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('amazonSideAsn', cdk.validateNumber)(properties.amazonSideAsn));\n    errors.collect(cdk.propertyValidator('associationDefaultRouteTableId', cdk.validateString)(properties.associationDefaultRouteTableId));\n    errors.collect(cdk.propertyValidator('autoAcceptSharedAttachments', cdk.validateString)(properties.autoAcceptSharedAttachments));\n    errors.collect(cdk.propertyValidator('defaultRouteTableAssociation', cdk.validateString)(properties.defaultRouteTableAssociation));\n    errors.collect(cdk.propertyValidator('defaultRouteTablePropagation', cdk.validateString)(properties.defaultRouteTablePropagation));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('dnsSupport', cdk.validateString)(properties.dnsSupport));\n    errors.collect(cdk.propertyValidator('multicastSupport', cdk.validateString)(properties.multicastSupport));\n    errors.collect(cdk.propertyValidator('propagationDefaultRouteTableId', cdk.validateString)(properties.propagationDefaultRouteTableId));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('transitGatewayCidrBlocks', cdk.listValidator(cdk.validateString))(properties.transitGatewayCidrBlocks));\n    errors.collect(cdk.propertyValidator('vpnEcmpSupport', cdk.validateString)(properties.vpnEcmpSupport));\n    return errors.wrap('supplied properties not correct for \"CfnTransitGatewayProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::TransitGateway` resource\n *\n * @param properties - the TypeScript properties of a `CfnTransitGatewayProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::TransitGateway` resource.\n */\n// @ts-ignore TS6133\nfunction cfnTransitGatewayPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnTransitGatewayPropsValidator(properties).assertSuccess();\n    return {\n        AmazonSideAsn: cdk.numberToCloudFormation(properties.amazonSideAsn),\n        AssociationDefaultRouteTableId: cdk.stringToCloudFormation(properties.associationDefaultRouteTableId),\n        AutoAcceptSharedAttachments: cdk.stringToCloudFormation(properties.autoAcceptSharedAttachments),\n        DefaultRouteTableAssociation: cdk.stringToCloudFormation(properties.defaultRouteTableAssociation),\n        DefaultRouteTablePropagation: cdk.stringToCloudFormation(properties.defaultRouteTablePropagation),\n        Description: cdk.stringToCloudFormation(properties.description),\n        DnsSupport: cdk.stringToCloudFormation(properties.dnsSupport),\n        MulticastSupport: cdk.stringToCloudFormation(properties.multicastSupport),\n        PropagationDefaultRouteTableId: cdk.stringToCloudFormation(properties.propagationDefaultRouteTableId),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n        TransitGatewayCidrBlocks: cdk.listMapper(cdk.stringToCloudFormation)(properties.transitGatewayCidrBlocks),\n        VpnEcmpSupport: cdk.stringToCloudFormation(properties.vpnEcmpSupport),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnTransitGatewayPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnTransitGatewayProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnTransitGatewayProps>();\n    ret.addPropertyResult('amazonSideAsn', 'AmazonSideAsn', properties.AmazonSideAsn != null ? cfn_parse.FromCloudFormation.getNumber(properties.AmazonSideAsn) : undefined);\n    ret.addPropertyResult('associationDefaultRouteTableId', 'AssociationDefaultRouteTableId', properties.AssociationDefaultRouteTableId != null ? cfn_parse.FromCloudFormation.getString(properties.AssociationDefaultRouteTableId) : undefined);\n    ret.addPropertyResult('autoAcceptSharedAttachments', 'AutoAcceptSharedAttachments', properties.AutoAcceptSharedAttachments != null ? cfn_parse.FromCloudFormation.getString(properties.AutoAcceptSharedAttachments) : undefined);\n    ret.addPropertyResult('defaultRouteTableAssociation', 'DefaultRouteTableAssociation', properties.DefaultRouteTableAssociation != null ? cfn_parse.FromCloudFormation.getString(properties.DefaultRouteTableAssociation) : undefined);\n    ret.addPropertyResult('defaultRouteTablePropagation', 'DefaultRouteTablePropagation', properties.DefaultRouteTablePropagation != null ? cfn_parse.FromCloudFormation.getString(properties.DefaultRouteTablePropagation) : undefined);\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('dnsSupport', 'DnsSupport', properties.DnsSupport != null ? cfn_parse.FromCloudFormation.getString(properties.DnsSupport) : undefined);\n    ret.addPropertyResult('multicastSupport', 'MulticastSupport', properties.MulticastSupport != null ? cfn_parse.FromCloudFormation.getString(properties.MulticastSupport) : undefined);\n    ret.addPropertyResult('propagationDefaultRouteTableId', 'PropagationDefaultRouteTableId', properties.PropagationDefaultRouteTableId != null ? cfn_parse.FromCloudFormation.getString(properties.PropagationDefaultRouteTableId) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addPropertyResult('transitGatewayCidrBlocks', 'TransitGatewayCidrBlocks', properties.TransitGatewayCidrBlocks != null ? cfn_parse.FromCloudFormation.getStringArray(properties.TransitGatewayCidrBlocks) : undefined);\n    ret.addPropertyResult('vpnEcmpSupport', 'VpnEcmpSupport', properties.VpnEcmpSupport != null ? cfn_parse.FromCloudFormation.getString(properties.VpnEcmpSupport) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::TransitGateway`\n *\n * Specifies a transit gateway.\n *\n * You can use a transit gateway to interconnect your virtual private clouds (VPC) and on-premises networks. After the transit gateway enters the `available` state, you can attach your VPCs and VPN connections to the transit gateway.\n *\n * To attach your VPCs, use [AWS::EC2::TransitGatewayAttachment](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html) .\n *\n * To attach a VPN connection, use [AWS::EC2::CustomerGateway](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html) to create a customer gateway and specify the ID of the customer gateway and the ID of the transit gateway in a call to [AWS::EC2::VPNConnection](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html) .\n *\n * When you create a transit gateway, we create a default transit gateway route table and use it as the default association route table and the default propagation route table. You can use [AWS::EC2::TransitGatewayRouteTable](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html) to create additional transit gateway route tables. If you disable automatic route propagation, we do not create a default transit gateway route table. You can use [AWS::EC2::TransitGatewayRouteTablePropagation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html) to propagate routes from a resource attachment to a transit gateway route table. If you disable automatic associations, you can use [AWS::EC2::TransitGatewayRouteTableAssociation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html) to associate a resource attachment with a transit gateway route table.\n *\n * @cloudformationResource AWS::EC2::TransitGateway\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html\n */\nexport class CfnTransitGateway extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::TransitGateway\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnTransitGateway {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnTransitGatewayPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnTransitGateway(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the transit gateway.\n     * @cloudformationAttribute Id\n     */\n    public readonly attrId: string;\n\n    /**\n     * A private Autonomous System Number (ASN) for the Amazon side of a BGP session. The range is 64512 to 65534 for 16-bit ASNs. The default is 64512.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-amazonsideasn\n     */\n    public amazonSideAsn: number | undefined;\n\n    /**\n     * The ID of the default association route table.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-associationdefaultroutetableid\n     */\n    public associationDefaultRouteTableId: string | undefined;\n\n    /**\n     * Enable or disable automatic acceptance of attachment requests. Disabled by default.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-autoacceptsharedattachments\n     */\n    public autoAcceptSharedAttachments: string | undefined;\n\n    /**\n     * Enable or disable automatic association with the default association route table. Enabled by default.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-defaultroutetableassociation\n     */\n    public defaultRouteTableAssociation: string | undefined;\n\n    /**\n     * Enable or disable automatic propagation of routes to the default propagation route table. Enabled by default.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-defaultroutetablepropagation\n     */\n    public defaultRouteTablePropagation: string | undefined;\n\n    /**\n     * The description of the transit gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-description\n     */\n    public description: string | undefined;\n\n    /**\n     * Enable or disable DNS support. Enabled by default.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-dnssupport\n     */\n    public dnsSupport: string | undefined;\n\n    /**\n     * Indicates whether multicast is enabled on the transit gateway\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-multicastsupport\n     */\n    public multicastSupport: string | undefined;\n\n    /**\n     * The ID of the default propagation route table.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-propagationdefaultroutetableid\n     */\n    public propagationDefaultRouteTableId: string | undefined;\n\n    /**\n     * The tags for the transit gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * The transit gateway CIDR blocks.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-transitgatewaycidrblocks\n     */\n    public transitGatewayCidrBlocks: string[] | undefined;\n\n    /**\n     * Enable or disable Equal Cost Multipath Protocol support. Enabled by default.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-vpnecmpsupport\n     */\n    public vpnEcmpSupport: string | undefined;\n\n    /**\n     * Create a new `AWS::EC2::TransitGateway`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnTransitGatewayProps = {}) {\n        super(scope, id, { type: CfnTransitGateway.CFN_RESOURCE_TYPE_NAME, properties: props });\n        this.attrId = cdk.Token.asString(this.getAtt('Id'));\n\n        this.amazonSideAsn = props.amazonSideAsn;\n        this.associationDefaultRouteTableId = props.associationDefaultRouteTableId;\n        this.autoAcceptSharedAttachments = props.autoAcceptSharedAttachments;\n        this.defaultRouteTableAssociation = props.defaultRouteTableAssociation;\n        this.defaultRouteTablePropagation = props.defaultRouteTablePropagation;\n        this.description = props.description;\n        this.dnsSupport = props.dnsSupport;\n        this.multicastSupport = props.multicastSupport;\n        this.propagationDefaultRouteTableId = props.propagationDefaultRouteTableId;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::TransitGateway\", props.tags, { tagPropertyName: 'tags' });\n        this.transitGatewayCidrBlocks = props.transitGatewayCidrBlocks;\n        this.vpnEcmpSupport = props.vpnEcmpSupport;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnTransitGateway.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            amazonSideAsn: this.amazonSideAsn,\n            associationDefaultRouteTableId: this.associationDefaultRouteTableId,\n            autoAcceptSharedAttachments: this.autoAcceptSharedAttachments,\n            defaultRouteTableAssociation: this.defaultRouteTableAssociation,\n            defaultRouteTablePropagation: this.defaultRouteTablePropagation,\n            description: this.description,\n            dnsSupport: this.dnsSupport,\n            multicastSupport: this.multicastSupport,\n            propagationDefaultRouteTableId: this.propagationDefaultRouteTableId,\n            tags: this.tags.renderTags(),\n            transitGatewayCidrBlocks: this.transitGatewayCidrBlocks,\n            vpnEcmpSupport: this.vpnEcmpSupport,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnTransitGatewayPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnTransitGatewayAttachment`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html\n */\nexport interface CfnTransitGatewayAttachmentProps {\n\n    /**\n     * The IDs of one or more subnets. You can specify only one subnet per Availability Zone. You must specify at least one subnet, but we recommend that you specify two subnets for better availability. The transit gateway uses one IP address from each specified subnet.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-subnetids\n     */\n    readonly subnetIds: string[];\n\n    /**\n     * The ID of the transit gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-transitgatewayid\n     */\n    readonly transitGatewayId: string;\n\n    /**\n     * The ID of the VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-vpcid\n     */\n    readonly vpcId: string;\n\n    /**\n     * The tags for the attachment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnTransitGatewayAttachmentProps`\n *\n * @param properties - the TypeScript properties of a `CfnTransitGatewayAttachmentProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnTransitGatewayAttachmentPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('subnetIds', cdk.requiredValidator)(properties.subnetIds));\n    errors.collect(cdk.propertyValidator('subnetIds', cdk.listValidator(cdk.validateString))(properties.subnetIds));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('transitGatewayId', cdk.requiredValidator)(properties.transitGatewayId));\n    errors.collect(cdk.propertyValidator('transitGatewayId', cdk.validateString)(properties.transitGatewayId));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.requiredValidator)(properties.vpcId));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.validateString)(properties.vpcId));\n    return errors.wrap('supplied properties not correct for \"CfnTransitGatewayAttachmentProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::TransitGatewayAttachment` resource\n *\n * @param properties - the TypeScript properties of a `CfnTransitGatewayAttachmentProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::TransitGatewayAttachment` resource.\n */\n// @ts-ignore TS6133\nfunction cfnTransitGatewayAttachmentPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnTransitGatewayAttachmentPropsValidator(properties).assertSuccess();\n    return {\n        SubnetIds: cdk.listMapper(cdk.stringToCloudFormation)(properties.subnetIds),\n        TransitGatewayId: cdk.stringToCloudFormation(properties.transitGatewayId),\n        VpcId: cdk.stringToCloudFormation(properties.vpcId),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnTransitGatewayAttachmentPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnTransitGatewayAttachmentProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnTransitGatewayAttachmentProps>();\n    ret.addPropertyResult('subnetIds', 'SubnetIds', cfn_parse.FromCloudFormation.getStringArray(properties.SubnetIds));\n    ret.addPropertyResult('transitGatewayId', 'TransitGatewayId', cfn_parse.FromCloudFormation.getString(properties.TransitGatewayId));\n    ret.addPropertyResult('vpcId', 'VpcId', cfn_parse.FromCloudFormation.getString(properties.VpcId));\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::TransitGatewayAttachment`\n *\n * Attaches a VPC to a transit gateway.\n *\n * If you attach a VPC with a CIDR range that overlaps the CIDR range of a VPC that is already attached, the new VPC CIDR range is not propagated to the default propagation route table.\n *\n * To send VPC traffic to an attached transit gateway, add a route to the VPC route table using [AWS::EC2::Route](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html) .\n *\n * @cloudformationResource AWS::EC2::TransitGatewayAttachment\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html\n */\nexport class CfnTransitGatewayAttachment extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::TransitGatewayAttachment\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnTransitGatewayAttachment {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnTransitGatewayAttachmentPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnTransitGatewayAttachment(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The IDs of one or more subnets. You can specify only one subnet per Availability Zone. You must specify at least one subnet, but we recommend that you specify two subnets for better availability. The transit gateway uses one IP address from each specified subnet.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-subnetids\n     */\n    public subnetIds: string[];\n\n    /**\n     * The ID of the transit gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-transitgatewayid\n     */\n    public transitGatewayId: string;\n\n    /**\n     * The ID of the VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-vpcid\n     */\n    public vpcId: string;\n\n    /**\n     * The tags for the attachment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EC2::TransitGatewayAttachment`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnTransitGatewayAttachmentProps) {\n        super(scope, id, { type: CfnTransitGatewayAttachment.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'subnetIds', this);\n        cdk.requireProperty(props, 'transitGatewayId', this);\n        cdk.requireProperty(props, 'vpcId', this);\n\n        this.subnetIds = props.subnetIds;\n        this.transitGatewayId = props.transitGatewayId;\n        this.vpcId = props.vpcId;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::TransitGatewayAttachment\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnTransitGatewayAttachment.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            subnetIds: this.subnetIds,\n            transitGatewayId: this.transitGatewayId,\n            vpcId: this.vpcId,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnTransitGatewayAttachmentPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnTransitGatewayConnect`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayconnect.html\n */\nexport interface CfnTransitGatewayConnectProps {\n\n    /**\n     * The Connect attachment options.\n     *\n     * - protocol (gre)\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayconnect.html#cfn-ec2-transitgatewayconnect-options\n     */\n    readonly options: CfnTransitGatewayConnect.TransitGatewayConnectOptionsProperty | cdk.IResolvable;\n\n    /**\n     * The ID of the attachment from which the Connect attachment was created.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayconnect.html#cfn-ec2-transitgatewayconnect-transporttransitgatewayattachmentid\n     */\n    readonly transportTransitGatewayAttachmentId: string;\n\n    /**\n     * The tags for the attachment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayconnect.html#cfn-ec2-transitgatewayconnect-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnTransitGatewayConnectProps`\n *\n * @param properties - the TypeScript properties of a `CfnTransitGatewayConnectProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnTransitGatewayConnectPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('options', cdk.requiredValidator)(properties.options));\n    errors.collect(cdk.propertyValidator('options', CfnTransitGatewayConnect_TransitGatewayConnectOptionsPropertyValidator)(properties.options));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('transportTransitGatewayAttachmentId', cdk.requiredValidator)(properties.transportTransitGatewayAttachmentId));\n    errors.collect(cdk.propertyValidator('transportTransitGatewayAttachmentId', cdk.validateString)(properties.transportTransitGatewayAttachmentId));\n    return errors.wrap('supplied properties not correct for \"CfnTransitGatewayConnectProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::TransitGatewayConnect` resource\n *\n * @param properties - the TypeScript properties of a `CfnTransitGatewayConnectProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::TransitGatewayConnect` resource.\n */\n// @ts-ignore TS6133\nfunction cfnTransitGatewayConnectPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnTransitGatewayConnectPropsValidator(properties).assertSuccess();\n    return {\n        Options: cfnTransitGatewayConnectTransitGatewayConnectOptionsPropertyToCloudFormation(properties.options),\n        TransportTransitGatewayAttachmentId: cdk.stringToCloudFormation(properties.transportTransitGatewayAttachmentId),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnTransitGatewayConnectPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnTransitGatewayConnectProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnTransitGatewayConnectProps>();\n    ret.addPropertyResult('options', 'Options', CfnTransitGatewayConnectTransitGatewayConnectOptionsPropertyFromCloudFormation(properties.Options));\n    ret.addPropertyResult('transportTransitGatewayAttachmentId', 'TransportTransitGatewayAttachmentId', cfn_parse.FromCloudFormation.getString(properties.TransportTransitGatewayAttachmentId));\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::TransitGatewayConnect`\n *\n * Creates a Connect attachment from a specified transit gateway attachment. A Connect attachment is a GRE-based tunnel attachment that you can use to establish a connection between a transit gateway and an appliance.\n *\n * A Connect attachment uses an existing VPC or AWS Direct Connect attachment as the underlying transport mechanism.\n *\n * @cloudformationResource AWS::EC2::TransitGatewayConnect\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayconnect.html\n */\nexport class CfnTransitGatewayConnect extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::TransitGatewayConnect\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnTransitGatewayConnect {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnTransitGatewayConnectPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnTransitGatewayConnect(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The creation time.\n     * @cloudformationAttribute CreationTime\n     */\n    public readonly attrCreationTime: string;\n\n    /**\n     * The state of the attachment.\n     * @cloudformationAttribute State\n     */\n    public readonly attrState: string;\n\n    /**\n     * The ID of the transit gateway attachment.\n     * @cloudformationAttribute TransitGatewayAttachmentId\n     */\n    public readonly attrTransitGatewayAttachmentId: string;\n\n    /**\n     * The ID of the transit gateway.\n     * @cloudformationAttribute TransitGatewayId\n     */\n    public readonly attrTransitGatewayId: string;\n\n    /**\n     * The Connect attachment options.\n     *\n     * - protocol (gre)\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayconnect.html#cfn-ec2-transitgatewayconnect-options\n     */\n    public options: CfnTransitGatewayConnect.TransitGatewayConnectOptionsProperty | cdk.IResolvable;\n\n    /**\n     * The ID of the attachment from which the Connect attachment was created.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayconnect.html#cfn-ec2-transitgatewayconnect-transporttransitgatewayattachmentid\n     */\n    public transportTransitGatewayAttachmentId: string;\n\n    /**\n     * The tags for the attachment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayconnect.html#cfn-ec2-transitgatewayconnect-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EC2::TransitGatewayConnect`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnTransitGatewayConnectProps) {\n        super(scope, id, { type: CfnTransitGatewayConnect.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'options', this);\n        cdk.requireProperty(props, 'transportTransitGatewayAttachmentId', this);\n        this.attrCreationTime = cdk.Token.asString(this.getAtt('CreationTime'));\n        this.attrState = cdk.Token.asString(this.getAtt('State'));\n        this.attrTransitGatewayAttachmentId = cdk.Token.asString(this.getAtt('TransitGatewayAttachmentId'));\n        this.attrTransitGatewayId = cdk.Token.asString(this.getAtt('TransitGatewayId'));\n\n        this.options = props.options;\n        this.transportTransitGatewayAttachmentId = props.transportTransitGatewayAttachmentId;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::TransitGatewayConnect\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnTransitGatewayConnect.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            options: this.options,\n            transportTransitGatewayAttachmentId: this.transportTransitGatewayAttachmentId,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnTransitGatewayConnectPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnTransitGatewayConnect {\n    /**\n     * Describes the Connect attachment options.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-transitgatewayconnect-transitgatewayconnectoptions.html\n     */\n    export interface TransitGatewayConnectOptionsProperty {\n        /**\n         * The tunnel protocol.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-transitgatewayconnect-transitgatewayconnectoptions.html#cfn-ec2-transitgatewayconnect-transitgatewayconnectoptions-protocol\n         */\n        readonly protocol?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `TransitGatewayConnectOptionsProperty`\n *\n * @param properties - the TypeScript properties of a `TransitGatewayConnectOptionsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnTransitGatewayConnect_TransitGatewayConnectOptionsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('protocol', cdk.validateString)(properties.protocol));\n    return errors.wrap('supplied properties not correct for \"TransitGatewayConnectOptionsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::TransitGatewayConnect.TransitGatewayConnectOptions` resource\n *\n * @param properties - the TypeScript properties of a `TransitGatewayConnectOptionsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::TransitGatewayConnect.TransitGatewayConnectOptions` resource.\n */\n// @ts-ignore TS6133\nfunction cfnTransitGatewayConnectTransitGatewayConnectOptionsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnTransitGatewayConnect_TransitGatewayConnectOptionsPropertyValidator(properties).assertSuccess();\n    return {\n        Protocol: cdk.stringToCloudFormation(properties.protocol),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnTransitGatewayConnectTransitGatewayConnectOptionsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnTransitGatewayConnect.TransitGatewayConnectOptionsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnTransitGatewayConnect.TransitGatewayConnectOptionsProperty>();\n    ret.addPropertyResult('protocol', 'Protocol', properties.Protocol != null ? cfn_parse.FromCloudFormation.getString(properties.Protocol) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnTransitGatewayMulticastDomain`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomain.html\n */\nexport interface CfnTransitGatewayMulticastDomainProps {\n\n    /**\n     * The ID of the transit gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomain.html#cfn-ec2-transitgatewaymulticastdomain-transitgatewayid\n     */\n    readonly transitGatewayId: string;\n\n    /**\n     * The options for the transit gateway multicast domain.\n     *\n     * - AutoAcceptSharedAssociations (enable | disable)\n     * - Igmpv2Support (enable | disable)\n     * - StaticSourcesSupport (enable | disable)\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomain.html#cfn-ec2-transitgatewaymulticastdomain-options\n     */\n    readonly options?: any | cdk.IResolvable;\n\n    /**\n     * The tags for the transit gateway multicast domain.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomain.html#cfn-ec2-transitgatewaymulticastdomain-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnTransitGatewayMulticastDomainProps`\n *\n * @param properties - the TypeScript properties of a `CfnTransitGatewayMulticastDomainProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnTransitGatewayMulticastDomainPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('options', cdk.validateObject)(properties.options));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('transitGatewayId', cdk.requiredValidator)(properties.transitGatewayId));\n    errors.collect(cdk.propertyValidator('transitGatewayId', cdk.validateString)(properties.transitGatewayId));\n    return errors.wrap('supplied properties not correct for \"CfnTransitGatewayMulticastDomainProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::TransitGatewayMulticastDomain` resource\n *\n * @param properties - the TypeScript properties of a `CfnTransitGatewayMulticastDomainProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::TransitGatewayMulticastDomain` resource.\n */\n// @ts-ignore TS6133\nfunction cfnTransitGatewayMulticastDomainPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnTransitGatewayMulticastDomainPropsValidator(properties).assertSuccess();\n    return {\n        TransitGatewayId: cdk.stringToCloudFormation(properties.transitGatewayId),\n        Options: cdk.objectToCloudFormation(properties.options),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnTransitGatewayMulticastDomainPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnTransitGatewayMulticastDomainProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnTransitGatewayMulticastDomainProps>();\n    ret.addPropertyResult('transitGatewayId', 'TransitGatewayId', cfn_parse.FromCloudFormation.getString(properties.TransitGatewayId));\n    ret.addPropertyResult('options', 'Options', properties.Options != null ? cfn_parse.FromCloudFormation.getAny(properties.Options) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::TransitGatewayMulticastDomain`\n *\n * Creates a multicast domain using the specified transit gateway.\n *\n * The transit gateway must be in the available state before you create a domain.\n *\n * @cloudformationResource AWS::EC2::TransitGatewayMulticastDomain\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomain.html\n */\nexport class CfnTransitGatewayMulticastDomain extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::TransitGatewayMulticastDomain\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnTransitGatewayMulticastDomain {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnTransitGatewayMulticastDomainPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnTransitGatewayMulticastDomain(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The time the multicast domain was created.\n     * @cloudformationAttribute CreationTime\n     */\n    public readonly attrCreationTime: string;\n\n    /**\n     * The state of the multicast domain.\n     * @cloudformationAttribute State\n     */\n    public readonly attrState: string;\n\n    /**\n     * The Amazon Resource Name (ARN) of the multicast domain.\n     * @cloudformationAttribute TransitGatewayMulticastDomainArn\n     */\n    public readonly attrTransitGatewayMulticastDomainArn: string;\n\n    /**\n     * The ID of the multicast domain.\n     * @cloudformationAttribute TransitGatewayMulticastDomainId\n     */\n    public readonly attrTransitGatewayMulticastDomainId: string;\n\n    /**\n     * The ID of the transit gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomain.html#cfn-ec2-transitgatewaymulticastdomain-transitgatewayid\n     */\n    public transitGatewayId: string;\n\n    /**\n     * The options for the transit gateway multicast domain.\n     *\n     * - AutoAcceptSharedAssociations (enable | disable)\n     * - Igmpv2Support (enable | disable)\n     * - StaticSourcesSupport (enable | disable)\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomain.html#cfn-ec2-transitgatewaymulticastdomain-options\n     */\n    public options: any | cdk.IResolvable | undefined;\n\n    /**\n     * The tags for the transit gateway multicast domain.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomain.html#cfn-ec2-transitgatewaymulticastdomain-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EC2::TransitGatewayMulticastDomain`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnTransitGatewayMulticastDomainProps) {\n        super(scope, id, { type: CfnTransitGatewayMulticastDomain.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'transitGatewayId', this);\n        this.attrCreationTime = cdk.Token.asString(this.getAtt('CreationTime'));\n        this.attrState = cdk.Token.asString(this.getAtt('State'));\n        this.attrTransitGatewayMulticastDomainArn = cdk.Token.asString(this.getAtt('TransitGatewayMulticastDomainArn'));\n        this.attrTransitGatewayMulticastDomainId = cdk.Token.asString(this.getAtt('TransitGatewayMulticastDomainId'));\n\n        this.transitGatewayId = props.transitGatewayId;\n        this.options = props.options;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::TransitGatewayMulticastDomain\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnTransitGatewayMulticastDomain.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            transitGatewayId: this.transitGatewayId,\n            options: this.options,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnTransitGatewayMulticastDomainPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnTransitGatewayMulticastDomainAssociation`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html\n */\nexport interface CfnTransitGatewayMulticastDomainAssociationProps {\n\n    /**\n     * The IDs of the subnets to associate with the transit gateway multicast domain.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html#cfn-ec2-transitgatewaymulticastdomainassociation-subnetid\n     */\n    readonly subnetId: string;\n\n    /**\n     * The ID of the transit gateway attachment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html#cfn-ec2-transitgatewaymulticastdomainassociation-transitgatewayattachmentid\n     */\n    readonly transitGatewayAttachmentId: string;\n\n    /**\n     * The ID of the transit gateway multicast domain.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html#cfn-ec2-transitgatewaymulticastdomainassociation-transitgatewaymulticastdomainid\n     */\n    readonly transitGatewayMulticastDomainId: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnTransitGatewayMulticastDomainAssociationProps`\n *\n * @param properties - the TypeScript properties of a `CfnTransitGatewayMulticastDomainAssociationProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnTransitGatewayMulticastDomainAssociationPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('subnetId', cdk.requiredValidator)(properties.subnetId));\n    errors.collect(cdk.propertyValidator('subnetId', cdk.validateString)(properties.subnetId));\n    errors.collect(cdk.propertyValidator('transitGatewayAttachmentId', cdk.requiredValidator)(properties.transitGatewayAttachmentId));\n    errors.collect(cdk.propertyValidator('transitGatewayAttachmentId', cdk.validateString)(properties.transitGatewayAttachmentId));\n    errors.collect(cdk.propertyValidator('transitGatewayMulticastDomainId', cdk.requiredValidator)(properties.transitGatewayMulticastDomainId));\n    errors.collect(cdk.propertyValidator('transitGatewayMulticastDomainId', cdk.validateString)(properties.transitGatewayMulticastDomainId));\n    return errors.wrap('supplied properties not correct for \"CfnTransitGatewayMulticastDomainAssociationProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::TransitGatewayMulticastDomainAssociation` resource\n *\n * @param properties - the TypeScript properties of a `CfnTransitGatewayMulticastDomainAssociationProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::TransitGatewayMulticastDomainAssociation` resource.\n */\n// @ts-ignore TS6133\nfunction cfnTransitGatewayMulticastDomainAssociationPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnTransitGatewayMulticastDomainAssociationPropsValidator(properties).assertSuccess();\n    return {\n        SubnetId: cdk.stringToCloudFormation(properties.subnetId),\n        TransitGatewayAttachmentId: cdk.stringToCloudFormation(properties.transitGatewayAttachmentId),\n        TransitGatewayMulticastDomainId: cdk.stringToCloudFormation(properties.transitGatewayMulticastDomainId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnTransitGatewayMulticastDomainAssociationPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnTransitGatewayMulticastDomainAssociationProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnTransitGatewayMulticastDomainAssociationProps>();\n    ret.addPropertyResult('subnetId', 'SubnetId', cfn_parse.FromCloudFormation.getString(properties.SubnetId));\n    ret.addPropertyResult('transitGatewayAttachmentId', 'TransitGatewayAttachmentId', cfn_parse.FromCloudFormation.getString(properties.TransitGatewayAttachmentId));\n    ret.addPropertyResult('transitGatewayMulticastDomainId', 'TransitGatewayMulticastDomainId', cfn_parse.FromCloudFormation.getString(properties.TransitGatewayMulticastDomainId));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::TransitGatewayMulticastDomainAssociation`\n *\n * Associates the specified subnets and transit gateway attachments with the specified transit gateway multicast domain.\n *\n * The transit gateway attachment must be in the available state before you can add a resource.\n *\n * @cloudformationResource AWS::EC2::TransitGatewayMulticastDomainAssociation\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html\n */\nexport class CfnTransitGatewayMulticastDomainAssociation extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::TransitGatewayMulticastDomainAssociation\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnTransitGatewayMulticastDomainAssociation {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnTransitGatewayMulticastDomainAssociationPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnTransitGatewayMulticastDomainAssociation(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the resource.\n     * @cloudformationAttribute ResourceId\n     */\n    public readonly attrResourceId: string;\n\n    /**\n     * The type of resource, for example a VPC attachment.\n     * @cloudformationAttribute ResourceType\n     */\n    public readonly attrResourceType: string;\n\n    /**\n     * The state of the resource.\n     * @cloudformationAttribute State\n     */\n    public readonly attrState: string;\n\n    /**\n     * The IDs of the subnets to associate with the transit gateway multicast domain.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html#cfn-ec2-transitgatewaymulticastdomainassociation-subnetid\n     */\n    public subnetId: string;\n\n    /**\n     * The ID of the transit gateway attachment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html#cfn-ec2-transitgatewaymulticastdomainassociation-transitgatewayattachmentid\n     */\n    public transitGatewayAttachmentId: string;\n\n    /**\n     * The ID of the transit gateway multicast domain.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html#cfn-ec2-transitgatewaymulticastdomainassociation-transitgatewaymulticastdomainid\n     */\n    public transitGatewayMulticastDomainId: string;\n\n    /**\n     * Create a new `AWS::EC2::TransitGatewayMulticastDomainAssociation`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnTransitGatewayMulticastDomainAssociationProps) {\n        super(scope, id, { type: CfnTransitGatewayMulticastDomainAssociation.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'subnetId', this);\n        cdk.requireProperty(props, 'transitGatewayAttachmentId', this);\n        cdk.requireProperty(props, 'transitGatewayMulticastDomainId', this);\n        this.attrResourceId = cdk.Token.asString(this.getAtt('ResourceId'));\n        this.attrResourceType = cdk.Token.asString(this.getAtt('ResourceType'));\n        this.attrState = cdk.Token.asString(this.getAtt('State'));\n\n        this.subnetId = props.subnetId;\n        this.transitGatewayAttachmentId = props.transitGatewayAttachmentId;\n        this.transitGatewayMulticastDomainId = props.transitGatewayMulticastDomainId;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnTransitGatewayMulticastDomainAssociation.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            subnetId: this.subnetId,\n            transitGatewayAttachmentId: this.transitGatewayAttachmentId,\n            transitGatewayMulticastDomainId: this.transitGatewayMulticastDomainId,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnTransitGatewayMulticastDomainAssociationPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnTransitGatewayMulticastGroupMember`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html\n */\nexport interface CfnTransitGatewayMulticastGroupMemberProps {\n\n    /**\n     * The IP address assigned to the transit gateway multicast group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html#cfn-ec2-transitgatewaymulticastgroupmember-groupipaddress\n     */\n    readonly groupIpAddress: string;\n\n    /**\n     * The group members' network interface IDs to register with the transit gateway multicast group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html#cfn-ec2-transitgatewaymulticastgroupmember-networkinterfaceid\n     */\n    readonly networkInterfaceId: string;\n\n    /**\n     * The ID of the transit gateway multicast domain.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html#cfn-ec2-transitgatewaymulticastgroupmember-transitgatewaymulticastdomainid\n     */\n    readonly transitGatewayMulticastDomainId: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnTransitGatewayMulticastGroupMemberProps`\n *\n * @param properties - the TypeScript properties of a `CfnTransitGatewayMulticastGroupMemberProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnTransitGatewayMulticastGroupMemberPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('groupIpAddress', cdk.requiredValidator)(properties.groupIpAddress));\n    errors.collect(cdk.propertyValidator('groupIpAddress', cdk.validateString)(properties.groupIpAddress));\n    errors.collect(cdk.propertyValidator('networkInterfaceId', cdk.requiredValidator)(properties.networkInterfaceId));\n    errors.collect(cdk.propertyValidator('networkInterfaceId', cdk.validateString)(properties.networkInterfaceId));\n    errors.collect(cdk.propertyValidator('transitGatewayMulticastDomainId', cdk.requiredValidator)(properties.transitGatewayMulticastDomainId));\n    errors.collect(cdk.propertyValidator('transitGatewayMulticastDomainId', cdk.validateString)(properties.transitGatewayMulticastDomainId));\n    return errors.wrap('supplied properties not correct for \"CfnTransitGatewayMulticastGroupMemberProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::TransitGatewayMulticastGroupMember` resource\n *\n * @param properties - the TypeScript properties of a `CfnTransitGatewayMulticastGroupMemberProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::TransitGatewayMulticastGroupMember` resource.\n */\n// @ts-ignore TS6133\nfunction cfnTransitGatewayMulticastGroupMemberPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnTransitGatewayMulticastGroupMemberPropsValidator(properties).assertSuccess();\n    return {\n        GroupIpAddress: cdk.stringToCloudFormation(properties.groupIpAddress),\n        NetworkInterfaceId: cdk.stringToCloudFormation(properties.networkInterfaceId),\n        TransitGatewayMulticastDomainId: cdk.stringToCloudFormation(properties.transitGatewayMulticastDomainId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnTransitGatewayMulticastGroupMemberPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnTransitGatewayMulticastGroupMemberProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnTransitGatewayMulticastGroupMemberProps>();\n    ret.addPropertyResult('groupIpAddress', 'GroupIpAddress', cfn_parse.FromCloudFormation.getString(properties.GroupIpAddress));\n    ret.addPropertyResult('networkInterfaceId', 'NetworkInterfaceId', cfn_parse.FromCloudFormation.getString(properties.NetworkInterfaceId));\n    ret.addPropertyResult('transitGatewayMulticastDomainId', 'TransitGatewayMulticastDomainId', cfn_parse.FromCloudFormation.getString(properties.TransitGatewayMulticastDomainId));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::TransitGatewayMulticastGroupMember`\n *\n * Registers members (network interfaces) with the transit gateway multicast group. A member is a network interface associated with a supported EC2 instance that receives multicast traffic. For information about supported instances, see [Multicast Consideration](https://docs.aws.amazon.com/vpc/latest/tgw/transit-gateway-limits.html#multicast-limits) in *Amazon VPC Transit Gateways* .\n *\n * @cloudformationResource AWS::EC2::TransitGatewayMulticastGroupMember\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html\n */\nexport class CfnTransitGatewayMulticastGroupMember extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::TransitGatewayMulticastGroupMember\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnTransitGatewayMulticastGroupMember {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnTransitGatewayMulticastGroupMemberPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnTransitGatewayMulticastGroupMember(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * Information about the registered transit gateway multicast domain group members.\n     * @cloudformationAttribute GroupMember\n     */\n    public readonly attrGroupMember: cdk.IResolvable;\n\n    /**\n     * Indicates that the resource is a transit gateway multicast domain group member.\n     * @cloudformationAttribute GroupSource\n     */\n    public readonly attrGroupSource: cdk.IResolvable;\n\n    /**\n     * The type of group member, for example static.\n     * @cloudformationAttribute MemberType\n     */\n    public readonly attrMemberType: string;\n\n    /**\n     * The ID of the resource.\n     * @cloudformationAttribute ResourceId\n     */\n    public readonly attrResourceId: string;\n\n    /**\n     * The type of resource, for example a VPC attachment.\n     * @cloudformationAttribute ResourceType\n     */\n    public readonly attrResourceType: string;\n\n    /**\n     * The type of source.\n     * @cloudformationAttribute SourceType\n     */\n    public readonly attrSourceType: string;\n\n    /**\n     * The ID of the subnet.\n     * @cloudformationAttribute SubnetId\n     */\n    public readonly attrSubnetId: string;\n\n    /**\n     * The ID of the transit gateway attachment.\n     * @cloudformationAttribute TransitGatewayAttachmentId\n     */\n    public readonly attrTransitGatewayAttachmentId: string;\n\n    /**\n     * The IP address assigned to the transit gateway multicast group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html#cfn-ec2-transitgatewaymulticastgroupmember-groupipaddress\n     */\n    public groupIpAddress: string;\n\n    /**\n     * The group members' network interface IDs to register with the transit gateway multicast group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html#cfn-ec2-transitgatewaymulticastgroupmember-networkinterfaceid\n     */\n    public networkInterfaceId: string;\n\n    /**\n     * The ID of the transit gateway multicast domain.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html#cfn-ec2-transitgatewaymulticastgroupmember-transitgatewaymulticastdomainid\n     */\n    public transitGatewayMulticastDomainId: string;\n\n    /**\n     * Create a new `AWS::EC2::TransitGatewayMulticastGroupMember`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnTransitGatewayMulticastGroupMemberProps) {\n        super(scope, id, { type: CfnTransitGatewayMulticastGroupMember.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'groupIpAddress', this);\n        cdk.requireProperty(props, 'networkInterfaceId', this);\n        cdk.requireProperty(props, 'transitGatewayMulticastDomainId', this);\n        this.attrGroupMember = this.getAtt('GroupMember');\n        this.attrGroupSource = this.getAtt('GroupSource');\n        this.attrMemberType = cdk.Token.asString(this.getAtt('MemberType'));\n        this.attrResourceId = cdk.Token.asString(this.getAtt('ResourceId'));\n        this.attrResourceType = cdk.Token.asString(this.getAtt('ResourceType'));\n        this.attrSourceType = cdk.Token.asString(this.getAtt('SourceType'));\n        this.attrSubnetId = cdk.Token.asString(this.getAtt('SubnetId'));\n        this.attrTransitGatewayAttachmentId = cdk.Token.asString(this.getAtt('TransitGatewayAttachmentId'));\n\n        this.groupIpAddress = props.groupIpAddress;\n        this.networkInterfaceId = props.networkInterfaceId;\n        this.transitGatewayMulticastDomainId = props.transitGatewayMulticastDomainId;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnTransitGatewayMulticastGroupMember.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            groupIpAddress: this.groupIpAddress,\n            networkInterfaceId: this.networkInterfaceId,\n            transitGatewayMulticastDomainId: this.transitGatewayMulticastDomainId,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnTransitGatewayMulticastGroupMemberPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnTransitGatewayMulticastGroupSource`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupsource.html\n */\nexport interface CfnTransitGatewayMulticastGroupSourceProps {\n\n    /**\n     * The IP address assigned to the transit gateway multicast group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupsource.html#cfn-ec2-transitgatewaymulticastgroupsource-groupipaddress\n     */\n    readonly groupIpAddress: string;\n\n    /**\n     * The group sources' network interface IDs to register with the transit gateway multicast group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupsource.html#cfn-ec2-transitgatewaymulticastgroupsource-networkinterfaceid\n     */\n    readonly networkInterfaceId: string;\n\n    /**\n     * The ID of the transit gateway multicast domain.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupsource.html#cfn-ec2-transitgatewaymulticastgroupsource-transitgatewaymulticastdomainid\n     */\n    readonly transitGatewayMulticastDomainId: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnTransitGatewayMulticastGroupSourceProps`\n *\n * @param properties - the TypeScript properties of a `CfnTransitGatewayMulticastGroupSourceProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnTransitGatewayMulticastGroupSourcePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('groupIpAddress', cdk.requiredValidator)(properties.groupIpAddress));\n    errors.collect(cdk.propertyValidator('groupIpAddress', cdk.validateString)(properties.groupIpAddress));\n    errors.collect(cdk.propertyValidator('networkInterfaceId', cdk.requiredValidator)(properties.networkInterfaceId));\n    errors.collect(cdk.propertyValidator('networkInterfaceId', cdk.validateString)(properties.networkInterfaceId));\n    errors.collect(cdk.propertyValidator('transitGatewayMulticastDomainId', cdk.requiredValidator)(properties.transitGatewayMulticastDomainId));\n    errors.collect(cdk.propertyValidator('transitGatewayMulticastDomainId', cdk.validateString)(properties.transitGatewayMulticastDomainId));\n    return errors.wrap('supplied properties not correct for \"CfnTransitGatewayMulticastGroupSourceProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::TransitGatewayMulticastGroupSource` resource\n *\n * @param properties - the TypeScript properties of a `CfnTransitGatewayMulticastGroupSourceProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::TransitGatewayMulticastGroupSource` resource.\n */\n// @ts-ignore TS6133\nfunction cfnTransitGatewayMulticastGroupSourcePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnTransitGatewayMulticastGroupSourcePropsValidator(properties).assertSuccess();\n    return {\n        GroupIpAddress: cdk.stringToCloudFormation(properties.groupIpAddress),\n        NetworkInterfaceId: cdk.stringToCloudFormation(properties.networkInterfaceId),\n        TransitGatewayMulticastDomainId: cdk.stringToCloudFormation(properties.transitGatewayMulticastDomainId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnTransitGatewayMulticastGroupSourcePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnTransitGatewayMulticastGroupSourceProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnTransitGatewayMulticastGroupSourceProps>();\n    ret.addPropertyResult('groupIpAddress', 'GroupIpAddress', cfn_parse.FromCloudFormation.getString(properties.GroupIpAddress));\n    ret.addPropertyResult('networkInterfaceId', 'NetworkInterfaceId', cfn_parse.FromCloudFormation.getString(properties.NetworkInterfaceId));\n    ret.addPropertyResult('transitGatewayMulticastDomainId', 'TransitGatewayMulticastDomainId', cfn_parse.FromCloudFormation.getString(properties.TransitGatewayMulticastDomainId));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::TransitGatewayMulticastGroupSource`\n *\n * Registers sources (network interfaces) with the specified transit gateway multicast domain.\n *\n * A multicast source is a network interface attached to a supported instance that sends multicast traffic. For information about supported instances, see [Multicast Considerations](https://docs.aws.amazon.com/vpc/latest/tgw/transit-gateway-limits.html#multicast-limits) in *Amazon VPC Transit Gateways* .\n *\n * @cloudformationResource AWS::EC2::TransitGatewayMulticastGroupSource\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupsource.html\n */\nexport class CfnTransitGatewayMulticastGroupSource extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::TransitGatewayMulticastGroupSource\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnTransitGatewayMulticastGroupSource {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnTransitGatewayMulticastGroupSourcePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnTransitGatewayMulticastGroupSource(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * Information about the registered transit gateway multicast domain group members.\n     * @cloudformationAttribute GroupMember\n     */\n    public readonly attrGroupMember: cdk.IResolvable;\n\n    /**\n     * Indicates that the resource is a transit gateway group member.\n     * @cloudformationAttribute GroupSource\n     */\n    public readonly attrGroupSource: cdk.IResolvable;\n\n    /**\n     * The type of group member, for example static.\n     * @cloudformationAttribute MemberType\n     */\n    public readonly attrMemberType: string;\n\n    /**\n     * The ID of the resource.\n     * @cloudformationAttribute ResourceId\n     */\n    public readonly attrResourceId: string;\n\n    /**\n     * The type of resource, for example a VPC attachment.\n     * @cloudformationAttribute ResourceType\n     */\n    public readonly attrResourceType: string;\n\n    /**\n     * The type of source.\n     * @cloudformationAttribute SourceType\n     */\n    public readonly attrSourceType: string;\n\n    /**\n     * The ID of the subnet.\n     * @cloudformationAttribute SubnetId\n     */\n    public readonly attrSubnetId: string;\n\n    /**\n     * The ID of the transit gateway attachment.\n     * @cloudformationAttribute TransitGatewayAttachmentId\n     */\n    public readonly attrTransitGatewayAttachmentId: string;\n\n    /**\n     * The IP address assigned to the transit gateway multicast group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupsource.html#cfn-ec2-transitgatewaymulticastgroupsource-groupipaddress\n     */\n    public groupIpAddress: string;\n\n    /**\n     * The group sources' network interface IDs to register with the transit gateway multicast group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupsource.html#cfn-ec2-transitgatewaymulticastgroupsource-networkinterfaceid\n     */\n    public networkInterfaceId: string;\n\n    /**\n     * The ID of the transit gateway multicast domain.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupsource.html#cfn-ec2-transitgatewaymulticastgroupsource-transitgatewaymulticastdomainid\n     */\n    public transitGatewayMulticastDomainId: string;\n\n    /**\n     * Create a new `AWS::EC2::TransitGatewayMulticastGroupSource`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnTransitGatewayMulticastGroupSourceProps) {\n        super(scope, id, { type: CfnTransitGatewayMulticastGroupSource.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'groupIpAddress', this);\n        cdk.requireProperty(props, 'networkInterfaceId', this);\n        cdk.requireProperty(props, 'transitGatewayMulticastDomainId', this);\n        this.attrGroupMember = this.getAtt('GroupMember');\n        this.attrGroupSource = this.getAtt('GroupSource');\n        this.attrMemberType = cdk.Token.asString(this.getAtt('MemberType'));\n        this.attrResourceId = cdk.Token.asString(this.getAtt('ResourceId'));\n        this.attrResourceType = cdk.Token.asString(this.getAtt('ResourceType'));\n        this.attrSourceType = cdk.Token.asString(this.getAtt('SourceType'));\n        this.attrSubnetId = cdk.Token.asString(this.getAtt('SubnetId'));\n        this.attrTransitGatewayAttachmentId = cdk.Token.asString(this.getAtt('TransitGatewayAttachmentId'));\n\n        this.groupIpAddress = props.groupIpAddress;\n        this.networkInterfaceId = props.networkInterfaceId;\n        this.transitGatewayMulticastDomainId = props.transitGatewayMulticastDomainId;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnTransitGatewayMulticastGroupSource.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            groupIpAddress: this.groupIpAddress,\n            networkInterfaceId: this.networkInterfaceId,\n            transitGatewayMulticastDomainId: this.transitGatewayMulticastDomainId,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnTransitGatewayMulticastGroupSourcePropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnTransitGatewayPeeringAttachment`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html\n */\nexport interface CfnTransitGatewayPeeringAttachmentProps {\n\n    /**\n     * The ID of the AWS account that owns the transit gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-peeraccountid\n     */\n    readonly peerAccountId: string;\n\n    /**\n     * The Region of the transit gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-peerregion\n     */\n    readonly peerRegion: string;\n\n    /**\n     * The ID of the transit gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-peertransitgatewayid\n     */\n    readonly peerTransitGatewayId: string;\n\n    /**\n     * The ID of the transit gateway peering attachment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-transitgatewayid\n     */\n    readonly transitGatewayId: string;\n\n    /**\n     * The tags for the transit gateway peering attachment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnTransitGatewayPeeringAttachmentProps`\n *\n * @param properties - the TypeScript properties of a `CfnTransitGatewayPeeringAttachmentProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnTransitGatewayPeeringAttachmentPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('peerAccountId', cdk.requiredValidator)(properties.peerAccountId));\n    errors.collect(cdk.propertyValidator('peerAccountId', cdk.validateString)(properties.peerAccountId));\n    errors.collect(cdk.propertyValidator('peerRegion', cdk.requiredValidator)(properties.peerRegion));\n    errors.collect(cdk.propertyValidator('peerRegion', cdk.validateString)(properties.peerRegion));\n    errors.collect(cdk.propertyValidator('peerTransitGatewayId', cdk.requiredValidator)(properties.peerTransitGatewayId));\n    errors.collect(cdk.propertyValidator('peerTransitGatewayId', cdk.validateString)(properties.peerTransitGatewayId));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('transitGatewayId', cdk.requiredValidator)(properties.transitGatewayId));\n    errors.collect(cdk.propertyValidator('transitGatewayId', cdk.validateString)(properties.transitGatewayId));\n    return errors.wrap('supplied properties not correct for \"CfnTransitGatewayPeeringAttachmentProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::TransitGatewayPeeringAttachment` resource\n *\n * @param properties - the TypeScript properties of a `CfnTransitGatewayPeeringAttachmentProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::TransitGatewayPeeringAttachment` resource.\n */\n// @ts-ignore TS6133\nfunction cfnTransitGatewayPeeringAttachmentPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnTransitGatewayPeeringAttachmentPropsValidator(properties).assertSuccess();\n    return {\n        PeerAccountId: cdk.stringToCloudFormation(properties.peerAccountId),\n        PeerRegion: cdk.stringToCloudFormation(properties.peerRegion),\n        PeerTransitGatewayId: cdk.stringToCloudFormation(properties.peerTransitGatewayId),\n        TransitGatewayId: cdk.stringToCloudFormation(properties.transitGatewayId),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnTransitGatewayPeeringAttachmentPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnTransitGatewayPeeringAttachmentProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnTransitGatewayPeeringAttachmentProps>();\n    ret.addPropertyResult('peerAccountId', 'PeerAccountId', cfn_parse.FromCloudFormation.getString(properties.PeerAccountId));\n    ret.addPropertyResult('peerRegion', 'PeerRegion', cfn_parse.FromCloudFormation.getString(properties.PeerRegion));\n    ret.addPropertyResult('peerTransitGatewayId', 'PeerTransitGatewayId', cfn_parse.FromCloudFormation.getString(properties.PeerTransitGatewayId));\n    ret.addPropertyResult('transitGatewayId', 'TransitGatewayId', cfn_parse.FromCloudFormation.getString(properties.TransitGatewayId));\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::TransitGatewayPeeringAttachment`\n *\n * Requests a transit gateway peering attachment between the specified transit gateway (requester) and a peer transit gateway (accepter). The transit gateways must be in different Regions. The peer transit gateway can be in your account or a different AWS account .\n *\n * After you create the peering attachment, the owner of the accepter transit gateway must accept the attachment request.\n *\n * @cloudformationResource AWS::EC2::TransitGatewayPeeringAttachment\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html\n */\nexport class CfnTransitGatewayPeeringAttachment extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::TransitGatewayPeeringAttachment\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnTransitGatewayPeeringAttachment {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnTransitGatewayPeeringAttachmentPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnTransitGatewayPeeringAttachment(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The time the transit gateway peering attachment was created.\n     * @cloudformationAttribute CreationTime\n     */\n    public readonly attrCreationTime: string;\n\n    /**\n     * The state of the transit gateway peering attachment. Note that the `initiating` state has been deprecated.\n     * @cloudformationAttribute State\n     */\n    public readonly attrState: string;\n\n    /**\n     * The ID of the transit gateway peering attachment.\n     * @cloudformationAttribute TransitGatewayAttachmentId\n     */\n    public readonly attrTransitGatewayAttachmentId: string;\n\n    /**\n     * The ID of the AWS account that owns the transit gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-peeraccountid\n     */\n    public peerAccountId: string;\n\n    /**\n     * The Region of the transit gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-peerregion\n     */\n    public peerRegion: string;\n\n    /**\n     * The ID of the transit gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-peertransitgatewayid\n     */\n    public peerTransitGatewayId: string;\n\n    /**\n     * The ID of the transit gateway peering attachment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-transitgatewayid\n     */\n    public transitGatewayId: string;\n\n    /**\n     * The tags for the transit gateway peering attachment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EC2::TransitGatewayPeeringAttachment`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnTransitGatewayPeeringAttachmentProps) {\n        super(scope, id, { type: CfnTransitGatewayPeeringAttachment.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'peerAccountId', this);\n        cdk.requireProperty(props, 'peerRegion', this);\n        cdk.requireProperty(props, 'peerTransitGatewayId', this);\n        cdk.requireProperty(props, 'transitGatewayId', this);\n        this.attrCreationTime = cdk.Token.asString(this.getAtt('CreationTime'));\n        this.attrState = cdk.Token.asString(this.getAtt('State'));\n        this.attrTransitGatewayAttachmentId = cdk.Token.asString(this.getAtt('TransitGatewayAttachmentId'));\n\n        this.peerAccountId = props.peerAccountId;\n        this.peerRegion = props.peerRegion;\n        this.peerTransitGatewayId = props.peerTransitGatewayId;\n        this.transitGatewayId = props.transitGatewayId;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::TransitGatewayPeeringAttachment\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnTransitGatewayPeeringAttachment.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            peerAccountId: this.peerAccountId,\n            peerRegion: this.peerRegion,\n            peerTransitGatewayId: this.peerTransitGatewayId,\n            transitGatewayId: this.transitGatewayId,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnTransitGatewayPeeringAttachmentPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnTransitGatewayRoute`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html\n */\nexport interface CfnTransitGatewayRouteProps {\n\n    /**\n     * The ID of the transit gateway route table.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-transitgatewayroutetableid\n     */\n    readonly transitGatewayRouteTableId: string;\n\n    /**\n     * Indicates whether to drop traffic that matches this route.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-blackhole\n     */\n    readonly blackhole?: boolean | cdk.IResolvable;\n\n    /**\n     * The CIDR block used for destination matches.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-destinationcidrblock\n     */\n    readonly destinationCidrBlock?: string;\n\n    /**\n     * The ID of the attachment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-transitgatewayattachmentid\n     */\n    readonly transitGatewayAttachmentId?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnTransitGatewayRouteProps`\n *\n * @param properties - the TypeScript properties of a `CfnTransitGatewayRouteProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnTransitGatewayRoutePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('blackhole', cdk.validateBoolean)(properties.blackhole));\n    errors.collect(cdk.propertyValidator('destinationCidrBlock', cdk.validateString)(properties.destinationCidrBlock));\n    errors.collect(cdk.propertyValidator('transitGatewayAttachmentId', cdk.validateString)(properties.transitGatewayAttachmentId));\n    errors.collect(cdk.propertyValidator('transitGatewayRouteTableId', cdk.requiredValidator)(properties.transitGatewayRouteTableId));\n    errors.collect(cdk.propertyValidator('transitGatewayRouteTableId', cdk.validateString)(properties.transitGatewayRouteTableId));\n    return errors.wrap('supplied properties not correct for \"CfnTransitGatewayRouteProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::TransitGatewayRoute` resource\n *\n * @param properties - the TypeScript properties of a `CfnTransitGatewayRouteProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::TransitGatewayRoute` resource.\n */\n// @ts-ignore TS6133\nfunction cfnTransitGatewayRoutePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnTransitGatewayRoutePropsValidator(properties).assertSuccess();\n    return {\n        TransitGatewayRouteTableId: cdk.stringToCloudFormation(properties.transitGatewayRouteTableId),\n        Blackhole: cdk.booleanToCloudFormation(properties.blackhole),\n        DestinationCidrBlock: cdk.stringToCloudFormation(properties.destinationCidrBlock),\n        TransitGatewayAttachmentId: cdk.stringToCloudFormation(properties.transitGatewayAttachmentId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnTransitGatewayRoutePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnTransitGatewayRouteProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnTransitGatewayRouteProps>();\n    ret.addPropertyResult('transitGatewayRouteTableId', 'TransitGatewayRouteTableId', cfn_parse.FromCloudFormation.getString(properties.TransitGatewayRouteTableId));\n    ret.addPropertyResult('blackhole', 'Blackhole', properties.Blackhole != null ? cfn_parse.FromCloudFormation.getBoolean(properties.Blackhole) : undefined);\n    ret.addPropertyResult('destinationCidrBlock', 'DestinationCidrBlock', properties.DestinationCidrBlock != null ? cfn_parse.FromCloudFormation.getString(properties.DestinationCidrBlock) : undefined);\n    ret.addPropertyResult('transitGatewayAttachmentId', 'TransitGatewayAttachmentId', properties.TransitGatewayAttachmentId != null ? cfn_parse.FromCloudFormation.getString(properties.TransitGatewayAttachmentId) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::TransitGatewayRoute`\n *\n * Specifies a static route for a transit gateway route table.\n *\n * @cloudformationResource AWS::EC2::TransitGatewayRoute\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html\n */\nexport class CfnTransitGatewayRoute extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::TransitGatewayRoute\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnTransitGatewayRoute {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnTransitGatewayRoutePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnTransitGatewayRoute(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the transit gateway route table.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-transitgatewayroutetableid\n     */\n    public transitGatewayRouteTableId: string;\n\n    /**\n     * Indicates whether to drop traffic that matches this route.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-blackhole\n     */\n    public blackhole: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * The CIDR block used for destination matches.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-destinationcidrblock\n     */\n    public destinationCidrBlock: string | undefined;\n\n    /**\n     * The ID of the attachment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-transitgatewayattachmentid\n     */\n    public transitGatewayAttachmentId: string | undefined;\n\n    /**\n     * Create a new `AWS::EC2::TransitGatewayRoute`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnTransitGatewayRouteProps) {\n        super(scope, id, { type: CfnTransitGatewayRoute.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'transitGatewayRouteTableId', this);\n\n        this.transitGatewayRouteTableId = props.transitGatewayRouteTableId;\n        this.blackhole = props.blackhole;\n        this.destinationCidrBlock = props.destinationCidrBlock;\n        this.transitGatewayAttachmentId = props.transitGatewayAttachmentId;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnTransitGatewayRoute.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            transitGatewayRouteTableId: this.transitGatewayRouteTableId,\n            blackhole: this.blackhole,\n            destinationCidrBlock: this.destinationCidrBlock,\n            transitGatewayAttachmentId: this.transitGatewayAttachmentId,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnTransitGatewayRoutePropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnTransitGatewayRouteTable`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html\n */\nexport interface CfnTransitGatewayRouteTableProps {\n\n    /**\n     * The ID of the transit gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html#cfn-ec2-transitgatewayroutetable-transitgatewayid\n     */\n    readonly transitGatewayId: string;\n\n    /**\n     * Any tags assigned to the route table.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html#cfn-ec2-transitgatewayroutetable-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnTransitGatewayRouteTableProps`\n *\n * @param properties - the TypeScript properties of a `CfnTransitGatewayRouteTableProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnTransitGatewayRouteTablePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('transitGatewayId', cdk.requiredValidator)(properties.transitGatewayId));\n    errors.collect(cdk.propertyValidator('transitGatewayId', cdk.validateString)(properties.transitGatewayId));\n    return errors.wrap('supplied properties not correct for \"CfnTransitGatewayRouteTableProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::TransitGatewayRouteTable` resource\n *\n * @param properties - the TypeScript properties of a `CfnTransitGatewayRouteTableProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::TransitGatewayRouteTable` resource.\n */\n// @ts-ignore TS6133\nfunction cfnTransitGatewayRouteTablePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnTransitGatewayRouteTablePropsValidator(properties).assertSuccess();\n    return {\n        TransitGatewayId: cdk.stringToCloudFormation(properties.transitGatewayId),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnTransitGatewayRouteTablePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnTransitGatewayRouteTableProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnTransitGatewayRouteTableProps>();\n    ret.addPropertyResult('transitGatewayId', 'TransitGatewayId', cfn_parse.FromCloudFormation.getString(properties.TransitGatewayId));\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::TransitGatewayRouteTable`\n *\n * Specifies a route table for a transit gateway.\n *\n * @cloudformationResource AWS::EC2::TransitGatewayRouteTable\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html\n */\nexport class CfnTransitGatewayRouteTable extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::TransitGatewayRouteTable\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnTransitGatewayRouteTable {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnTransitGatewayRouteTablePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnTransitGatewayRouteTable(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the transit gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html#cfn-ec2-transitgatewayroutetable-transitgatewayid\n     */\n    public transitGatewayId: string;\n\n    /**\n     * Any tags assigned to the route table.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html#cfn-ec2-transitgatewayroutetable-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EC2::TransitGatewayRouteTable`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnTransitGatewayRouteTableProps) {\n        super(scope, id, { type: CfnTransitGatewayRouteTable.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'transitGatewayId', this);\n\n        this.transitGatewayId = props.transitGatewayId;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::TransitGatewayRouteTable\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnTransitGatewayRouteTable.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            transitGatewayId: this.transitGatewayId,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnTransitGatewayRouteTablePropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnTransitGatewayRouteTableAssociation`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html\n */\nexport interface CfnTransitGatewayRouteTableAssociationProps {\n\n    /**\n     * The ID of the attachment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html#cfn-ec2-transitgatewayroutetableassociation-transitgatewayattachmentid\n     */\n    readonly transitGatewayAttachmentId: string;\n\n    /**\n     * The ID of the route table for the transit gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html#cfn-ec2-transitgatewayroutetableassociation-transitgatewayroutetableid\n     */\n    readonly transitGatewayRouteTableId: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnTransitGatewayRouteTableAssociationProps`\n *\n * @param properties - the TypeScript properties of a `CfnTransitGatewayRouteTableAssociationProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnTransitGatewayRouteTableAssociationPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('transitGatewayAttachmentId', cdk.requiredValidator)(properties.transitGatewayAttachmentId));\n    errors.collect(cdk.propertyValidator('transitGatewayAttachmentId', cdk.validateString)(properties.transitGatewayAttachmentId));\n    errors.collect(cdk.propertyValidator('transitGatewayRouteTableId', cdk.requiredValidator)(properties.transitGatewayRouteTableId));\n    errors.collect(cdk.propertyValidator('transitGatewayRouteTableId', cdk.validateString)(properties.transitGatewayRouteTableId));\n    return errors.wrap('supplied properties not correct for \"CfnTransitGatewayRouteTableAssociationProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::TransitGatewayRouteTableAssociation` resource\n *\n * @param properties - the TypeScript properties of a `CfnTransitGatewayRouteTableAssociationProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::TransitGatewayRouteTableAssociation` resource.\n */\n// @ts-ignore TS6133\nfunction cfnTransitGatewayRouteTableAssociationPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnTransitGatewayRouteTableAssociationPropsValidator(properties).assertSuccess();\n    return {\n        TransitGatewayAttachmentId: cdk.stringToCloudFormation(properties.transitGatewayAttachmentId),\n        TransitGatewayRouteTableId: cdk.stringToCloudFormation(properties.transitGatewayRouteTableId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnTransitGatewayRouteTableAssociationPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnTransitGatewayRouteTableAssociationProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnTransitGatewayRouteTableAssociationProps>();\n    ret.addPropertyResult('transitGatewayAttachmentId', 'TransitGatewayAttachmentId', cfn_parse.FromCloudFormation.getString(properties.TransitGatewayAttachmentId));\n    ret.addPropertyResult('transitGatewayRouteTableId', 'TransitGatewayRouteTableId', cfn_parse.FromCloudFormation.getString(properties.TransitGatewayRouteTableId));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::TransitGatewayRouteTableAssociation`\n *\n * Associates the specified attachment with the specified transit gateway route table. You can associate one route table with an attachment.\n *\n * Before you can update the route table associated with an attachment, you must disassociate the transit gateway route table that is currently associated with the attachment. First update the stack to remove the associated transit gateway route table, and then update the stack with the ID of the new transit gateway route table to associate.\n *\n * @cloudformationResource AWS::EC2::TransitGatewayRouteTableAssociation\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html\n */\nexport class CfnTransitGatewayRouteTableAssociation extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::TransitGatewayRouteTableAssociation\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnTransitGatewayRouteTableAssociation {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnTransitGatewayRouteTableAssociationPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnTransitGatewayRouteTableAssociation(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the attachment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html#cfn-ec2-transitgatewayroutetableassociation-transitgatewayattachmentid\n     */\n    public transitGatewayAttachmentId: string;\n\n    /**\n     * The ID of the route table for the transit gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html#cfn-ec2-transitgatewayroutetableassociation-transitgatewayroutetableid\n     */\n    public transitGatewayRouteTableId: string;\n\n    /**\n     * Create a new `AWS::EC2::TransitGatewayRouteTableAssociation`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnTransitGatewayRouteTableAssociationProps) {\n        super(scope, id, { type: CfnTransitGatewayRouteTableAssociation.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'transitGatewayAttachmentId', this);\n        cdk.requireProperty(props, 'transitGatewayRouteTableId', this);\n\n        this.transitGatewayAttachmentId = props.transitGatewayAttachmentId;\n        this.transitGatewayRouteTableId = props.transitGatewayRouteTableId;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnTransitGatewayRouteTableAssociation.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            transitGatewayAttachmentId: this.transitGatewayAttachmentId,\n            transitGatewayRouteTableId: this.transitGatewayRouteTableId,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnTransitGatewayRouteTableAssociationPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnTransitGatewayRouteTablePropagation`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html\n */\nexport interface CfnTransitGatewayRouteTablePropagationProps {\n\n    /**\n     * The ID of the attachment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html#cfn-ec2-transitgatewayroutetablepropagation-transitgatewayattachmentid\n     */\n    readonly transitGatewayAttachmentId: string;\n\n    /**\n     * The ID of the propagation route table.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html#cfn-ec2-transitgatewayroutetablepropagation-transitgatewayroutetableid\n     */\n    readonly transitGatewayRouteTableId: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnTransitGatewayRouteTablePropagationProps`\n *\n * @param properties - the TypeScript properties of a `CfnTransitGatewayRouteTablePropagationProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnTransitGatewayRouteTablePropagationPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('transitGatewayAttachmentId', cdk.requiredValidator)(properties.transitGatewayAttachmentId));\n    errors.collect(cdk.propertyValidator('transitGatewayAttachmentId', cdk.validateString)(properties.transitGatewayAttachmentId));\n    errors.collect(cdk.propertyValidator('transitGatewayRouteTableId', cdk.requiredValidator)(properties.transitGatewayRouteTableId));\n    errors.collect(cdk.propertyValidator('transitGatewayRouteTableId', cdk.validateString)(properties.transitGatewayRouteTableId));\n    return errors.wrap('supplied properties not correct for \"CfnTransitGatewayRouteTablePropagationProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::TransitGatewayRouteTablePropagation` resource\n *\n * @param properties - the TypeScript properties of a `CfnTransitGatewayRouteTablePropagationProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::TransitGatewayRouteTablePropagation` resource.\n */\n// @ts-ignore TS6133\nfunction cfnTransitGatewayRouteTablePropagationPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnTransitGatewayRouteTablePropagationPropsValidator(properties).assertSuccess();\n    return {\n        TransitGatewayAttachmentId: cdk.stringToCloudFormation(properties.transitGatewayAttachmentId),\n        TransitGatewayRouteTableId: cdk.stringToCloudFormation(properties.transitGatewayRouteTableId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnTransitGatewayRouteTablePropagationPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnTransitGatewayRouteTablePropagationProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnTransitGatewayRouteTablePropagationProps>();\n    ret.addPropertyResult('transitGatewayAttachmentId', 'TransitGatewayAttachmentId', cfn_parse.FromCloudFormation.getString(properties.TransitGatewayAttachmentId));\n    ret.addPropertyResult('transitGatewayRouteTableId', 'TransitGatewayRouteTableId', cfn_parse.FromCloudFormation.getString(properties.TransitGatewayRouteTableId));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::TransitGatewayRouteTablePropagation`\n *\n * Enables the specified attachment to propagate routes to the specified propagation route table.\n *\n * For more information about enabling transit gateway route propagation, see [EnableTransitGatewayRouteTablePropagation](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableTransitGatewayRouteTablePropagation.html) in the *Amazon EC2 API Reference* .\n *\n * @cloudformationResource AWS::EC2::TransitGatewayRouteTablePropagation\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html\n */\nexport class CfnTransitGatewayRouteTablePropagation extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::TransitGatewayRouteTablePropagation\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnTransitGatewayRouteTablePropagation {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnTransitGatewayRouteTablePropagationPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnTransitGatewayRouteTablePropagation(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the attachment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html#cfn-ec2-transitgatewayroutetablepropagation-transitgatewayattachmentid\n     */\n    public transitGatewayAttachmentId: string;\n\n    /**\n     * The ID of the propagation route table.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html#cfn-ec2-transitgatewayroutetablepropagation-transitgatewayroutetableid\n     */\n    public transitGatewayRouteTableId: string;\n\n    /**\n     * Create a new `AWS::EC2::TransitGatewayRouteTablePropagation`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnTransitGatewayRouteTablePropagationProps) {\n        super(scope, id, { type: CfnTransitGatewayRouteTablePropagation.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'transitGatewayAttachmentId', this);\n        cdk.requireProperty(props, 'transitGatewayRouteTableId', this);\n\n        this.transitGatewayAttachmentId = props.transitGatewayAttachmentId;\n        this.transitGatewayRouteTableId = props.transitGatewayRouteTableId;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnTransitGatewayRouteTablePropagation.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            transitGatewayAttachmentId: this.transitGatewayAttachmentId,\n            transitGatewayRouteTableId: this.transitGatewayRouteTableId,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnTransitGatewayRouteTablePropagationPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnTransitGatewayVpcAttachment`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html\n */\nexport interface CfnTransitGatewayVpcAttachmentProps {\n\n    /**\n     * The IDs of the subnets.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-subnetids\n     */\n    readonly subnetIds: string[];\n\n    /**\n     * The ID of the transit gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-transitgatewayid\n     */\n    readonly transitGatewayId: string;\n\n    /**\n     * The ID of the VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-vpcid\n     */\n    readonly vpcId: string;\n\n    /**\n     * The IDs of one or more subnets to add. You can specify at most one subnet per Availability Zone.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-addsubnetids\n     */\n    readonly addSubnetIds?: string[];\n\n    /**\n     * The VPC attachment options in JSON or YAML.\n     *\n     * - DnsSupport (enable | disable)\n     * - Ipv6Support (enable| disable)\n     * - ApplianceModeSupport (enable | disable)\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-options\n     */\n    readonly options?: any | cdk.IResolvable;\n\n    /**\n     * The IDs of one or more subnets to remove.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-removesubnetids\n     */\n    readonly removeSubnetIds?: string[];\n\n    /**\n     * The tags for the VPC attachment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnTransitGatewayVpcAttachmentProps`\n *\n * @param properties - the TypeScript properties of a `CfnTransitGatewayVpcAttachmentProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnTransitGatewayVpcAttachmentPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('addSubnetIds', cdk.listValidator(cdk.validateString))(properties.addSubnetIds));\n    errors.collect(cdk.propertyValidator('options', cdk.validateObject)(properties.options));\n    errors.collect(cdk.propertyValidator('removeSubnetIds', cdk.listValidator(cdk.validateString))(properties.removeSubnetIds));\n    errors.collect(cdk.propertyValidator('subnetIds', cdk.requiredValidator)(properties.subnetIds));\n    errors.collect(cdk.propertyValidator('subnetIds', cdk.listValidator(cdk.validateString))(properties.subnetIds));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('transitGatewayId', cdk.requiredValidator)(properties.transitGatewayId));\n    errors.collect(cdk.propertyValidator('transitGatewayId', cdk.validateString)(properties.transitGatewayId));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.requiredValidator)(properties.vpcId));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.validateString)(properties.vpcId));\n    return errors.wrap('supplied properties not correct for \"CfnTransitGatewayVpcAttachmentProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::TransitGatewayVpcAttachment` resource\n *\n * @param properties - the TypeScript properties of a `CfnTransitGatewayVpcAttachmentProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::TransitGatewayVpcAttachment` resource.\n */\n// @ts-ignore TS6133\nfunction cfnTransitGatewayVpcAttachmentPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnTransitGatewayVpcAttachmentPropsValidator(properties).assertSuccess();\n    return {\n        SubnetIds: cdk.listMapper(cdk.stringToCloudFormation)(properties.subnetIds),\n        TransitGatewayId: cdk.stringToCloudFormation(properties.transitGatewayId),\n        VpcId: cdk.stringToCloudFormation(properties.vpcId),\n        AddSubnetIds: cdk.listMapper(cdk.stringToCloudFormation)(properties.addSubnetIds),\n        Options: cdk.objectToCloudFormation(properties.options),\n        RemoveSubnetIds: cdk.listMapper(cdk.stringToCloudFormation)(properties.removeSubnetIds),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnTransitGatewayVpcAttachmentPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnTransitGatewayVpcAttachmentProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnTransitGatewayVpcAttachmentProps>();\n    ret.addPropertyResult('subnetIds', 'SubnetIds', cfn_parse.FromCloudFormation.getStringArray(properties.SubnetIds));\n    ret.addPropertyResult('transitGatewayId', 'TransitGatewayId', cfn_parse.FromCloudFormation.getString(properties.TransitGatewayId));\n    ret.addPropertyResult('vpcId', 'VpcId', cfn_parse.FromCloudFormation.getString(properties.VpcId));\n    ret.addPropertyResult('addSubnetIds', 'AddSubnetIds', properties.AddSubnetIds != null ? cfn_parse.FromCloudFormation.getStringArray(properties.AddSubnetIds) : undefined);\n    ret.addPropertyResult('options', 'Options', properties.Options != null ? cfn_parse.FromCloudFormation.getAny(properties.Options) : undefined);\n    ret.addPropertyResult('removeSubnetIds', 'RemoveSubnetIds', properties.RemoveSubnetIds != null ? cfn_parse.FromCloudFormation.getStringArray(properties.RemoveSubnetIds) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::TransitGatewayVpcAttachment`\n *\n * Specifies a VPC attachment.\n *\n * @cloudformationResource AWS::EC2::TransitGatewayVpcAttachment\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html\n */\nexport class CfnTransitGatewayVpcAttachment extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::TransitGatewayVpcAttachment\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnTransitGatewayVpcAttachment {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnTransitGatewayVpcAttachmentPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnTransitGatewayVpcAttachment(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the attachment.\n     * @cloudformationAttribute Id\n     */\n    public readonly attrId: string;\n\n    /**\n     * The IDs of the subnets.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-subnetids\n     */\n    public subnetIds: string[];\n\n    /**\n     * The ID of the transit gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-transitgatewayid\n     */\n    public transitGatewayId: string;\n\n    /**\n     * The ID of the VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-vpcid\n     */\n    public vpcId: string;\n\n    /**\n     * The IDs of one or more subnets to add. You can specify at most one subnet per Availability Zone.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-addsubnetids\n     */\n    public addSubnetIds: string[] | undefined;\n\n    /**\n     * The VPC attachment options in JSON or YAML.\n     *\n     * - DnsSupport (enable | disable)\n     * - Ipv6Support (enable| disable)\n     * - ApplianceModeSupport (enable | disable)\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-options\n     */\n    public options: any | cdk.IResolvable | undefined;\n\n    /**\n     * The IDs of one or more subnets to remove.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-removesubnetids\n     */\n    public removeSubnetIds: string[] | undefined;\n\n    /**\n     * The tags for the VPC attachment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EC2::TransitGatewayVpcAttachment`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnTransitGatewayVpcAttachmentProps) {\n        super(scope, id, { type: CfnTransitGatewayVpcAttachment.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'subnetIds', this);\n        cdk.requireProperty(props, 'transitGatewayId', this);\n        cdk.requireProperty(props, 'vpcId', this);\n        this.attrId = cdk.Token.asString(this.getAtt('Id'));\n\n        this.subnetIds = props.subnetIds;\n        this.transitGatewayId = props.transitGatewayId;\n        this.vpcId = props.vpcId;\n        this.addSubnetIds = props.addSubnetIds;\n        this.options = props.options;\n        this.removeSubnetIds = props.removeSubnetIds;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::TransitGatewayVpcAttachment\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnTransitGatewayVpcAttachment.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            subnetIds: this.subnetIds,\n            transitGatewayId: this.transitGatewayId,\n            vpcId: this.vpcId,\n            addSubnetIds: this.addSubnetIds,\n            options: this.options,\n            removeSubnetIds: this.removeSubnetIds,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnTransitGatewayVpcAttachmentPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnVPC`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html\n */\nexport interface CfnVPCProps {\n\n    /**\n     * The primary IPv4 CIDR block for the VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-cidrblock\n     */\n    readonly cidrBlock: string;\n\n    /**\n     * Indicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS hostnames; otherwise, they do not. Disabled by default for nondefault VPCs. For more information, see [DNS attributes in your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html#vpc-dns-support) .\n     *\n     * You can only enable DNS hostnames if you've enabled DNS support.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-EnableDnsHostnames\n     */\n    readonly enableDnsHostnames?: boolean | cdk.IResolvable;\n\n    /**\n     * Indicates whether the DNS resolution is supported for the VPC. If enabled, queries to the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range \"plus two\" succeed. If disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled. Enabled by default. For more information, see [DNS attributes in your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html#vpc-dns-support) .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-EnableDnsSupport\n     */\n    readonly enableDnsSupport?: boolean | cdk.IResolvable;\n\n    /**\n     * The allowed tenancy of instances launched into the VPC.\n     *\n     * - `\"default\"` : An instance launched into the VPC runs on shared hardware by default, unless you explicitly specify a different tenancy during instance launch.\n     * - `\"dedicated\"` : An instance launched into the VPC is a Dedicated Instance by default, unless you explicitly specify a tenancy of host during instance launch. You cannot specify a tenancy of default during instance launch.\n     *\n     * Updating `InstanceTenancy` requires no replacement only if you are updating its value from `\"dedicated\"` to `\"default\"` . Updating `InstanceTenancy` from `\"default\"` to `\"dedicated\"` requires replacement.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-instancetenancy\n     */\n    readonly instanceTenancy?: string;\n\n    /**\n     * The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR. For more information, see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-ec2-vpc-ipv4ipampoolid\n     */\n    readonly ipv4IpamPoolId?: string;\n\n    /**\n     * The netmask length of the IPv4 CIDR you want to allocate to this VPC from an Amazon VPC IP Address Manager (IPAM) pool. For more information about IPAM, see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-ec2-vpc-ipv4netmasklength\n     */\n    readonly ipv4NetmaskLength?: number;\n\n    /**\n     * The tags for the VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnVPCProps`\n *\n * @param properties - the TypeScript properties of a `CfnVPCProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnVPCPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('cidrBlock', cdk.requiredValidator)(properties.cidrBlock));\n    errors.collect(cdk.propertyValidator('cidrBlock', cdk.validateString)(properties.cidrBlock));\n    errors.collect(cdk.propertyValidator('enableDnsHostnames', cdk.validateBoolean)(properties.enableDnsHostnames));\n    errors.collect(cdk.propertyValidator('enableDnsSupport', cdk.validateBoolean)(properties.enableDnsSupport));\n    errors.collect(cdk.propertyValidator('instanceTenancy', cdk.validateString)(properties.instanceTenancy));\n    errors.collect(cdk.propertyValidator('ipv4IpamPoolId', cdk.validateString)(properties.ipv4IpamPoolId));\n    errors.collect(cdk.propertyValidator('ipv4NetmaskLength', cdk.validateNumber)(properties.ipv4NetmaskLength));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnVPCProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::VPC` resource\n *\n * @param properties - the TypeScript properties of a `CfnVPCProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::VPC` resource.\n */\n// @ts-ignore TS6133\nfunction cfnVPCPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnVPCPropsValidator(properties).assertSuccess();\n    return {\n        CidrBlock: cdk.stringToCloudFormation(properties.cidrBlock),\n        EnableDnsHostnames: cdk.booleanToCloudFormation(properties.enableDnsHostnames),\n        EnableDnsSupport: cdk.booleanToCloudFormation(properties.enableDnsSupport),\n        InstanceTenancy: cdk.stringToCloudFormation(properties.instanceTenancy),\n        Ipv4IpamPoolId: cdk.stringToCloudFormation(properties.ipv4IpamPoolId),\n        Ipv4NetmaskLength: cdk.numberToCloudFormation(properties.ipv4NetmaskLength),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnVPCPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnVPCProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnVPCProps>();\n    ret.addPropertyResult('cidrBlock', 'CidrBlock', cfn_parse.FromCloudFormation.getString(properties.CidrBlock));\n    ret.addPropertyResult('enableDnsHostnames', 'EnableDnsHostnames', properties.EnableDnsHostnames != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableDnsHostnames) : undefined);\n    ret.addPropertyResult('enableDnsSupport', 'EnableDnsSupport', properties.EnableDnsSupport != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableDnsSupport) : undefined);\n    ret.addPropertyResult('instanceTenancy', 'InstanceTenancy', properties.InstanceTenancy != null ? cfn_parse.FromCloudFormation.getString(properties.InstanceTenancy) : undefined);\n    ret.addPropertyResult('ipv4IpamPoolId', 'Ipv4IpamPoolId', properties.Ipv4IpamPoolId != null ? cfn_parse.FromCloudFormation.getString(properties.Ipv4IpamPoolId) : undefined);\n    ret.addPropertyResult('ipv4NetmaskLength', 'Ipv4NetmaskLength', properties.Ipv4NetmaskLength != null ? cfn_parse.FromCloudFormation.getNumber(properties.Ipv4NetmaskLength) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::VPC`\n *\n * Specifies a VPC with the specified IPv4 CIDR block. The smallest VPC you can create uses a /28 netmask (16 IPv4 addresses), and the largest uses a /16 netmask (65,536 IPv4 addresses). For more information about how large to make your VPC, see [Overview of VPCs and subnets](https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html) in the *Amazon Virtual Private Cloud User Guide* .\n *\n * @cloudformationResource AWS::EC2::VPC\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html\n */\nexport class CfnVPC extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::VPC\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnVPC {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnVPCPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnVPC(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The set of IP addresses for the VPC. For example, `10.0.0.0/16` .\n     * @cloudformationAttribute CidrBlock\n     */\n    public readonly attrCidrBlock: string;\n\n    /**\n     * The IPv4 CIDR block association IDs for the VPC. For example, `[ vpc-cidr-assoc-0280ab6b ]` .\n     * @cloudformationAttribute CidrBlockAssociations\n     */\n    public readonly attrCidrBlockAssociations: string[];\n\n    /**\n     * The default network ACL ID that is associated with the VPC. For example, `acl-814dafe3` .\n     * @cloudformationAttribute DefaultNetworkAcl\n     */\n    public readonly attrDefaultNetworkAcl: string;\n\n    /**\n     * The default security group ID that is associated with the VPC. For example, `sg-b178e0d3` .\n     * @cloudformationAttribute DefaultSecurityGroup\n     */\n    public readonly attrDefaultSecurityGroup: string;\n\n    /**\n     * The IPv6 CIDR blocks that are associated with the VPC, such as `[ 2001:db8:1234:1a00::/56 ]` .\n     * @cloudformationAttribute Ipv6CidrBlocks\n     */\n    public readonly attrIpv6CidrBlocks: string[];\n\n    /**\n     * The primary IPv4 CIDR block for the VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-cidrblock\n     */\n    public cidrBlock: string;\n\n    /**\n     * Indicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS hostnames; otherwise, they do not. Disabled by default for nondefault VPCs. For more information, see [DNS attributes in your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html#vpc-dns-support) .\n     *\n     * You can only enable DNS hostnames if you've enabled DNS support.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-EnableDnsHostnames\n     */\n    public enableDnsHostnames: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * Indicates whether the DNS resolution is supported for the VPC. If enabled, queries to the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range \"plus two\" succeed. If disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled. Enabled by default. For more information, see [DNS attributes in your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html#vpc-dns-support) .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-EnableDnsSupport\n     */\n    public enableDnsSupport: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * The allowed tenancy of instances launched into the VPC.\n     *\n     * - `\"default\"` : An instance launched into the VPC runs on shared hardware by default, unless you explicitly specify a different tenancy during instance launch.\n     * - `\"dedicated\"` : An instance launched into the VPC is a Dedicated Instance by default, unless you explicitly specify a tenancy of host during instance launch. You cannot specify a tenancy of default during instance launch.\n     *\n     * Updating `InstanceTenancy` requires no replacement only if you are updating its value from `\"dedicated\"` to `\"default\"` . Updating `InstanceTenancy` from `\"default\"` to `\"dedicated\"` requires replacement.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-instancetenancy\n     */\n    public instanceTenancy: string | undefined;\n\n    /**\n     * The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR. For more information, see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-ec2-vpc-ipv4ipampoolid\n     */\n    public ipv4IpamPoolId: string | undefined;\n\n    /**\n     * The netmask length of the IPv4 CIDR you want to allocate to this VPC from an Amazon VPC IP Address Manager (IPAM) pool. For more information about IPAM, see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-ec2-vpc-ipv4netmasklength\n     */\n    public ipv4NetmaskLength: number | undefined;\n\n    /**\n     * The tags for the VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EC2::VPC`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnVPCProps) {\n        super(scope, id, { type: CfnVPC.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'cidrBlock', this);\n        this.attrCidrBlock = cdk.Token.asString(this.getAtt('CidrBlock'));\n        this.attrCidrBlockAssociations = cdk.Token.asList(this.getAtt('CidrBlockAssociations'));\n        this.attrDefaultNetworkAcl = cdk.Token.asString(this.getAtt('DefaultNetworkAcl'));\n        this.attrDefaultSecurityGroup = cdk.Token.asString(this.getAtt('DefaultSecurityGroup'));\n        this.attrIpv6CidrBlocks = cdk.Token.asList(this.getAtt('Ipv6CidrBlocks'));\n\n        this.cidrBlock = props.cidrBlock;\n        this.enableDnsHostnames = props.enableDnsHostnames;\n        this.enableDnsSupport = props.enableDnsSupport;\n        this.instanceTenancy = props.instanceTenancy;\n        this.ipv4IpamPoolId = props.ipv4IpamPoolId;\n        this.ipv4NetmaskLength = props.ipv4NetmaskLength;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::VPC\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnVPC.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            cidrBlock: this.cidrBlock,\n            enableDnsHostnames: this.enableDnsHostnames,\n            enableDnsSupport: this.enableDnsSupport,\n            instanceTenancy: this.instanceTenancy,\n            ipv4IpamPoolId: this.ipv4IpamPoolId,\n            ipv4NetmaskLength: this.ipv4NetmaskLength,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnVPCPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnVPCCidrBlock`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html\n */\nexport interface CfnVPCCidrBlockProps {\n\n    /**\n     * The ID of the VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-vpcid\n     */\n    readonly vpcId: string;\n\n    /**\n     * Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IPv6 addresses, or the size of the CIDR block.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-amazonprovidedipv6cidrblock\n     */\n    readonly amazonProvidedIpv6CidrBlock?: boolean | cdk.IResolvable;\n\n    /**\n     * An IPv4 CIDR block to associate with the VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-cidrblock\n     */\n    readonly cidrBlock?: string;\n\n    /**\n     * Associate a CIDR allocated from an IPv4 IPAM pool to a VPC. For more information about Amazon VPC IP Address Manager (IPAM), see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv4ipampoolid\n     */\n    readonly ipv4IpamPoolId?: string;\n\n    /**\n     * The netmask length of the IPv4 CIDR you would like to associate from an Amazon VPC IP Address Manager (IPAM) pool. For more information about IPAM, see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv4netmasklength\n     */\n    readonly ipv4NetmaskLength?: number;\n\n    /**\n     * An IPv6 CIDR block from the IPv6 address pool. You must also specify `Ipv6Pool` in the request.\n     *\n     * To let Amazon choose the IPv6 CIDR block for you, omit this parameter.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv6cidrblock\n     */\n    readonly ipv6CidrBlock?: string;\n\n    /**\n     * Associates a CIDR allocated from an IPv6 IPAM pool to a VPC. For more information about Amazon VPC IP Address Manager (IPAM), see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv6ipampoolid\n     */\n    readonly ipv6IpamPoolId?: string;\n\n    /**\n     * The netmask length of the IPv6 CIDR you would like to associate from an Amazon VPC IP Address Manager (IPAM) pool. For more information about IPAM, see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv6netmasklength\n     */\n    readonly ipv6NetmaskLength?: number;\n\n    /**\n     * The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv6pool\n     */\n    readonly ipv6Pool?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnVPCCidrBlockProps`\n *\n * @param properties - the TypeScript properties of a `CfnVPCCidrBlockProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnVPCCidrBlockPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('amazonProvidedIpv6CidrBlock', cdk.validateBoolean)(properties.amazonProvidedIpv6CidrBlock));\n    errors.collect(cdk.propertyValidator('cidrBlock', cdk.validateString)(properties.cidrBlock));\n    errors.collect(cdk.propertyValidator('ipv4IpamPoolId', cdk.validateString)(properties.ipv4IpamPoolId));\n    errors.collect(cdk.propertyValidator('ipv4NetmaskLength', cdk.validateNumber)(properties.ipv4NetmaskLength));\n    errors.collect(cdk.propertyValidator('ipv6CidrBlock', cdk.validateString)(properties.ipv6CidrBlock));\n    errors.collect(cdk.propertyValidator('ipv6IpamPoolId', cdk.validateString)(properties.ipv6IpamPoolId));\n    errors.collect(cdk.propertyValidator('ipv6NetmaskLength', cdk.validateNumber)(properties.ipv6NetmaskLength));\n    errors.collect(cdk.propertyValidator('ipv6Pool', cdk.validateString)(properties.ipv6Pool));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.requiredValidator)(properties.vpcId));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.validateString)(properties.vpcId));\n    return errors.wrap('supplied properties not correct for \"CfnVPCCidrBlockProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::VPCCidrBlock` resource\n *\n * @param properties - the TypeScript properties of a `CfnVPCCidrBlockProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::VPCCidrBlock` resource.\n */\n// @ts-ignore TS6133\nfunction cfnVPCCidrBlockPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnVPCCidrBlockPropsValidator(properties).assertSuccess();\n    return {\n        VpcId: cdk.stringToCloudFormation(properties.vpcId),\n        AmazonProvidedIpv6CidrBlock: cdk.booleanToCloudFormation(properties.amazonProvidedIpv6CidrBlock),\n        CidrBlock: cdk.stringToCloudFormation(properties.cidrBlock),\n        Ipv4IpamPoolId: cdk.stringToCloudFormation(properties.ipv4IpamPoolId),\n        Ipv4NetmaskLength: cdk.numberToCloudFormation(properties.ipv4NetmaskLength),\n        Ipv6CidrBlock: cdk.stringToCloudFormation(properties.ipv6CidrBlock),\n        Ipv6IpamPoolId: cdk.stringToCloudFormation(properties.ipv6IpamPoolId),\n        Ipv6NetmaskLength: cdk.numberToCloudFormation(properties.ipv6NetmaskLength),\n        Ipv6Pool: cdk.stringToCloudFormation(properties.ipv6Pool),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnVPCCidrBlockPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnVPCCidrBlockProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnVPCCidrBlockProps>();\n    ret.addPropertyResult('vpcId', 'VpcId', cfn_parse.FromCloudFormation.getString(properties.VpcId));\n    ret.addPropertyResult('amazonProvidedIpv6CidrBlock', 'AmazonProvidedIpv6CidrBlock', properties.AmazonProvidedIpv6CidrBlock != null ? cfn_parse.FromCloudFormation.getBoolean(properties.AmazonProvidedIpv6CidrBlock) : undefined);\n    ret.addPropertyResult('cidrBlock', 'CidrBlock', properties.CidrBlock != null ? cfn_parse.FromCloudFormation.getString(properties.CidrBlock) : undefined);\n    ret.addPropertyResult('ipv4IpamPoolId', 'Ipv4IpamPoolId', properties.Ipv4IpamPoolId != null ? cfn_parse.FromCloudFormation.getString(properties.Ipv4IpamPoolId) : undefined);\n    ret.addPropertyResult('ipv4NetmaskLength', 'Ipv4NetmaskLength', properties.Ipv4NetmaskLength != null ? cfn_parse.FromCloudFormation.getNumber(properties.Ipv4NetmaskLength) : undefined);\n    ret.addPropertyResult('ipv6CidrBlock', 'Ipv6CidrBlock', properties.Ipv6CidrBlock != null ? cfn_parse.FromCloudFormation.getString(properties.Ipv6CidrBlock) : undefined);\n    ret.addPropertyResult('ipv6IpamPoolId', 'Ipv6IpamPoolId', properties.Ipv6IpamPoolId != null ? cfn_parse.FromCloudFormation.getString(properties.Ipv6IpamPoolId) : undefined);\n    ret.addPropertyResult('ipv6NetmaskLength', 'Ipv6NetmaskLength', properties.Ipv6NetmaskLength != null ? cfn_parse.FromCloudFormation.getNumber(properties.Ipv6NetmaskLength) : undefined);\n    ret.addPropertyResult('ipv6Pool', 'Ipv6Pool', properties.Ipv6Pool != null ? cfn_parse.FromCloudFormation.getString(properties.Ipv6Pool) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::VPCCidrBlock`\n *\n * Associates a CIDR block with your VPC. You can only associate a single IPv6 CIDR block with your VPC. The IPv6 CIDR block size is fixed at /56.\n *\n * For more information about associating CIDR blocks with your VPC and applicable restrictions, see [VPC and Subnet Sizing](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html#VPC_Sizing) in the *Amazon Virtual Private Cloud User Guide* .\n *\n * @cloudformationResource AWS::EC2::VPCCidrBlock\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html\n */\nexport class CfnVPCCidrBlock extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::VPCCidrBlock\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnVPCCidrBlock {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnVPCCidrBlockPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnVPCCidrBlock(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-vpcid\n     */\n    public vpcId: string;\n\n    /**\n     * Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IPv6 addresses, or the size of the CIDR block.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-amazonprovidedipv6cidrblock\n     */\n    public amazonProvidedIpv6CidrBlock: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * An IPv4 CIDR block to associate with the VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-cidrblock\n     */\n    public cidrBlock: string | undefined;\n\n    /**\n     * Associate a CIDR allocated from an IPv4 IPAM pool to a VPC. For more information about Amazon VPC IP Address Manager (IPAM), see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv4ipampoolid\n     */\n    public ipv4IpamPoolId: string | undefined;\n\n    /**\n     * The netmask length of the IPv4 CIDR you would like to associate from an Amazon VPC IP Address Manager (IPAM) pool. For more information about IPAM, see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv4netmasklength\n     */\n    public ipv4NetmaskLength: number | undefined;\n\n    /**\n     * An IPv6 CIDR block from the IPv6 address pool. You must also specify `Ipv6Pool` in the request.\n     *\n     * To let Amazon choose the IPv6 CIDR block for you, omit this parameter.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv6cidrblock\n     */\n    public ipv6CidrBlock: string | undefined;\n\n    /**\n     * Associates a CIDR allocated from an IPv6 IPAM pool to a VPC. For more information about Amazon VPC IP Address Manager (IPAM), see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv6ipampoolid\n     */\n    public ipv6IpamPoolId: string | undefined;\n\n    /**\n     * The netmask length of the IPv6 CIDR you would like to associate from an Amazon VPC IP Address Manager (IPAM) pool. For more information about IPAM, see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv6netmasklength\n     */\n    public ipv6NetmaskLength: number | undefined;\n\n    /**\n     * The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv6pool\n     */\n    public ipv6Pool: string | undefined;\n\n    /**\n     * Create a new `AWS::EC2::VPCCidrBlock`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnVPCCidrBlockProps) {\n        super(scope, id, { type: CfnVPCCidrBlock.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'vpcId', this);\n\n        this.vpcId = props.vpcId;\n        this.amazonProvidedIpv6CidrBlock = props.amazonProvidedIpv6CidrBlock;\n        this.cidrBlock = props.cidrBlock;\n        this.ipv4IpamPoolId = props.ipv4IpamPoolId;\n        this.ipv4NetmaskLength = props.ipv4NetmaskLength;\n        this.ipv6CidrBlock = props.ipv6CidrBlock;\n        this.ipv6IpamPoolId = props.ipv6IpamPoolId;\n        this.ipv6NetmaskLength = props.ipv6NetmaskLength;\n        this.ipv6Pool = props.ipv6Pool;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnVPCCidrBlock.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            vpcId: this.vpcId,\n            amazonProvidedIpv6CidrBlock: this.amazonProvidedIpv6CidrBlock,\n            cidrBlock: this.cidrBlock,\n            ipv4IpamPoolId: this.ipv4IpamPoolId,\n            ipv4NetmaskLength: this.ipv4NetmaskLength,\n            ipv6CidrBlock: this.ipv6CidrBlock,\n            ipv6IpamPoolId: this.ipv6IpamPoolId,\n            ipv6NetmaskLength: this.ipv6NetmaskLength,\n            ipv6Pool: this.ipv6Pool,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnVPCCidrBlockPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnVPCDHCPOptionsAssociation`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcdhcpoptionsassociation.html\n */\nexport interface CfnVPCDHCPOptionsAssociationProps {\n\n    /**\n     * The ID of the DHCP options set, or `default` to associate no DHCP options with the VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcdhcpoptionsassociation.html#cfn-ec2-vpcdhcpoptionsassociation-dhcpoptionsid\n     */\n    readonly dhcpOptionsId: string;\n\n    /**\n     * The ID of the VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcdhcpoptionsassociation.html#cfn-ec2-vpcdhcpoptionsassociation-vpcid\n     */\n    readonly vpcId: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnVPCDHCPOptionsAssociationProps`\n *\n * @param properties - the TypeScript properties of a `CfnVPCDHCPOptionsAssociationProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnVPCDHCPOptionsAssociationPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('dhcpOptionsId', cdk.requiredValidator)(properties.dhcpOptionsId));\n    errors.collect(cdk.propertyValidator('dhcpOptionsId', cdk.validateString)(properties.dhcpOptionsId));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.requiredValidator)(properties.vpcId));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.validateString)(properties.vpcId));\n    return errors.wrap('supplied properties not correct for \"CfnVPCDHCPOptionsAssociationProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::VPCDHCPOptionsAssociation` resource\n *\n * @param properties - the TypeScript properties of a `CfnVPCDHCPOptionsAssociationProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::VPCDHCPOptionsAssociation` resource.\n */\n// @ts-ignore TS6133\nfunction cfnVPCDHCPOptionsAssociationPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnVPCDHCPOptionsAssociationPropsValidator(properties).assertSuccess();\n    return {\n        DhcpOptionsId: cdk.stringToCloudFormation(properties.dhcpOptionsId),\n        VpcId: cdk.stringToCloudFormation(properties.vpcId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnVPCDHCPOptionsAssociationPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnVPCDHCPOptionsAssociationProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnVPCDHCPOptionsAssociationProps>();\n    ret.addPropertyResult('dhcpOptionsId', 'DhcpOptionsId', cfn_parse.FromCloudFormation.getString(properties.DhcpOptionsId));\n    ret.addPropertyResult('vpcId', 'VpcId', cfn_parse.FromCloudFormation.getString(properties.VpcId));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::VPCDHCPOptionsAssociation`\n *\n * Associates a set of DHCP options with a VPC, or associates no DHCP options with the VPC.\n *\n * After you associate the options with the VPC, any existing instances and all new instances that you launch in that VPC use the options. You don't need to restart or relaunch the instances. They automatically pick up the changes within a few hours, depending on how frequently the instance renews its DHCP lease. You can explicitly renew the lease using the operating system on the instance.\n *\n * @cloudformationResource AWS::EC2::VPCDHCPOptionsAssociation\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcdhcpoptionsassociation.html\n */\nexport class CfnVPCDHCPOptionsAssociation extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::VPCDHCPOptionsAssociation\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnVPCDHCPOptionsAssociation {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnVPCDHCPOptionsAssociationPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnVPCDHCPOptionsAssociation(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the DHCP options set.\n     * @cloudformationAttribute Id\n     */\n    public readonly attrId: string;\n\n    /**\n     * The ID of the DHCP options set, or `default` to associate no DHCP options with the VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcdhcpoptionsassociation.html#cfn-ec2-vpcdhcpoptionsassociation-dhcpoptionsid\n     */\n    public dhcpOptionsId: string;\n\n    /**\n     * The ID of the VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcdhcpoptionsassociation.html#cfn-ec2-vpcdhcpoptionsassociation-vpcid\n     */\n    public vpcId: string;\n\n    /**\n     * Create a new `AWS::EC2::VPCDHCPOptionsAssociation`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnVPCDHCPOptionsAssociationProps) {\n        super(scope, id, { type: CfnVPCDHCPOptionsAssociation.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'dhcpOptionsId', this);\n        cdk.requireProperty(props, 'vpcId', this);\n        this.attrId = cdk.Token.asString(this.getAtt('Id'));\n\n        this.dhcpOptionsId = props.dhcpOptionsId;\n        this.vpcId = props.vpcId;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnVPCDHCPOptionsAssociation.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            dhcpOptionsId: this.dhcpOptionsId,\n            vpcId: this.vpcId,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnVPCDHCPOptionsAssociationPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnVPCEndpoint`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html\n */\nexport interface CfnVPCEndpointProps {\n\n    /**\n     * The service name. To list the available services, use [DescribeVpcEndpointServices](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServices.html) . Otherwise, get the name from the service provider.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-servicename\n     */\n    readonly serviceName: string;\n\n    /**\n     * The ID of the VPC in which the endpoint will be used.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-vpcid\n     */\n    readonly vpcId: string;\n\n    /**\n     * A policy that controls access to the service from the VPC. If this parameter is not specified, the default policy allows full access to the service. Endpoint policies are supported only for gateway and interface endpoints.\n     *\n     * For CloudFormation templates in YAML, you can provide the policy in JSON or YAML format. AWS CloudFormation converts YAML policies to JSON format before calling the API to create or modify the VPC endpoint.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-policydocument\n     */\n    readonly policyDocument?: any | cdk.IResolvable;\n\n    /**\n     * Indicate whether to associate a private hosted zone with the specified VPC. The private hosted zone contains a record set for the default public DNS name for the service for the Region (for example, `kinesis.us-east-1.amazonaws.com` ), which resolves to the private IP addresses of the endpoint network interfaces in the VPC. This enables you to make requests to the default public DNS name for the service instead of the public DNS names that are automatically generated by the VPC endpoint service.\n     *\n     * To use a private hosted zone, you must set the following VPC attributes to `true` : `enableDnsHostnames` and `enableDnsSupport` .\n     *\n     * This property is supported only for interface endpoints.\n     *\n     * Default: `false`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-privatednsenabled\n     */\n    readonly privateDnsEnabled?: boolean | cdk.IResolvable;\n\n    /**\n     * The route table IDs. Routing is supported only for gateway endpoints.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-routetableids\n     */\n    readonly routeTableIds?: string[];\n\n    /**\n     * The IDs of the security groups to associate with the endpoint network interface. Security groups are supported only for interface endpoints.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-securitygroupids\n     */\n    readonly securityGroupIds?: string[];\n\n    /**\n     * The ID of the subnets in which to create an endpoint network interface. You must specify this property for an interface endpoints or a Gateway Load Balancer endpoint. You can't specify this property for a gateway endpoint. For a Gateway Load Balancer endpoint, you can specify only one subnet.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-subnetids\n     */\n    readonly subnetIds?: string[];\n\n    /**\n     * The type of endpoint.\n     *\n     * Default: Gateway\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-vpcendpointtype\n     */\n    readonly vpcEndpointType?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnVPCEndpointProps`\n *\n * @param properties - the TypeScript properties of a `CfnVPCEndpointProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnVPCEndpointPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('policyDocument', cdk.validateObject)(properties.policyDocument));\n    errors.collect(cdk.propertyValidator('privateDnsEnabled', cdk.validateBoolean)(properties.privateDnsEnabled));\n    errors.collect(cdk.propertyValidator('routeTableIds', cdk.listValidator(cdk.validateString))(properties.routeTableIds));\n    errors.collect(cdk.propertyValidator('securityGroupIds', cdk.listValidator(cdk.validateString))(properties.securityGroupIds));\n    errors.collect(cdk.propertyValidator('serviceName', cdk.requiredValidator)(properties.serviceName));\n    errors.collect(cdk.propertyValidator('serviceName', cdk.validateString)(properties.serviceName));\n    errors.collect(cdk.propertyValidator('subnetIds', cdk.listValidator(cdk.validateString))(properties.subnetIds));\n    errors.collect(cdk.propertyValidator('vpcEndpointType', cdk.validateString)(properties.vpcEndpointType));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.requiredValidator)(properties.vpcId));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.validateString)(properties.vpcId));\n    return errors.wrap('supplied properties not correct for \"CfnVPCEndpointProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::VPCEndpoint` resource\n *\n * @param properties - the TypeScript properties of a `CfnVPCEndpointProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::VPCEndpoint` resource.\n */\n// @ts-ignore TS6133\nfunction cfnVPCEndpointPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnVPCEndpointPropsValidator(properties).assertSuccess();\n    return {\n        ServiceName: cdk.stringToCloudFormation(properties.serviceName),\n        VpcId: cdk.stringToCloudFormation(properties.vpcId),\n        PolicyDocument: cdk.objectToCloudFormation(properties.policyDocument),\n        PrivateDnsEnabled: cdk.booleanToCloudFormation(properties.privateDnsEnabled),\n        RouteTableIds: cdk.listMapper(cdk.stringToCloudFormation)(properties.routeTableIds),\n        SecurityGroupIds: cdk.listMapper(cdk.stringToCloudFormation)(properties.securityGroupIds),\n        SubnetIds: cdk.listMapper(cdk.stringToCloudFormation)(properties.subnetIds),\n        VpcEndpointType: cdk.stringToCloudFormation(properties.vpcEndpointType),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnVPCEndpointPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnVPCEndpointProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnVPCEndpointProps>();\n    ret.addPropertyResult('serviceName', 'ServiceName', cfn_parse.FromCloudFormation.getString(properties.ServiceName));\n    ret.addPropertyResult('vpcId', 'VpcId', cfn_parse.FromCloudFormation.getString(properties.VpcId));\n    ret.addPropertyResult('policyDocument', 'PolicyDocument', properties.PolicyDocument != null ? cfn_parse.FromCloudFormation.getAny(properties.PolicyDocument) : undefined);\n    ret.addPropertyResult('privateDnsEnabled', 'PrivateDnsEnabled', properties.PrivateDnsEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.PrivateDnsEnabled) : undefined);\n    ret.addPropertyResult('routeTableIds', 'RouteTableIds', properties.RouteTableIds != null ? cfn_parse.FromCloudFormation.getStringArray(properties.RouteTableIds) : undefined);\n    ret.addPropertyResult('securityGroupIds', 'SecurityGroupIds', properties.SecurityGroupIds != null ? cfn_parse.FromCloudFormation.getStringArray(properties.SecurityGroupIds) : undefined);\n    ret.addPropertyResult('subnetIds', 'SubnetIds', properties.SubnetIds != null ? cfn_parse.FromCloudFormation.getStringArray(properties.SubnetIds) : undefined);\n    ret.addPropertyResult('vpcEndpointType', 'VpcEndpointType', properties.VpcEndpointType != null ? cfn_parse.FromCloudFormation.getString(properties.VpcEndpointType) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::VPCEndpoint`\n *\n * Specifies a VPC endpoint for a service. An endpoint enables you to create a private connection between your VPC and the service. The service may be provided by AWS , an AWS Marketplace Partner, or another AWS account. For more information, see the [AWS PrivateLink User Guide](https://docs.aws.amazon.com/vpc/latest/privatelink/) .\n *\n * An interface endpoint establishes connections between the subnets in your VPC and an AWS service, your own service, or a service hosted by another AWS account . You can specify the subnets in which to create the endpoint and the security groups to associate with the endpoint network interface.\n *\n * A gateway endpoint serves as a target for a route in your route table for traffic destined for Amazon S3 or Amazon DynamoDB. You can specify an endpoint policy for the endpoint, which controls access to the service from your VPC. You can also specify the VPC route tables that use the endpoint. For information about connectivity to Amazon S3, see [Why can\u2019t I connect to an S3 bucket using a gateway VPC endpoint?](https://docs.aws.amazon.com/premiumsupport/knowledge-center/connect-s3-vpc-endpoint)\n *\n * A Gateway Load Balancer endpoint provides private connectivity between your VPC and virtual appliances from a service provider.\n *\n * @cloudformationResource AWS::EC2::VPCEndpoint\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html\n */\nexport class CfnVPCEndpoint extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::VPCEndpoint\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnVPCEndpoint {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnVPCEndpointPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnVPCEndpoint(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The date and time the VPC endpoint was created. For example: `Fri Sep 28 23:34:36 UTC 2018.`\n     * @cloudformationAttribute CreationTimestamp\n     */\n    public readonly attrCreationTimestamp: string;\n\n    /**\n     * (Interface endpoints) The DNS entries for the endpoint. Each entry is a combination of the hosted zone ID and the DNS name. The entries are ordered as follows: regional public DNS, zonal public DNS, private DNS, and wildcard DNS. This order is not enforced for AWS Marketplace services.\n     *\n     * The following is an example. In the first entry, the hosted zone ID is Z1HUB23UULQXV and the DNS name is vpce-01abc23456de78f9g-12abccd3.ec2.us-east-1.vpce.amazonaws.com.\n     *\n     * [\"Z1HUB23UULQXV:vpce-01abc23456de78f9g-12abccd3.ec2.us-east-1.vpce.amazonaws.com\", \"Z1HUB23UULQXV:vpce-01abc23456de78f9g-12abccd3-us-east-1a.ec2.us-east-1.vpce.amazonaws.com\", \"Z1C12344VYDITB0:ec2.us-east-1.amazonaws.com\"]\n     *\n     * If you update the `PrivateDnsEnabled` or `SubnetIds` properties, the DNS entries in the list will change.\n     * @cloudformationAttribute DnsEntries\n     */\n    public readonly attrDnsEntries: string[];\n\n    /**\n     * (Interface endpoints) One or more network interface IDs. If you update the `PrivateDnsEnabled` or `SubnetIds` properties, the items in this list might change.\n     * @cloudformationAttribute NetworkInterfaceIds\n     */\n    public readonly attrNetworkInterfaceIds: string[];\n\n    /**\n     * The service name. To list the available services, use [DescribeVpcEndpointServices](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServices.html) . Otherwise, get the name from the service provider.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-servicename\n     */\n    public serviceName: string;\n\n    /**\n     * The ID of the VPC in which the endpoint will be used.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-vpcid\n     */\n    public vpcId: string;\n\n    /**\n     * A policy that controls access to the service from the VPC. If this parameter is not specified, the default policy allows full access to the service. Endpoint policies are supported only for gateway and interface endpoints.\n     *\n     * For CloudFormation templates in YAML, you can provide the policy in JSON or YAML format. AWS CloudFormation converts YAML policies to JSON format before calling the API to create or modify the VPC endpoint.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-policydocument\n     */\n    public policyDocument: any | cdk.IResolvable | undefined;\n\n    /**\n     * Indicate whether to associate a private hosted zone with the specified VPC. The private hosted zone contains a record set for the default public DNS name for the service for the Region (for example, `kinesis.us-east-1.amazonaws.com` ), which resolves to the private IP addresses of the endpoint network interfaces in the VPC. This enables you to make requests to the default public DNS name for the service instead of the public DNS names that are automatically generated by the VPC endpoint service.\n     *\n     * To use a private hosted zone, you must set the following VPC attributes to `true` : `enableDnsHostnames` and `enableDnsSupport` .\n     *\n     * This property is supported only for interface endpoints.\n     *\n     * Default: `false`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-privatednsenabled\n     */\n    public privateDnsEnabled: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * The route table IDs. Routing is supported only for gateway endpoints.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-routetableids\n     */\n    public routeTableIds: string[] | undefined;\n\n    /**\n     * The IDs of the security groups to associate with the endpoint network interface. Security groups are supported only for interface endpoints.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-securitygroupids\n     */\n    public securityGroupIds: string[] | undefined;\n\n    /**\n     * The ID of the subnets in which to create an endpoint network interface. You must specify this property for an interface endpoints or a Gateway Load Balancer endpoint. You can't specify this property for a gateway endpoint. For a Gateway Load Balancer endpoint, you can specify only one subnet.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-subnetids\n     */\n    public subnetIds: string[] | undefined;\n\n    /**\n     * The type of endpoint.\n     *\n     * Default: Gateway\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-vpcendpointtype\n     */\n    public vpcEndpointType: string | undefined;\n\n    /**\n     * Create a new `AWS::EC2::VPCEndpoint`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnVPCEndpointProps) {\n        super(scope, id, { type: CfnVPCEndpoint.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'serviceName', this);\n        cdk.requireProperty(props, 'vpcId', this);\n        this.attrCreationTimestamp = cdk.Token.asString(this.getAtt('CreationTimestamp'));\n        this.attrDnsEntries = cdk.Token.asList(this.getAtt('DnsEntries'));\n        this.attrNetworkInterfaceIds = cdk.Token.asList(this.getAtt('NetworkInterfaceIds'));\n\n        this.serviceName = props.serviceName;\n        this.vpcId = props.vpcId;\n        this.policyDocument = props.policyDocument;\n        this.privateDnsEnabled = props.privateDnsEnabled;\n        this.routeTableIds = props.routeTableIds;\n        this.securityGroupIds = props.securityGroupIds;\n        this.subnetIds = props.subnetIds;\n        this.vpcEndpointType = props.vpcEndpointType;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnVPCEndpoint.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            serviceName: this.serviceName,\n            vpcId: this.vpcId,\n            policyDocument: this.policyDocument,\n            privateDnsEnabled: this.privateDnsEnabled,\n            routeTableIds: this.routeTableIds,\n            securityGroupIds: this.securityGroupIds,\n            subnetIds: this.subnetIds,\n            vpcEndpointType: this.vpcEndpointType,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnVPCEndpointPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnVPCEndpointConnectionNotification`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html\n */\nexport interface CfnVPCEndpointConnectionNotificationProps {\n\n    /**\n     * One or more endpoint events for which to receive notifications. Valid values are `Accept` , `Connect` , `Delete` , and `Reject` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-connectionevents\n     */\n    readonly connectionEvents: string[];\n\n    /**\n     * The ARN of the SNS topic for the notifications.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-connectionnotificationarn\n     */\n    readonly connectionNotificationArn: string;\n\n    /**\n     * The ID of the endpoint service.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-serviceid\n     */\n    readonly serviceId?: string;\n\n    /**\n     * The ID of the endpoint.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-vpcendpointid\n     */\n    readonly vpcEndpointId?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnVPCEndpointConnectionNotificationProps`\n *\n * @param properties - the TypeScript properties of a `CfnVPCEndpointConnectionNotificationProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnVPCEndpointConnectionNotificationPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('connectionEvents', cdk.requiredValidator)(properties.connectionEvents));\n    errors.collect(cdk.propertyValidator('connectionEvents', cdk.listValidator(cdk.validateString))(properties.connectionEvents));\n    errors.collect(cdk.propertyValidator('connectionNotificationArn', cdk.requiredValidator)(properties.connectionNotificationArn));\n    errors.collect(cdk.propertyValidator('connectionNotificationArn', cdk.validateString)(properties.connectionNotificationArn));\n    errors.collect(cdk.propertyValidator('serviceId', cdk.validateString)(properties.serviceId));\n    errors.collect(cdk.propertyValidator('vpcEndpointId', cdk.validateString)(properties.vpcEndpointId));\n    return errors.wrap('supplied properties not correct for \"CfnVPCEndpointConnectionNotificationProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::VPCEndpointConnectionNotification` resource\n *\n * @param properties - the TypeScript properties of a `CfnVPCEndpointConnectionNotificationProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::VPCEndpointConnectionNotification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnVPCEndpointConnectionNotificationPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnVPCEndpointConnectionNotificationPropsValidator(properties).assertSuccess();\n    return {\n        ConnectionEvents: cdk.listMapper(cdk.stringToCloudFormation)(properties.connectionEvents),\n        ConnectionNotificationArn: cdk.stringToCloudFormation(properties.connectionNotificationArn),\n        ServiceId: cdk.stringToCloudFormation(properties.serviceId),\n        VPCEndpointId: cdk.stringToCloudFormation(properties.vpcEndpointId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnVPCEndpointConnectionNotificationPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnVPCEndpointConnectionNotificationProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnVPCEndpointConnectionNotificationProps>();\n    ret.addPropertyResult('connectionEvents', 'ConnectionEvents', cfn_parse.FromCloudFormation.getStringArray(properties.ConnectionEvents));\n    ret.addPropertyResult('connectionNotificationArn', 'ConnectionNotificationArn', cfn_parse.FromCloudFormation.getString(properties.ConnectionNotificationArn));\n    ret.addPropertyResult('serviceId', 'ServiceId', properties.ServiceId != null ? cfn_parse.FromCloudFormation.getString(properties.ServiceId) : undefined);\n    ret.addPropertyResult('vpcEndpointId', 'VPCEndpointId', properties.VPCEndpointId != null ? cfn_parse.FromCloudFormation.getString(properties.VPCEndpointId) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::VPCEndpointConnectionNotification`\n *\n * Specifies a connection notification for a VPC endpoint or VPC endpoint service. A connection notification notifies you of specific endpoint events. You must create an SNS topic to receive notifications. For more information, see [Create a Topic](https://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html) in the *Amazon Simple Notification Service Developer Guide* .\n *\n * You can create a connection notification for interface endpoints only.\n *\n * @cloudformationResource AWS::EC2::VPCEndpointConnectionNotification\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html\n */\nexport class CfnVPCEndpointConnectionNotification extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::VPCEndpointConnectionNotification\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnVPCEndpointConnectionNotification {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnVPCEndpointConnectionNotificationPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnVPCEndpointConnectionNotification(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * One or more endpoint events for which to receive notifications. Valid values are `Accept` , `Connect` , `Delete` , and `Reject` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-connectionevents\n     */\n    public connectionEvents: string[];\n\n    /**\n     * The ARN of the SNS topic for the notifications.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-connectionnotificationarn\n     */\n    public connectionNotificationArn: string;\n\n    /**\n     * The ID of the endpoint service.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-serviceid\n     */\n    public serviceId: string | undefined;\n\n    /**\n     * The ID of the endpoint.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-vpcendpointid\n     */\n    public vpcEndpointId: string | undefined;\n\n    /**\n     * Create a new `AWS::EC2::VPCEndpointConnectionNotification`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnVPCEndpointConnectionNotificationProps) {\n        super(scope, id, { type: CfnVPCEndpointConnectionNotification.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'connectionEvents', this);\n        cdk.requireProperty(props, 'connectionNotificationArn', this);\n\n        this.connectionEvents = props.connectionEvents;\n        this.connectionNotificationArn = props.connectionNotificationArn;\n        this.serviceId = props.serviceId;\n        this.vpcEndpointId = props.vpcEndpointId;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnVPCEndpointConnectionNotification.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            connectionEvents: this.connectionEvents,\n            connectionNotificationArn: this.connectionNotificationArn,\n            serviceId: this.serviceId,\n            vpcEndpointId: this.vpcEndpointId,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnVPCEndpointConnectionNotificationPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnVPCEndpointService`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html\n */\nexport interface CfnVPCEndpointServiceProps {\n\n    /**\n     * Indicates whether requests from service consumers to create an endpoint to your service must be accepted.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-acceptancerequired\n     */\n    readonly acceptanceRequired?: boolean | cdk.IResolvable;\n\n    /**\n     * The Amazon Resource Names (ARNs) of one or more Gateway Load Balancers.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-gatewayloadbalancerarns\n     */\n    readonly gatewayLoadBalancerArns?: string[];\n\n    /**\n     * The Amazon Resource Names (ARNs) of one or more Network Load Balancers for your service.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-networkloadbalancerarns\n     */\n    readonly networkLoadBalancerArns?: string[];\n\n    /**\n     * The entity that is responsible for the endpoint costs. The default is the endpoint owner. If you set the payer responsibility to the service owner, you cannot set it back to the endpoint owner.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-payerresponsibility\n     */\n    readonly payerResponsibility?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnVPCEndpointServiceProps`\n *\n * @param properties - the TypeScript properties of a `CfnVPCEndpointServiceProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnVPCEndpointServicePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('acceptanceRequired', cdk.validateBoolean)(properties.acceptanceRequired));\n    errors.collect(cdk.propertyValidator('gatewayLoadBalancerArns', cdk.listValidator(cdk.validateString))(properties.gatewayLoadBalancerArns));\n    errors.collect(cdk.propertyValidator('networkLoadBalancerArns', cdk.listValidator(cdk.validateString))(properties.networkLoadBalancerArns));\n    errors.collect(cdk.propertyValidator('payerResponsibility', cdk.validateString)(properties.payerResponsibility));\n    return errors.wrap('supplied properties not correct for \"CfnVPCEndpointServiceProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::VPCEndpointService` resource\n *\n * @param properties - the TypeScript properties of a `CfnVPCEndpointServiceProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::VPCEndpointService` resource.\n */\n// @ts-ignore TS6133\nfunction cfnVPCEndpointServicePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnVPCEndpointServicePropsValidator(properties).assertSuccess();\n    return {\n        AcceptanceRequired: cdk.booleanToCloudFormation(properties.acceptanceRequired),\n        GatewayLoadBalancerArns: cdk.listMapper(cdk.stringToCloudFormation)(properties.gatewayLoadBalancerArns),\n        NetworkLoadBalancerArns: cdk.listMapper(cdk.stringToCloudFormation)(properties.networkLoadBalancerArns),\n        PayerResponsibility: cdk.stringToCloudFormation(properties.payerResponsibility),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnVPCEndpointServicePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnVPCEndpointServiceProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnVPCEndpointServiceProps>();\n    ret.addPropertyResult('acceptanceRequired', 'AcceptanceRequired', properties.AcceptanceRequired != null ? cfn_parse.FromCloudFormation.getBoolean(properties.AcceptanceRequired) : undefined);\n    ret.addPropertyResult('gatewayLoadBalancerArns', 'GatewayLoadBalancerArns', properties.GatewayLoadBalancerArns != null ? cfn_parse.FromCloudFormation.getStringArray(properties.GatewayLoadBalancerArns) : undefined);\n    ret.addPropertyResult('networkLoadBalancerArns', 'NetworkLoadBalancerArns', properties.NetworkLoadBalancerArns != null ? cfn_parse.FromCloudFormation.getStringArray(properties.NetworkLoadBalancerArns) : undefined);\n    ret.addPropertyResult('payerResponsibility', 'PayerResponsibility', properties.PayerResponsibility != null ? cfn_parse.FromCloudFormation.getString(properties.PayerResponsibility) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::VPCEndpointService`\n *\n * Creates a VPC endpoint service configuration to which service consumers ( AWS accounts, IAM users, and IAM roles) can connect.\n *\n * To create an endpoint service configuration, you must first create one of the following for your service:\n *\n * - A [Network Load Balancer](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/introduction.html) . Service consumers connect to your service using an interface endpoint.\n * - A [Gateway Load Balancer](https://docs.aws.amazon.com/elasticloadbalancing/latest/gateway/introduction.html) . Service consumers connect to your service using a Gateway Load Balancer endpoint.\n *\n * For more information, see the [AWS PrivateLink User Guide](https://docs.aws.amazon.com/vpc/latest/privatelink/) .\n *\n * @cloudformationResource AWS::EC2::VPCEndpointService\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html\n */\nexport class CfnVPCEndpointService extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::VPCEndpointService\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnVPCEndpointService {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnVPCEndpointServicePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnVPCEndpointService(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * Indicates whether requests from service consumers to create an endpoint to your service must be accepted.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-acceptancerequired\n     */\n    public acceptanceRequired: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * The Amazon Resource Names (ARNs) of one or more Gateway Load Balancers.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-gatewayloadbalancerarns\n     */\n    public gatewayLoadBalancerArns: string[] | undefined;\n\n    /**\n     * The Amazon Resource Names (ARNs) of one or more Network Load Balancers for your service.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-networkloadbalancerarns\n     */\n    public networkLoadBalancerArns: string[] | undefined;\n\n    /**\n     * The entity that is responsible for the endpoint costs. The default is the endpoint owner. If you set the payer responsibility to the service owner, you cannot set it back to the endpoint owner.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-payerresponsibility\n     */\n    public payerResponsibility: string | undefined;\n\n    /**\n     * Create a new `AWS::EC2::VPCEndpointService`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnVPCEndpointServiceProps = {}) {\n        super(scope, id, { type: CfnVPCEndpointService.CFN_RESOURCE_TYPE_NAME, properties: props });\n\n        this.acceptanceRequired = props.acceptanceRequired;\n        this.gatewayLoadBalancerArns = props.gatewayLoadBalancerArns;\n        this.networkLoadBalancerArns = props.networkLoadBalancerArns;\n        this.payerResponsibility = props.payerResponsibility;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnVPCEndpointService.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            acceptanceRequired: this.acceptanceRequired,\n            gatewayLoadBalancerArns: this.gatewayLoadBalancerArns,\n            networkLoadBalancerArns: this.networkLoadBalancerArns,\n            payerResponsibility: this.payerResponsibility,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnVPCEndpointServicePropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnVPCEndpointServicePermissions`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html\n */\nexport interface CfnVPCEndpointServicePermissionsProps {\n\n    /**\n     * The ID of the service.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html#cfn-ec2-vpcendpointservicepermissions-serviceid\n     */\n    readonly serviceId: string;\n\n    /**\n     * The Amazon Resource Names (ARN) of one or more principals (IAM users, IAM roles, and AWS accounts). Permissions are granted to the principals in this list. To grant permissions to all principals, specify an asterisk (*). Permissions are revoked for principals not in this list. If the list is empty, then all permissions are revoked.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html#cfn-ec2-vpcendpointservicepermissions-allowedprincipals\n     */\n    readonly allowedPrincipals?: string[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnVPCEndpointServicePermissionsProps`\n *\n * @param properties - the TypeScript properties of a `CfnVPCEndpointServicePermissionsProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnVPCEndpointServicePermissionsPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('allowedPrincipals', cdk.listValidator(cdk.validateString))(properties.allowedPrincipals));\n    errors.collect(cdk.propertyValidator('serviceId', cdk.requiredValidator)(properties.serviceId));\n    errors.collect(cdk.propertyValidator('serviceId', cdk.validateString)(properties.serviceId));\n    return errors.wrap('supplied properties not correct for \"CfnVPCEndpointServicePermissionsProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::VPCEndpointServicePermissions` resource\n *\n * @param properties - the TypeScript properties of a `CfnVPCEndpointServicePermissionsProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::VPCEndpointServicePermissions` resource.\n */\n// @ts-ignore TS6133\nfunction cfnVPCEndpointServicePermissionsPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnVPCEndpointServicePermissionsPropsValidator(properties).assertSuccess();\n    return {\n        ServiceId: cdk.stringToCloudFormation(properties.serviceId),\n        AllowedPrincipals: cdk.listMapper(cdk.stringToCloudFormation)(properties.allowedPrincipals),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnVPCEndpointServicePermissionsPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnVPCEndpointServicePermissionsProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnVPCEndpointServicePermissionsProps>();\n    ret.addPropertyResult('serviceId', 'ServiceId', cfn_parse.FromCloudFormation.getString(properties.ServiceId));\n    ret.addPropertyResult('allowedPrincipals', 'AllowedPrincipals', properties.AllowedPrincipals != null ? cfn_parse.FromCloudFormation.getStringArray(properties.AllowedPrincipals) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::VPCEndpointServicePermissions`\n *\n * Grant or revoke permissions for service consumers (IAM users, IAM roles, and AWS accounts) to connect to a VPC endpoint service.\n *\n * If you grant permissions to all principals, the service is public. Any users who know the name of a public service can send a request to attach an endpoint. If the service does not require manual approval, attachments are automatically approved.\n *\n * @cloudformationResource AWS::EC2::VPCEndpointServicePermissions\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html\n */\nexport class CfnVPCEndpointServicePermissions extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::VPCEndpointServicePermissions\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnVPCEndpointServicePermissions {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnVPCEndpointServicePermissionsPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnVPCEndpointServicePermissions(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the service.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html#cfn-ec2-vpcendpointservicepermissions-serviceid\n     */\n    public serviceId: string;\n\n    /**\n     * The Amazon Resource Names (ARN) of one or more principals (IAM users, IAM roles, and AWS accounts). Permissions are granted to the principals in this list. To grant permissions to all principals, specify an asterisk (*). Permissions are revoked for principals not in this list. If the list is empty, then all permissions are revoked.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html#cfn-ec2-vpcendpointservicepermissions-allowedprincipals\n     */\n    public allowedPrincipals: string[] | undefined;\n\n    /**\n     * Create a new `AWS::EC2::VPCEndpointServicePermissions`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnVPCEndpointServicePermissionsProps) {\n        super(scope, id, { type: CfnVPCEndpointServicePermissions.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'serviceId', this);\n\n        this.serviceId = props.serviceId;\n        this.allowedPrincipals = props.allowedPrincipals;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnVPCEndpointServicePermissions.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            serviceId: this.serviceId,\n            allowedPrincipals: this.allowedPrincipals,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnVPCEndpointServicePermissionsPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnVPCGatewayAttachment`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html\n */\nexport interface CfnVPCGatewayAttachmentProps {\n\n    /**\n     * The ID of the VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-vpcid\n     */\n    readonly vpcId: string;\n\n    /**\n     * The ID of the internet gateway.\n     *\n     * You must specify either `InternetGatewayId` or `VpnGatewayId` , but not both.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-internetgatewayid\n     */\n    readonly internetGatewayId?: string;\n\n    /**\n     * The ID of the virtual private gateway.\n     *\n     * You must specify either `InternetGatewayId` or `VpnGatewayId` , but not both.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-vpngatewayid\n     */\n    readonly vpnGatewayId?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnVPCGatewayAttachmentProps`\n *\n * @param properties - the TypeScript properties of a `CfnVPCGatewayAttachmentProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnVPCGatewayAttachmentPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('internetGatewayId', cdk.validateString)(properties.internetGatewayId));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.requiredValidator)(properties.vpcId));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.validateString)(properties.vpcId));\n    errors.collect(cdk.propertyValidator('vpnGatewayId', cdk.validateString)(properties.vpnGatewayId));\n    return errors.wrap('supplied properties not correct for \"CfnVPCGatewayAttachmentProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::VPCGatewayAttachment` resource\n *\n * @param properties - the TypeScript properties of a `CfnVPCGatewayAttachmentProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::VPCGatewayAttachment` resource.\n */\n// @ts-ignore TS6133\nfunction cfnVPCGatewayAttachmentPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnVPCGatewayAttachmentPropsValidator(properties).assertSuccess();\n    return {\n        VpcId: cdk.stringToCloudFormation(properties.vpcId),\n        InternetGatewayId: cdk.stringToCloudFormation(properties.internetGatewayId),\n        VpnGatewayId: cdk.stringToCloudFormation(properties.vpnGatewayId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnVPCGatewayAttachmentPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnVPCGatewayAttachmentProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnVPCGatewayAttachmentProps>();\n    ret.addPropertyResult('vpcId', 'VpcId', cfn_parse.FromCloudFormation.getString(properties.VpcId));\n    ret.addPropertyResult('internetGatewayId', 'InternetGatewayId', properties.InternetGatewayId != null ? cfn_parse.FromCloudFormation.getString(properties.InternetGatewayId) : undefined);\n    ret.addPropertyResult('vpnGatewayId', 'VpnGatewayId', properties.VpnGatewayId != null ? cfn_parse.FromCloudFormation.getString(properties.VpnGatewayId) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::VPCGatewayAttachment`\n *\n * Attaches an internet gateway, or a virtual private gateway to a VPC, enabling connectivity between the internet and the VPC.\n *\n * @cloudformationResource AWS::EC2::VPCGatewayAttachment\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html\n */\nexport class CfnVPCGatewayAttachment extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::VPCGatewayAttachment\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnVPCGatewayAttachment {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnVPCGatewayAttachmentPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnVPCGatewayAttachment(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-vpcid\n     */\n    public vpcId: string;\n\n    /**\n     * The ID of the internet gateway.\n     *\n     * You must specify either `InternetGatewayId` or `VpnGatewayId` , but not both.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-internetgatewayid\n     */\n    public internetGatewayId: string | undefined;\n\n    /**\n     * The ID of the virtual private gateway.\n     *\n     * You must specify either `InternetGatewayId` or `VpnGatewayId` , but not both.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-vpngatewayid\n     */\n    public vpnGatewayId: string | undefined;\n\n    /**\n     * Create a new `AWS::EC2::VPCGatewayAttachment`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnVPCGatewayAttachmentProps) {\n        super(scope, id, { type: CfnVPCGatewayAttachment.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'vpcId', this);\n\n        this.vpcId = props.vpcId;\n        this.internetGatewayId = props.internetGatewayId;\n        this.vpnGatewayId = props.vpnGatewayId;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnVPCGatewayAttachment.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            vpcId: this.vpcId,\n            internetGatewayId: this.internetGatewayId,\n            vpnGatewayId: this.vpnGatewayId,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnVPCGatewayAttachmentPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnVPCPeeringConnection`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html\n */\nexport interface CfnVPCPeeringConnectionProps {\n\n    /**\n     * The ID of the VPC with which you are creating the VPC peering connection. You must specify this parameter in the request.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peervpcid\n     */\n    readonly peerVpcId: string;\n\n    /**\n     * The ID of the VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-vpcid\n     */\n    readonly vpcId: string;\n\n    /**\n     * The AWS account ID of the owner of the accepter VPC.\n     *\n     * Default: Your AWS account ID\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerownerid\n     */\n    readonly peerOwnerId?: string;\n\n    /**\n     * The Region code for the accepter VPC, if the accepter VPC is located in a Region other than the Region in which you make the request.\n     *\n     * Default: The Region in which you make the request.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerregion\n     */\n    readonly peerRegion?: string;\n\n    /**\n     * The Amazon Resource Name (ARN) of the VPC peer role for the peering connection in another AWS account.\n     *\n     * This is required when you are peering a VPC in a different AWS account.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerrolearn\n     */\n    readonly peerRoleArn?: string;\n\n    /**\n     * Any tags assigned to the resource.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnVPCPeeringConnectionProps`\n *\n * @param properties - the TypeScript properties of a `CfnVPCPeeringConnectionProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnVPCPeeringConnectionPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('peerOwnerId', cdk.validateString)(properties.peerOwnerId));\n    errors.collect(cdk.propertyValidator('peerRegion', cdk.validateString)(properties.peerRegion));\n    errors.collect(cdk.propertyValidator('peerRoleArn', cdk.validateString)(properties.peerRoleArn));\n    errors.collect(cdk.propertyValidator('peerVpcId', cdk.requiredValidator)(properties.peerVpcId));\n    errors.collect(cdk.propertyValidator('peerVpcId', cdk.validateString)(properties.peerVpcId));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.requiredValidator)(properties.vpcId));\n    errors.collect(cdk.propertyValidator('vpcId', cdk.validateString)(properties.vpcId));\n    return errors.wrap('supplied properties not correct for \"CfnVPCPeeringConnectionProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::VPCPeeringConnection` resource\n *\n * @param properties - the TypeScript properties of a `CfnVPCPeeringConnectionProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::VPCPeeringConnection` resource.\n */\n// @ts-ignore TS6133\nfunction cfnVPCPeeringConnectionPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnVPCPeeringConnectionPropsValidator(properties).assertSuccess();\n    return {\n        PeerVpcId: cdk.stringToCloudFormation(properties.peerVpcId),\n        VpcId: cdk.stringToCloudFormation(properties.vpcId),\n        PeerOwnerId: cdk.stringToCloudFormation(properties.peerOwnerId),\n        PeerRegion: cdk.stringToCloudFormation(properties.peerRegion),\n        PeerRoleArn: cdk.stringToCloudFormation(properties.peerRoleArn),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnVPCPeeringConnectionPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnVPCPeeringConnectionProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnVPCPeeringConnectionProps>();\n    ret.addPropertyResult('peerVpcId', 'PeerVpcId', cfn_parse.FromCloudFormation.getString(properties.PeerVpcId));\n    ret.addPropertyResult('vpcId', 'VpcId', cfn_parse.FromCloudFormation.getString(properties.VpcId));\n    ret.addPropertyResult('peerOwnerId', 'PeerOwnerId', properties.PeerOwnerId != null ? cfn_parse.FromCloudFormation.getString(properties.PeerOwnerId) : undefined);\n    ret.addPropertyResult('peerRegion', 'PeerRegion', properties.PeerRegion != null ? cfn_parse.FromCloudFormation.getString(properties.PeerRegion) : undefined);\n    ret.addPropertyResult('peerRoleArn', 'PeerRoleArn', properties.PeerRoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.PeerRoleArn) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::VPCPeeringConnection`\n *\n * Requests a VPC peering connection between two VPCs: a requester VPC that you own and an accepter VPC with which to create the connection. The accepter VPC can belong to another AWS account and can be in a different Region to the requester VPC.\n *\n * The requester VPC and accepter VPC cannot have overlapping CIDR blocks. If you create a VPC peering connection request between VPCs with overlapping CIDR blocks, the VPC peering connection has a status of `failed` .\n *\n * For more information, see [Walkthough: Peer with a VPC in another AWS account](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/peer-with-vpc-in-another-account.html) .\n *\n * @cloudformationResource AWS::EC2::VPCPeeringConnection\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html\n */\nexport class CfnVPCPeeringConnection extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::VPCPeeringConnection\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnVPCPeeringConnection {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnVPCPeeringConnectionPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnVPCPeeringConnection(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the VPC with which you are creating the VPC peering connection. You must specify this parameter in the request.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peervpcid\n     */\n    public peerVpcId: string;\n\n    /**\n     * The ID of the VPC.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-vpcid\n     */\n    public vpcId: string;\n\n    /**\n     * The AWS account ID of the owner of the accepter VPC.\n     *\n     * Default: Your AWS account ID\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerownerid\n     */\n    public peerOwnerId: string | undefined;\n\n    /**\n     * The Region code for the accepter VPC, if the accepter VPC is located in a Region other than the Region in which you make the request.\n     *\n     * Default: The Region in which you make the request.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerregion\n     */\n    public peerRegion: string | undefined;\n\n    /**\n     * The Amazon Resource Name (ARN) of the VPC peer role for the peering connection in another AWS account.\n     *\n     * This is required when you are peering a VPC in a different AWS account.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerrolearn\n     */\n    public peerRoleArn: string | undefined;\n\n    /**\n     * Any tags assigned to the resource.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EC2::VPCPeeringConnection`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnVPCPeeringConnectionProps) {\n        super(scope, id, { type: CfnVPCPeeringConnection.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'peerVpcId', this);\n        cdk.requireProperty(props, 'vpcId', this);\n\n        this.peerVpcId = props.peerVpcId;\n        this.vpcId = props.vpcId;\n        this.peerOwnerId = props.peerOwnerId;\n        this.peerRegion = props.peerRegion;\n        this.peerRoleArn = props.peerRoleArn;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::VPCPeeringConnection\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnVPCPeeringConnection.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            peerVpcId: this.peerVpcId,\n            vpcId: this.vpcId,\n            peerOwnerId: this.peerOwnerId,\n            peerRegion: this.peerRegion,\n            peerRoleArn: this.peerRoleArn,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnVPCPeeringConnectionPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnVPNConnection`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html\n */\nexport interface CfnVPNConnectionProps {\n\n    /**\n     * The ID of the customer gateway at your end of the VPN connection.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-customergatewayid\n     */\n    readonly customerGatewayId: string;\n\n    /**\n     * The type of VPN connection.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-type\n     */\n    readonly type: string;\n\n    /**\n     * Indicates whether the VPN connection uses static routes only. Static routes must be used for devices that don't support BGP.\n     *\n     * If you are creating a VPN connection for a device that does not support Border Gateway Protocol (BGP), you must specify `true` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-StaticRoutesOnly\n     */\n    readonly staticRoutesOnly?: boolean | cdk.IResolvable;\n\n    /**\n     * Any tags assigned to the VPN connection.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n\n    /**\n     * The ID of the transit gateway associated with the VPN connection.\n     *\n     * You must specify either `TransitGatewayId` or `VpnGatewayId` , but not both.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-transitgatewayid\n     */\n    readonly transitGatewayId?: string;\n\n    /**\n     * The ID of the virtual private gateway at the AWS side of the VPN connection.\n     *\n     * You must specify either `TransitGatewayId` or `VpnGatewayId` , but not both.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-vpngatewayid\n     */\n    readonly vpnGatewayId?: string;\n\n    /**\n     * The tunnel options for the VPN connection.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-vpntunneloptionsspecifications\n     */\n    readonly vpnTunnelOptionsSpecifications?: Array<CfnVPNConnection.VpnTunnelOptionsSpecificationProperty | cdk.IResolvable> | cdk.IResolvable;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnVPNConnectionProps`\n *\n * @param properties - the TypeScript properties of a `CfnVPNConnectionProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnVPNConnectionPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('customerGatewayId', cdk.requiredValidator)(properties.customerGatewayId));\n    errors.collect(cdk.propertyValidator('customerGatewayId', cdk.validateString)(properties.customerGatewayId));\n    errors.collect(cdk.propertyValidator('staticRoutesOnly', cdk.validateBoolean)(properties.staticRoutesOnly));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('transitGatewayId', cdk.validateString)(properties.transitGatewayId));\n    errors.collect(cdk.propertyValidator('type', cdk.requiredValidator)(properties.type));\n    errors.collect(cdk.propertyValidator('type', cdk.validateString)(properties.type));\n    errors.collect(cdk.propertyValidator('vpnGatewayId', cdk.validateString)(properties.vpnGatewayId));\n    errors.collect(cdk.propertyValidator('vpnTunnelOptionsSpecifications', cdk.listValidator(CfnVPNConnection_VpnTunnelOptionsSpecificationPropertyValidator))(properties.vpnTunnelOptionsSpecifications));\n    return errors.wrap('supplied properties not correct for \"CfnVPNConnectionProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::VPNConnection` resource\n *\n * @param properties - the TypeScript properties of a `CfnVPNConnectionProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::VPNConnection` resource.\n */\n// @ts-ignore TS6133\nfunction cfnVPNConnectionPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnVPNConnectionPropsValidator(properties).assertSuccess();\n    return {\n        CustomerGatewayId: cdk.stringToCloudFormation(properties.customerGatewayId),\n        Type: cdk.stringToCloudFormation(properties.type),\n        StaticRoutesOnly: cdk.booleanToCloudFormation(properties.staticRoutesOnly),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n        TransitGatewayId: cdk.stringToCloudFormation(properties.transitGatewayId),\n        VpnGatewayId: cdk.stringToCloudFormation(properties.vpnGatewayId),\n        VpnTunnelOptionsSpecifications: cdk.listMapper(cfnVPNConnectionVpnTunnelOptionsSpecificationPropertyToCloudFormation)(properties.vpnTunnelOptionsSpecifications),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnVPNConnectionPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnVPNConnectionProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnVPNConnectionProps>();\n    ret.addPropertyResult('customerGatewayId', 'CustomerGatewayId', cfn_parse.FromCloudFormation.getString(properties.CustomerGatewayId));\n    ret.addPropertyResult('type', 'Type', cfn_parse.FromCloudFormation.getString(properties.Type));\n    ret.addPropertyResult('staticRoutesOnly', 'StaticRoutesOnly', properties.StaticRoutesOnly != null ? cfn_parse.FromCloudFormation.getBoolean(properties.StaticRoutesOnly) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addPropertyResult('transitGatewayId', 'TransitGatewayId', properties.TransitGatewayId != null ? cfn_parse.FromCloudFormation.getString(properties.TransitGatewayId) : undefined);\n    ret.addPropertyResult('vpnGatewayId', 'VpnGatewayId', properties.VpnGatewayId != null ? cfn_parse.FromCloudFormation.getString(properties.VpnGatewayId) : undefined);\n    ret.addPropertyResult('vpnTunnelOptionsSpecifications', 'VpnTunnelOptionsSpecifications', properties.VpnTunnelOptionsSpecifications != null ? cfn_parse.FromCloudFormation.getArray(CfnVPNConnectionVpnTunnelOptionsSpecificationPropertyFromCloudFormation)(properties.VpnTunnelOptionsSpecifications) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::VPNConnection`\n *\n * Specifies a VPN connection between a virtual private gateway and a VPN customer gateway or a transit gateway and a VPN customer gateway.\n *\n * To specify a VPN connection between a transit gateway and customer gateway, use the `TransitGatewayId` and `CustomerGatewayId` properties.\n *\n * To specify a VPN connection between a virtual private gateway and customer gateway, use the `VpnGatewayId` and `CustomerGatewayId` properties.\n *\n * For more information, see [AWS Site-to-Site VPN](https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html) in the *AWS Site-to-Site VPN User Guide* .\n *\n * @cloudformationResource AWS::EC2::VPNConnection\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html\n */\nexport class CfnVPNConnection extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::VPNConnection\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnVPNConnection {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnVPNConnectionPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnVPNConnection(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the customer gateway at your end of the VPN connection.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-customergatewayid\n     */\n    public customerGatewayId: string;\n\n    /**\n     * The type of VPN connection.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-type\n     */\n    public type: string;\n\n    /**\n     * Indicates whether the VPN connection uses static routes only. Static routes must be used for devices that don't support BGP.\n     *\n     * If you are creating a VPN connection for a device that does not support Border Gateway Protocol (BGP), you must specify `true` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-StaticRoutesOnly\n     */\n    public staticRoutesOnly: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * Any tags assigned to the VPN connection.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * The ID of the transit gateway associated with the VPN connection.\n     *\n     * You must specify either `TransitGatewayId` or `VpnGatewayId` , but not both.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-transitgatewayid\n     */\n    public transitGatewayId: string | undefined;\n\n    /**\n     * The ID of the virtual private gateway at the AWS side of the VPN connection.\n     *\n     * You must specify either `TransitGatewayId` or `VpnGatewayId` , but not both.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-vpngatewayid\n     */\n    public vpnGatewayId: string | undefined;\n\n    /**\n     * The tunnel options for the VPN connection.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-vpntunneloptionsspecifications\n     */\n    public vpnTunnelOptionsSpecifications: Array<CfnVPNConnection.VpnTunnelOptionsSpecificationProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n    /**\n     * Create a new `AWS::EC2::VPNConnection`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnVPNConnectionProps) {\n        super(scope, id, { type: CfnVPNConnection.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'customerGatewayId', this);\n        cdk.requireProperty(props, 'type', this);\n\n        this.customerGatewayId = props.customerGatewayId;\n        this.type = props.type;\n        this.staticRoutesOnly = props.staticRoutesOnly;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::VPNConnection\", props.tags, { tagPropertyName: 'tags' });\n        this.transitGatewayId = props.transitGatewayId;\n        this.vpnGatewayId = props.vpnGatewayId;\n        this.vpnTunnelOptionsSpecifications = props.vpnTunnelOptionsSpecifications;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnVPNConnection.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            customerGatewayId: this.customerGatewayId,\n            type: this.type,\n            staticRoutesOnly: this.staticRoutesOnly,\n            tags: this.tags.renderTags(),\n            transitGatewayId: this.transitGatewayId,\n            vpnGatewayId: this.vpnGatewayId,\n            vpnTunnelOptionsSpecifications: this.vpnTunnelOptionsSpecifications,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnVPNConnectionPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnVPNConnection {\n    /**\n     * The tunnel options for a single VPN tunnel.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-vpnconnection-vpntunneloptionsspecification.html\n     */\n    export interface VpnTunnelOptionsSpecificationProperty {\n        /**\n         * The pre-shared key (PSK) to establish initial authentication between the virtual private gateway and customer gateway.\n         *\n         * Constraints: Allowed characters are alphanumeric characters, periods (.), and underscores (_). Must be between 8 and 64 characters in length and cannot start with zero (0).\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-vpnconnection-vpntunneloptionsspecification.html#cfn-ec2-vpnconnection-vpntunneloptionsspecification-presharedkey\n         */\n        readonly preSharedKey?: string;\n        /**\n         * The range of inside IP addresses for the tunnel. Any specified CIDR blocks must be unique across all VPN connections that use the same virtual private gateway.\n         *\n         * Constraints: A size /30 CIDR block from the `169.254.0.0/16` range. The following CIDR blocks are reserved and cannot be used:\n         *\n         * - `169.254.0.0/30`\n         * - `169.254.1.0/30`\n         * - `169.254.2.0/30`\n         * - `169.254.3.0/30`\n         * - `169.254.4.0/30`\n         * - `169.254.5.0/30`\n         * - `169.254.169.252/30`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-vpnconnection-vpntunneloptionsspecification.html#cfn-ec2-vpnconnection-vpntunneloptionsspecification-tunnelinsidecidr\n         */\n        readonly tunnelInsideCidr?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `VpnTunnelOptionsSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `VpnTunnelOptionsSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnVPNConnection_VpnTunnelOptionsSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('preSharedKey', cdk.validateString)(properties.preSharedKey));\n    errors.collect(cdk.propertyValidator('tunnelInsideCidr', cdk.validateString)(properties.tunnelInsideCidr));\n    return errors.wrap('supplied properties not correct for \"VpnTunnelOptionsSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::VPNConnection.VpnTunnelOptionsSpecification` resource\n *\n * @param properties - the TypeScript properties of a `VpnTunnelOptionsSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::VPNConnection.VpnTunnelOptionsSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnVPNConnectionVpnTunnelOptionsSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnVPNConnection_VpnTunnelOptionsSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        PreSharedKey: cdk.stringToCloudFormation(properties.preSharedKey),\n        TunnelInsideCidr: cdk.stringToCloudFormation(properties.tunnelInsideCidr),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnVPNConnectionVpnTunnelOptionsSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnVPNConnection.VpnTunnelOptionsSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnVPNConnection.VpnTunnelOptionsSpecificationProperty>();\n    ret.addPropertyResult('preSharedKey', 'PreSharedKey', properties.PreSharedKey != null ? cfn_parse.FromCloudFormation.getString(properties.PreSharedKey) : undefined);\n    ret.addPropertyResult('tunnelInsideCidr', 'TunnelInsideCidr', properties.TunnelInsideCidr != null ? cfn_parse.FromCloudFormation.getString(properties.TunnelInsideCidr) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnVPNConnectionRoute`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html\n */\nexport interface CfnVPNConnectionRouteProps {\n\n    /**\n     * The CIDR block associated with the local subnet of the customer network.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html#cfn-ec2-vpnconnectionroute-cidrblock\n     */\n    readonly destinationCidrBlock: string;\n\n    /**\n     * The ID of the VPN connection.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html#cfn-ec2-vpnconnectionroute-connectionid\n     */\n    readonly vpnConnectionId: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnVPNConnectionRouteProps`\n *\n * @param properties - the TypeScript properties of a `CfnVPNConnectionRouteProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnVPNConnectionRoutePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('destinationCidrBlock', cdk.requiredValidator)(properties.destinationCidrBlock));\n    errors.collect(cdk.propertyValidator('destinationCidrBlock', cdk.validateString)(properties.destinationCidrBlock));\n    errors.collect(cdk.propertyValidator('vpnConnectionId', cdk.requiredValidator)(properties.vpnConnectionId));\n    errors.collect(cdk.propertyValidator('vpnConnectionId', cdk.validateString)(properties.vpnConnectionId));\n    return errors.wrap('supplied properties not correct for \"CfnVPNConnectionRouteProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::VPNConnectionRoute` resource\n *\n * @param properties - the TypeScript properties of a `CfnVPNConnectionRouteProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::VPNConnectionRoute` resource.\n */\n// @ts-ignore TS6133\nfunction cfnVPNConnectionRoutePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnVPNConnectionRoutePropsValidator(properties).assertSuccess();\n    return {\n        DestinationCidrBlock: cdk.stringToCloudFormation(properties.destinationCidrBlock),\n        VpnConnectionId: cdk.stringToCloudFormation(properties.vpnConnectionId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnVPNConnectionRoutePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnVPNConnectionRouteProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnVPNConnectionRouteProps>();\n    ret.addPropertyResult('destinationCidrBlock', 'DestinationCidrBlock', cfn_parse.FromCloudFormation.getString(properties.DestinationCidrBlock));\n    ret.addPropertyResult('vpnConnectionId', 'VpnConnectionId', cfn_parse.FromCloudFormation.getString(properties.VpnConnectionId));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::VPNConnectionRoute`\n *\n * Specifies a static route for a VPN connection between an existing virtual private gateway and a VPN customer gateway. The static route allows traffic to be routed from the virtual private gateway to the VPN customer gateway.\n *\n * For more information, see [AWS Site-to-Site VPN](https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html) in the *AWS Site-to-Site VPN User Guide* .\n *\n * @cloudformationResource AWS::EC2::VPNConnectionRoute\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html\n */\nexport class CfnVPNConnectionRoute extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::VPNConnectionRoute\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnVPNConnectionRoute {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnVPNConnectionRoutePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnVPNConnectionRoute(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The CIDR block associated with the local subnet of the customer network.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html#cfn-ec2-vpnconnectionroute-cidrblock\n     */\n    public destinationCidrBlock: string;\n\n    /**\n     * The ID of the VPN connection.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html#cfn-ec2-vpnconnectionroute-connectionid\n     */\n    public vpnConnectionId: string;\n\n    /**\n     * Create a new `AWS::EC2::VPNConnectionRoute`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnVPNConnectionRouteProps) {\n        super(scope, id, { type: CfnVPNConnectionRoute.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'destinationCidrBlock', this);\n        cdk.requireProperty(props, 'vpnConnectionId', this);\n\n        this.destinationCidrBlock = props.destinationCidrBlock;\n        this.vpnConnectionId = props.vpnConnectionId;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnVPNConnectionRoute.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            destinationCidrBlock: this.destinationCidrBlock,\n            vpnConnectionId: this.vpnConnectionId,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnVPNConnectionRoutePropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnVPNGateway`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html\n */\nexport interface CfnVPNGatewayProps {\n\n    /**\n     * The type of VPN connection the virtual private gateway supports.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-type\n     */\n    readonly type: string;\n\n    /**\n     * The private Autonomous System Number (ASN) for the Amazon side of a BGP session.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-amazonsideasn\n     */\n    readonly amazonSideAsn?: number;\n\n    /**\n     * Any tags assigned to the virtual private gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnVPNGatewayProps`\n *\n * @param properties - the TypeScript properties of a `CfnVPNGatewayProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnVPNGatewayPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('amazonSideAsn', cdk.validateNumber)(properties.amazonSideAsn));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('type', cdk.requiredValidator)(properties.type));\n    errors.collect(cdk.propertyValidator('type', cdk.validateString)(properties.type));\n    return errors.wrap('supplied properties not correct for \"CfnVPNGatewayProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::VPNGateway` resource\n *\n * @param properties - the TypeScript properties of a `CfnVPNGatewayProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::VPNGateway` resource.\n */\n// @ts-ignore TS6133\nfunction cfnVPNGatewayPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnVPNGatewayPropsValidator(properties).assertSuccess();\n    return {\n        Type: cdk.stringToCloudFormation(properties.type),\n        AmazonSideAsn: cdk.numberToCloudFormation(properties.amazonSideAsn),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnVPNGatewayPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnVPNGatewayProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnVPNGatewayProps>();\n    ret.addPropertyResult('type', 'Type', cfn_parse.FromCloudFormation.getString(properties.Type));\n    ret.addPropertyResult('amazonSideAsn', 'AmazonSideAsn', properties.AmazonSideAsn != null ? cfn_parse.FromCloudFormation.getNumber(properties.AmazonSideAsn) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::VPNGateway`\n *\n * Specifies a virtual private gateway. A virtual private gateway is the endpoint on the VPC side of your VPN connection. You can create a virtual private gateway before creating the VPC itself.\n *\n * For more information, see [AWS Site-to-Site VPN](https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html) in the *AWS Site-to-Site VPN User Guide* .\n *\n * @cloudformationResource AWS::EC2::VPNGateway\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html\n */\nexport class CfnVPNGateway extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::VPNGateway\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnVPNGateway {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnVPNGatewayPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnVPNGateway(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The type of VPN connection the virtual private gateway supports.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-type\n     */\n    public type: string;\n\n    /**\n     * The private Autonomous System Number (ASN) for the Amazon side of a BGP session.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-amazonsideasn\n     */\n    public amazonSideAsn: number | undefined;\n\n    /**\n     * Any tags assigned to the virtual private gateway.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EC2::VPNGateway`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnVPNGatewayProps) {\n        super(scope, id, { type: CfnVPNGateway.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'type', this);\n\n        this.type = props.type;\n        this.amazonSideAsn = props.amazonSideAsn;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::VPNGateway\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnVPNGateway.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            type: this.type,\n            amazonSideAsn: this.amazonSideAsn,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnVPNGatewayPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnVPNGatewayRoutePropagation`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpngatewayroutepropagation.html\n */\nexport interface CfnVPNGatewayRoutePropagationProps {\n\n    /**\n     * The ID of the route table. The routing table must be associated with the same VPC that the virtual private gateway is attached to.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpngatewayroutepropagation.html#cfn-ec2-vpngatewayroutepropagation-routetableids\n     */\n    readonly routeTableIds: string[];\n\n    /**\n     * The ID of the virtual private gateway that is attached to a VPC. The virtual private gateway must be attached to the same VPC that the routing tables are associated with.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpngatewayroutepropagation.html#cfn-ec2-vpngatewayroutepropagation-vpngatewayid\n     */\n    readonly vpnGatewayId: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnVPNGatewayRoutePropagationProps`\n *\n * @param properties - the TypeScript properties of a `CfnVPNGatewayRoutePropagationProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnVPNGatewayRoutePropagationPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('routeTableIds', cdk.requiredValidator)(properties.routeTableIds));\n    errors.collect(cdk.propertyValidator('routeTableIds', cdk.listValidator(cdk.validateString))(properties.routeTableIds));\n    errors.collect(cdk.propertyValidator('vpnGatewayId', cdk.requiredValidator)(properties.vpnGatewayId));\n    errors.collect(cdk.propertyValidator('vpnGatewayId', cdk.validateString)(properties.vpnGatewayId));\n    return errors.wrap('supplied properties not correct for \"CfnVPNGatewayRoutePropagationProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::VPNGatewayRoutePropagation` resource\n *\n * @param properties - the TypeScript properties of a `CfnVPNGatewayRoutePropagationProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::VPNGatewayRoutePropagation` resource.\n */\n// @ts-ignore TS6133\nfunction cfnVPNGatewayRoutePropagationPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnVPNGatewayRoutePropagationPropsValidator(properties).assertSuccess();\n    return {\n        RouteTableIds: cdk.listMapper(cdk.stringToCloudFormation)(properties.routeTableIds),\n        VpnGatewayId: cdk.stringToCloudFormation(properties.vpnGatewayId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnVPNGatewayRoutePropagationPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnVPNGatewayRoutePropagationProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnVPNGatewayRoutePropagationProps>();\n    ret.addPropertyResult('routeTableIds', 'RouteTableIds', cfn_parse.FromCloudFormation.getStringArray(properties.RouteTableIds));\n    ret.addPropertyResult('vpnGatewayId', 'VpnGatewayId', cfn_parse.FromCloudFormation.getString(properties.VpnGatewayId));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::VPNGatewayRoutePropagation`\n *\n * Enables a virtual private gateway (VGW) to propagate routes to the specified route table of a VPC.\n *\n * If you reference a VPN gateway that is in the same template as your VPN gateway route propagation, you must explicitly declare a dependency on the VPN gateway attachment. The `AWS::EC2::VPNGatewayRoutePropagation` resource cannot use the VPN gateway until it has successfully attached to the VPC. Add a [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) in the `AWS::EC2::VPNGatewayRoutePropagation` resource to explicitly declare a dependency on the VPN gateway attachment.\n *\n * @cloudformationResource AWS::EC2::VPNGatewayRoutePropagation\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpngatewayroutepropagation.html\n */\nexport class CfnVPNGatewayRoutePropagation extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::VPNGatewayRoutePropagation\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnVPNGatewayRoutePropagation {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnVPNGatewayRoutePropagationPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnVPNGatewayRoutePropagation(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the VPN gateway.\n     * @cloudformationAttribute Id\n     */\n    public readonly attrId: string;\n\n    /**\n     * The ID of the route table. The routing table must be associated with the same VPC that the virtual private gateway is attached to.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpngatewayroutepropagation.html#cfn-ec2-vpngatewayroutepropagation-routetableids\n     */\n    public routeTableIds: string[];\n\n    /**\n     * The ID of the virtual private gateway that is attached to a VPC. The virtual private gateway must be attached to the same VPC that the routing tables are associated with.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpngatewayroutepropagation.html#cfn-ec2-vpngatewayroutepropagation-vpngatewayid\n     */\n    public vpnGatewayId: string;\n\n    /**\n     * Create a new `AWS::EC2::VPNGatewayRoutePropagation`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnVPNGatewayRoutePropagationProps) {\n        super(scope, id, { type: CfnVPNGatewayRoutePropagation.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'routeTableIds', this);\n        cdk.requireProperty(props, 'vpnGatewayId', this);\n        this.attrId = cdk.Token.asString(this.getAtt('Id'));\n\n        this.routeTableIds = props.routeTableIds;\n        this.vpnGatewayId = props.vpnGatewayId;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnVPNGatewayRoutePropagation.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            routeTableIds: this.routeTableIds,\n            vpnGatewayId: this.vpnGatewayId,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnVPNGatewayRoutePropagationPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnVolume`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html\n */\nexport interface CfnVolumeProps {\n\n    /**\n     * The Availability Zone in which to create the volume.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-availabilityzone\n     */\n    readonly availabilityZone: string;\n\n    /**\n     * Indicates whether the volume is auto-enabled for I/O operations. By default, Amazon EBS disables I/O to the volume from attached EC2 instances when it determines that a volume's data is potentially inconsistent. If the consistency of the volume is not a concern, and you prefer that the volume be made available immediately if it's impaired, you can configure the volume to automatically enable I/O.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-autoenableio\n     */\n    readonly autoEnableIo?: boolean | cdk.IResolvable;\n\n    /**\n     * Indicates whether the volume should be encrypted. The effect of setting the encryption state to `true` depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see [Encryption by default](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-by-default) in the *Amazon Elastic Compute Cloud User Guide* .\n     *\n     * Encrypted Amazon EBS volumes must be attached to instances that support Amazon EBS encryption. For more information, see [Supported instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances) .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-encrypted\n     */\n    readonly encrypted?: boolean | cdk.IResolvable;\n\n    /**\n     * The number of I/O operations per second (IOPS). For `gp3` , `io1` , and `io2` volumes, this represents the number of IOPS that are provisioned for the volume. For `gp2` volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting.\n     *\n     * The following are the supported values for each volume type:\n     *\n     * - `gp3` : 3,000-16,000 IOPS\n     * - `io1` : 100-64,000 IOPS\n     * - `io2` : 100-64,000 IOPS\n     *\n     * `io1` and `io2` volumes support up to 64,000 IOPS only on [Instances built on the Nitro System](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances) . Other instance families support performance up to 32,000 IOPS.\n     *\n     * This parameter is required for `io1` and `io2` volumes. The default for `gp3` volumes is 3,000 IOPS. This parameter is not supported for `gp2` , `st1` , `sc1` , or `standard` volumes.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-iops\n     */\n    readonly iops?: number;\n\n    /**\n     * The identifier of the AWS KMS key to use for Amazon EBS encryption. If `KmsKeyId` is specified, the encrypted state must be `true` .\n     *\n     * If you omit this property and your account is enabled for encryption by default, or *Encrypted* is set to `true` , then the volume is encrypted using the default key specified for your account. If your account does not have a default key, then the volume is encrypted using the AWS managed key .\n     *\n     * Alternatively, if you want to specify a different key, you can specify one of the following:\n     *\n     * - Key ID. For example, 1234abcd-12ab-34cd-56ef-1234567890ab.\n     * - Key alias. Specify the alias for the key, prefixed with `alias/` . For example, for a key with the alias `my_cmk` , use `alias/my_cmk` . Or to specify the AWS managed key , use `alias/aws/ebs` .\n     * - Key ARN. For example, arn:aws:kms:us-east-1:012345678910:key/1234abcd-12ab-34cd-56ef-1234567890ab.\n     * - Alias ARN. For example, arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-kmskeyid\n     */\n    readonly kmsKeyId?: string;\n\n    /**\n     * Indicates whether Amazon EBS Multi-Attach is enabled.\n     *\n     * AWS CloudFormation does not currently support updating a single-attach volume to be multi-attach enabled, updating a multi-attach enabled volume to be single-attach, or updating the size or number of I/O operations per second (IOPS) of a multi-attach enabled volume.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-multiattachenabled\n     */\n    readonly multiAttachEnabled?: boolean | cdk.IResolvable;\n\n    /**\n     * The Amazon Resource Name (ARN) of the Outpost.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-outpostarn\n     */\n    readonly outpostArn?: string;\n\n    /**\n     * The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size. If you specify a snapshot, the default is the snapshot size. You can specify a volume size that is equal to or larger than the snapshot size.\n     *\n     * The following are the supported volumes sizes for each volume type:\n     *\n     * - `gp2` and `gp3` : 1-16,384\n     * - `io1` and `io2` : 4-16,384\n     * - `st1` and `sc1` : 125-16,384\n     * - `standard` : 1-1,024\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-size\n     */\n    readonly size?: number;\n\n    /**\n     * The snapshot from which to create the volume. You must specify either a snapshot ID or a volume size.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-snapshotid\n     */\n    readonly snapshotId?: string;\n\n    /**\n     * The tags to apply to the volume during creation.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n\n    /**\n     * The throughput that the volume supports, in MiB/s.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-throughput\n     */\n    readonly throughput?: number;\n\n    /**\n     * The volume type. This parameter can be one of the following values:\n     *\n     * - General Purpose SSD: `gp2` | `gp3`\n     * - Provisioned IOPS SSD: `io1` | `io2`\n     * - Throughput Optimized HDD: `st1`\n     * - Cold HDD: `sc1`\n     * - Magnetic: `standard`\n     *\n     * For more information, see [Amazon EBS volume types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html) in the *Amazon Elastic Compute Cloud User Guide* .\n     *\n     * Default: `gp2`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-volumetype\n     */\n    readonly volumeType?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnVolumeProps`\n *\n * @param properties - the TypeScript properties of a `CfnVolumeProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnVolumePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('autoEnableIo', cdk.validateBoolean)(properties.autoEnableIo));\n    errors.collect(cdk.propertyValidator('availabilityZone', cdk.requiredValidator)(properties.availabilityZone));\n    errors.collect(cdk.propertyValidator('availabilityZone', cdk.validateString)(properties.availabilityZone));\n    errors.collect(cdk.propertyValidator('encrypted', cdk.validateBoolean)(properties.encrypted));\n    errors.collect(cdk.propertyValidator('iops', cdk.validateNumber)(properties.iops));\n    errors.collect(cdk.propertyValidator('kmsKeyId', cdk.validateString)(properties.kmsKeyId));\n    errors.collect(cdk.propertyValidator('multiAttachEnabled', cdk.validateBoolean)(properties.multiAttachEnabled));\n    errors.collect(cdk.propertyValidator('outpostArn', cdk.validateString)(properties.outpostArn));\n    errors.collect(cdk.propertyValidator('size', cdk.validateNumber)(properties.size));\n    errors.collect(cdk.propertyValidator('snapshotId', cdk.validateString)(properties.snapshotId));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('throughput', cdk.validateNumber)(properties.throughput));\n    errors.collect(cdk.propertyValidator('volumeType', cdk.validateString)(properties.volumeType));\n    return errors.wrap('supplied properties not correct for \"CfnVolumeProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::Volume` resource\n *\n * @param properties - the TypeScript properties of a `CfnVolumeProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::Volume` resource.\n */\n// @ts-ignore TS6133\nfunction cfnVolumePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnVolumePropsValidator(properties).assertSuccess();\n    return {\n        AvailabilityZone: cdk.stringToCloudFormation(properties.availabilityZone),\n        AutoEnableIO: cdk.booleanToCloudFormation(properties.autoEnableIo),\n        Encrypted: cdk.booleanToCloudFormation(properties.encrypted),\n        Iops: cdk.numberToCloudFormation(properties.iops),\n        KmsKeyId: cdk.stringToCloudFormation(properties.kmsKeyId),\n        MultiAttachEnabled: cdk.booleanToCloudFormation(properties.multiAttachEnabled),\n        OutpostArn: cdk.stringToCloudFormation(properties.outpostArn),\n        Size: cdk.numberToCloudFormation(properties.size),\n        SnapshotId: cdk.stringToCloudFormation(properties.snapshotId),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n        Throughput: cdk.numberToCloudFormation(properties.throughput),\n        VolumeType: cdk.stringToCloudFormation(properties.volumeType),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnVolumePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnVolumeProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnVolumeProps>();\n    ret.addPropertyResult('availabilityZone', 'AvailabilityZone', cfn_parse.FromCloudFormation.getString(properties.AvailabilityZone));\n    ret.addPropertyResult('autoEnableIo', 'AutoEnableIO', properties.AutoEnableIO != null ? cfn_parse.FromCloudFormation.getBoolean(properties.AutoEnableIO) : undefined);\n    ret.addPropertyResult('encrypted', 'Encrypted', properties.Encrypted != null ? cfn_parse.FromCloudFormation.getBoolean(properties.Encrypted) : undefined);\n    ret.addPropertyResult('iops', 'Iops', properties.Iops != null ? cfn_parse.FromCloudFormation.getNumber(properties.Iops) : undefined);\n    ret.addPropertyResult('kmsKeyId', 'KmsKeyId', properties.KmsKeyId != null ? cfn_parse.FromCloudFormation.getString(properties.KmsKeyId) : undefined);\n    ret.addPropertyResult('multiAttachEnabled', 'MultiAttachEnabled', properties.MultiAttachEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.MultiAttachEnabled) : undefined);\n    ret.addPropertyResult('outpostArn', 'OutpostArn', properties.OutpostArn != null ? cfn_parse.FromCloudFormation.getString(properties.OutpostArn) : undefined);\n    ret.addPropertyResult('size', 'Size', properties.Size != null ? cfn_parse.FromCloudFormation.getNumber(properties.Size) : undefined);\n    ret.addPropertyResult('snapshotId', 'SnapshotId', properties.SnapshotId != null ? cfn_parse.FromCloudFormation.getString(properties.SnapshotId) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addPropertyResult('throughput', 'Throughput', properties.Throughput != null ? cfn_parse.FromCloudFormation.getNumber(properties.Throughput) : undefined);\n    ret.addPropertyResult('volumeType', 'VolumeType', properties.VolumeType != null ? cfn_parse.FromCloudFormation.getString(properties.VolumeType) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::Volume`\n *\n * Specifies an Amazon Elastic Block Store (Amazon EBS) volume. You can attach the volume to an instance in the same Availability Zone using [AWS::EC2::VolumeAttachment](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html) .\n *\n * When you use AWS CloudFormation to update an Amazon EBS volume that modifies `Iops` , `Size` , or `VolumeType` , there is a cooldown period before another operation can occur. This can cause your stack to report being in `UPDATE_IN_PROGRESS` or `UPDATE_ROLLBACK_IN_PROGRESS` for long periods of time.\n *\n * Amazon EBS does not support sizing down an Amazon EBS volume. AWS CloudFormation does not attempt to modify an Amazon EBS volume to a smaller size on rollback.\n *\n * Some common scenarios when you might encounter a cooldown period for Amazon EBS include:\n *\n * - You successfully update an Amazon EBS volume and the update succeeds. When you attempt another update within the cooldown window, that update will be subject to a cooldown period.\n * - You successfully update an Amazon EBS volume and the update succeeds but another change in your `update-stack` call fails. The rollback will be subject to a cooldown period.\n *\n * For more information on the cooldown period, see [Requirements when modifying volumes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/modify-volume-requirements.html) .\n *\n * *DeletionPolicy attribute*\n *\n * To control how AWS CloudFormation handles the volume when the stack is deleted, set a deletion policy for your volume. You can choose to retain the volume, to delete the volume, or to create a snapshot of the volume. For more information, see [DeletionPolicy attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html) .\n *\n * > If you set a deletion policy that creates a snapshot, all tags on the volume are included in the snapshot.\n *\n * @cloudformationResource AWS::EC2::Volume\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html\n */\nexport class CfnVolume extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::Volume\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnVolume {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnVolumePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnVolume(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The Availability Zone in which to create the volume.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-availabilityzone\n     */\n    public availabilityZone: string;\n\n    /**\n     * Indicates whether the volume is auto-enabled for I/O operations. By default, Amazon EBS disables I/O to the volume from attached EC2 instances when it determines that a volume's data is potentially inconsistent. If the consistency of the volume is not a concern, and you prefer that the volume be made available immediately if it's impaired, you can configure the volume to automatically enable I/O.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-autoenableio\n     */\n    public autoEnableIo: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * Indicates whether the volume should be encrypted. The effect of setting the encryption state to `true` depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see [Encryption by default](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-by-default) in the *Amazon Elastic Compute Cloud User Guide* .\n     *\n     * Encrypted Amazon EBS volumes must be attached to instances that support Amazon EBS encryption. For more information, see [Supported instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances) .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-encrypted\n     */\n    public encrypted: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * The number of I/O operations per second (IOPS). For `gp3` , `io1` , and `io2` volumes, this represents the number of IOPS that are provisioned for the volume. For `gp2` volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting.\n     *\n     * The following are the supported values for each volume type:\n     *\n     * - `gp3` : 3,000-16,000 IOPS\n     * - `io1` : 100-64,000 IOPS\n     * - `io2` : 100-64,000 IOPS\n     *\n     * `io1` and `io2` volumes support up to 64,000 IOPS only on [Instances built on the Nitro System](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances) . Other instance families support performance up to 32,000 IOPS.\n     *\n     * This parameter is required for `io1` and `io2` volumes. The default for `gp3` volumes is 3,000 IOPS. This parameter is not supported for `gp2` , `st1` , `sc1` , or `standard` volumes.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-iops\n     */\n    public iops: number | undefined;\n\n    /**\n     * The identifier of the AWS KMS key to use for Amazon EBS encryption. If `KmsKeyId` is specified, the encrypted state must be `true` .\n     *\n     * If you omit this property and your account is enabled for encryption by default, or *Encrypted* is set to `true` , then the volume is encrypted using the default key specified for your account. If your account does not have a default key, then the volume is encrypted using the AWS managed key .\n     *\n     * Alternatively, if you want to specify a different key, you can specify one of the following:\n     *\n     * - Key ID. For example, 1234abcd-12ab-34cd-56ef-1234567890ab.\n     * - Key alias. Specify the alias for the key, prefixed with `alias/` . For example, for a key with the alias `my_cmk` , use `alias/my_cmk` . Or to specify the AWS managed key , use `alias/aws/ebs` .\n     * - Key ARN. For example, arn:aws:kms:us-east-1:012345678910:key/1234abcd-12ab-34cd-56ef-1234567890ab.\n     * - Alias ARN. For example, arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-kmskeyid\n     */\n    public kmsKeyId: string | undefined;\n\n    /**\n     * Indicates whether Amazon EBS Multi-Attach is enabled.\n     *\n     * AWS CloudFormation does not currently support updating a single-attach volume to be multi-attach enabled, updating a multi-attach enabled volume to be single-attach, or updating the size or number of I/O operations per second (IOPS) of a multi-attach enabled volume.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-multiattachenabled\n     */\n    public multiAttachEnabled: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * The Amazon Resource Name (ARN) of the Outpost.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-outpostarn\n     */\n    public outpostArn: string | undefined;\n\n    /**\n     * The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size. If you specify a snapshot, the default is the snapshot size. You can specify a volume size that is equal to or larger than the snapshot size.\n     *\n     * The following are the supported volumes sizes for each volume type:\n     *\n     * - `gp2` and `gp3` : 1-16,384\n     * - `io1` and `io2` : 4-16,384\n     * - `st1` and `sc1` : 125-16,384\n     * - `standard` : 1-1,024\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-size\n     */\n    public size: number | undefined;\n\n    /**\n     * The snapshot from which to create the volume. You must specify either a snapshot ID or a volume size.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-snapshotid\n     */\n    public snapshotId: string | undefined;\n\n    /**\n     * The tags to apply to the volume during creation.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * The throughput that the volume supports, in MiB/s.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-throughput\n     */\n    public throughput: number | undefined;\n\n    /**\n     * The volume type. This parameter can be one of the following values:\n     *\n     * - General Purpose SSD: `gp2` | `gp3`\n     * - Provisioned IOPS SSD: `io1` | `io2`\n     * - Throughput Optimized HDD: `st1`\n     * - Cold HDD: `sc1`\n     * - Magnetic: `standard`\n     *\n     * For more information, see [Amazon EBS volume types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html) in the *Amazon Elastic Compute Cloud User Guide* .\n     *\n     * Default: `gp2`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-volumetype\n     */\n    public volumeType: string | undefined;\n\n    /**\n     * Create a new `AWS::EC2::Volume`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnVolumeProps) {\n        super(scope, id, { type: CfnVolume.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'availabilityZone', this);\n\n        this.availabilityZone = props.availabilityZone;\n        this.autoEnableIo = props.autoEnableIo;\n        this.encrypted = props.encrypted;\n        this.iops = props.iops;\n        this.kmsKeyId = props.kmsKeyId;\n        this.multiAttachEnabled = props.multiAttachEnabled;\n        this.outpostArn = props.outpostArn;\n        this.size = props.size;\n        this.snapshotId = props.snapshotId;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EC2::Volume\", props.tags, { tagPropertyName: 'tags' });\n        this.throughput = props.throughput;\n        this.volumeType = props.volumeType;\n        if (this.node.scope && cdk.Resource.isResource(this.node.scope)) {\n            this.node.addValidation({ validate: () => this.cfnOptions.deletionPolicy === undefined\n              ? ['\\'AWS::EC2::Volume\\' is a stateful resource type, and you must specify a Removal Policy for it. Call \\'resource.applyRemovalPolicy()\\'.']\n              : [] });\n        }\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnVolume.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            availabilityZone: this.availabilityZone,\n            autoEnableIo: this.autoEnableIo,\n            encrypted: this.encrypted,\n            iops: this.iops,\n            kmsKeyId: this.kmsKeyId,\n            multiAttachEnabled: this.multiAttachEnabled,\n            outpostArn: this.outpostArn,\n            size: this.size,\n            snapshotId: this.snapshotId,\n            tags: this.tags.renderTags(),\n            throughput: this.throughput,\n            volumeType: this.volumeType,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnVolumePropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnVolumeAttachment`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html\n */\nexport interface CfnVolumeAttachmentProps {\n\n    /**\n     * The device name (for example, `/dev/sdh` or `xvdh` ).\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-device\n     */\n    readonly device: string;\n\n    /**\n     * The ID of the instance to which the volume attaches. This value can be a reference to an [`AWS::EC2::Instance`](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html) resource, or it can be the physical ID of an existing EC2 instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-instanceid\n     */\n    readonly instanceId: string;\n\n    /**\n     * The ID of the Amazon EBS volume. The volume and instance must be within the same Availability Zone. This value can be a reference to an [`AWS::EC2::Volume`](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html) resource, or it can be the volume ID of an existing Amazon EBS volume.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-volumeid\n     */\n    readonly volumeId: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnVolumeAttachmentProps`\n *\n * @param properties - the TypeScript properties of a `CfnVolumeAttachmentProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnVolumeAttachmentPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('device', cdk.requiredValidator)(properties.device));\n    errors.collect(cdk.propertyValidator('device', cdk.validateString)(properties.device));\n    errors.collect(cdk.propertyValidator('instanceId', cdk.requiredValidator)(properties.instanceId));\n    errors.collect(cdk.propertyValidator('instanceId', cdk.validateString)(properties.instanceId));\n    errors.collect(cdk.propertyValidator('volumeId', cdk.requiredValidator)(properties.volumeId));\n    errors.collect(cdk.propertyValidator('volumeId', cdk.validateString)(properties.volumeId));\n    return errors.wrap('supplied properties not correct for \"CfnVolumeAttachmentProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EC2::VolumeAttachment` resource\n *\n * @param properties - the TypeScript properties of a `CfnVolumeAttachmentProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EC2::VolumeAttachment` resource.\n */\n// @ts-ignore TS6133\nfunction cfnVolumeAttachmentPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnVolumeAttachmentPropsValidator(properties).assertSuccess();\n    return {\n        Device: cdk.stringToCloudFormation(properties.device),\n        InstanceId: cdk.stringToCloudFormation(properties.instanceId),\n        VolumeId: cdk.stringToCloudFormation(properties.volumeId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnVolumeAttachmentPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnVolumeAttachmentProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnVolumeAttachmentProps>();\n    ret.addPropertyResult('device', 'Device', cfn_parse.FromCloudFormation.getString(properties.Device));\n    ret.addPropertyResult('instanceId', 'InstanceId', cfn_parse.FromCloudFormation.getString(properties.InstanceId));\n    ret.addPropertyResult('volumeId', 'VolumeId', cfn_parse.FromCloudFormation.getString(properties.VolumeId));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EC2::VolumeAttachment`\n *\n * Attaches an Amazon EBS volume to a running instance and exposes it to the instance with the specified device name.\n *\n * Before this resource can be deleted (and therefore the volume detached), you must first unmount the volume in the instance. Failure to do so results in the volume being stuck in the busy state while it is trying to detach, which could possibly damage the file system or the data it contains.\n *\n * If an Amazon EBS volume is the root device of an instance, it cannot be detached while the instance is in the \"running\" state. To detach the root volume, stop the instance first.\n *\n * If the root volume is detached from an instance with an AWS Marketplace product code, then the product codes from that volume are no longer associated with the instance.\n *\n * @cloudformationResource AWS::EC2::VolumeAttachment\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html\n */\nexport class CfnVolumeAttachment extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EC2::VolumeAttachment\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnVolumeAttachment {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnVolumeAttachmentPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnVolumeAttachment(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The device name (for example, `/dev/sdh` or `xvdh` ).\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-device\n     */\n    public device: string;\n\n    /**\n     * The ID of the instance to which the volume attaches. This value can be a reference to an [`AWS::EC2::Instance`](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html) resource, or it can be the physical ID of an existing EC2 instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-instanceid\n     */\n    public instanceId: string;\n\n    /**\n     * The ID of the Amazon EBS volume. The volume and instance must be within the same Availability Zone. This value can be a reference to an [`AWS::EC2::Volume`](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html) resource, or it can be the volume ID of an existing Amazon EBS volume.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-volumeid\n     */\n    public volumeId: string;\n\n    /**\n     * Create a new `AWS::EC2::VolumeAttachment`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnVolumeAttachmentProps) {\n        super(scope, id, { type: CfnVolumeAttachment.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'device', this);\n        cdk.requireProperty(props, 'instanceId', this);\n        cdk.requireProperty(props, 'volumeId', this);\n\n        this.device = props.device;\n        this.instanceId = props.instanceId;\n        this.volumeId = props.volumeId;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnVolumeAttachment.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            device: this.device,\n            instanceId: this.instanceId,\n            volumeId: this.volumeId,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnVolumeAttachmentPropsToCloudFormation(props);\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
