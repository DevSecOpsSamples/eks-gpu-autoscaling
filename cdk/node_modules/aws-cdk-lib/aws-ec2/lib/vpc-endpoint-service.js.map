{
  "version": 3,
  "sources": ["vpc-endpoint-service.ts"],
  "sourcesContent": ["import { ArnPrincipal } from '../../aws-iam';\nimport { Aws, Fn, IResource, Resource, Stack, Token } from '../../core';\nimport { Default, RegionInfo } from '../../region-info';\nimport { Construct } from 'constructs';\nimport { CfnVPCEndpointService, CfnVPCEndpointServicePermissions } from './ec2.generated';\n\n/**\n * A load balancer that can host a VPC Endpoint Service\n *\n */\nexport interface IVpcEndpointServiceLoadBalancer {\n  /**\n   * The ARN of the load balancer that hosts the VPC Endpoint Service\n   *\n   * @attribute\n   */\n  readonly loadBalancerArn: string;\n}\n\n/**\n * A VPC endpoint service.\n *\n */\nexport interface IVpcEndpointService extends IResource {\n  /**\n   * The service name of the VPC Endpoint Service that clients use to connect to,\n   * like com.amazonaws.vpce.<region>.vpce-svc-xxxxxxxxxxxxxxxx\n   *\n   * @attribute\n   */\n  readonly vpcEndpointServiceName: string;\n\n  /**\n   * The id of the VPC Endpoint Service that clients use to connect to,\n   * like vpce-svc-xxxxxxxxxxxxxxxx\n   *\n   * @attribute\n   */\n  readonly vpcEndpointServiceId: string;\n}\n\n/**\n * A VPC endpoint service\n * @resource AWS::EC2::VPCEndpointService\n *\n */\nexport class VpcEndpointService extends Resource implements IVpcEndpointService {\n\n  /**\n   * One or more network load balancers to host the service.\n   * @attribute\n   */\n  public readonly vpcEndpointServiceLoadBalancers: IVpcEndpointServiceLoadBalancer[];\n\n  /**\n   * Whether to require manual acceptance of new connections to the service.\n   *\n   */\n  public readonly acceptanceRequired: boolean;\n\n  /**\n   * One or more Principal ARNs to allow inbound connections to.\n   * @deprecated use `allowedPrincipals`\n   */\n  public readonly whitelistedPrincipals: ArnPrincipal[];\n\n  /**\n   * One or more Principal ARNs to allow inbound connections to.\n   *\n   */\n  public readonly allowedPrincipals: ArnPrincipal[];\n\n  /**\n   * The id of the VPC Endpoint Service, like vpce-svc-xxxxxxxxxxxxxxxx.\n   * @attribute\n   */\n  public readonly vpcEndpointServiceId: string;\n\n  /**\n   * The service name of the VPC Endpoint Service that clients use to connect to,\n   * like com.amazonaws.vpce.<region>.vpce-svc-xxxxxxxxxxxxxxxx\n   *\n   * @attribute\n   */\n  public readonly vpcEndpointServiceName: string;\n\n  private readonly endpointService: CfnVPCEndpointService;\n\n  constructor(scope: Construct, id: string, props: VpcEndpointServiceProps) {\n    super(scope, id);\n\n    if (props.vpcEndpointServiceLoadBalancers === undefined || props.vpcEndpointServiceLoadBalancers.length === 0) {\n      throw new Error('VPC Endpoint Service must have at least one load balancer specified.');\n    }\n\n    this.vpcEndpointServiceLoadBalancers = props.vpcEndpointServiceLoadBalancers;\n    this.acceptanceRequired = props.acceptanceRequired ?? true;\n\n    if (props.allowedPrincipals && props.whitelistedPrincipals) {\n      throw new Error('`whitelistedPrincipals` is deprecated; please use `allowedPrincipals` instead');\n    }\n    this.allowedPrincipals = props.allowedPrincipals ?? props.whitelistedPrincipals ?? [];\n    this.whitelistedPrincipals = this.allowedPrincipals;\n\n    this.endpointService = new CfnVPCEndpointService(this, id, {\n      networkLoadBalancerArns: this.vpcEndpointServiceLoadBalancers.map(lb => lb.loadBalancerArn),\n      acceptanceRequired: this.acceptanceRequired,\n    });\n\n    this.vpcEndpointServiceId = this.endpointService.ref;\n\n    const { region } = Stack.of(this);\n    const serviceNamePrefix = !Token.isUnresolved(region) ?\n      (RegionInfo.get(region).vpcEndpointServiceNamePrefix ?? Default.VPC_ENDPOINT_SERVICE_NAME_PREFIX) :\n      Default.VPC_ENDPOINT_SERVICE_NAME_PREFIX;\n\n    this.vpcEndpointServiceName = Fn.join('.', [serviceNamePrefix, Aws.REGION, this.vpcEndpointServiceId]);\n    if (this.allowedPrincipals.length > 0) {\n      new CfnVPCEndpointServicePermissions(this, 'Permissions', {\n        serviceId: this.endpointService.ref,\n        allowedPrincipals: this.allowedPrincipals.map(x => x.arn),\n      });\n    }\n  }\n}\n\n/**\n * Construction properties for a VpcEndpointService.\n *\n */\nexport interface VpcEndpointServiceProps {\n\n  /**\n   * Name of the Vpc Endpoint Service\n   * @deprecated This property is not used\n   * @default - CDK generated name\n   */\n  readonly vpcEndpointServiceName?: string;\n\n  /**\n   * One or more load balancers to host the VPC Endpoint Service.\n   *\n   */\n  readonly vpcEndpointServiceLoadBalancers: IVpcEndpointServiceLoadBalancer[];\n\n  /**\n   * Whether requests from service consumers to connect to the service through\n   * an endpoint must be accepted.\n   * @default true\n   *\n   */\n  readonly acceptanceRequired?: boolean;\n\n  /**\n   * IAM users, IAM roles, or AWS accounts to allow inbound connections from.\n   * These principals can connect to your service using VPC endpoints. Takes a\n   * list of one or more ArnPrincipal.\n   * @default - no principals\n   * @deprecated use `allowedPrincipals`\n   */\n  readonly whitelistedPrincipals?: ArnPrincipal[];\n\n  /**\n   * IAM users, IAM roles, or AWS accounts to allow inbound connections from.\n   * These principals can connect to your service using VPC endpoints. Takes a\n   * list of one or more ArnPrincipal.\n   * @default - no principals\n   *\n   */\n  readonly allowedPrincipals?: ArnPrincipal[];\n}\n"],
  "mappings": "yNACA,OAAA,QAAA,YAAA,EACA,cAAA,QAAA,mBAAA,EAEA,gBAAA,QAAA,iBAAA,EA0CA,MAAa,0BAA2B,QAAA,QAAQ,CA0C9C,YAAY,MAAkB,GAAY,MAA8B,iBACtE,MAAM,MAAO,EAAE,EAEf,8EAAI,MAAM,kCAAoC,QAAa,MAAM,gCAAgC,SAAW,EAC1G,KAAM,IAAI,OAAM,sEAAsE,EAMxF,GAHA,KAAK,gCAAkC,MAAM,gCAC7C,KAAK,mBAAkB,IAAG,MAAM,sBAAkB,MAAA,KAAA,OAAA,GAAI,GAElD,MAAM,mBAAqB,MAAM,sBACnC,KAAM,IAAI,OAAM,+EAA+E,EAEjG,KAAK,kBAAiB,IAAA,IAAG,MAAM,qBAAiB,MAAA,KAAA,OAAA,GAAI,MAAM,yBAAqB,MAAA,KAAA,OAAA,GAAI,CAAA,EACnF,KAAK,sBAAwB,KAAK,kBAElC,KAAK,gBAAkB,GAAI,iBAAA,sBAAsB,KAAM,GAAI,CACzD,wBAAyB,KAAK,gCAAgC,IAAI,IAAM,GAAG,eAAe,EAC1F,mBAAoB,KAAK,mBAC1B,EAED,KAAK,qBAAuB,KAAK,gBAAgB,IAEjD,KAAM,CAAE,QAAW,OAAA,MAAM,GAAG,IAAI,EAC1B,kBAAoB,AAAC,OAAA,MAAM,aAAa,MAAM,EAElD,cAAA,QAAQ,iCADR,IAAC,cAAA,WAAW,IAAI,MAAM,EAAE,gCAA4B,MAAA,KAAA,OAAA,GAAI,cAAA,QAAQ,iCAGlE,KAAK,uBAAyB,OAAA,GAAG,KAAK,IAAK,CAAC,kBAAmB,OAAA,IAAI,OAAQ,KAAK,oBAAoB,CAAC,EACjG,KAAK,kBAAkB,OAAS,GAClC,GAAI,iBAAA,iCAAiC,KAAM,cAAe,CACxD,UAAW,KAAK,gBAAgB,IAChC,kBAAmB,KAAK,kBAAkB,IAAI,GAAK,EAAE,GAAG,EACzD,GA3EP,QAAA,mBAAA",
  "names": []
}
