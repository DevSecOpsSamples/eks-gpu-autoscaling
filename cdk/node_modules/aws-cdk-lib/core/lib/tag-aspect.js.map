{
  "version": 3,
  "sources": ["tag-aspect.ts"],
  "sourcesContent": ["import { Construct, IConstruct } from 'constructs';\nimport { Annotations } from './annotations';\nimport { IAspect, Aspects } from './aspect';\nimport { ITaggable, TagManager } from './tag-manager';\n\n/**\n * Properties for a tag\n */\nexport interface TagProps {\n  /**\n   * Whether the tag should be applied to instances in an AutoScalingGroup\n   *\n   * @default true\n   */\n  readonly applyToLaunchedInstances?: boolean;\n\n  /**\n   * An array of Resource Types that will not receive this tag\n   *\n   * An empty array will allow this tag to be applied to all resources. A\n   * non-empty array will apply this tag only if the Resource type is not in\n   * this array.\n   * @default []\n   */\n  readonly excludeResourceTypes?: string[];\n\n  /**\n   * An array of Resource Types that will receive this tag\n   *\n   * An empty array will match any Resource. A non-empty array will apply this\n   * tag only to Resource types that are included in this array.\n   * @default []\n   */\n  readonly includeResourceTypes?: string[];\n\n  /**\n   * Priority of the tag operation\n   *\n   * Higher or equal priority tags will take precedence.\n   *\n   * Setting priority will enable the user to control tags when they need to not\n   * follow the default precedence pattern of last applied and closest to the\n   * construct in the tree.\n   *\n   * @default\n   *\n   * Default priorities:\n   *\n   * - 100 for {@link SetTag}\n   * - 200 for {@link RemoveTag}\n   * - 50 for tags added directly to CloudFormation resources\n   *\n   */\n  readonly priority?: number;\n}\n\n/**\n * The common functionality for Tag and Remove Tag Aspects\n */\nabstract class TagBase implements IAspect {\n\n  /**\n   * The string key for the tag\n   */\n  public readonly key: string;\n\n  protected readonly props: TagProps;\n\n  constructor(key: string, props: TagProps = {}) {\n    this.key = key;\n    this.props = props;\n  }\n\n  public visit(construct: IConstruct): void {\n    if (TagManager.isTaggable(construct)) {\n      this.applyTag(construct);\n    }\n  }\n\n  protected abstract applyTag(resource: ITaggable): void;\n}\n\n/**\n * The Tag Aspect will handle adding a tag to this node and cascading tags to children\n */\nexport class Tag extends TagBase {\n\n  /**\n   * DEPRECATED: add tags to the node of a construct and all its the taggable children\n   *\n   * @deprecated use `Tags.of(scope).add()`\n   */\n  public static add(scope: Construct, key: string, value: string, props: TagProps = {}) {\n    Annotations.of(scope).addDeprecation('@aws-cdk/core.Tag.add(scope,k,v)', 'Use \"Tags.of(scope).add(k,v)\" instead');\n    Tags.of(scope).add(key, value, props);\n  }\n\n  /**\n   * DEPRECATED: remove tags to the node of a construct and all its the taggable children\n   *\n   * @deprecated use `Tags.of(scope).remove()`\n   */\n  public static remove(scope: Construct, key: string, props: TagProps = {}) {\n    Annotations.of(scope).addDeprecation('@aws-cdk/core.Tag.remove(scope,k,v)', 'Use \"Tags.of(scope).remove(k,v)\" instead');\n    Tags.of(scope).remove(key, props);\n  }\n\n  /**\n   * The string value of the tag\n   */\n  public readonly value: string;\n\n  private readonly defaultPriority = 100;\n\n  constructor(key: string, value: string, props: TagProps = {}) {\n    super(key, props);\n    if (value === undefined) {\n      throw new Error('Tag must have a value');\n    }\n    this.value = value;\n  }\n\n  protected applyTag(resource: ITaggable) {\n    if (resource.tags.applyTagAspectHere(this.props.includeResourceTypes, this.props.excludeResourceTypes)) {\n      resource.tags.setTag(\n        this.key,\n        this.value,\n        this.props.priority ?? this.defaultPriority,\n        this.props.applyToLaunchedInstances !== false,\n      );\n    }\n  }\n}\n\n/**\n * Manages AWS tags for all resources within a construct scope.\n */\nexport class Tags {\n  /**\n   * Returns the tags API for this scope.\n   * @param scope The scope\n   */\n  public static of(scope: IConstruct): Tags {\n    return new Tags(scope);\n  }\n\n  private constructor(private readonly scope: IConstruct) { }\n\n  /**\n   * add tags to the node of a construct and all its the taggable children\n   */\n  public add(key: string, value: string, props: TagProps = {}) {\n    Aspects.of(this.scope).add(new Tag(key, value, props));\n  }\n\n  /**\n   * remove tags to the node of a construct and all its the taggable children\n   */\n  public remove(key: string, props: TagProps = {}) {\n    Aspects.of(this.scope).add(new RemoveTag(key, props));\n  }\n}\n\n/**\n * The RemoveTag Aspect will handle removing tags from this node and children\n */\nexport class RemoveTag extends TagBase {\n\n  private readonly defaultPriority = 200;\n\n  constructor(key: string, props: TagProps = {}) {\n    super(key, props);\n  }\n\n  protected applyTag(resource: ITaggable): void {\n    if (resource.tags.applyTagAspectHere(this.props.includeResourceTypes, this.props.excludeResourceTypes)) {\n      resource.tags.removeTag(this.key, this.props.priority ?? this.defaultPriority);\n    }\n  }\n}\n"],
  "mappings": "+OACA,cAAA,QAAA,eAAA,EACA,SAAA,QAAA,UAAA,EACA,cAAA,QAAA,eAAA,EAwDA,MAAe,OAAO,CASpB,YAAY,IAAa,MAAkB,CAAA,EAAE,CAC3C,KAAK,IAAM,IACX,KAAK,MAAQ,MAGR,MAAM,UAAqB,CAChC,AAAI,cAAA,WAAW,WAAW,SAAS,GACjC,KAAK,SAAS,SAAS,GAU7B,MAAa,WAAY,QAAO,CA6B9B,YAAY,IAAa,MAAe,MAAkB,CAAA,EAAE,CAC1D,MAAM,IAAK,KAAK,EAChB,GAJe,KAAA,gBAAkB,wDAI7B,QAAU,OACZ,KAAM,IAAI,OAAM,uBAAuB,EAEzC,KAAK,MAAQ,YA3BD,KAAI,MAAkB,IAAa,MAAe,MAAkB,CAAA,EAAE,CAClF,cAAA,YAAY,GAAG,KAAK,EAAE,eAAe,mCAAoC,uCAAuC,EAChH,KAAK,GAAG,KAAK,EAAE,IAAI,IAAK,MAAO,KAAK,QAQxB,QAAO,MAAkB,IAAa,MAAkB,CAAA,EAAE,CACtE,cAAA,YAAY,GAAG,KAAK,EAAE,eAAe,sCAAuC,0CAA0C,EACtH,KAAK,GAAG,KAAK,EAAE,OAAO,IAAK,KAAK,EAkBxB,SAAS,SAAmB,gEAChC,SAAS,KAAK,mBAAmB,KAAK,MAAM,qBAAsB,KAAK,MAAM,oBAAoB,GACnG,SAAS,KAAK,OACZ,KAAK,IACL,KAAK,MAAK,IACV,KAAK,MAAM,YAAQ,MAAA,KAAA,OAAA,GAAI,KAAK,gBAC5B,KAAK,MAAM,2BAA6B,EAAK,GA3CrD,QAAA,IAAA,2EAoDA,MAAa,IAAI,CASf,YAAqC,MAAiB,CAAjB,KAAA,MAAA,YAJvB,IAAG,MAAiB,CAChC,MAAO,IAAI,MAAK,KAAK,EAQhB,IAAI,IAAa,MAAe,MAAkB,CAAA,EAAE,qDACzD,SAAA,QAAQ,GAAG,KAAK,KAAK,EAAE,IAAI,GAAI,KAAI,IAAK,MAAO,KAAK,CAAC,EAMhD,OAAO,IAAa,MAAkB,CAAA,EAAE,qDAC7C,SAAA,QAAQ,GAAG,KAAK,KAAK,EAAE,IAAI,GAAI,WAAU,IAAK,KAAK,CAAC,GAtBxD,QAAA,KAAA,8EA6BA,MAAa,iBAAkB,QAAO,CAIpC,YAAY,IAAa,MAAkB,CAAA,EAAE,CAC3C,MAAM,IAAK,KAAK,EAHD,KAAA,gBAAkB,wDAMzB,SAAS,SAAmB,gEAChC,SAAS,KAAK,mBAAmB,KAAK,MAAM,qBAAsB,KAAK,MAAM,oBAAoB,GACnG,SAAS,KAAK,UAAU,KAAK,IAAG,IAAE,KAAK,MAAM,YAAQ,MAAA,KAAA,OAAA,GAAI,KAAK,eAAe,GAVnF,QAAA,UAAA",
  "names": []
}
