{
  "version": 3,
  "sources": ["removal-policy.ts"],
  "sourcesContent": ["/**\n * Possible values for a resource's Removal Policy\n *\n * The removal policy controls what happens to the resource if it stops being\n * managed by CloudFormation. This can happen in one of three situations:\n *\n * - The resource is removed from the template, so CloudFormation stops managing it;\n * - A change to the resource is made that requires it to be replaced, so CloudFormation stops\n *   managing it;\n * - The stack is deleted, so CloudFormation stops managing all resources in it.\n *\n * The Removal Policy applies to all above cases.\n *\n * Many stateful resources in the AWS Construct Library will accept a\n * `removalPolicy` as a property, typically defaulting it to `RETAIN`.\n *\n * If the AWS Construct Library resource does not accept a `removalPolicy`\n * argument, you can always configure it by using the escape hatch mechanism,\n * as shown in the following example:\n *\n * ```ts\n * declare const bucket: s3.Bucket;\n *\n * const cfnBucket = bucket.node.findChild('Resource') as CfnResource;\n * cfnBucket.applyRemovalPolicy(RemovalPolicy.DESTROY);\n * ```\n */\nexport enum RemovalPolicy {\n  /**\n   * This is the default removal policy. It means that when the resource is\n   * removed from the app, it will be physically destroyed.\n   */\n  DESTROY = 'destroy',\n\n  /**\n   * This uses the 'Retain' DeletionPolicy, which will cause the resource to be retained\n   * in the account, but orphaned from the stack.\n   */\n  RETAIN = 'retain',\n\n  /**\n   * This retention policy deletes the resource,\n   * but saves a snapshot of its data before deleting,\n   * so that it can be re-created later.\n   * Only available for some stateful resources,\n   * like databases, EFS volumes, etc.\n   *\n   * @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html#aws-attribute-deletionpolicy-options\n   */\n  SNAPSHOT = 'snapshot',\n}\n\nexport interface RemovalPolicyOptions {\n  /**\n   * The default policy to apply in case the removal policy is not defined.\n   *\n   * @default - Default value is resource specific. To determine the default value for a resoure,\n   * please consult that specific resource's documentation.\n   */\n  readonly default?: RemovalPolicy;\n\n  /**\n   * Apply the same deletion policy to the resource's \"UpdateReplacePolicy\"\n   * @default true\n   */\n  readonly applyToUpdateReplacePolicy?: boolean;\n}\n"],
  "mappings": "iGA2BA,GAAY,eAAZ,AAAA,UAAY,eAAa,CAKvB,eAAA,QAAA,UAMA,eAAA,OAAA,SAWA,eAAA,SAAA,UACF,GAvBY,cAAA,QAAA,eAAA,SAAA,cAAa,CAAA,EAAA",
  "names": []
}
