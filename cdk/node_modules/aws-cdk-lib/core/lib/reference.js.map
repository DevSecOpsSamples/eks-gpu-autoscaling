{
  "version": 3,
  "sources": ["reference.ts"],
  "sourcesContent": ["import { IConstruct } from 'constructs';\nimport { Intrinsic } from './private/intrinsic';\n\nconst REFERENCE_SYMBOL = Symbol.for('@aws-cdk/core.Reference');\n\n/**\n * An intrinsic Token that represents a reference to a construct.\n *\n * References are recorded.\n */\nexport abstract class Reference extends Intrinsic {\n  /**\n   * Check whether this is actually a Reference\n   */\n  public static isReference(x: any): x is Reference {\n    return typeof x === 'object' && x !== null && REFERENCE_SYMBOL in x;\n  }\n\n  public readonly target: IConstruct;\n  public readonly displayName: string;\n\n  constructor(value: any, target: IConstruct, displayName?: string) {\n    super(value);\n    Object.defineProperty(this, REFERENCE_SYMBOL, { value: true });\n    this.target = target;\n    this.displayName = displayName || 'Reference';\n  }\n}\n\n"],
  "mappings": "qJACA,YAAA,QAAA,qBAAA,EAEM,iBAAmB,OAAO,IAAI,yBAAyB,EAO7D,MAAsB,iBAAkB,aAAA,SAAS,CAW/C,YAAY,MAAY,OAAoB,YAAoB,CAC9D,MAAM,KAAK,EACX,OAAO,eAAe,KAAM,iBAAkB,CAAE,MAAO,EAAI,CAAE,EAC7D,KAAK,OAAS,OACd,KAAK,YAAc,aAAe,kBAXtB,aAAY,EAAM,CAC9B,MAAO,OAAO,IAAM,UAAY,IAAM,MAAQ,mBAAoB,IALtE,QAAA,UAAA",
  "names": []
}
