{
  "version": 3,
  "sources": ["util.ts"],
  "sourcesContent": ["import { IConstruct } from 'constructs';\nimport { Intrinsic } from './private/intrinsic';\nimport { IPostProcessor, IResolveContext } from './resolvable';\nimport { Stack } from './stack';\n\n/**\n * Given an object, converts all keys to PascalCase given they are currently in camel case.\n * @param obj The object.\n */\nexport function capitalizePropertyNames(construct: IConstruct, obj: any): any {\n  const stack = Stack.of(construct);\n  obj = stack.resolve(obj);\n\n  if (typeof(obj) !== 'object') {\n    return obj;\n  }\n\n  if (Array.isArray(obj)) {\n    return obj.map(x => capitalizePropertyNames(construct, x));\n  }\n\n  const newObj: any = { };\n  for (const key of Object.keys(obj)) {\n    const value = obj[key];\n\n    const first = key.charAt(0).toUpperCase();\n    const newKey = first + key.slice(1);\n    newObj[newKey] = capitalizePropertyNames(construct, value);\n  }\n\n  return newObj;\n}\n\n/**\n * Turns empty arrays/objects to undefined (after evaluating tokens).\n */\nexport function ignoreEmpty(obj: any): any {\n  return new PostResolveToken(obj, o => {\n    // undefined/null\n    if (o == null) {\n      return o;\n    }\n\n    if (Array.isArray(o) && o.length === 0) {\n      return undefined;\n    }\n\n    if (typeof(o) === 'object' && Object.keys(o).length === 0) {\n      return undefined;\n    }\n\n    return o;\n  });\n}\n\n/**\n * Returns a copy of `obj` without `undefined` (or `null`) values in maps or arrays.\n */\nexport function filterUndefined(obj: any): any {\n  if (Array.isArray(obj)) {\n    return obj.filter(x => x != null).map(x => filterUndefined(x));\n  }\n\n  if (typeof(obj) === 'object') {\n    const ret: any = { };\n    for (const [key, value] of Object.entries(obj)) {\n      if (value == null) {\n        continue;\n      }\n      ret[key] = filterUndefined(value);\n    }\n    return ret;\n  }\n\n  return obj;\n}\n\n/**\n * A Token that applies a function AFTER resolve resolution\n */\nexport class PostResolveToken extends Intrinsic implements IPostProcessor {\n  constructor(value: any, private readonly processor: (x: any) => any) {\n    super(value, { stackTrace: false });\n  }\n\n  public resolve(context: IResolveContext) {\n    context.registerPostProcessor(this);\n    return super.resolve(context);\n  }\n\n  public postProcess(o: any, _context: IResolveContext): any {\n    return this.processor(o);\n  }\n}\n\n/**\n * @returns the list of stacks that lead from the top-level stack (non-nested) all the way to a nested stack.\n */\nexport function pathToTopLevelStack(s: Stack): Stack[] {\n  if (s.nestedStackParent) {\n    return [...pathToTopLevelStack(s.nestedStackParent), s];\n  } else {\n    return [s];\n  }\n}\n\n/**\n * Given two arrays, returns the last common element or `undefined` if there\n * isn't (arrays are foriegn).\n */\nexport function findLastCommonElement<T>(path1: T[], path2: T[]): T | undefined {\n  let i = 0;\n  while (i < path1.length && i < path2.length) {\n    if (path1[i] !== path2[i]) {\n      break;\n    }\n\n    i++;\n  }\n\n  return path1[i - 1];\n}\n\nexport function undefinedIfAllValuesAreEmpty(object: object): object | undefined {\n  return Object.values(object).some(v => v !== undefined) ? object : undefined;\n}\n"],
  "mappings": "+QACA,KAAA,aAAA,QAAA,qBAAA,EAEA,QAAA,QAAA,SAAA,EAMA,iCAAwC,UAAuB,IAAQ,CAIrE,GAFA,IAAM,AADQ,QAAA,MAAM,GAAG,SAAS,EACpB,QAAQ,GAAG,EAEnB,MAAO,MAAS,SAClB,MAAO,KAGT,GAAI,MAAM,QAAQ,GAAG,EACnB,MAAO,KAAI,IAAI,GAAK,wBAAwB,UAAW,CAAC,CAAC,EAG3D,KAAM,QAAc,CAAA,EACpB,SAAW,OAAO,QAAO,KAAK,GAAG,EAAG,CAClC,KAAM,OAAQ,IAAI,KAGZ,OAAS,AADD,IAAI,OAAO,CAAC,EAAE,YAAW,EAChB,IAAI,MAAM,CAAC,EAClC,OAAO,QAAU,wBAAwB,UAAW,KAAK,EAG3D,MAAO,OACT,CAtBA,QAAA,wBAAA,wBA2BA,qBAA4B,IAAQ,CAClC,MAAO,IAAI,kBAAiB,IAAK,GAAI,CAEnC,GAAI,GAAK,KACP,MAAO,GAGT,GAAI,QAAM,QAAQ,CAAC,GAAK,EAAE,SAAW,IAIjC,QAAO,IAAO,UAAY,OAAO,KAAK,CAAC,EAAE,SAAW,GAIxD,MAAO,EACT,CAAC,CACH,CAjBA,QAAA,YAAA,YAsBA,yBAAgC,IAAQ,CACtC,GAAI,MAAM,QAAQ,GAAG,EACnB,MAAO,KAAI,OAAO,GAAK,GAAK,IAAI,EAAE,IAAI,GAAK,gBAAgB,CAAC,CAAC,EAG/D,GAAI,MAAO,MAAS,SAAU,CAC5B,KAAM,KAAW,CAAA,EACjB,SAAW,CAAC,IAAK,QAAU,QAAO,QAAQ,GAAG,EAC3C,AAAI,OAAS,MAGb,KAAI,KAAO,gBAAgB,KAAK,GAElC,MAAO,KAGT,MAAO,IACT,CAjBA,QAAA,gBAAA,gBAsBA,MAAa,wBAAyB,aAAA,SAAS,CAC7C,YAAY,MAA6B,UAA0B,CACjE,MAAM,MAAO,CAAE,WAAY,EAAK,CAAE,EADK,KAAA,UAAA,UAIlC,QAAQ,QAAwB,CACrC,eAAQ,sBAAsB,IAAI,EAC3B,MAAM,QAAQ,OAAO,EAGvB,YAAY,EAAQ,SAAyB,CAClD,MAAO,MAAK,UAAU,CAAC,GAX3B,QAAA,iBAAA,iBAkBA,6BAAoC,EAAQ,CAC1C,MAAI,GAAE,kBACG,CAAC,GAAG,oBAAoB,EAAE,iBAAiB,EAAG,CAAC,EAE/C,CAAC,CAAC,CAEb,CANA,QAAA,oBAAA,oBAYA,+BAAyC,MAAY,MAAU,CAC7D,GAAI,GAAI,EACR,KAAO,EAAI,MAAM,QAAU,EAAI,MAAM,QAC/B,MAAM,KAAO,MAAM,IAIvB,IAGF,MAAO,OAAM,EAAI,EACnB,CAXA,QAAA,sBAAA,sBAaA,sCAA6C,OAAc,CACzD,MAAO,QAAO,OAAO,MAAM,EAAE,KAAK,GAAK,IAAM,MAAS,EAAI,OAAS,MACrE,CAFA,QAAA,6BAAA",
  "names": []
}
