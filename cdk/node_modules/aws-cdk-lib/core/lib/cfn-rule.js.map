{
  "version": 3,
  "sources": ["cfn-rule.ts"],
  "sourcesContent": ["import { Construct } from 'constructs';\nimport { ICfnConditionExpression } from './cfn-condition';\nimport { CfnRefElement } from './cfn-element';\nimport { capitalizePropertyNames } from './util';\n\n/**\n * A rule can include a RuleCondition property and must include an Assertions property.\n * For each rule, you can define only one rule condition; you can define one or more asserts within the Assertions property.\n * You define a rule condition and assertions by using rule-specific intrinsic functions.\n *\n * You can use the following rule-specific intrinsic functions to define rule conditions and assertions:\n *\n *  Fn::And\n *  Fn::Contains\n *  Fn::EachMemberEquals\n *  Fn::EachMemberIn\n *  Fn::Equals\n *  Fn::If\n *  Fn::Not\n *  Fn::Or\n *  Fn::RefAll\n *  Fn::ValueOf\n *  Fn::ValueOfAll\n *\n * https://docs.aws.amazon.com/servicecatalog/latest/adminguide/reference-template_constraint_rules.html\n */\nexport interface CfnRuleProps {\n  /**\n   * If the rule condition evaluates to false, the rule doesn't take effect.\n   * If the function in the rule condition evaluates to true, expressions in each assert are evaluated and applied.\n   *\n   * @default - Rule's assertions will always take effect.\n   */\n  readonly ruleCondition?: ICfnConditionExpression;\n\n  /**\n   * Assertions which define the rule.\n   *\n   * @default - No assertions for the rule.\n   */\n  readonly assertions?: CfnRuleAssertion[];\n}\n\n/**\n * The Rules that define template constraints in an AWS Service Catalog portfolio describe when\n * end users can use the template and which values they can specify for parameters that are declared\n * in the AWS CloudFormation template used to create the product they are attempting to use. Rules\n * are useful for preventing end users from inadvertently specifying an incorrect value.\n * For example, you can add a rule to verify whether end users specified a valid subnet in a\n * given VPC or used m1.small instance types for test environments. AWS CloudFormation uses\n * rules to validate parameter values before it creates the resources for the product.\n *\n * A rule can include a RuleCondition property and must include an Assertions property.\n * For each rule, you can define only one rule condition; you can define one or more asserts within the Assertions property.\n * You define a rule condition and assertions by using rule-specific intrinsic functions.\n *\n * @link https://docs.aws.amazon.com/servicecatalog/latest/adminguide/reference-template_constraint_rules.html\n */\nexport class CfnRule extends CfnRefElement {\n  private ruleCondition?: ICfnConditionExpression;\n  private assertions?: CfnRuleAssertion[];\n\n  /**\n   * Creates and adds a rule.\n   * @param scope The parent construct.\n   * @param props The rule props.\n   */\n  constructor(scope: Construct, id: string, props?: CfnRuleProps) {\n    super(scope, id);\n\n    this.ruleCondition = props && props.ruleCondition;\n    this.assertions = props && props.assertions;\n  }\n\n  /**\n   * Adds an assertion to the rule.\n   * @param condition The expression to evaluation.\n   * @param description The description of the assertion.\n   */\n  public addAssertion(condition: ICfnConditionExpression, description: string) {\n    if (!this.assertions) {\n      this.assertions = [];\n    }\n\n    this.assertions.push({\n      assert: condition,\n      assertDescription: description,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  public _toCloudFormation(): object {\n    return {\n      Rules: {\n        [this.logicalId]: {\n          RuleCondition: this.ruleCondition,\n          Assertions: capitalizePropertyNames(this, this.assertions),\n        },\n      },\n    };\n  }\n}\n\n/**\n * A rule assertion.\n */\nexport interface CfnRuleAssertion {\n  /**\n   * The assertion.\n   */\n  readonly assert: ICfnConditionExpression;\n\n  /**\n   * The assertion description.\n   */\n  readonly assertDescription: string;\n}\n"],
  "mappings": "8MAEA,cAAA,QAAA,eAAA,EACA,OAAA,QAAA,QAAA,EAuDA,MAAa,eAAgB,eAAA,aAAa,CASxC,YAAY,MAAkB,GAAY,MAAoB,CAC5D,MAAM,MAAO,EAAE,0DAEf,KAAK,cAAgB,OAAS,MAAM,cACpC,KAAK,WAAa,OAAS,MAAM,WAQ5B,aAAa,UAAoC,YAAmB,wEACpE,KAAK,YACR,MAAK,WAAa,CAAA,GAGpB,KAAK,WAAW,KAAK,CACnB,OAAQ,UACR,kBAAmB,YACpB,EAMI,mBAAiB,CACtB,MAAO,CACL,MAAO,EACJ,KAAK,WAAY,CAChB,cAAe,KAAK,cACpB,WAAY,OAAA,wBAAwB,KAAM,KAAK,UAAU,MAxCnE,QAAA,QAAA",
  "names": []
}
