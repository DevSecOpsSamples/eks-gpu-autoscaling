{
  "version": 3,
  "sources": ["options.ts"],
  "sourcesContent": ["/**\n * Determines how symlinks are followed.\n */\nexport enum SymlinkFollowMode {\n  /**\n   * Never follow symlinks.\n   */\n  NEVER = 'never',\n\n  /**\n   * Materialize all symlinks, whether they are internal or external to the source directory.\n   */\n  ALWAYS = 'always',\n\n  /**\n   * Only follows symlinks that are external to the source directory.\n   */\n  EXTERNAL = 'external',\n\n  /**\n   * Forbids source from having any symlinks pointing outside of the source\n   * tree.\n   *\n   * This is the safest mode of operation as it ensures that copy operations\n   * won't materialize files from the user's file system. Internal symlinks are\n   * not followed.\n   *\n   * If the copy operation runs into an external symlink, it will fail.\n   */\n  BLOCK_EXTERNAL = 'internal-only',\n}\n\n/**\n * Determines the ignore behavior to use.\n */\nexport enum IgnoreMode {\n  /**\n   * Ignores file paths based on simple glob patterns.\n   *\n   * This is the default for file assets.\n   *\n   * It is also the default for Docker image assets, unless the '@aws-cdk/aws-ecr-assets:dockerIgnoreSupport'\n   * context flag is set.\n   */\n  GLOB = 'glob',\n\n  /**\n   * Ignores file paths based on the [`.gitignore specification`](https://git-scm.com/docs/gitignore).\n   */\n  GIT = 'git',\n\n  /**\n   * Ignores file paths based on the [`.dockerignore specification`](https://docs.docker.com/engine/reference/builder/#dockerignore-file).\n   *\n   * This is the default for Docker image assets if the '@aws-cdk/aws-ecr-assets:dockerIgnoreSupport'\n   * context flag is set.\n   */\n  DOCKER = 'docker'\n}\n\ninterface FileOptions {\n  /**\n   * Glob patterns to exclude from the copy.\n   *\n   * @default - nothing is excluded\n   */\n  readonly exclude?: string[];\n\n  /**\n   * The ignore behavior to use for exclude patterns.\n   *\n   * @default IgnoreMode.GLOB\n   */\n  readonly ignoreMode?: IgnoreMode;\n}\n\n/**\n * Options applied when copying directories\n */\nexport interface CopyOptions extends FileOptions {\n  /**\n   * A strategy for how to handle symlinks.\n   *\n   * @default SymlinkFollowMode.NEVER\n   */\n  readonly follow?: SymlinkFollowMode;\n}\n\n/**\n * Options applied when copying directories into the staging location.\n */\nexport interface FileCopyOptions extends FileOptions {\n  /**\n   * A strategy for how to handle symlinks.\n   *\n   * @default SymlinkFollowMode.NEVER\n   */\n  readonly followSymlinks?: SymlinkFollowMode;\n}\n\ninterface ExtraHashOptions {\n  /**\n   * Extra information to encode into the fingerprint (e.g. build instructions\n   * and other inputs)\n   *\n   * @default - hash is only based on source content\n   */\n  readonly extraHash?: string;\n}\n\n/**\n * Options related to calculating source hash.\n */\nexport interface FingerprintOptions extends CopyOptions, ExtraHashOptions {\n}\n\n/**\n * Options related to calculating source hash.\n */\nexport interface FileFingerprintOptions extends FileCopyOptions, ExtraHashOptions {\n}\n"],
  "mappings": "wHAGA,GAAY,mBAAZ,AAAA,UAAY,mBAAiB,CAI3B,mBAAA,MAAA,QAKA,mBAAA,OAAA,SAKA,mBAAA,SAAA,WAYA,mBAAA,eAAA,eACF,GA3BY,kBAAA,QAAA,mBAAA,SAAA,kBAAiB,CAAA,EAAA,EAgC7B,GAAY,YAAZ,AAAA,UAAY,YAAU,CASpB,YAAA,KAAA,OAKA,YAAA,IAAA,MAQA,YAAA,OAAA,QACF,GAvBY,WAAA,QAAA,YAAA,SAAA,WAAU,CAAA,EAAA",
  "names": []
}
