{
  "version": 3,
  "sources": ["opensearch-access-policy.ts"],
  "sourcesContent": ["import * as iam from '../../aws-iam';\nimport * as cdk from '../../core';\nimport * as cr from '../../custom-resources';\n\n// keep this import separate from other imports to reduce chance for merge conflicts with v2-main\n// eslint-disable-next-line no-duplicate-imports, import/order\nimport { Construct } from 'constructs';\n\n/**\n * Construction properties for OpenSearchAccessPolicy\n */\nexport interface OpenSearchAccessPolicyProps {\n  /**\n   * The OpenSearch Domain name\n   */\n  readonly domainName: string;\n\n  /**\n   * The OpenSearch Domain ARN\n   */\n  readonly domainArn: string;\n\n  /**\n   * The access policy statements for the OpenSearch cluster\n   */\n  readonly accessPolicies: iam.PolicyStatement[];\n}\n\n/**\n * Creates LogGroup resource policies.\n */\nexport class OpenSearchAccessPolicy extends cr.AwsCustomResource {\n\n  private accessPolicyStatements: iam.PolicyStatement[] = [];\n\n  constructor(scope: Construct, id: string, props: OpenSearchAccessPolicyProps) {\n    super(scope, id, {\n      resourceType: 'Custom::OpenSearchAccessPolicy',\n      onUpdate: {\n        action: 'updateDomainConfig',\n        service: 'OpenSearch',\n        parameters: {\n          DomainName: props.domainName,\n          AccessPolicies: cdk.Lazy.string({\n            produce: () => JSON.stringify(\n              new iam.PolicyDocument({\n                statements: this.accessPolicyStatements,\n              }).toJSON(),\n            ),\n          }),\n        },\n        // this is needed to limit the response body, otherwise it exceeds the CFN 4k limit\n        outputPaths: ['DomainConfig.AccessPolicies'],\n        physicalResourceId: cr.PhysicalResourceId.of(`${props.domainName}AccessPolicy`),\n      },\n      policy: cr.AwsCustomResourcePolicy.fromStatements([new iam.PolicyStatement({ actions: ['es:UpdateDomainConfig'], resources: [props.domainArn] })]),\n    });\n\n    this.addAccessPolicies(...props.accessPolicies);\n  }\n\n  /**\n   * Add policy statements to the domain access policy\n   */\n  public addAccessPolicies(...accessPolicyStatements: iam.PolicyStatement[]) {\n    this.accessPolicyStatements.push(...accessPolicyStatements);\n  }\n}\n"],
  "mappings": "0GAAA,KAAA,KAAA,QAAA,eAAA,EACA,IAAA,QAAA,YAAA,EACA,GAAA,QAAA,wBAAA,EA6BA,MAAa,8BAA+B,IAAG,iBAAiB,CAI9D,YAAY,MAAkB,GAAY,MAAkC,CAC1E,MAAM,MAAO,GAAI,CACf,aAAc,iCACd,SAAU,CACR,OAAQ,qBACR,QAAS,aACT,WAAY,CACV,WAAY,MAAM,WAClB,eAAgB,IAAI,KAAK,OAAO,CAC9B,QAAS,IAAM,KAAK,UAClB,GAAI,KAAI,eAAe,CACrB,WAAY,KAAK,uBAClB,EAAE,OAAM,CAAE,EAEd,GAGH,YAAa,CAAC,6BAA6B,EAC3C,mBAAoB,GAAG,mBAAmB,GAAG,GAAG,MAAM,wBAAwB,GAEhF,OAAQ,GAAG,wBAAwB,eAAe,CAAC,GAAI,KAAI,gBAAgB,CAAE,QAAS,CAAC,uBAAuB,EAAG,UAAW,CAAC,MAAM,SAAS,CAAC,CAAE,CAAC,CAAC,EAClJ,EAvBK,KAAA,uBAAgD,CAAA,EAyBtD,KAAK,kBAAkB,GAAG,MAAM,cAAc,EAMzC,qBAAqB,uBAA6C,CACvE,KAAK,uBAAuB,KAAK,GAAG,sBAAsB,GAlC9D,QAAA,uBAAA",
  "names": []
}
