"use strict";var _a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.Domain=exports.TLSSecurityPolicy=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),url_1=require("url"),acm=require("../../aws-certificatemanager"),aws_cloudwatch_1=require("../../aws-cloudwatch"),ec2=require("../../aws-ec2"),iam=require("../../aws-iam"),logs=require("../../aws-logs"),route53=require("../../aws-route53"),secretsmanager=require("../../aws-secretsmanager"),cdk=require("../../core"),log_group_resource_policy_1=require("./log-group-resource-policy"),opensearch_access_policy_1=require("./opensearch-access-policy"),opensearchservice_generated_1=require("./opensearchservice.generated"),perms=require("./perms");var TLSSecurityPolicy;(function(TLSSecurityPolicy2){TLSSecurityPolicy2.TLS_1_0="Policy-Min-TLS-1-0-2019-07",TLSSecurityPolicy2.TLS_1_2="Policy-Min-TLS-1-2-2019-07"})(TLSSecurityPolicy=exports.TLSSecurityPolicy||(exports.TLSSecurityPolicy={}));class DomainBase extends cdk.Resource{grantRead(identity){return this.grant(identity,perms.ES_READ_ACTIONS,this.domainArn,`${this.domainArn}/*`)}grantWrite(identity){return this.grant(identity,perms.ES_WRITE_ACTIONS,this.domainArn,`${this.domainArn}/*`)}grantReadWrite(identity){return this.grant(identity,perms.ES_READ_WRITE_ACTIONS,this.domainArn,`${this.domainArn}/*`)}grantIndexRead(index,identity){return this.grant(identity,perms.ES_READ_ACTIONS,`${this.domainArn}/${index}`,`${this.domainArn}/${index}/*`)}grantIndexWrite(index,identity){return this.grant(identity,perms.ES_WRITE_ACTIONS,`${this.domainArn}/${index}`,`${this.domainArn}/${index}/*`)}grantIndexReadWrite(index,identity){return this.grant(identity,perms.ES_READ_WRITE_ACTIONS,`${this.domainArn}/${index}`,`${this.domainArn}/${index}/*`)}grantPathRead(path,identity){return this.grant(identity,perms.ES_READ_ACTIONS,`${this.domainArn}/${path}`)}grantPathWrite(path,identity){return this.grant(identity,perms.ES_WRITE_ACTIONS,`${this.domainArn}/${path}`)}grantPathReadWrite(path,identity){return this.grant(identity,perms.ES_READ_WRITE_ACTIONS,`${this.domainArn}/${path}`)}metric(metricName,props){return new aws_cloudwatch_1.Metric({namespace:"AWS/ES",metricName,dimensionsMap:{DomainName:this.domainName,ClientId:this.stack.account},...props}).attachTo(this)}metricClusterStatusRed(props){return this.metric("ClusterStatus.red",{statistic:aws_cloudwatch_1.Statistic.MAXIMUM,...props})}metricClusterStatusYellow(props){return this.metric("ClusterStatus.yellow",{statistic:aws_cloudwatch_1.Statistic.MAXIMUM,...props})}metricFreeStorageSpace(props){return this.metric("FreeStorageSpace",{statistic:aws_cloudwatch_1.Statistic.MINIMUM,...props})}metricClusterIndexWritesBlocked(props){return this.metric("ClusterIndexWritesBlocked",{statistic:aws_cloudwatch_1.Statistic.MAXIMUM,period:cdk.Duration.minutes(1),...props})}metricNodes(props){return this.metric("Nodes",{statistic:aws_cloudwatch_1.Statistic.MINIMUM,period:cdk.Duration.hours(1),...props})}metricAutomatedSnapshotFailure(props){return this.metric("AutomatedSnapshotFailure",{statistic:aws_cloudwatch_1.Statistic.MAXIMUM,...props})}metricCPUUtilization(props){return this.metric("CPUUtilization",{statistic:aws_cloudwatch_1.Statistic.MAXIMUM,...props})}metricJVMMemoryPressure(props){return this.metric("JVMMemoryPressure",{statistic:aws_cloudwatch_1.Statistic.MAXIMUM,...props})}metricMasterCPUUtilization(props){return this.metric("MasterCPUUtilization",{statistic:aws_cloudwatch_1.Statistic.MAXIMUM,...props})}metricMasterJVMMemoryPressure(props){return this.metric("MasterJVMMemoryPressure",{statistic:aws_cloudwatch_1.Statistic.MAXIMUM,...props})}metricKMSKeyError(props){return this.metric("KMSKeyError",{statistic:aws_cloudwatch_1.Statistic.MAXIMUM,...props})}metricKMSKeyInaccessible(props){return this.metric("KMSKeyInaccessible",{statistic:aws_cloudwatch_1.Statistic.MAXIMUM,...props})}metricSearchableDocuments(props){return this.metric("SearchableDocuments",{statistic:aws_cloudwatch_1.Statistic.MAXIMUM,...props})}metricSearchLatency(props){return this.metric("SearchLatency",{statistic:"p99",...props})}metricIndexingLatency(props){return this.metric("IndexingLatency",{statistic:"p99",...props})}grant(grantee,domainActions,resourceArn,...otherResourceArns){const resourceArns=[resourceArn,...otherResourceArns];return iam.Grant.addToPrincipal({grantee,actions:domainActions,resourceArns,scope:this})}}class Domain extends DomainBase{constructor(scope,id,props){var _b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s,_t,_u,_v,_w,_x,_y,_z,_0,_1,_2,_3,_4,_5,_6,_7,_8,_9,_10,_11,_12,_13,_14,_15,_16,_17,_18,_19,_20,_21,_22,_23,_24,_25,_26,_27,_28,_29;super(scope,id,{physicalName:props.domainName});jsiiDeprecationWarnings.aws_cdk_lib_aws_opensearchservice_DomainProps(props);const defaultInstanceType="r5.large.search",warmDefaultInstanceType="ultrawarm1.medium.search",dedicatedMasterType=initializeInstanceType(defaultInstanceType,(_b=props.capacity)===null||_b===void 0?void 0:_b.masterNodeInstanceType),dedicatedMasterCount=(_d=(_c=props.capacity)===null||_c===void 0?void 0:_c.masterNodes)!==null&&_d!==void 0?_d:0,dedicatedMasterEnabled=cdk.Token.isUnresolved(dedicatedMasterCount)?!0:dedicatedMasterCount>0,instanceType=initializeInstanceType(defaultInstanceType,(_e=props.capacity)===null||_e===void 0?void 0:_e.dataNodeInstanceType),instanceCount=(_g=(_f=props.capacity)===null||_f===void 0?void 0:_f.dataNodes)!==null&&_g!==void 0?_g:1,warmType=initializeInstanceType(warmDefaultInstanceType,(_h=props.capacity)===null||_h===void 0?void 0:_h.warmInstanceType),warmCount=(_k=(_j=props.capacity)===null||_j===void 0?void 0:_j.warmNodes)!==null&&_k!==void 0?_k:0,warmEnabled=cdk.Token.isUnresolved(warmCount)?!0:warmCount>0,availabilityZoneCount=(_m=(_l=props.zoneAwareness)===null||_l===void 0?void 0:_l.availabilityZoneCount)!==null&&_m!==void 0?_m:2;if(![2,3].includes(availabilityZoneCount))throw new Error("Invalid zone awareness configuration; availabilityZoneCount must be 2 or 3");const zoneAwarenessEnabled=(_p=(_o=props.zoneAwareness)===null||_o===void 0?void 0:_o.enabled)!==null&&_p!==void 0?_p:((_q=props.zoneAwareness)===null||_q===void 0?void 0:_q.availabilityZoneCount)!=null;let securityGroups,subnets;if(props.vpc&&(subnets=selectSubnets(props.vpc,(_r=props.vpcSubnets)!==null&&_r!==void 0?_r:[{subnetType:ec2.SubnetType.PRIVATE}]),securityGroups=(_s=props.securityGroups)!==null&&_s!==void 0?_s:[new ec2.SecurityGroup(this,"SecurityGroup",{vpc:props.vpc,description:`Security group for domain ${this.node.id}`})],this._connections=new ec2.Connections({securityGroups})),subnets&&zoneAwarenessEnabled&&new Set(subnets.map(subnet=>subnet.availabilityZone)).size<availabilityZoneCount)throw new Error("When providing vpc options you need to provide a subnet for each AZ you are using");if([dedicatedMasterType,instanceType,warmType].some(t=>!cdk.Token.isUnresolved(t)&&!t.endsWith(".search")))throw new Error('Master, data and UltraWarm node instance types must end with ".search".');if(!cdk.Token.isUnresolved(warmType)&&!warmType.startsWith("ultrawarm"))throw new Error('UltraWarm node instance type must start with "ultrawarm".');const unsignedBasicAuthEnabled=(_t=props.useUnsignedBasicAuth)!==null&&_t!==void 0?_t:!1;if(unsignedBasicAuthEnabled){if(props.enforceHttps==!1)throw new Error("You cannot disable HTTPS and use unsigned basic auth");if(props.nodeToNodeEncryption==!1)throw new Error("You cannot disable node to node encryption and use unsigned basic auth");if(((_u=props.encryptionAtRest)===null||_u===void 0?void 0:_u.enabled)==!1)throw new Error("You cannot disable encryption at rest and use unsigned basic auth")}const unsignedAccessPolicy=new iam.PolicyStatement({effect:iam.Effect.ALLOW,actions:["es:ESHttp*"],principals:[new iam.AnyPrincipal],resources:[cdk.Lazy.string({produce:()=>`${this.domainArn}/*`})]}),masterUserArn=(_v=props.fineGrainedAccessControl)===null||_v===void 0?void 0:_v.masterUserArn,masterUserNameProps=(_w=props.fineGrainedAccessControl)===null||_w===void 0?void 0:_w.masterUserName,masterUserName=unsignedBasicAuthEnabled?masterUserArn==null?masterUserNameProps!=null?masterUserNameProps:"admin":void 0:masterUserNameProps;if(masterUserArn!=null&&masterUserName!=null)throw new Error("Invalid fine grained access control settings. Only provide one of master user ARN or master user name. Not both.");const advancedSecurityEnabled=(masterUserArn!=null?masterUserArn:masterUserName)!=null,internalUserDatabaseEnabled=masterUserName!=null,masterUserPasswordProp=(_x=props.fineGrainedAccessControl)===null||_x===void 0?void 0:_x.masterUserPassword,createMasterUserPassword=()=>new secretsmanager.Secret(this,"MasterUser",{generateSecretString:{secretStringTemplate:JSON.stringify({username:masterUserName}),generateStringKey:"password",excludeCharacters:"{}'\\*[]()`"}}).secretValueFromJson("password");this.masterUserPassword=internalUserDatabaseEnabled?masterUserPasswordProp!=null?masterUserPasswordProp:createMasterUserPassword():void 0;const encryptionAtRestEnabled=(_z=(_y=props.encryptionAtRest)===null||_y===void 0?void 0:_y.enabled)!==null&&_z!==void 0?_z:((_0=props.encryptionAtRest)===null||_0===void 0?void 0:_0.kmsKey)!=null||unsignedBasicAuthEnabled,nodeToNodeEncryptionEnabled=(_1=props.nodeToNodeEncryption)!==null&&_1!==void 0?_1:unsignedBasicAuthEnabled,volumeSize=(_3=(_2=props.ebs)===null||_2===void 0?void 0:_2.volumeSize)!==null&&_3!==void 0?_3:10,volumeType=(_5=(_4=props.ebs)===null||_4===void 0?void 0:_4.volumeType)!==null&&_5!==void 0?_5:ec2.EbsDeviceVolumeType.GENERAL_PURPOSE_SSD,ebsEnabled=(_7=(_6=props.ebs)===null||_6===void 0?void 0:_6.enabled)!==null&&_7!==void 0?_7:!0,enforceHttps=(_8=props.enforceHttps)!==null&&_8!==void 0?_8:unsignedBasicAuthEnabled;function isInstanceType(t){return dedicatedMasterType.startsWith(t)||instanceType.startsWith(t)}function isSomeInstanceType(...instanceTypes){return instanceTypes.some(isInstanceType)}function isEveryDatanodeInstanceType(...instanceTypes){return instanceTypes.some(t=>instanceType.startsWith(t))}const{versionNum,isElasticsearchVersion}=parseVersion(props.version);if(isElasticsearchVersion){if(versionNum<=7.7&&![1.5,2.3,5.1,5.3,5.5,5.6,6,6.2,6.3,6.4,6.5,6.7,6.8,7.1,7.4,7.7].includes(versionNum))throw new Error(`Unknown Elasticsearch version: ${versionNum}`);if(versionNum<5.1){if(!((_9=props.logging)===null||_9===void 0)&&_9.appLogEnabled)throw new Error("Error logs publishing requires Elasticsearch version 5.1 or later or OpenSearch version 1.0 or later.");if(!((_10=props.encryptionAtRest)===null||_10===void 0)&&_10.enabled)throw new Error("Encryption of data at rest requires Elasticsearch version 5.1 or later or OpenSearch version 1.0 or later.");if(props.cognitoDashboardsAuth!=null)throw new Error("Cognito authentication for OpenSearch Dashboards requires Elasticsearch version 5.1 or later or OpenSearch version 1.0 or later.");if(isSomeInstanceType("c5","i3","m5","r5"))throw new Error("C5, I3, M5, and R5 instance types require Elasticsearch version 5.1 or later or OpenSearch version 1.0 or later.")}if(versionNum<6&&props.nodeToNodeEncryption)throw new Error("Node-to-node encryption requires Elasticsearch version 6.0 or later or OpenSearch version 1.0 or later.");if(versionNum<6.7){if(unsignedBasicAuthEnabled)throw new Error("Using unsigned basic auth requires Elasticsearch version 6.7 or later or OpenSearch version 1.0 or later.");if(advancedSecurityEnabled)throw new Error("Fine-grained access control requires Elasticsearch version 6.7 or later or OpenSearch version 1.0 or later.")}if(versionNum<6.8&&warmEnabled)throw new Error("UltraWarm requires Elasticsearch version 6.8 or later or OpenSearch version 1.0 or later.")}if(isSomeInstanceType("i3","r6gd")&&ebsEnabled)throw new Error("I3 and R6GD instance types do not support EBS storage volumes.");if(isSomeInstanceType("m3","r3","t2")&&encryptionAtRestEnabled)throw new Error("M3, R3, and T2 instance types do not support encryption of data at rest.");if(isInstanceType("t2.micro")&&!(isElasticsearchVersion&&versionNum<=2.3))throw new Error("The t2.micro.search instance type supports only Elasticsearch versions 1.5 and 2.3.");if(isSomeInstanceType("t2","t3")&&warmEnabled)throw new Error("T2 and T3 instance types do not support UltraWarm storage.");if(!ebsEnabled&&!isEveryDatanodeInstanceType("r3","i3","r6gd"))throw new Error("EBS volumes are required when using instance types other than r3, i3 or r6gd.");if(advancedSecurityEnabled){if(!nodeToNodeEncryptionEnabled)throw new Error("Node-to-node encryption is required when fine-grained access control is enabled.");if(!encryptionAtRestEnabled)throw new Error("Encryption-at-rest is required when fine-grained access control is enabled.");if(!enforceHttps)throw new Error("Enforce HTTPS is required when fine-grained access control is enabled.")}if(((_11=props.logging)===null||_11===void 0?void 0:_11.auditLogEnabled)&&!advancedSecurityEnabled)throw new Error("Fine-grained access control is required when audit logs publishing is enabled.");if(warmEnabled&&!dedicatedMasterEnabled)throw new Error("Dedicated master node is required when UltraWarm storage is enabled.");let cfnVpcOptions;securityGroups&&subnets&&(cfnVpcOptions={securityGroupIds:securityGroups.map(sg=>sg.securityGroupId),subnetIds:subnets.map(subnet=>subnet.subnetId)});const logGroups=[];!((_12=props.logging)===null||_12===void 0)&&_12.slowSearchLogEnabled&&(this.slowSearchLogGroup=(_13=props.logging.slowSearchLogGroup)!==null&&_13!==void 0?_13:new logs.LogGroup(this,"SlowSearchLogs",{retention:logs.RetentionDays.ONE_MONTH}),logGroups.push(this.slowSearchLogGroup)),!((_14=props.logging)===null||_14===void 0)&&_14.slowIndexLogEnabled&&(this.slowIndexLogGroup=(_15=props.logging.slowIndexLogGroup)!==null&&_15!==void 0?_15:new logs.LogGroup(this,"SlowIndexLogs",{retention:logs.RetentionDays.ONE_MONTH}),logGroups.push(this.slowIndexLogGroup)),!((_16=props.logging)===null||_16===void 0)&&_16.appLogEnabled&&(this.appLogGroup=(_17=props.logging.appLogGroup)!==null&&_17!==void 0?_17:new logs.LogGroup(this,"AppLogs",{retention:logs.RetentionDays.ONE_MONTH}),logGroups.push(this.appLogGroup)),!((_18=props.logging)===null||_18===void 0)&&_18.auditLogEnabled&&(this.auditLogGroup=(_19=props.logging.auditLogGroup)!==null&&_19!==void 0?_19:new logs.LogGroup(this,"AuditLogs",{retention:logs.RetentionDays.ONE_MONTH}),logGroups.push(this.auditLogGroup));let logGroupResourcePolicy=null;if(logGroups.length>0){const logPolicyStatement=new iam.PolicyStatement({effect:iam.Effect.ALLOW,actions:["logs:PutLogEvents","logs:CreateLogStream"],resources:logGroups.map(lg=>lg.logGroupArn),principals:[new iam.ServicePrincipal("es.amazonaws.com")]});logGroupResourcePolicy=new log_group_resource_policy_1.LogGroupResourcePolicy(this,`ESLogGroupPolicy${this.node.addr}`,{policyName:`ESLogPolicy${this.node.addr}`,policyStatements:[logPolicyStatement]})}const logPublishing={};this.appLogGroup&&(logPublishing.ES_APPLICATION_LOGS={enabled:!0,cloudWatchLogsLogGroupArn:this.appLogGroup.logGroupArn}),this.slowSearchLogGroup&&(logPublishing.SEARCH_SLOW_LOGS={enabled:!0,cloudWatchLogsLogGroupArn:this.slowSearchLogGroup.logGroupArn}),this.slowIndexLogGroup&&(logPublishing.INDEX_SLOW_LOGS={enabled:!0,cloudWatchLogsLogGroupArn:this.slowIndexLogGroup.logGroupArn}),this.auditLogGroup&&(logPublishing.AUDIT_LOGS={enabled:this.auditLogGroup!=null,cloudWatchLogsLogGroupArn:(_20=this.auditLogGroup)===null||_20===void 0?void 0:_20.logGroupArn});let customEndpointCertificate;if(props.customEndpoint&&(props.customEndpoint.certificate?customEndpointCertificate=props.customEndpoint.certificate:customEndpointCertificate=new acm.Certificate(this,"CustomEndpointCertificate",{domainName:props.customEndpoint.domainName,validation:props.customEndpoint.hostedZone?acm.CertificateValidation.fromDns(props.customEndpoint.hostedZone):void 0})),this.domain=new opensearchservice_generated_1.CfnDomain(this,"Resource",{domainName:this.physicalName,engineVersion:props.version.version,clusterConfig:{dedicatedMasterEnabled,dedicatedMasterCount:dedicatedMasterEnabled?dedicatedMasterCount:void 0,dedicatedMasterType:dedicatedMasterEnabled?dedicatedMasterType:void 0,instanceCount,instanceType,warmEnabled:warmEnabled||void 0,warmCount:warmEnabled?warmCount:void 0,warmType:warmEnabled?warmType:void 0,zoneAwarenessEnabled,zoneAwarenessConfig:zoneAwarenessEnabled?{availabilityZoneCount}:void 0},ebsOptions:{ebsEnabled,volumeSize:ebsEnabled?volumeSize:void 0,volumeType:ebsEnabled?volumeType:void 0,iops:ebsEnabled?(_21=props.ebs)===null||_21===void 0?void 0:_21.iops:void 0},encryptionAtRestOptions:{enabled:encryptionAtRestEnabled,kmsKeyId:encryptionAtRestEnabled?(_23=(_22=props.encryptionAtRest)===null||_22===void 0?void 0:_22.kmsKey)===null||_23===void 0?void 0:_23.keyId:void 0},nodeToNodeEncryptionOptions:{enabled:nodeToNodeEncryptionEnabled},logPublishingOptions:logPublishing,cognitoOptions:{enabled:props.cognitoDashboardsAuth!=null,identityPoolId:(_24=props.cognitoDashboardsAuth)===null||_24===void 0?void 0:_24.identityPoolId,roleArn:(_25=props.cognitoDashboardsAuth)===null||_25===void 0?void 0:_25.role.roleArn,userPoolId:(_26=props.cognitoDashboardsAuth)===null||_26===void 0?void 0:_26.userPoolId},vpcOptions:cfnVpcOptions,snapshotOptions:props.automatedSnapshotStartHour?{automatedSnapshotStartHour:props.automatedSnapshotStartHour}:void 0,domainEndpointOptions:{enforceHttps,tlsSecurityPolicy:(_27=props.tlsSecurityPolicy)!==null&&_27!==void 0?_27:TLSSecurityPolicy.TLS_1_0,...props.customEndpoint&&{customEndpointEnabled:!0,customEndpoint:props.customEndpoint.domainName,customEndpointCertificateArn:customEndpointCertificate.certificateArn}},advancedSecurityOptions:advancedSecurityEnabled?{enabled:!0,internalUserDatabaseEnabled,masterUserOptions:{masterUserArn,masterUserName,masterUserPassword:(_28=this.masterUserPassword)===null||_28===void 0?void 0:_28.toString()}}:void 0,advancedOptions:props.advancedOptions}),this.domain.applyRemovalPolicy(props.removalPolicy),props.enableVersionUpgrade&&(this.domain.cfnOptions.updatePolicy={...this.domain.cfnOptions.updatePolicy,enableVersionUpgrade:props.enableVersionUpgrade}),logGroupResourcePolicy&&this.domain.node.addDependency(logGroupResourcePolicy),props.domainName){if(!cdk.Token.isUnresolved(props.domainName)){if(!props.domainName.match(/^[a-z0-9\-]+$/))throw new Error(`Invalid domainName '${props.domainName}'. Valid characters are a-z (lowercase only), 0-9, and \u2013 (hyphen).`);if(props.domainName.length<3||props.domainName.length>28)throw new Error(`Invalid domainName '${props.domainName}'. It must be between 3 and 28 characters`);if(props.domainName[0]<"a"||props.domainName[0]>"z")throw new Error(`Invalid domainName '${props.domainName}'. It must start with a lowercase letter`)}this.node.addMetadata("aws:cdk:hasPhysicalName",props.domainName)}this.domainName=this.getResourceNameAttribute(this.domain.ref),this.domainId=this.domain.getAtt("Id").toString(),this.domainEndpoint=this.domain.getAtt("DomainEndpoint").toString(),this.domainArn=this.getResourceArnAttribute(this.domain.attrArn,{service:"es",resource:"domain",resourceName:this.physicalName}),!((_29=props.customEndpoint)===null||_29===void 0)&&_29.hostedZone&&new route53.CnameRecord(this,"CnameRecord",{recordName:props.customEndpoint.domainName,zone:props.customEndpoint.hostedZone,domainName:this.domainEndpoint}),this.encryptionAtRestOptions=props.encryptionAtRest,props.accessPolicies&&this.addAccessPolicies(...props.accessPolicies),unsignedBasicAuthEnabled&&this.addAccessPolicies(unsignedAccessPolicy)}static fromDomainEndpoint(scope,id,domainEndpoint){const stack=cdk.Stack.of(scope),domainName=extractNameFromEndpoint(domainEndpoint),domainArn=stack.formatArn({service:"es",resource:"domain",resourceName:domainName});return Domain.fromDomainAttributes(scope,id,{domainArn,domainEndpoint})}static fromDomainAttributes(scope,id,attrs){var _b;jsiiDeprecationWarnings.aws_cdk_lib_aws_opensearchservice_DomainAttributes(attrs);const{domainArn,domainEndpoint}=attrs,domainName=(_b=cdk.Stack.of(scope).splitArn(domainArn,cdk.ArnFormat.SLASH_RESOURCE_NAME).resourceName)!==null&&_b!==void 0?_b:extractNameFromEndpoint(domainEndpoint);return new class extends DomainBase{constructor(){super(scope,id);this.domainArn=domainArn,this.domainName=domainName,this.domainId=domainName,this.domainEndpoint=domainEndpoint.replace(/^https?:\/\//,"")}}}get connections(){if(!this._connections)throw new Error("Connections are only available on VPC enabled domains. Use the 'vpc' property to place a domain inside a VPC");return this._connections}addAccessPolicies(...accessPolicyStatements){var _b;jsiiDeprecationWarnings.aws_cdk_lib_aws_iam_PolicyStatement(accessPolicyStatements),accessPolicyStatements.length>0&&(this.accessPolicy?this.accessPolicy.addAccessPolicies(...accessPolicyStatements):(this.accessPolicy=new opensearch_access_policy_1.OpenSearchAccessPolicy(this,"AccessPolicy",{domainName:this.domainName,domainArn:this.domainArn,accessPolicies:accessPolicyStatements}),!((_b=this.encryptionAtRestOptions)===null||_b===void 0)&&_b.kmsKey&&this.accessPolicy.grantPrincipal.addToPrincipalPolicy(new iam.PolicyStatement({actions:["kms:List*","kms:Describe*","kms:CreateGrant"],resources:[this.encryptionAtRestOptions.kmsKey.keyArn],effect:iam.Effect.ALLOW}))))}}exports.Domain=Domain,_a=JSII_RTTI_SYMBOL_1,Domain[_a]={fqn:"aws-cdk-lib.aws_opensearchservice.Domain",version:"2.20.0"};function extractNameFromEndpoint(domainEndpoint){const{hostname}=new url_1.URL(domainEndpoint),domain=hostname.split(".")[0],suffix="-"+domain.split("-").slice(-1)[0];return domain.split(suffix)[0]}function parseVersion(version){const elasticsearchPrefix="Elasticsearch_",openSearchPrefix="OpenSearch_",isElasticsearchVersion=version.version.startsWith(elasticsearchPrefix),versionStr=isElasticsearchVersion?version.version.substring(elasticsearchPrefix.length):version.version.substring(openSearchPrefix.length),firstDot=versionStr.indexOf(".");if(firstDot<1)throw new Error(`Invalid engine version: ${versionStr}. Version string needs to start with major and minor version (x.y).`);const secondDot=versionStr.indexOf(".",firstDot+1);try{return secondDot==-1?{versionNum:parseFloat(versionStr),isElasticsearchVersion}:{versionNum:parseFloat(versionStr.substring(0,secondDot)),isElasticsearchVersion}}catch{throw new Error(`Invalid engine version: ${versionStr}. Version string needs to start with major and minor version (x.y).`)}}function selectSubnets(vpc,vpcSubnets){const selected=[];for(const selection of vpcSubnets)selected.push(...vpc.selectSubnets(selection).subnets);return selected}function initializeInstanceType(defaultInstanceType,instanceType){return instanceType?cdk.Token.isUnresolved(instanceType)?instanceType:instanceType.toLowerCase():defaultInstanceType}
//# sourceMappingURL=domain.js.map
