{
  "version": 3,
  "sources": ["instance.ts"],
  "sourcesContent": ["import { IResource, Names, Resource } from '../../core';\nimport { IService } from './service';\n\nexport interface IInstance extends IResource {\n  /**\n   * The id of the instance resource\n   * @attribute\n   */\n  readonly instanceId: string;\n\n  /**\n   * The Cloudmap service this resource is registered to.\n   */\n  readonly service: IService;\n}\n\n/**\n * Used when the resource that's associated with the service instance is accessible using values other than an IP\n * address or a domain name (CNAME), i.e. for non-ip-instances\n */\nexport interface BaseInstanceProps {\n  /**\n   * The id of the instance resource\n   *\n   * @default Automatically generated name\n   */\n  readonly instanceId?: string;\n\n  /**\n   * Custom attributes of the instance.\n   *\n   * @default none\n   */\n  readonly customAttributes?: { [key: string]: string };\n}\n\nexport abstract class InstanceBase extends Resource implements IInstance {\n  /**\n   * The Id of the instance\n   */\n  public abstract readonly instanceId: string;\n\n  /**\n   * The Cloudmap service to which the instance is registered.\n   */\n  public abstract readonly service: IService;\n\n  /**\n   * Generate a unique instance Id that is safe to pass to CloudMap\n   */\n  protected uniqueInstanceId() {\n    // Max length of 64 chars, get the last 64 chars\n    const id = Names.uniqueId(this);\n    return id.substring(Math.max(id.length - 64, 0), id.length);\n  }\n}\n"],
  "mappings": "wJAAA,OAAA,QAAA,YAAA,EAoCA,MAAsB,oBAAqB,QAAA,QAAQ,CAcvC,kBAAgB,CAExB,KAAM,IAAK,OAAA,MAAM,SAAS,IAAI,EAC9B,MAAO,IAAG,UAAU,KAAK,IAAI,GAAG,OAAS,GAAI,CAAC,EAAG,GAAG,MAAM,GAjB9D,QAAA,aAAA",
  "names": []
}
