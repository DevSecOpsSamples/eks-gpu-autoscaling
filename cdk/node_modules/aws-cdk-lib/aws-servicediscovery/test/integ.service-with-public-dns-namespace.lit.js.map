{
  "version": 3,
  "sources": ["integ.service-with-public-dns-namespace.lit.ts"],
  "sourcesContent": ["import * as cdk from '../../core';\nimport * as servicediscovery from '../lib';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-servicediscovery-integ');\n\nconst namespace = new servicediscovery.PublicDnsNamespace(stack, 'Namespace', {\n  name: 'foobar.com',\n});\n\nconst service = namespace.createService('Service', {\n  name: 'foo',\n  dnsRecordType: servicediscovery.DnsRecordType.A,\n  dnsTtl: cdk.Duration.seconds(30),\n  healthCheck: {\n    type: servicediscovery.HealthCheckType.HTTPS,\n    resourcePath: '/healthcheck',\n    failureThreshold: 2,\n  },\n});\n\nservice.registerIpInstance('IpInstance', {\n  ipv4: '54.239.25.192',\n  port: 443,\n});\n\napp.synth();\n"],
  "mappings": "oEAAA,KAAA,KAAA,QAAA,YAAA,EACA,iBAAA,QAAA,QAAA,EAEM,IAAM,GAAI,KAAI,IACd,MAAQ,GAAI,KAAI,MAAM,IAAK,4BAA4B,EAEvD,UAAY,GAAI,kBAAiB,mBAAmB,MAAO,YAAa,CAC5E,KAAM,aACP,EAEK,QAAU,UAAU,cAAc,UAAW,CACjD,KAAM,MACN,cAAe,iBAAiB,cAAc,EAC9C,OAAQ,IAAI,SAAS,QAAQ,EAAE,EAC/B,YAAa,CACX,KAAM,iBAAiB,gBAAgB,MACvC,aAAc,eACd,iBAAkB,GAErB,EAED,QAAQ,mBAAmB,aAAc,CACvC,KAAM,gBACN,KAAM,IACP,EAED,IAAI,MAAK",
  "names": []
}
