"use strict";var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnResolverRuleAssociation=exports.CfnResolverRule=exports.CfnResolverQueryLoggingConfigAssociation=exports.CfnResolverQueryLoggingConfig=exports.CfnResolverEndpoint=exports.CfnResolverDNSSECConfig=exports.CfnResolverConfig=exports.CfnFirewallRuleGroupAssociation=exports.CfnFirewallRuleGroup=exports.CfnFirewallDomainList=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/cfn-parse");function CfnFirewallDomainListPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("domainFileUrl",cdk.validateString)(properties.domainFileUrl)),errors.collect(cdk.propertyValidator("domains",cdk.listValidator(cdk.validateString))(properties.domains)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnFirewallDomainListProps"')}function cfnFirewallDomainListPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnFirewallDomainListPropsValidator(properties).assertSuccess(),{DomainFileUrl:cdk.stringToCloudFormation(properties.domainFileUrl),Domains:cdk.listMapper(cdk.stringToCloudFormation)(properties.domains),Name:cdk.stringToCloudFormation(properties.name),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnFirewallDomainListPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("domainFileUrl","DomainFileUrl",properties.DomainFileUrl!=null?cfn_parse.FromCloudFormation.getString(properties.DomainFileUrl):void 0),ret.addPropertyResult("domains","Domains",properties.Domains!=null?cfn_parse.FromCloudFormation.getStringArray(properties.Domains):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnFirewallDomainList extends cdk.CfnResource{constructor(scope,id,props={}){super(scope,id,{type:CfnFirewallDomainList.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_route53resolver_CfnFirewallDomainListProps(props),this.attrArn=cdk.Token.asString(this.getAtt("Arn")),this.attrCreationTime=cdk.Token.asString(this.getAtt("CreationTime")),this.attrCreatorRequestId=cdk.Token.asString(this.getAtt("CreatorRequestId")),this.attrDomainCount=cdk.Token.asNumber(this.getAtt("DomainCount")),this.attrId=cdk.Token.asString(this.getAtt("Id")),this.attrManagedOwnerName=cdk.Token.asString(this.getAtt("ManagedOwnerName")),this.attrModificationTime=cdk.Token.asString(this.getAtt("ModificationTime")),this.attrStatus=cdk.Token.asString(this.getAtt("Status")),this.attrStatusMessage=cdk.Token.asString(this.getAtt("StatusMessage")),this.domainFileUrl=props.domainFileUrl,this.domains=props.domains,this.name=props.name,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Route53Resolver::FirewallDomainList",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnFirewallDomainListPropsFromCloudFormation(resourceProperties),ret=new CfnFirewallDomainList(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnFirewallDomainList.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{domainFileUrl:this.domainFileUrl,domains:this.domains,name:this.name,tags:this.tags.renderTags()}}renderProperties(props){return cfnFirewallDomainListPropsToCloudFormation(props)}}exports.CfnFirewallDomainList=CfnFirewallDomainList,_a=JSII_RTTI_SYMBOL_1,CfnFirewallDomainList[_a]={fqn:"aws-cdk-lib.aws_route53resolver.CfnFirewallDomainList",version:"2.20.0"},CfnFirewallDomainList.CFN_RESOURCE_TYPE_NAME="AWS::Route53Resolver::FirewallDomainList";function CfnFirewallRuleGroupPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("firewallRules",cdk.listValidator(CfnFirewallRuleGroup_FirewallRulePropertyValidator))(properties.firewallRules)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnFirewallRuleGroupProps"')}function cfnFirewallRuleGroupPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnFirewallRuleGroupPropsValidator(properties).assertSuccess(),{FirewallRules:cdk.listMapper(cfnFirewallRuleGroupFirewallRulePropertyToCloudFormation)(properties.firewallRules),Name:cdk.stringToCloudFormation(properties.name),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnFirewallRuleGroupPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("firewallRules","FirewallRules",properties.FirewallRules!=null?cfn_parse.FromCloudFormation.getArray(CfnFirewallRuleGroupFirewallRulePropertyFromCloudFormation)(properties.FirewallRules):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnFirewallRuleGroup extends cdk.CfnResource{constructor(scope,id,props={}){super(scope,id,{type:CfnFirewallRuleGroup.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_route53resolver_CfnFirewallRuleGroupProps(props),this.attrArn=cdk.Token.asString(this.getAtt("Arn")),this.attrCreationTime=cdk.Token.asString(this.getAtt("CreationTime")),this.attrCreatorRequestId=cdk.Token.asString(this.getAtt("CreatorRequestId")),this.attrId=cdk.Token.asString(this.getAtt("Id")),this.attrModificationTime=cdk.Token.asString(this.getAtt("ModificationTime")),this.attrOwnerId=cdk.Token.asString(this.getAtt("OwnerId")),this.attrRuleCount=cdk.Token.asNumber(this.getAtt("RuleCount")),this.attrShareStatus=cdk.Token.asString(this.getAtt("ShareStatus")),this.attrStatus=cdk.Token.asString(this.getAtt("Status")),this.attrStatusMessage=cdk.Token.asString(this.getAtt("StatusMessage")),this.firewallRules=props.firewallRules,this.name=props.name,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Route53Resolver::FirewallRuleGroup",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnFirewallRuleGroupPropsFromCloudFormation(resourceProperties),ret=new CfnFirewallRuleGroup(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnFirewallRuleGroup.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{firewallRules:this.firewallRules,name:this.name,tags:this.tags.renderTags()}}renderProperties(props){return cfnFirewallRuleGroupPropsToCloudFormation(props)}}exports.CfnFirewallRuleGroup=CfnFirewallRuleGroup,_b=JSII_RTTI_SYMBOL_1,CfnFirewallRuleGroup[_b]={fqn:"aws-cdk-lib.aws_route53resolver.CfnFirewallRuleGroup",version:"2.20.0"},CfnFirewallRuleGroup.CFN_RESOURCE_TYPE_NAME="AWS::Route53Resolver::FirewallRuleGroup";function CfnFirewallRuleGroup_FirewallRulePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("action",cdk.requiredValidator)(properties.action)),errors.collect(cdk.propertyValidator("action",cdk.validateString)(properties.action)),errors.collect(cdk.propertyValidator("blockOverrideDnsType",cdk.validateString)(properties.blockOverrideDnsType)),errors.collect(cdk.propertyValidator("blockOverrideDomain",cdk.validateString)(properties.blockOverrideDomain)),errors.collect(cdk.propertyValidator("blockOverrideTtl",cdk.validateNumber)(properties.blockOverrideTtl)),errors.collect(cdk.propertyValidator("blockResponse",cdk.validateString)(properties.blockResponse)),errors.collect(cdk.propertyValidator("firewallDomainListId",cdk.requiredValidator)(properties.firewallDomainListId)),errors.collect(cdk.propertyValidator("firewallDomainListId",cdk.validateString)(properties.firewallDomainListId)),errors.collect(cdk.propertyValidator("priority",cdk.requiredValidator)(properties.priority)),errors.collect(cdk.propertyValidator("priority",cdk.validateNumber)(properties.priority)),errors.wrap('supplied properties not correct for "FirewallRuleProperty"')}function cfnFirewallRuleGroupFirewallRulePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnFirewallRuleGroup_FirewallRulePropertyValidator(properties).assertSuccess(),{Action:cdk.stringToCloudFormation(properties.action),BlockOverrideDnsType:cdk.stringToCloudFormation(properties.blockOverrideDnsType),BlockOverrideDomain:cdk.stringToCloudFormation(properties.blockOverrideDomain),BlockOverrideTtl:cdk.numberToCloudFormation(properties.blockOverrideTtl),BlockResponse:cdk.stringToCloudFormation(properties.blockResponse),FirewallDomainListId:cdk.stringToCloudFormation(properties.firewallDomainListId),Priority:cdk.numberToCloudFormation(properties.priority)}):properties}function CfnFirewallRuleGroupFirewallRulePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("action","Action",cfn_parse.FromCloudFormation.getString(properties.Action)),ret.addPropertyResult("blockOverrideDnsType","BlockOverrideDnsType",properties.BlockOverrideDnsType!=null?cfn_parse.FromCloudFormation.getString(properties.BlockOverrideDnsType):void 0),ret.addPropertyResult("blockOverrideDomain","BlockOverrideDomain",properties.BlockOverrideDomain!=null?cfn_parse.FromCloudFormation.getString(properties.BlockOverrideDomain):void 0),ret.addPropertyResult("blockOverrideTtl","BlockOverrideTtl",properties.BlockOverrideTtl!=null?cfn_parse.FromCloudFormation.getNumber(properties.BlockOverrideTtl):void 0),ret.addPropertyResult("blockResponse","BlockResponse",properties.BlockResponse!=null?cfn_parse.FromCloudFormation.getString(properties.BlockResponse):void 0),ret.addPropertyResult("firewallDomainListId","FirewallDomainListId",cfn_parse.FromCloudFormation.getString(properties.FirewallDomainListId)),ret.addPropertyResult("priority","Priority",cfn_parse.FromCloudFormation.getNumber(properties.Priority)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnFirewallRuleGroupAssociationPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("firewallRuleGroupId",cdk.requiredValidator)(properties.firewallRuleGroupId)),errors.collect(cdk.propertyValidator("firewallRuleGroupId",cdk.validateString)(properties.firewallRuleGroupId)),errors.collect(cdk.propertyValidator("mutationProtection",cdk.validateString)(properties.mutationProtection)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("priority",cdk.requiredValidator)(properties.priority)),errors.collect(cdk.propertyValidator("priority",cdk.validateNumber)(properties.priority)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("vpcId",cdk.requiredValidator)(properties.vpcId)),errors.collect(cdk.propertyValidator("vpcId",cdk.validateString)(properties.vpcId)),errors.wrap('supplied properties not correct for "CfnFirewallRuleGroupAssociationProps"')}function cfnFirewallRuleGroupAssociationPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnFirewallRuleGroupAssociationPropsValidator(properties).assertSuccess(),{FirewallRuleGroupId:cdk.stringToCloudFormation(properties.firewallRuleGroupId),Priority:cdk.numberToCloudFormation(properties.priority),VpcId:cdk.stringToCloudFormation(properties.vpcId),MutationProtection:cdk.stringToCloudFormation(properties.mutationProtection),Name:cdk.stringToCloudFormation(properties.name),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnFirewallRuleGroupAssociationPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("firewallRuleGroupId","FirewallRuleGroupId",cfn_parse.FromCloudFormation.getString(properties.FirewallRuleGroupId)),ret.addPropertyResult("priority","Priority",cfn_parse.FromCloudFormation.getNumber(properties.Priority)),ret.addPropertyResult("vpcId","VpcId",cfn_parse.FromCloudFormation.getString(properties.VpcId)),ret.addPropertyResult("mutationProtection","MutationProtection",properties.MutationProtection!=null?cfn_parse.FromCloudFormation.getString(properties.MutationProtection):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnFirewallRuleGroupAssociation extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnFirewallRuleGroupAssociation.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_route53resolver_CfnFirewallRuleGroupAssociationProps(props),cdk.requireProperty(props,"firewallRuleGroupId",this),cdk.requireProperty(props,"priority",this),cdk.requireProperty(props,"vpcId",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn")),this.attrCreationTime=cdk.Token.asString(this.getAtt("CreationTime")),this.attrCreatorRequestId=cdk.Token.asString(this.getAtt("CreatorRequestId")),this.attrId=cdk.Token.asString(this.getAtt("Id")),this.attrManagedOwnerName=cdk.Token.asString(this.getAtt("ManagedOwnerName")),this.attrModificationTime=cdk.Token.asString(this.getAtt("ModificationTime")),this.attrStatus=cdk.Token.asString(this.getAtt("Status")),this.attrStatusMessage=cdk.Token.asString(this.getAtt("StatusMessage")),this.firewallRuleGroupId=props.firewallRuleGroupId,this.priority=props.priority,this.vpcId=props.vpcId,this.mutationProtection=props.mutationProtection,this.name=props.name,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Route53Resolver::FirewallRuleGroupAssociation",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnFirewallRuleGroupAssociationPropsFromCloudFormation(resourceProperties),ret=new CfnFirewallRuleGroupAssociation(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnFirewallRuleGroupAssociation.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{firewallRuleGroupId:this.firewallRuleGroupId,priority:this.priority,vpcId:this.vpcId,mutationProtection:this.mutationProtection,name:this.name,tags:this.tags.renderTags()}}renderProperties(props){return cfnFirewallRuleGroupAssociationPropsToCloudFormation(props)}}exports.CfnFirewallRuleGroupAssociation=CfnFirewallRuleGroupAssociation,_c=JSII_RTTI_SYMBOL_1,CfnFirewallRuleGroupAssociation[_c]={fqn:"aws-cdk-lib.aws_route53resolver.CfnFirewallRuleGroupAssociation",version:"2.20.0"},CfnFirewallRuleGroupAssociation.CFN_RESOURCE_TYPE_NAME="AWS::Route53Resolver::FirewallRuleGroupAssociation";function CfnResolverConfigPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("autodefinedReverseFlag",cdk.requiredValidator)(properties.autodefinedReverseFlag)),errors.collect(cdk.propertyValidator("autodefinedReverseFlag",cdk.validateString)(properties.autodefinedReverseFlag)),errors.collect(cdk.propertyValidator("resourceId",cdk.requiredValidator)(properties.resourceId)),errors.collect(cdk.propertyValidator("resourceId",cdk.validateString)(properties.resourceId)),errors.wrap('supplied properties not correct for "CfnResolverConfigProps"')}function cfnResolverConfigPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnResolverConfigPropsValidator(properties).assertSuccess(),{AutodefinedReverseFlag:cdk.stringToCloudFormation(properties.autodefinedReverseFlag),ResourceId:cdk.stringToCloudFormation(properties.resourceId)}):properties}function CfnResolverConfigPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("autodefinedReverseFlag","AutodefinedReverseFlag",cfn_parse.FromCloudFormation.getString(properties.AutodefinedReverseFlag)),ret.addPropertyResult("resourceId","ResourceId",cfn_parse.FromCloudFormation.getString(properties.ResourceId)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnResolverConfig extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnResolverConfig.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_route53resolver_CfnResolverConfigProps(props),cdk.requireProperty(props,"autodefinedReverseFlag",this),cdk.requireProperty(props,"resourceId",this),this.attrAutodefinedReverse=cdk.Token.asString(this.getAtt("AutodefinedReverse")),this.attrId=cdk.Token.asString(this.getAtt("Id")),this.attrOwnerId=cdk.Token.asString(this.getAtt("OwnerId")),this.autodefinedReverseFlag=props.autodefinedReverseFlag,this.resourceId=props.resourceId}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnResolverConfigPropsFromCloudFormation(resourceProperties),ret=new CfnResolverConfig(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnResolverConfig.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{autodefinedReverseFlag:this.autodefinedReverseFlag,resourceId:this.resourceId}}renderProperties(props){return cfnResolverConfigPropsToCloudFormation(props)}}exports.CfnResolverConfig=CfnResolverConfig,_d=JSII_RTTI_SYMBOL_1,CfnResolverConfig[_d]={fqn:"aws-cdk-lib.aws_route53resolver.CfnResolverConfig",version:"2.20.0"},CfnResolverConfig.CFN_RESOURCE_TYPE_NAME="AWS::Route53Resolver::ResolverConfig";function CfnResolverDNSSECConfigPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("resourceId",cdk.validateString)(properties.resourceId)),errors.wrap('supplied properties not correct for "CfnResolverDNSSECConfigProps"')}function cfnResolverDNSSECConfigPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnResolverDNSSECConfigPropsValidator(properties).assertSuccess(),{ResourceId:cdk.stringToCloudFormation(properties.resourceId)}):properties}function CfnResolverDNSSECConfigPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("resourceId","ResourceId",properties.ResourceId!=null?cfn_parse.FromCloudFormation.getString(properties.ResourceId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnResolverDNSSECConfig extends cdk.CfnResource{constructor(scope,id,props={}){super(scope,id,{type:CfnResolverDNSSECConfig.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_route53resolver_CfnResolverDNSSECConfigProps(props),this.attrId=cdk.Token.asString(this.getAtt("Id")),this.attrOwnerId=cdk.Token.asString(this.getAtt("OwnerId")),this.attrValidationStatus=cdk.Token.asString(this.getAtt("ValidationStatus")),this.resourceId=props.resourceId}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnResolverDNSSECConfigPropsFromCloudFormation(resourceProperties),ret=new CfnResolverDNSSECConfig(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnResolverDNSSECConfig.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{resourceId:this.resourceId}}renderProperties(props){return cfnResolverDNSSECConfigPropsToCloudFormation(props)}}exports.CfnResolverDNSSECConfig=CfnResolverDNSSECConfig,_e=JSII_RTTI_SYMBOL_1,CfnResolverDNSSECConfig[_e]={fqn:"aws-cdk-lib.aws_route53resolver.CfnResolverDNSSECConfig",version:"2.20.0"},CfnResolverDNSSECConfig.CFN_RESOURCE_TYPE_NAME="AWS::Route53Resolver::ResolverDNSSECConfig";function CfnResolverEndpointPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("direction",cdk.requiredValidator)(properties.direction)),errors.collect(cdk.propertyValidator("direction",cdk.validateString)(properties.direction)),errors.collect(cdk.propertyValidator("ipAddresses",cdk.requiredValidator)(properties.ipAddresses)),errors.collect(cdk.propertyValidator("ipAddresses",cdk.listValidator(CfnResolverEndpoint_IpAddressRequestPropertyValidator))(properties.ipAddresses)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("securityGroupIds",cdk.requiredValidator)(properties.securityGroupIds)),errors.collect(cdk.propertyValidator("securityGroupIds",cdk.listValidator(cdk.validateString))(properties.securityGroupIds)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnResolverEndpointProps"')}function cfnResolverEndpointPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnResolverEndpointPropsValidator(properties).assertSuccess(),{Direction:cdk.stringToCloudFormation(properties.direction),IpAddresses:cdk.listMapper(cfnResolverEndpointIpAddressRequestPropertyToCloudFormation)(properties.ipAddresses),SecurityGroupIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.securityGroupIds),Name:cdk.stringToCloudFormation(properties.name),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnResolverEndpointPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("direction","Direction",cfn_parse.FromCloudFormation.getString(properties.Direction)),ret.addPropertyResult("ipAddresses","IpAddresses",cfn_parse.FromCloudFormation.getArray(CfnResolverEndpointIpAddressRequestPropertyFromCloudFormation)(properties.IpAddresses)),ret.addPropertyResult("securityGroupIds","SecurityGroupIds",cfn_parse.FromCloudFormation.getStringArray(properties.SecurityGroupIds)),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnResolverEndpoint extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnResolverEndpoint.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_route53resolver_CfnResolverEndpointProps(props),cdk.requireProperty(props,"direction",this),cdk.requireProperty(props,"ipAddresses",this),cdk.requireProperty(props,"securityGroupIds",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn")),this.attrDirection=cdk.Token.asString(this.getAtt("Direction")),this.attrHostVpcId=cdk.Token.asString(this.getAtt("HostVPCId")),this.attrIpAddressCount=cdk.Token.asString(this.getAtt("IpAddressCount")),this.attrName=cdk.Token.asString(this.getAtt("Name")),this.attrResolverEndpointId=cdk.Token.asString(this.getAtt("ResolverEndpointId")),this.direction=props.direction,this.ipAddresses=props.ipAddresses,this.securityGroupIds=props.securityGroupIds,this.name=props.name,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Route53Resolver::ResolverEndpoint",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnResolverEndpointPropsFromCloudFormation(resourceProperties),ret=new CfnResolverEndpoint(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnResolverEndpoint.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{direction:this.direction,ipAddresses:this.ipAddresses,securityGroupIds:this.securityGroupIds,name:this.name,tags:this.tags.renderTags()}}renderProperties(props){return cfnResolverEndpointPropsToCloudFormation(props)}}exports.CfnResolverEndpoint=CfnResolverEndpoint,_f=JSII_RTTI_SYMBOL_1,CfnResolverEndpoint[_f]={fqn:"aws-cdk-lib.aws_route53resolver.CfnResolverEndpoint",version:"2.20.0"},CfnResolverEndpoint.CFN_RESOURCE_TYPE_NAME="AWS::Route53Resolver::ResolverEndpoint";function CfnResolverEndpoint_IpAddressRequestPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("ip",cdk.validateString)(properties.ip)),errors.collect(cdk.propertyValidator("subnetId",cdk.requiredValidator)(properties.subnetId)),errors.collect(cdk.propertyValidator("subnetId",cdk.validateString)(properties.subnetId)),errors.wrap('supplied properties not correct for "IpAddressRequestProperty"')}function cfnResolverEndpointIpAddressRequestPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnResolverEndpoint_IpAddressRequestPropertyValidator(properties).assertSuccess(),{Ip:cdk.stringToCloudFormation(properties.ip),SubnetId:cdk.stringToCloudFormation(properties.subnetId)}):properties}function CfnResolverEndpointIpAddressRequestPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("ip","Ip",properties.Ip!=null?cfn_parse.FromCloudFormation.getString(properties.Ip):void 0),ret.addPropertyResult("subnetId","SubnetId",cfn_parse.FromCloudFormation.getString(properties.SubnetId)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnResolverQueryLoggingConfigPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("destinationArn",cdk.validateString)(properties.destinationArn)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.wrap('supplied properties not correct for "CfnResolverQueryLoggingConfigProps"')}function cfnResolverQueryLoggingConfigPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnResolverQueryLoggingConfigPropsValidator(properties).assertSuccess(),{DestinationArn:cdk.stringToCloudFormation(properties.destinationArn),Name:cdk.stringToCloudFormation(properties.name)}):properties}function CfnResolverQueryLoggingConfigPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("destinationArn","DestinationArn",properties.DestinationArn!=null?cfn_parse.FromCloudFormation.getString(properties.DestinationArn):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnResolverQueryLoggingConfig extends cdk.CfnResource{constructor(scope,id,props={}){super(scope,id,{type:CfnResolverQueryLoggingConfig.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_route53resolver_CfnResolverQueryLoggingConfigProps(props),this.attrArn=cdk.Token.asString(this.getAtt("Arn")),this.attrAssociationCount=cdk.Token.asNumber(this.getAtt("AssociationCount")),this.attrCreationTime=cdk.Token.asString(this.getAtt("CreationTime")),this.attrCreatorRequestId=cdk.Token.asString(this.getAtt("CreatorRequestId")),this.attrId=cdk.Token.asString(this.getAtt("Id")),this.attrOwnerId=cdk.Token.asString(this.getAtt("OwnerId")),this.attrShareStatus=cdk.Token.asString(this.getAtt("ShareStatus")),this.attrStatus=cdk.Token.asString(this.getAtt("Status")),this.destinationArn=props.destinationArn,this.name=props.name}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnResolverQueryLoggingConfigPropsFromCloudFormation(resourceProperties),ret=new CfnResolverQueryLoggingConfig(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnResolverQueryLoggingConfig.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{destinationArn:this.destinationArn,name:this.name}}renderProperties(props){return cfnResolverQueryLoggingConfigPropsToCloudFormation(props)}}exports.CfnResolverQueryLoggingConfig=CfnResolverQueryLoggingConfig,_g=JSII_RTTI_SYMBOL_1,CfnResolverQueryLoggingConfig[_g]={fqn:"aws-cdk-lib.aws_route53resolver.CfnResolverQueryLoggingConfig",version:"2.20.0"},CfnResolverQueryLoggingConfig.CFN_RESOURCE_TYPE_NAME="AWS::Route53Resolver::ResolverQueryLoggingConfig";function CfnResolverQueryLoggingConfigAssociationPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("resolverQueryLogConfigId",cdk.validateString)(properties.resolverQueryLogConfigId)),errors.collect(cdk.propertyValidator("resourceId",cdk.validateString)(properties.resourceId)),errors.wrap('supplied properties not correct for "CfnResolverQueryLoggingConfigAssociationProps"')}function cfnResolverQueryLoggingConfigAssociationPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnResolverQueryLoggingConfigAssociationPropsValidator(properties).assertSuccess(),{ResolverQueryLogConfigId:cdk.stringToCloudFormation(properties.resolverQueryLogConfigId),ResourceId:cdk.stringToCloudFormation(properties.resourceId)}):properties}function CfnResolverQueryLoggingConfigAssociationPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("resolverQueryLogConfigId","ResolverQueryLogConfigId",properties.ResolverQueryLogConfigId!=null?cfn_parse.FromCloudFormation.getString(properties.ResolverQueryLogConfigId):void 0),ret.addPropertyResult("resourceId","ResourceId",properties.ResourceId!=null?cfn_parse.FromCloudFormation.getString(properties.ResourceId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnResolverQueryLoggingConfigAssociation extends cdk.CfnResource{constructor(scope,id,props={}){super(scope,id,{type:CfnResolverQueryLoggingConfigAssociation.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_route53resolver_CfnResolverQueryLoggingConfigAssociationProps(props),this.attrCreationTime=cdk.Token.asString(this.getAtt("CreationTime")),this.attrError=cdk.Token.asString(this.getAtt("Error")),this.attrErrorMessage=cdk.Token.asString(this.getAtt("ErrorMessage")),this.attrId=cdk.Token.asString(this.getAtt("Id")),this.attrStatus=cdk.Token.asString(this.getAtt("Status")),this.resolverQueryLogConfigId=props.resolverQueryLogConfigId,this.resourceId=props.resourceId}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnResolverQueryLoggingConfigAssociationPropsFromCloudFormation(resourceProperties),ret=new CfnResolverQueryLoggingConfigAssociation(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnResolverQueryLoggingConfigAssociation.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{resolverQueryLogConfigId:this.resolverQueryLogConfigId,resourceId:this.resourceId}}renderProperties(props){return cfnResolverQueryLoggingConfigAssociationPropsToCloudFormation(props)}}exports.CfnResolverQueryLoggingConfigAssociation=CfnResolverQueryLoggingConfigAssociation,_h=JSII_RTTI_SYMBOL_1,CfnResolverQueryLoggingConfigAssociation[_h]={fqn:"aws-cdk-lib.aws_route53resolver.CfnResolverQueryLoggingConfigAssociation",version:"2.20.0"},CfnResolverQueryLoggingConfigAssociation.CFN_RESOURCE_TYPE_NAME="AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation";function CfnResolverRulePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("domainName",cdk.requiredValidator)(properties.domainName)),errors.collect(cdk.propertyValidator("domainName",cdk.validateString)(properties.domainName)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("resolverEndpointId",cdk.validateString)(properties.resolverEndpointId)),errors.collect(cdk.propertyValidator("ruleType",cdk.requiredValidator)(properties.ruleType)),errors.collect(cdk.propertyValidator("ruleType",cdk.validateString)(properties.ruleType)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("targetIps",cdk.listValidator(CfnResolverRule_TargetAddressPropertyValidator))(properties.targetIps)),errors.wrap('supplied properties not correct for "CfnResolverRuleProps"')}function cfnResolverRulePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnResolverRulePropsValidator(properties).assertSuccess(),{DomainName:cdk.stringToCloudFormation(properties.domainName),RuleType:cdk.stringToCloudFormation(properties.ruleType),Name:cdk.stringToCloudFormation(properties.name),ResolverEndpointId:cdk.stringToCloudFormation(properties.resolverEndpointId),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),TargetIps:cdk.listMapper(cfnResolverRuleTargetAddressPropertyToCloudFormation)(properties.targetIps)}):properties}function CfnResolverRulePropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("domainName","DomainName",cfn_parse.FromCloudFormation.getString(properties.DomainName)),ret.addPropertyResult("ruleType","RuleType",cfn_parse.FromCloudFormation.getString(properties.RuleType)),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("resolverEndpointId","ResolverEndpointId",properties.ResolverEndpointId!=null?cfn_parse.FromCloudFormation.getString(properties.ResolverEndpointId):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("targetIps","TargetIps",properties.TargetIps!=null?cfn_parse.FromCloudFormation.getArray(CfnResolverRuleTargetAddressPropertyFromCloudFormation)(properties.TargetIps):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnResolverRule extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnResolverRule.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_route53resolver_CfnResolverRuleProps(props),cdk.requireProperty(props,"domainName",this),cdk.requireProperty(props,"ruleType",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn")),this.attrDomainName=cdk.Token.asString(this.getAtt("DomainName")),this.attrName=cdk.Token.asString(this.getAtt("Name")),this.attrResolverEndpointId=cdk.Token.asString(this.getAtt("ResolverEndpointId")),this.attrResolverRuleId=cdk.Token.asString(this.getAtt("ResolverRuleId")),this.attrTargetIps=this.getAtt("TargetIps"),this.domainName=props.domainName,this.ruleType=props.ruleType,this.name=props.name,this.resolverEndpointId=props.resolverEndpointId,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Route53Resolver::ResolverRule",props.tags,{tagPropertyName:"tags"}),this.targetIps=props.targetIps}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnResolverRulePropsFromCloudFormation(resourceProperties),ret=new CfnResolverRule(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnResolverRule.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{domainName:this.domainName,ruleType:this.ruleType,name:this.name,resolverEndpointId:this.resolverEndpointId,tags:this.tags.renderTags(),targetIps:this.targetIps}}renderProperties(props){return cfnResolverRulePropsToCloudFormation(props)}}exports.CfnResolverRule=CfnResolverRule,_j=JSII_RTTI_SYMBOL_1,CfnResolverRule[_j]={fqn:"aws-cdk-lib.aws_route53resolver.CfnResolverRule",version:"2.20.0"},CfnResolverRule.CFN_RESOURCE_TYPE_NAME="AWS::Route53Resolver::ResolverRule";function CfnResolverRule_TargetAddressPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("ip",cdk.requiredValidator)(properties.ip)),errors.collect(cdk.propertyValidator("ip",cdk.validateString)(properties.ip)),errors.collect(cdk.propertyValidator("port",cdk.validateString)(properties.port)),errors.wrap('supplied properties not correct for "TargetAddressProperty"')}function cfnResolverRuleTargetAddressPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnResolverRule_TargetAddressPropertyValidator(properties).assertSuccess(),{Ip:cdk.stringToCloudFormation(properties.ip),Port:cdk.stringToCloudFormation(properties.port)}):properties}function CfnResolverRuleTargetAddressPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("ip","Ip",cfn_parse.FromCloudFormation.getString(properties.Ip)),ret.addPropertyResult("port","Port",properties.Port!=null?cfn_parse.FromCloudFormation.getString(properties.Port):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnResolverRuleAssociationPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("resolverRuleId",cdk.requiredValidator)(properties.resolverRuleId)),errors.collect(cdk.propertyValidator("resolverRuleId",cdk.validateString)(properties.resolverRuleId)),errors.collect(cdk.propertyValidator("vpcId",cdk.requiredValidator)(properties.vpcId)),errors.collect(cdk.propertyValidator("vpcId",cdk.validateString)(properties.vpcId)),errors.wrap('supplied properties not correct for "CfnResolverRuleAssociationProps"')}function cfnResolverRuleAssociationPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnResolverRuleAssociationPropsValidator(properties).assertSuccess(),{ResolverRuleId:cdk.stringToCloudFormation(properties.resolverRuleId),VPCId:cdk.stringToCloudFormation(properties.vpcId),Name:cdk.stringToCloudFormation(properties.name)}):properties}function CfnResolverRuleAssociationPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("resolverRuleId","ResolverRuleId",cfn_parse.FromCloudFormation.getString(properties.ResolverRuleId)),ret.addPropertyResult("vpcId","VPCId",cfn_parse.FromCloudFormation.getString(properties.VPCId)),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnResolverRuleAssociation extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnResolverRuleAssociation.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_route53resolver_CfnResolverRuleAssociationProps(props),cdk.requireProperty(props,"resolverRuleId",this),cdk.requireProperty(props,"vpcId",this),this.attrName=cdk.Token.asString(this.getAtt("Name")),this.attrResolverRuleAssociationId=cdk.Token.asString(this.getAtt("ResolverRuleAssociationId")),this.attrResolverRuleId=cdk.Token.asString(this.getAtt("ResolverRuleId")),this.attrVpcId=cdk.Token.asString(this.getAtt("VPCId")),this.resolverRuleId=props.resolverRuleId,this.vpcId=props.vpcId,this.name=props.name}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnResolverRuleAssociationPropsFromCloudFormation(resourceProperties),ret=new CfnResolverRuleAssociation(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnResolverRuleAssociation.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{resolverRuleId:this.resolverRuleId,vpcId:this.vpcId,name:this.name}}renderProperties(props){return cfnResolverRuleAssociationPropsToCloudFormation(props)}}exports.CfnResolverRuleAssociation=CfnResolverRuleAssociation,_k=JSII_RTTI_SYMBOL_1,CfnResolverRuleAssociation[_k]={fqn:"aws-cdk-lib.aws_route53resolver.CfnResolverRuleAssociation",version:"2.20.0"},CfnResolverRuleAssociation.CFN_RESOURCE_TYPE_NAME="AWS::Route53Resolver::ResolverRuleAssociation";
//# sourceMappingURL=route53resolver.generated.js.map
