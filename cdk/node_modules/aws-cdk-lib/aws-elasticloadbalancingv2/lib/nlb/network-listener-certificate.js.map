{
  "version": 3,
  "sources": ["network-listener-certificate.ts"],
  "sourcesContent": ["import { Construct } from 'constructs';\nimport { CfnListenerCertificate } from '../elasticloadbalancingv2.generated';\nimport { IListenerCertificate } from '../shared/listener-certificate';\nimport { INetworkListener } from './network-listener';\n\n/**\n * Properties for adding a set of certificates to a listener\n */\nexport interface NetworkListenerCertificateProps {\n  /**\n   * The listener to attach the rule to\n   */\n  readonly listener: INetworkListener;\n\n  /**\n   * Certificates to attach\n   *\n   * Duplicates are not allowed.\n   */\n  readonly certificates: IListenerCertificate[];\n}\n\n/**\n * Add certificates to a listener\n */\nexport class NetworkListenerCertificate extends Construct {\n  constructor(scope: Construct, id: string, props: NetworkListenerCertificateProps) {\n    super(scope, id);\n\n    const certificates = [\n      ...(props.certificates || []).map(c => ({ certificateArn: c.certificateArn })),\n    ];\n\n    new CfnListenerCertificate(this, 'Resource', {\n      listenerArn: props.listener.listenerArn,\n      certificates,\n    });\n  }\n}\n"],
  "mappings": "8GAAA,KAAA,cAAA,QAAA,YAAA,EACA,mCAAA,QAAA,qCAAA,EAwBA,MAAa,kCAAmC,cAAA,SAAS,CACvD,YAAY,MAAkB,GAAY,MAAsC,CAC9E,MAAM,MAAO,EAAE,EAEf,KAAM,cAAe,CACnB,GAAI,OAAM,cAAgB,CAAA,GAAI,IAAI,GAAM,EAAE,eAAgB,EAAE,cAAc,EAAG,GAG/E,GAAI,oCAAA,uBAAuB,KAAM,WAAY,CAC3C,YAAa,MAAM,SAAS,YAC5B,aACD,GAXL,QAAA,2BAAA",
  "names": []
}
