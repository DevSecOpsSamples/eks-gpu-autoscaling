{
  "version": 3,
  "sources": ["imported.ts"],
  "sourcesContent": ["import * as cdk from '../../../core';\nimport { Construct, DependencyGroup, IDependable } from 'constructs';\nimport { ITargetGroup, TargetGroupImportProps } from './base-target-group';\n\n/**\n * Base internal class for existing target groups\n */\nexport abstract class ImportedTargetGroupBase extends Construct implements ITargetGroup {\n  /**\n   * ARN of the target group\n   */\n  public readonly targetGroupArn: string;\n\n  /**\n   * The name of the target group\n   */\n  public readonly targetGroupName: string;\n\n  /**\n   * A token representing a list of ARNs of the load balancers that route traffic to this target group\n   */\n  public readonly loadBalancerArns: string;\n\n  /**\n   * Return an object to depend on the listeners added to this target group\n   */\n  public readonly loadBalancerAttached: IDependable = new DependencyGroup();\n\n  constructor(scope: Construct, id: string, props: TargetGroupImportProps) {\n    super(scope, id);\n\n    this.targetGroupArn = props.targetGroupArn;\n    this.targetGroupName = cdk.Stack.of(scope).splitArn(props.targetGroupArn, cdk.ArnFormat.SLASH_RESOURCE_SLASH_RESOURCE_NAME).resourceName!.split('/')[0];\n    this.loadBalancerArns = props.loadBalancerArns || cdk.Aws.NO_VALUE;\n  }\n}\n"],
  "mappings": "2GAAA,KAAA,KAAA,QAAA,eAAA,EACA,aAAA,QAAA,YAAA,EAMA,MAAsB,+BAAgC,cAAA,SAAS,CAqB7D,YAAY,MAAkB,GAAY,MAA6B,CACrE,MAAM,MAAO,EAAE,EAHD,KAAA,qBAAoC,GAAI,cAAA,gBAKtD,KAAK,eAAiB,MAAM,eAC5B,KAAK,gBAAkB,IAAI,MAAM,GAAG,KAAK,EAAE,SAAS,MAAM,eAAgB,IAAI,UAAU,kCAAkC,EAAE,aAAc,MAAM,GAAG,EAAE,GACrJ,KAAK,iBAAmB,MAAM,kBAAoB,IAAI,IAAI,UA1B9D,QAAA,wBAAA",
  "names": []
}
