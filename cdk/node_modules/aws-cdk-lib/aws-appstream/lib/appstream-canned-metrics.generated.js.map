{
  "version": 3,
  "sources": ["appstream-canned-metrics.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nexport class AppStreamMetrics {\n  public static capacityUtilizationAverage(dimensions: { Fleet: string }) {\n    return {\n      namespace: 'AWS/AppStream',\n      metricName: 'CapacityUtilization',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static insufficientCapacityErrorSum(dimensions: { Fleet: string }) {\n    return {\n      namespace: 'AWS/AppStream',\n      metricName: 'InsufficientCapacityError',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static actualCapacityAverage(dimensions: { Fleet: string }) {\n    return {\n      namespace: 'AWS/AppStream',\n      metricName: 'ActualCapacity',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static availableCapacityAverage(dimensions: { Fleet: string }) {\n    return {\n      namespace: 'AWS/AppStream',\n      metricName: 'AvailableCapacity',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static desiredCapacityAverage(dimensions: { Fleet: string }) {\n    return {\n      namespace: 'AWS/AppStream',\n      metricName: 'DesiredCapacity',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static inUseCapacityAverage(dimensions: { Fleet: string }) {\n    return {\n      namespace: 'AWS/AppStream',\n      metricName: 'InUseCapacity',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static pendingCapacityAverage(dimensions: { Fleet: string }) {\n    return {\n      namespace: 'AWS/AppStream',\n      metricName: 'PendingCapacity',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static runningCapacityAverage(dimensions: { Fleet: string }) {\n    return {\n      namespace: 'AWS/AppStream',\n      metricName: 'RunningCapacity',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n}\n"],
  "mappings": "oGAIA,MAAa,gBAAgB,OACb,4BAA2B,WAA6B,CACpE,MAAO,CACL,UAAW,gBACX,WAAY,sBACZ,cAAe,WACf,UAAW,iBAGD,8BAA6B,WAA6B,CACtE,MAAO,CACL,UAAW,gBACX,WAAY,4BACZ,cAAe,WACf,UAAW,aAGD,uBAAsB,WAA6B,CAC/D,MAAO,CACL,UAAW,gBACX,WAAY,iBACZ,cAAe,WACf,UAAW,iBAGD,0BAAyB,WAA6B,CAClE,MAAO,CACL,UAAW,gBACX,WAAY,oBACZ,cAAe,WACf,UAAW,iBAGD,wBAAuB,WAA6B,CAChE,MAAO,CACL,UAAW,gBACX,WAAY,kBACZ,cAAe,WACf,UAAW,iBAGD,sBAAqB,WAA6B,CAC9D,MAAO,CACL,UAAW,gBACX,WAAY,gBACZ,cAAe,WACf,UAAW,iBAGD,wBAAuB,WAA6B,CAChE,MAAO,CACL,UAAW,gBACX,WAAY,kBACZ,cAAe,WACf,UAAW,iBAGD,wBAAuB,WAA6B,CAChE,MAAO,CACL,UAAW,gBACX,WAAY,kBACZ,cAAe,WACf,UAAW,YA9DjB,QAAA,iBAAA",
  "names": []
}
