{
  "version": 3,
  "sources": ["stackset-action.ts"],
  "sourcesContent": ["import * as codepipeline from '../../../aws-codepipeline';\nimport * as cdk from '../../../core';\nimport { Action } from '../action';\nimport { validatePercentage } from '../common';\nimport { parseCapabilities, SingletonPolicy } from './private/singleton-policy';\nimport { CommonCloudFormationStackSetOptions, StackInstances, StackSetDeploymentModel, StackSetParameters, StackSetTemplate } from './stackset-types';\n\n// keep this import separate from other imports to reduce chance for merge conflicts with v2-main\n// eslint-disable-next-line no-duplicate-imports, import/order\nimport { Construct } from 'constructs';\n\n/**\n * Properties for the CloudFormationDeployStackSetAction\n */\nexport interface CloudFormationDeployStackSetActionProps extends codepipeline.CommonAwsActionProps, CommonCloudFormationStackSetOptions {\n  /**\n   * The name to associate with the stack set. This name must be unique in the Region where it is created.\n   *\n   * The name may only contain alphanumeric and hyphen characters. It must begin with an alphabetic character and be 128 characters or fewer.\n   */\n  readonly stackSetName: string;\n\n  /**\n   * The location of the template that defines the resources in the stack set.\n   * This must point to a template with a maximum size of 460,800 bytes.\n   *\n   * Enter the path to the source artifact name and template file.\n   */\n  readonly template: StackSetTemplate;\n\n  /**\n   * A description of the stack set. You can use this to describe the stack set\u2019s purpose or other relevant information.\n   *\n   * @default - no description\n   */\n  readonly description?: string;\n\n  /**\n   * Specify where to create or update Stack Instances\n   *\n   * You can specify either AWS Accounts Ids or AWS Organizations Organizational Units.\n   *\n   * @default - don't create or update any Stack Instances\n   */\n  readonly stackInstances?: StackInstances;\n\n  /**\n   * Determines how IAM roles are created and managed.\n   *\n   * The choices are:\n   *\n   * - Self Managed: you create IAM roles with the required permissions\n   *   in the administration account and all target accounts.\n   * - Service Managed: only available if the account and target accounts\n   *   are part of an AWS Organization. The necessary roles will be created\n   *   for you.\n   *\n   * If you want to deploy to all accounts that are a member of AWS\n   * Organizations Organizational Units (OUs), you must select Service Managed\n   * permissions.\n   *\n   * Note: This parameter can only be changed when no stack instances exist in\n   * the stack set.\n   *\n   * @default StackSetDeploymentModel.selfManaged()\n   */\n  readonly deploymentModel?: StackSetDeploymentModel;\n\n  /**\n   * The template parameters for your stack set\n   *\n   * These parameters are shared between all instances of the stack set.\n   *\n   * @default - no parameters will be used\n   */\n  readonly parameters?: StackSetParameters;\n\n  /**\n   * Indicates that the template can create and update resources, depending on the types of resources in the template.\n   *\n   * You must use this property if you have IAM resources in your stack template or you create a stack directly from a template containing macros.\n   *\n   * @default - the StackSet will have no IAM capabilities\n   */\n  readonly cfnCapabilities?: cdk.CfnCapabilities[];\n}\n\n/**\n * CodePipeline action to deploy a stackset.\n *\n * CodePipeline offers the ability to perform AWS CloudFormation StackSets\n * operations as part of your CI/CD process. You use a stack set to create\n * stacks in AWS accounts across AWS Regions by using a single AWS\n * CloudFormation template. All the resources included in each stack are defined\n * by the stack set\u2019s AWS CloudFormation template. When you create the stack\n * set, you specify the template to use, as well as any parameters and\n * capabilities that the template requires.\n *\n * For more information about concepts for AWS CloudFormation StackSets, see\n * [StackSets\n * concepts](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html)\n * in the AWS CloudFormation User Guide.\n *\n * If you use this action to make an update that includes adding stack\n * instances, the new instances are deployed first and the update is completed\n * last. The new instances first receive the old version, and then the update is\n * applied to all instances.\n *\n * As a best practice, you should construct your pipeline so that the stack set\n * is created and initially deploys to a subset or a single instance. After you\n * test your deployment and view the generated stack set, then add the\n * CloudFormationStackInstances action so that the remaining instances are\n * created and updated.\n */\nexport class CloudFormationDeployStackSetAction extends Action {\n  private readonly props: CloudFormationDeployStackSetActionProps;\n  private readonly deploymentModel: StackSetDeploymentModel;\n\n  constructor(props: CloudFormationDeployStackSetActionProps) {\n    super({\n      ...props,\n      region: props.stackSetRegion,\n      provider: 'CloudFormationStackSet',\n      category: codepipeline.ActionCategory.DEPLOY,\n      artifactBounds: {\n        minInputs: 1,\n        maxInputs: 3,\n        minOutputs: 0,\n        maxOutputs: 0,\n      },\n      inputs: [\n        ...props.template._artifactsReferenced ?? [],\n        ...props.parameters?._artifactsReferenced ?? [],\n        ...props.stackInstances?._artifactsReferenced ?? [],\n      ],\n    });\n\n    this.props = props;\n    this.deploymentModel = props.deploymentModel ?? StackSetDeploymentModel.selfManaged();\n\n    validatePercentage('failureTolerancePercentage', props.failureTolerancePercentage);\n    validatePercentage('maxAccountConcurrencyPercentage', props.maxAccountConcurrencyPercentage);\n  }\n\n  protected bound(scope: Construct, _stage: codepipeline.IStage, options: codepipeline.ActionBindOptions): codepipeline.ActionConfig {\n    const singletonPolicy = SingletonPolicy.forRole(options.role);\n    singletonPolicy.grantCreateUpdateStackSet(this.props);\n\n    const instancesResult = this.props.stackInstances?._bind(scope);\n    const permissionModelBind = this.deploymentModel?._bind(scope);\n\n    for (const role of permissionModelBind?.passedRoles ?? []) {\n      singletonPolicy.grantPassRole(role);\n    }\n\n    if ((this.actionProperties.inputs || []).length > 0) {\n      options.bucket.grantRead(singletonPolicy);\n    }\n\n    return {\n      configuration: {\n        StackSetName: this.props.stackSetName,\n        Description: this.props.description,\n        TemplatePath: this.props.template._render(),\n        Parameters: this.props.parameters?._render(),\n        Capabilities: parseCapabilities(this.props.cfnCapabilities),\n        FailureTolerancePercentage: this.props.failureTolerancePercentage,\n        MaxConcurrentPercentage: this.props.maxAccountConcurrencyPercentage,\n        ...instancesResult?.stackSetConfiguration,\n        ...permissionModelBind?.stackSetConfiguration,\n      },\n    };\n  }\n}\n"],
  "mappings": "4OAAA,aAAA,QAAA,2BAAA,EAEA,SAAA,QAAA,WAAA,EACA,SAAA,QAAA,WAAA,EACA,mBAAA,QAAA,4BAAA,EACA,iBAAA,QAAA,kBAAA,EA6GA,MAAa,0CAA2C,UAAA,MAAM,CAI5D,YAAY,MAA8C,uBACxD,MAAM,IACD,MACH,OAAQ,MAAM,eACd,SAAU,yBACV,SAAU,aAAa,eAAe,OACtC,eAAgB,CACd,UAAW,EACX,UAAW,EACX,WAAY,EACZ,WAAY,GAEd,OAAQ,CACN,GAAA,IAAG,MAAM,SAAS,wBAAoB,MAAA,KAAA,OAAA,GAAI,CAAA,EAC1C,GAAA,IAAA,IAAG,MAAM,cAAU,MAAA,KAAA,OAAA,OAAA,GAAE,wBAAoB,MAAA,KAAA,OAAA,GAAI,CAAA,EAC7C,GAAA,IAAA,IAAG,MAAM,kBAAc,MAAA,KAAA,OAAA,OAAA,GAAE,wBAAoB,MAAA,KAAA,OAAA,GAAI,CAAA,GAEpD,8GAED,KAAK,MAAQ,MACb,KAAK,gBAAe,IAAG,MAAM,mBAAe,MAAA,KAAA,OAAA,GAAI,iBAAA,wBAAwB,YAAW,EAEnF,SAAA,mBAAmB,6BAA8B,MAAM,0BAA0B,EACjF,SAAA,mBAAmB,kCAAmC,MAAM,+BAA+B,EAGnF,MAAM,MAAkB,OAA6B,QAAuC,qKACpG,KAAM,iBAAkB,mBAAA,gBAAgB,QAAQ,QAAQ,IAAI,EAC5D,gBAAgB,0BAA0B,KAAK,KAAK,EAEpD,KAAM,iBAAe,IAAG,KAAK,MAAM,kBAAc,MAAA,KAAA,OAAA,OAAA,GAAE,MAAM,KAAK,EACxD,oBAAmB,IAAG,KAAK,mBAAe,MAAA,KAAA,OAAA,OAAA,GAAE,MAAM,KAAK,EAE7D,SAAW,QAAI,IAAI,qBAAmB,KAAA,OAAnB,oBAAqB,eAAW,MAAA,KAAA,OAAA,GAAI,CAAA,EACrD,gBAAgB,cAAc,IAAI,EAGpC,MAAK,MAAK,iBAAiB,QAAU,CAAA,GAAI,OAAS,GAChD,QAAQ,OAAO,UAAU,eAAe,EAGnC,CACL,cAAe,CACb,aAAc,KAAK,MAAM,aACzB,YAAa,KAAK,MAAM,YACxB,aAAc,KAAK,MAAM,SAAS,QAAO,EACzC,WAAU,IAAE,KAAK,MAAM,cAAU,MAAA,KAAA,OAAA,OAAA,GAAE,QAAO,EAC1C,aAAc,mBAAA,kBAAkB,KAAK,MAAM,eAAe,EAC1D,2BAA4B,KAAK,MAAM,2BACvC,wBAAyB,KAAK,MAAM,mCACjC,iBAAe,KAAA,OAAf,gBAAiB,yBACjB,qBAAmB,KAAA,OAAnB,oBAAqB,yBAvDhC,QAAA,mCAAA",
  "names": []
}
