{
  "version": 3,
  "sources": ["stackinstances-action.ts"],
  "sourcesContent": ["import * as codepipeline from '../../../aws-codepipeline';\nimport { Action } from '../action';\nimport { validatePercentage } from '../common';\nimport { SingletonPolicy } from './private/singleton-policy';\nimport { CommonCloudFormationStackSetOptions, StackInstances, StackSetParameters } from './stackset-types';\n\n// keep this import separate from other imports to reduce chance for merge conflicts with v2-main\n// eslint-disable-next-line no-duplicate-imports, import/order\nimport { Construct } from 'constructs';\n\n/**\n * Properties for the CloudFormationDeployStackInstancesAction\n */\nexport interface CloudFormationDeployStackInstancesActionProps extends codepipeline.CommonAwsActionProps, CommonCloudFormationStackSetOptions {\n  /**\n   * The name of the StackSet we are adding instances to\n   */\n  readonly stackSetName: string;\n\n  /**\n   * Specify where to create or update Stack Instances\n   *\n   * You can specify either AWS Accounts Ids or AWS Organizations Organizational Units.\n   */\n  readonly stackInstances: StackInstances;\n\n  /**\n   * Parameter values that only apply to the current Stack Instances\n   *\n   * These parameters are shared between all instances added by this action.\n   *\n   * @default - no parameters will be overridden\n   */\n  readonly parameterOverrides?: StackSetParameters;\n}\n\n/**\n * CodePipeline action to create/update Stack Instances of a StackSet\n *\n * After the initial creation of a stack set, you can add new stack instances by\n * using CloudFormationStackInstances. Template parameter values can be\n * overridden at the stack instance level during create or update stack set\n * instance operations.\n *\n * Each stack set has one template and set of template parameters. When you\n * update the template or template parameters, you update them for the entire\n * set. Then all instance statuses are set to OUTDATED until the changes are\n * deployed to that instance.\n */\nexport class CloudFormationDeployStackInstancesAction extends Action {\n  private readonly props: CloudFormationDeployStackInstancesActionProps;\n\n  constructor(props: CloudFormationDeployStackInstancesActionProps) {\n    super({\n      ...props,\n      region: props.stackSetRegion,\n      provider: 'CloudFormationStackInstances',\n      category: codepipeline.ActionCategory.DEPLOY,\n      artifactBounds: {\n        minInputs: 0,\n        maxInputs: 3,\n        minOutputs: 0,\n        maxOutputs: 0,\n      },\n      inputs: [\n        ...props.parameterOverrides?._artifactsReferenced ?? [],\n        ...props.stackInstances?._artifactsReferenced ?? [],\n      ],\n    });\n\n    this.props = props;\n\n    validatePercentage('failureTolerancePercentage', props.failureTolerancePercentage);\n    validatePercentage('maxAccountConcurrencyPercentage', props.maxAccountConcurrencyPercentage);\n  }\n\n  protected bound(scope: Construct, _stage: codepipeline.IStage, options: codepipeline.ActionBindOptions): codepipeline.ActionConfig {\n    const singletonPolicy = SingletonPolicy.forRole(options.role);\n    singletonPolicy.grantCreateUpdateStackSet(this.props);\n\n    const instancesResult = this.props.stackInstances?._bind(scope);\n\n    if ((this.actionProperties.inputs || []).length > 0) {\n      options.bucket.grantRead(singletonPolicy);\n    }\n\n    return {\n      configuration: {\n        StackSetName: this.props.stackSetName,\n        ParameterOverrides: this.props.parameterOverrides?._render(),\n        FailureTolerancePercentage: this.props.failureTolerancePercentage,\n        MaxConcurrentPercentage: this.props.maxAccountConcurrencyPercentage,\n        ...instancesResult?.stackSetConfiguration,\n      },\n    };\n  }\n}\n"],
  "mappings": "kPAAA,aAAA,QAAA,2BAAA,EACA,SAAA,QAAA,WAAA,EACA,SAAA,QAAA,WAAA,EACA,mBAAA,QAAA,4BAAA,EA8CA,MAAa,gDAAiD,UAAA,MAAM,CAGlE,YAAY,MAAoD,iBAC9D,MAAM,IACD,MACH,OAAQ,MAAM,eACd,SAAU,+BACV,SAAU,aAAa,eAAe,OACtC,eAAgB,CACd,UAAW,EACX,UAAW,EACX,WAAY,EACZ,WAAY,GAEd,OAAQ,CACN,GAAA,IAAA,IAAG,MAAM,sBAAkB,MAAA,KAAA,OAAA,OAAA,GAAE,wBAAoB,MAAA,KAAA,OAAA,GAAI,CAAA,EACrD,GAAA,IAAA,IAAG,MAAM,kBAAc,MAAA,KAAA,OAAA,OAAA,GAAE,wBAAoB,MAAA,KAAA,OAAA,GAAI,CAAA,GAEpD,oHAED,KAAK,MAAQ,MAEb,SAAA,mBAAmB,6BAA8B,MAAM,0BAA0B,EACjF,SAAA,mBAAmB,kCAAmC,MAAM,+BAA+B,EAGnF,MAAM,MAAkB,OAA6B,QAAuC,+JACpG,KAAM,iBAAkB,mBAAA,gBAAgB,QAAQ,QAAQ,IAAI,EAC5D,gBAAgB,0BAA0B,KAAK,KAAK,EAEpD,KAAM,iBAAe,IAAG,KAAK,MAAM,kBAAc,MAAA,KAAA,OAAA,OAAA,GAAE,MAAM,KAAK,EAE9D,MAAK,MAAK,iBAAiB,QAAU,CAAA,GAAI,OAAS,GAChD,QAAQ,OAAO,UAAU,eAAe,EAGnC,CACL,cAAe,CACb,aAAc,KAAK,MAAM,aACzB,mBAAkB,IAAE,KAAK,MAAM,sBAAkB,MAAA,KAAA,OAAA,OAAA,GAAE,QAAO,EAC1D,2BAA4B,KAAK,MAAM,2BACvC,wBAAyB,KAAK,MAAM,mCACjC,iBAAe,KAAA,OAAf,gBAAiB,yBA3C5B,QAAA,yCAAA",
  "names": []
}
