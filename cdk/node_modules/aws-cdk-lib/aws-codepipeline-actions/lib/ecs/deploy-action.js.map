{
  "version": 3,
  "sources": ["deploy-action.ts"],
  "sourcesContent": ["import * as codepipeline from '../../../aws-codepipeline';\nimport * as ecs from '../../../aws-ecs';\nimport * as iam from '../../../aws-iam';\nimport { Duration } from '../../../core';\nimport { Action } from '../action';\nimport { deployArtifactBounds } from '../common';\n\n// keep this import separate from other imports to reduce chance for merge conflicts with v2-main\n// eslint-disable-next-line no-duplicate-imports, import/order\nimport { Construct } from 'constructs';\n\n/**\n * Construction properties of {@link EcsDeployAction}.\n */\nexport interface EcsDeployActionProps extends codepipeline.CommonAwsActionProps {\n  /**\n   * The input artifact that contains the JSON image definitions file to use for deployments.\n   * The JSON file is a list of objects,\n   * each with 2 keys: `name` is the name of the container in the Task Definition,\n   * and `imageUri` is the Docker image URI you want to update your service with.\n   * If you use this property, it's assumed the file is called 'imagedefinitions.json'.\n   * If your build uses a different file, leave this property empty,\n   * and use the `imageFile` property instead.\n   *\n   * @default - one of this property, or `imageFile`, is required\n   * @see https://docs.aws.amazon.com/codepipeline/latest/userguide/pipelines-create.html#pipelines-create-image-definitions\n   */\n  readonly input?: codepipeline.Artifact;\n\n  /**\n   * The name of the JSON image definitions file to use for deployments.\n   * The JSON file is a list of objects,\n   * each with 2 keys: `name` is the name of the container in the Task Definition,\n   * and `imageUri` is the Docker image URI you want to update your service with.\n   * Use this property if you want to use a different name for this file than the default 'imagedefinitions.json'.\n   * If you use this property, you don't need to specify the `input` property.\n   *\n   * @default - one of this property, or `input`, is required\n   * @see https://docs.aws.amazon.com/codepipeline/latest/userguide/pipelines-create.html#pipelines-create-image-definitions\n   */\n  readonly imageFile?: codepipeline.ArtifactPath;\n\n  /**\n   * The ECS Service to deploy.\n   */\n  readonly service: ecs.IBaseService;\n\n  /**\n   * Timeout for the ECS deployment in minutes. Value must be between 1-60.\n   *\n   * @default - 60 minutes\n   * @see https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference-ECS.html\n   */\n  readonly deploymentTimeout?: Duration;\n}\n\n/**\n * CodePipeline Action to deploy an ECS Service.\n */\nexport class EcsDeployAction extends Action {\n  private readonly props: EcsDeployActionProps;\n  private readonly deploymentTimeout?: number\n\n  constructor(props: EcsDeployActionProps) {\n    super({\n      ...props,\n      category: codepipeline.ActionCategory.DEPLOY,\n      provider: 'ECS',\n      artifactBounds: deployArtifactBounds(),\n      inputs: [determineInputArtifact(props)],\n      resource: props.service,\n    });\n\n    const deploymentTimeout = props.deploymentTimeout?.toMinutes({ integral: true });\n    if (deploymentTimeout !== undefined && (deploymentTimeout < 1 || deploymentTimeout > 60)) {\n      throw new Error(`Deployment timeout must be between 1 and 60 minutes, got: ${deploymentTimeout}`);\n    }\n\n    this.props = props;\n    this.deploymentTimeout = deploymentTimeout;\n  }\n\n  protected bound(_scope: Construct, _stage: codepipeline.IStage, options: codepipeline.ActionBindOptions):\n  codepipeline.ActionConfig {\n    // permissions based on CodePipeline documentation:\n    // https://docs.aws.amazon.com/codepipeline/latest/userguide/how-to-custom-role.html#how-to-update-role-new-services\n    options.role.addToPolicy(new iam.PolicyStatement({\n      actions: [\n        'ecs:DescribeServices',\n        'ecs:DescribeTaskDefinition',\n        'ecs:DescribeTasks',\n        'ecs:ListTasks',\n        'ecs:RegisterTaskDefinition',\n        'ecs:UpdateService',\n      ],\n      resources: ['*'],\n    }));\n\n    options.role.addToPolicy(new iam.PolicyStatement({\n      actions: ['iam:PassRole'],\n      resources: ['*'],\n      conditions: {\n        StringEqualsIfExists: {\n          'iam:PassedToService': [\n            'ec2.amazonaws.com',\n            'ecs-tasks.amazonaws.com',\n          ],\n        },\n      },\n    }));\n\n    options.bucket.grantRead(options.role);\n\n    return {\n      configuration: {\n        ClusterName: this.props.service.cluster.clusterName,\n        ServiceName: this.props.service.serviceName,\n        FileName: this.props.imageFile?.fileName,\n        DeploymentTimeout: this.deploymentTimeout,\n      },\n    };\n  }\n}\n\nfunction determineInputArtifact(props: EcsDeployActionProps): codepipeline.Artifact {\n  if (props.imageFile && props.input) {\n    throw new Error(\"Exactly one of 'input' or 'imageFile' can be provided in the ECS deploy Action\");\n  }\n  if (props.imageFile) {\n    return props.imageFile.artifact;\n  }\n  if (props.input) {\n    return props.input;\n  }\n  throw new Error(\"Specifying one of 'input' or 'imageFile' is required for the ECS deploy Action\");\n}\n"],
  "mappings": "yNAAA,aAAA,QAAA,2BAAA,EAEA,IAAA,QAAA,kBAAA,EAEA,SAAA,QAAA,WAAA,EACA,SAAA,QAAA,WAAA,EAsDA,MAAa,uBAAwB,UAAA,MAAM,CAIzC,YAAY,MAA2B,QACrC,MAAM,IACD,MACH,SAAU,aAAa,eAAe,OACtC,SAAU,MACV,eAAgB,SAAA,qBAAoB,EACpC,OAAQ,CAAC,uBAAuB,KAAK,CAAC,EACtC,SAAU,MAAM,QACjB,2FAED,KAAM,mBAAiB,IAAG,MAAM,qBAAiB,MAAA,KAAA,OAAA,OAAA,GAAE,UAAU,CAAE,SAAU,EAAI,CAAE,EAC/E,GAAI,oBAAsB,QAAc,mBAAoB,GAAK,kBAAoB,IACnF,KAAM,IAAI,OAAM,6DAA6D,mBAAmB,EAGlG,KAAK,MAAQ,MACb,KAAK,kBAAoB,kBAGjB,MAAM,OAAmB,OAA6B,QAAuC,mKAIrG,QAAQ,KAAK,YAAY,GAAI,KAAI,gBAAgB,CAC/C,QAAS,CACP,uBACA,6BACA,oBACA,gBACA,6BACA,qBAEF,UAAW,CAAC,GAAG,EAChB,CAAC,EAEF,QAAQ,KAAK,YAAY,GAAI,KAAI,gBAAgB,CAC/C,QAAS,CAAC,cAAc,EACxB,UAAW,CAAC,GAAG,EACf,WAAY,CACV,qBAAsB,CACpB,sBAAuB,CACrB,oBACA,6BAIP,CAAC,EAEF,QAAQ,OAAO,UAAU,QAAQ,IAAI,EAE9B,CACL,cAAe,CACb,YAAa,KAAK,MAAM,QAAQ,QAAQ,YACxC,YAAa,KAAK,MAAM,QAAQ,YAChC,SAAQ,IAAE,KAAK,MAAM,aAAS,MAAA,KAAA,OAAA,OAAA,GAAE,SAChC,kBAAmB,KAAK,qBA3DhC,QAAA,gBAAA,wIAiEA,gCAAgC,MAA2B,CACzD,GAAI,MAAM,WAAa,MAAM,MAC3B,KAAM,IAAI,OAAM,gFAAgF,EAElG,GAAI,MAAM,UACR,MAAO,OAAM,UAAU,SAEzB,GAAI,MAAM,MACR,MAAO,OAAM,MAEf,KAAM,IAAI,OAAM,gFAAgF,CAClG",
  "names": []
}
