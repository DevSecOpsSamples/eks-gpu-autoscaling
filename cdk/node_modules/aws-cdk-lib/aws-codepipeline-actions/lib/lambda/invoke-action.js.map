{
  "version": 3,
  "sources": ["invoke-action.ts"],
  "sourcesContent": ["import * as codepipeline from '../../../aws-codepipeline';\nimport * as iam from '../../../aws-iam';\nimport * as lambda from '../../../aws-lambda';\nimport { Stack } from '../../../core';\nimport { Action } from '../action';\n\n// keep this import separate from other imports to reduce chance for merge conflicts with v2-main\n// eslint-disable-next-line no-duplicate-imports, import/order\nimport { Construct } from 'constructs';\n\n/**\n * Construction properties of the {@link LambdaInvokeAction Lambda invoke CodePipeline Action}.\n */\nexport interface LambdaInvokeActionProps extends codepipeline.CommonAwsActionProps {\n  /**\n   * The optional input Artifacts of the Action.\n   * A Lambda Action can have up to 5 inputs.\n   * The inputs will appear in the event passed to the Lambda,\n   * under the `'CodePipeline.job'.data.inputArtifacts` path.\n   *\n   * @default the Action will not have any inputs\n   * @see https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-invoke-lambda-function.html#actions-invoke-lambda-function-json-event-example\n   */\n  readonly inputs?: codepipeline.Artifact[];\n\n  /**\n   * The optional names of the output Artifacts of the Action.\n   * A Lambda Action can have up to 5 outputs.\n   * The outputs will appear in the event passed to the Lambda,\n   * under the `'CodePipeline.job'.data.outputArtifacts` path.\n   * It is the responsibility of the Lambda to upload ZIP files with the Artifact contents to the provided locations.\n   *\n   * @default the Action will not have any outputs\n   */\n  readonly outputs?: codepipeline.Artifact[];\n\n  /**\n   * A set of key-value pairs that will be accessible to the invoked Lambda\n   * inside the event that the Pipeline will call it with.\n   *\n   * Only one of `userParameters` or `userParametersString` can be specified.\n   *\n   * @see https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-invoke-lambda-function.html#actions-invoke-lambda-function-json-event-example\n   * @default - no user parameters will be passed\n   */\n  readonly userParameters?: { [key: string]: any };\n\n  /**\n   * The string representation of the user parameters that will be\n   * accessible to the invoked Lambda inside the event\n   * that the Pipeline will call it with.\n   *\n   * Only one of `userParametersString` or `userParameters` can be specified.\n   *\n   * @default - no user parameters will be passed\n   */\n  readonly userParametersString?: string;\n\n  /**\n   * The lambda function to invoke.\n   */\n  readonly lambda: lambda.IFunction;\n}\n\n/**\n * CodePipeline invoke Action that is provided by an AWS Lambda function.\n *\n * @see https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-invoke-lambda-function.html\n */\nexport class LambdaInvokeAction extends Action {\n  private readonly props: LambdaInvokeActionProps;\n\n  constructor(props: LambdaInvokeActionProps) {\n    super({\n      ...props,\n      resource: props.lambda,\n      category: codepipeline.ActionCategory.INVOKE,\n      provider: 'Lambda',\n      artifactBounds: {\n        minInputs: 0,\n        maxInputs: 5,\n        minOutputs: 0,\n        maxOutputs: 5,\n      },\n    });\n\n    this.props = props;\n\n    if (props.userParameters && props.userParametersString) {\n      throw new Error('Only one of userParameters or userParametersString can be specified');\n    }\n  }\n\n  /**\n   * Reference a CodePipeline variable defined by the Lambda function this action points to.\n   * Variables in Lambda invoke actions are defined by calling the PutJobSuccessResult CodePipeline API call\n   * with the 'outputVariables' property filled.\n   *\n   * @param variableName the name of the variable to reference.\n   *   A variable by this name must be present in the 'outputVariables' section of the PutJobSuccessResult\n   *   request that the Lambda function calls when the action is invoked\n   *\n   * @see https://docs.aws.amazon.com/codepipeline/latest/APIReference/API_PutJobSuccessResult.html\n   */\n  public variable(variableName: string): string {\n    return this.variableExpression(variableName);\n  }\n\n  protected bound(scope: Construct, _stage: codepipeline.IStage, options: codepipeline.ActionBindOptions):\n  codepipeline.ActionConfig {\n    // allow pipeline to list functions\n    options.role.addToPolicy(new iam.PolicyStatement({\n      actions: ['lambda:ListFunctions'],\n      resources: ['*'],\n    }));\n\n    // allow pipeline to invoke this lambda functionn\n    this.props.lambda.grantInvoke(options.role);\n\n    // allow the Role access to the Bucket, if there are any inputs/outputs\n    if ((this.actionProperties.inputs || []).length > 0) {\n      options.bucket.grantRead(options.role);\n    }\n    if ((this.actionProperties.outputs || []).length > 0) {\n      options.bucket.grantWrite(options.role);\n    }\n\n    // allow lambda to put job results for this pipeline\n    // CodePipeline requires this to be granted to '*'\n    // (the Pipeline ARN will not be enough)\n    this.props.lambda.addToRolePolicy(new iam.PolicyStatement({\n      resources: ['*'],\n      actions: ['codepipeline:PutJobSuccessResult', 'codepipeline:PutJobFailureResult'],\n    }));\n\n    return {\n      configuration: {\n        FunctionName: this.props.lambda.functionName,\n        UserParameters: this.props.userParametersString ?? Stack.of(scope).toJsonString(this.props.userParameters),\n      },\n    };\n  }\n}\n"],
  "mappings": "4NAAA,aAAA,QAAA,2BAAA,EACA,IAAA,QAAA,kBAAA,EAEA,OAAA,QAAA,eAAA,EACA,SAAA,QAAA,WAAA,EAiEA,MAAa,0BAA2B,UAAA,MAAM,CAG5C,YAAY,MAA8B,CACxC,MAAM,IACD,MACH,SAAU,MAAM,OAChB,SAAU,aAAa,eAAe,OACtC,SAAU,SACV,eAAgB,CACd,UAAW,EACX,UAAW,EACX,WAAY,EACZ,WAAY,GAEf,EAID,+FAFA,KAAK,MAAQ,MAET,MAAM,gBAAkB,MAAM,qBAChC,KAAM,IAAI,OAAM,qEAAqE,EAelF,SAAS,aAAoB,CAClC,MAAO,MAAK,mBAAmB,YAAY,EAGnC,MAAM,MAAkB,OAA6B,QAAuC,mKAGpG,QAAQ,KAAK,YAAY,GAAI,KAAI,gBAAgB,CAC/C,QAAS,CAAC,sBAAsB,EAChC,UAAW,CAAC,GAAG,EAChB,CAAC,EAGF,KAAK,MAAM,OAAO,YAAY,QAAQ,IAAI,EAGrC,MAAK,iBAAiB,QAAU,CAAA,GAAI,OAAS,GAChD,QAAQ,OAAO,UAAU,QAAQ,IAAI,EAElC,MAAK,iBAAiB,SAAW,CAAA,GAAI,OAAS,GACjD,QAAQ,OAAO,WAAW,QAAQ,IAAI,EAMxC,KAAK,MAAM,OAAO,gBAAgB,GAAI,KAAI,gBAAgB,CACxD,UAAW,CAAC,GAAG,EACf,QAAS,CAAC,mCAAoC,kCAAkC,EACjF,CAAC,EAEK,CACL,cAAe,CACb,aAAc,KAAK,MAAM,OAAO,aAChC,eAAc,IAAE,KAAK,MAAM,wBAAoB,MAAA,KAAA,OAAA,GAAI,OAAA,MAAM,GAAG,KAAK,EAAE,aAAa,KAAK,MAAM,cAAc,KArEjH,QAAA,mBAAA",
  "names": []
}
