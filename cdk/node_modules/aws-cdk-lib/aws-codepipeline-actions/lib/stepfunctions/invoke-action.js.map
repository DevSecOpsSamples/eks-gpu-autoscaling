{
  "version": 3,
  "sources": ["invoke-action.ts"],
  "sourcesContent": ["import * as codepipeline from '../../../aws-codepipeline';\nimport * as iam from '../../../aws-iam';\nimport * as stepfunction from '../../../aws-stepfunctions';\nimport * as cdk from '../../../core';\nimport { Construct } from 'constructs';\nimport { Action } from '../action';\n\n/**\n * Represents the input for the StateMachine.\n */\nexport class StateMachineInput {\n  /**\n   * When the input type is FilePath, input artifact and\n   * filepath must be specified.\n   */\n  public static filePath(inputFile: codepipeline.ArtifactPath): StateMachineInput {\n    return new StateMachineInput(inputFile.location, inputFile.artifact, 'FilePath');\n  }\n\n  /**\n   * When the input type is Literal, input value is passed\n   * directly to the state machine input.\n   */\n  public static literal(object: object): StateMachineInput {\n    return new StateMachineInput(JSON.stringify(object), undefined, 'Literal');\n  }\n\n  /**\n   * The optional input Artifact of the Action.\n   * If InputType is set to FilePath, this artifact is required\n   * and is used to source the input for the state machine execution.\n   *\n   * @default - the Action will not have any inputs\n   * @see https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference-StepFunctions.html#action-reference-StepFunctions-example\n   */\n  public readonly inputArtifact?: codepipeline.Artifact;\n\n  /**\n   * Optional StateMachine InputType\n   * InputType can be Literal or FilePath\n   *\n   * @default - Literal\n   */\n  public readonly inputType?: string;\n\n  /**\n   * When InputType is set to Literal (default), the Input field is used\n   * directly as the input for the state machine execution.\n   * Otherwise, the state machine is invoked with an empty JSON object {}.\n   *\n   * When InputType is set to FilePath, this field is required.\n   * An input artifact is also required when InputType is set to FilePath.\n   *\n   * @default - none\n   */\n  public readonly input: any;\n\n  private constructor(input: any, inputArtifact: codepipeline.Artifact | undefined, inputType: string) {\n    this.input = input;\n    this.inputArtifact = inputArtifact;\n    this.inputType = inputType;\n  }\n}\n\n/**\n * Construction properties of the {@link StepFunctionsInvokeAction StepFunction Invoke Action}.\n */\nexport interface StepFunctionsInvokeActionProps extends codepipeline.CommonAwsActionProps {\n  /**\n   * The optional output Artifact of the Action.\n   *\n   * @default the Action will not have any outputs\n   */\n  readonly output?: codepipeline.Artifact;\n\n  /**\n   * The state machine to invoke.\n   */\n  readonly stateMachine: stepfunction.IStateMachine;\n\n  /**\n   * Represents the input to the StateMachine.\n   * This includes input artifact, input type and the statemachine input.\n   *\n   * @default - none\n   */\n  readonly stateMachineInput?: StateMachineInput;\n\n  /**\n   * Prefix (optional)\n   *\n   * By default, the action execution ID is used as the state machine execution name.\n   * If a prefix is provided, it is prepended to the action execution ID with a hyphen and\n   * together used as the state machine execution name.\n   *\n   * @default - action execution ID\n   */\n  readonly executionNamePrefix?: string;\n}\n\n/**\n * StepFunctionInvokeAction that is provided by an AWS CodePipeline.\n */\nexport class StepFunctionInvokeAction extends Action {\n  private readonly props: StepFunctionsInvokeActionProps;\n\n  constructor(props: StepFunctionsInvokeActionProps) {\n    super({\n      ...props,\n      resource: props.stateMachine,\n      category: codepipeline.ActionCategory.INVOKE,\n      provider: 'StepFunctions',\n      artifactBounds: {\n        minInputs: 0,\n        maxInputs: 1,\n        minOutputs: 0,\n        maxOutputs: 1,\n      },\n      inputs: (props.stateMachineInput && props.stateMachineInput.inputArtifact) ? [props.stateMachineInput.inputArtifact] : [],\n      outputs: (props.output) ? [props.output] : [],\n    });\n    this.props = props;\n  }\n\n  protected bound(_scope: Construct, _stage: codepipeline.IStage, options: codepipeline.ActionBindOptions):\n  codepipeline.ActionConfig {\n    // allow pipeline to invoke this step function\n    options.role.addToPrincipalPolicy(new iam.PolicyStatement({\n      actions: ['states:StartExecution', 'states:DescribeStateMachine'],\n      resources: [this.props.stateMachine.stateMachineArn],\n    }));\n\n    // allow state machine executions to be inspected\n    options.role.addToPrincipalPolicy(new iam.PolicyStatement({\n      actions: ['states:DescribeExecution'],\n      resources: [cdk.Stack.of(this.props.stateMachine).formatArn({\n        service: 'states',\n        resource: 'execution',\n        resourceName: `${cdk.Stack.of(this.props.stateMachine).splitArn(this.props.stateMachine.stateMachineArn, cdk.ArnFormat.COLON_RESOURCE_NAME).resourceName}:${this.props.executionNamePrefix ?? ''}*`,\n        arnFormat: cdk.ArnFormat.COLON_RESOURCE_NAME,\n      })],\n    }));\n\n    // allow the Role access to the Bucket, if there are any inputs/outputs\n    if ((this.actionProperties.inputs ?? []).length > 0) {\n      options.bucket.grantRead(options.role);\n    }\n    if ((this.actionProperties.outputs ?? []).length > 0) {\n      options.bucket.grantWrite(options.role);\n    }\n\n    return {\n      configuration: {\n        StateMachineArn: this.props.stateMachine.stateMachineArn,\n        Input: this.props.stateMachineInput?.input,\n        InputType: this.props.stateMachineInput?.inputType,\n        ExecutionNamePrefix: this.props.executionNamePrefix,\n      },\n    };\n  }\n}"],
  "mappings": "+PAAA,aAAA,QAAA,2BAAA,EACA,IAAA,QAAA,kBAAA,EAEA,IAAA,QAAA,eAAA,EAEA,SAAA,QAAA,WAAA,EAKA,MAAa,iBAAiB,CA+C5B,YAAoB,MAAY,cAAkD,UAAiB,CACjG,KAAK,MAAQ,MACb,KAAK,cAAgB,cACrB,KAAK,UAAY,gBA7CL,UAAS,UAAoC,qFAClD,GAAI,mBAAkB,UAAU,SAAU,UAAU,SAAU,UAAU,QAOnE,SAAQ,OAAc,CAClC,MAAO,IAAI,mBAAkB,KAAK,UAAU,MAAM,EAAG,OAAW,SAAS,GAd7E,QAAA,kBAAA,8IA6FA,MAAa,gCAAiC,UAAA,MAAM,CAGlD,YAAY,MAAqC,CAC/C,MAAM,IACD,MACH,SAAU,MAAM,aAChB,SAAU,aAAa,eAAe,OACtC,SAAU,gBACV,eAAgB,CACd,UAAW,EACX,UAAW,EACX,WAAY,EACZ,WAAY,GAEd,OAAS,MAAM,mBAAqB,MAAM,kBAAkB,cAAiB,CAAC,MAAM,kBAAkB,aAAa,EAAI,CAAA,EACvH,QAAU,MAAM,OAAU,CAAC,MAAM,MAAM,EAAI,CAAA,EAC5C,qGACD,KAAK,MAAQ,MAGL,MAAM,OAAmB,OAA6B,QAAuC,+KAGrG,QAAQ,KAAK,qBAAqB,GAAI,KAAI,gBAAgB,CACxD,QAAS,CAAC,wBAAyB,6BAA6B,EAChE,UAAW,CAAC,KAAK,MAAM,aAAa,eAAe,EACpD,CAAC,EAGF,QAAQ,KAAK,qBAAqB,GAAI,KAAI,gBAAgB,CACxD,QAAS,CAAC,0BAA0B,EACpC,UAAW,CAAC,IAAI,MAAM,GAAG,KAAK,MAAM,YAAY,EAAE,UAAU,CAC1D,QAAS,SACT,SAAU,YACV,aAAc,GAAG,IAAI,MAAM,GAAG,KAAK,MAAM,YAAY,EAAE,SAAS,KAAK,MAAM,aAAa,gBAAiB,IAAI,UAAU,mBAAmB,EAAE,gBAAgB,IAAA,KAAK,MAAM,uBAAmB,MAAA,KAAA,OAAA,GAAI,MAC9L,UAAW,IAAI,UAAU,oBAC1B,CAAC,EACH,CAAC,EAGE,KAAC,KAAK,iBAAiB,UAAM,MAAA,KAAA,OAAA,GAAI,CAAA,GAAI,OAAS,GAChD,QAAQ,OAAO,UAAU,QAAQ,IAAI,EAEnC,KAAC,KAAK,iBAAiB,WAAO,MAAA,KAAA,OAAA,GAAI,CAAA,GAAI,OAAS,GACjD,QAAQ,OAAO,WAAW,QAAQ,IAAI,EAGjC,CACL,cAAe,CACb,gBAAiB,KAAK,MAAM,aAAa,gBACzC,MAAK,IAAE,KAAK,MAAM,qBAAiB,MAAA,KAAA,OAAA,OAAA,GAAE,MACrC,UAAS,IAAE,KAAK,MAAM,qBAAiB,MAAA,KAAA,OAAA,OAAA,GAAE,UACzC,oBAAqB,KAAK,MAAM,uBArDxC,QAAA,yBAAA",
  "names": []
}
