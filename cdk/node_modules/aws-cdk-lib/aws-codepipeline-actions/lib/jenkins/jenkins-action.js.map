{
  "version": 3,
  "sources": ["jenkins-action.ts"],
  "sourcesContent": ["import * as codepipeline from '../../../aws-codepipeline';\nimport { Action } from '../action';\nimport { IJenkinsProvider, jenkinsArtifactsBounds } from './jenkins-provider';\n\n// keep this import separate from other imports to reduce chance for merge conflicts with v2-main\n// eslint-disable-next-line no-duplicate-imports, import/order\nimport { Construct } from 'constructs';\n\n/**\n * The type of the Jenkins Action that determines its CodePipeline Category -\n * Build, or Test.\n * Note that a Jenkins provider, even if it has the same name,\n * must be separately registered for each type.\n */\nexport enum JenkinsActionType {\n  /**\n   * The Action will have the Build Category.\n   */\n  BUILD,\n\n  /**\n   * The Action will have the Test Category.\n   */\n  TEST\n}\n\n/**\n * Construction properties of {@link JenkinsAction}.\n */\nexport interface JenkinsActionProps extends codepipeline.CommonActionProps {\n  /**\n   * The source to use as input for this build.\n   */\n  readonly inputs?: codepipeline.Artifact[];\n\n  /**\n   *\n   */\n  readonly outputs?: codepipeline.Artifact[];\n\n  /**\n   * The Jenkins Provider for this Action.\n   */\n  readonly jenkinsProvider: IJenkinsProvider;\n\n  /**\n   * The name of the project (sometimes also called job, or task)\n   * on your Jenkins installation that will be invoked by this Action.\n   *\n   * @example 'MyJob'\n   */\n  readonly projectName: string;\n\n  /**\n   * The type of the Action - Build, or Test.\n   */\n  readonly type: JenkinsActionType;\n}\n\n/**\n * Jenkins build CodePipeline Action.\n *\n * @see https://docs.aws.amazon.com/codepipeline/latest/userguide/tutorials-four-stage-pipeline.html\n */\nexport class JenkinsAction extends Action {\n  private readonly props: JenkinsActionProps;\n\n  constructor(props: JenkinsActionProps) {\n    super({\n      ...props,\n      category: props.type === JenkinsActionType.BUILD\n        ? codepipeline.ActionCategory.BUILD\n        : codepipeline.ActionCategory.TEST,\n      provider: props.jenkinsProvider.providerName,\n      owner: 'Custom',\n      artifactBounds: jenkinsArtifactsBounds,\n      version: props.jenkinsProvider.version,\n    });\n\n    this.props = props;\n  }\n\n  protected bound(_scope: Construct, _stage: codepipeline.IStage, _options: codepipeline.ActionBindOptions):\n  codepipeline.ActionConfig {\n    if (this.actionProperties.category === codepipeline.ActionCategory.BUILD) {\n      this.props.jenkinsProvider._registerBuildProvider();\n    } else {\n      this.props.jenkinsProvider._registerTestProvider();\n    }\n\n    return {\n      configuration: {\n        ProjectName: this.props.projectName,\n      },\n    };\n  }\n}\n"],
  "mappings": "iPAAA,aAAA,QAAA,2BAAA,EACA,SAAA,QAAA,WAAA,EACA,mBAAA,QAAA,oBAAA,EAYA,GAAY,mBAAZ,AAAA,UAAY,mBAAiB,CAI3B,mBAAA,mBAAA,MAAA,GAAA,QAKA,mBAAA,mBAAA,KAAA,GAAA,MACF,GAVY,kBAAA,QAAA,mBAAA,SAAA,kBAAiB,CAAA,EAAA,EAkD7B,MAAa,qBAAsB,UAAA,MAAM,CAGvC,YAAY,MAAyB,CACnC,MAAM,IACD,MACH,SAAU,MAAM,OAAS,kBAAkB,MACvC,aAAa,eAAe,MAC5B,aAAa,eAAe,KAChC,SAAU,MAAM,gBAAgB,aAChC,MAAO,SACP,eAAgB,mBAAA,uBAChB,QAAS,MAAM,gBAAgB,QAChC,yFAED,KAAK,MAAQ,MAGL,MAAM,OAAmB,OAA6B,SAAwC,6JAEtG,AAAI,KAAK,iBAAiB,WAAa,aAAa,eAAe,MACjE,KAAK,MAAM,gBAAgB,uBAAsB,EAEjD,KAAK,MAAM,gBAAgB,sBAAqB,EAG3C,CACL,cAAe,CACb,YAAa,KAAK,MAAM,eA5BhC,QAAA,cAAA",
  "names": []
}
