{
  "version": 3,
  "sources": ["source-action.ts"],
  "sourcesContent": ["import * as codepipeline from '../../../aws-codepipeline';\nimport * as events from '../../../aws-events';\nimport { CodeStarConnectionsSourceAction, CodeStarConnectionsSourceActionProps } from '../codestar-connections/source-action';\n\n// keep this import separate from other imports to reduce chance for merge conflicts with v2-main\n// eslint-disable-next-line no-duplicate-imports, import/order\nimport { Construct } from 'constructs';\n\n/**\n * Construction properties for {@link BitBucketSourceAction}.\n *\n * @deprecated use CodeStarConnectionsSourceActionProps instead\n */\nexport interface BitBucketSourceActionProps extends CodeStarConnectionsSourceActionProps {\n}\n\n/**\n * A CodePipeline source action for BitBucket.\n *\n * @deprecated use CodeStarConnectionsSourceAction instead\n */\nexport class BitBucketSourceAction implements codepipeline.IAction {\n  private readonly codeStarConnectionsSourceAction: CodeStarConnectionsSourceAction;\n\n  constructor(props: BitBucketSourceActionProps) {\n    this.codeStarConnectionsSourceAction = new CodeStarConnectionsSourceAction(props);\n  }\n\n  public get actionProperties(): codepipeline.ActionProperties {\n    return this.codeStarConnectionsSourceAction.actionProperties;\n  }\n\n  public bind(scope: Construct, stage: codepipeline.IStage, options: codepipeline.ActionBindOptions): codepipeline.ActionConfig {\n    return this.codeStarConnectionsSourceAction.bind(scope, stage, options);\n  }\n\n  public onStateChange(name: string, target?: events.IRuleTarget, options?: events.RuleProps): events.Rule {\n    return this.codeStarConnectionsSourceAction.onStateChange(name, target, options);\n  }\n}\n"],
  "mappings": "iKAEA,gBAAA,QAAA,uCAAA,EAmBA,MAAa,qBAAqB,CAGhC,YAAY,MAAiC,CAC3C,KAAK,gCAAkC,GAAI,iBAAA,gCAAgC,KAAK,KAGvE,mBAAgB,CACzB,MAAO,MAAK,gCAAgC,iBAGvC,KAAK,MAAkB,MAA4B,QAAuC,CAC/F,MAAO,MAAK,gCAAgC,KAAK,MAAO,MAAO,OAAO,EAGjE,cAAc,KAAc,OAA6B,QAA0B,CACxF,MAAO,MAAK,gCAAgC,cAAc,KAAM,OAAQ,OAAO,GAhBnF,QAAA,sBAAA",
  "names": []
}
