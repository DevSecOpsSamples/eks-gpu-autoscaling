{
  "version": 3,
  "sources": ["amazonmq-canned-metrics.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nexport class AmazonMQMetrics {\n  public static ackRateAverage(dimensions: { Broker: string }) {\n    return {\n      namespace: 'AWS/AmazonMQ',\n      metricName: 'AckRate',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static channelCountSum(dimensions: { Broker: string }) {\n    return {\n      namespace: 'AWS/AmazonMQ',\n      metricName: 'ChannelCount',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static confirmRateAverage(dimensions: { Broker: string }) {\n    return {\n      namespace: 'AWS/AmazonMQ',\n      metricName: 'ConfirmRate',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static connectionCountSum(dimensions: { Broker: string }) {\n    return {\n      namespace: 'AWS/AmazonMQ',\n      metricName: 'ConnectionCount',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static consumerCountSum(dimensions: { Broker: string }) {\n    return {\n      namespace: 'AWS/AmazonMQ',\n      metricName: 'ConsumerCount',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static cpuCreditBalanceHeapUsageMaximum(dimensions: { Broker: string }) {\n    return {\n      namespace: 'AWS/AmazonMQ',\n      metricName: 'CpuCreditBalanceHeapUsage',\n      dimensionsMap: dimensions,\n      statistic: 'Maximum',\n    };\n  }\n  public static cpuUtilizationAverage(dimensions: { Broker: string }) {\n    return {\n      namespace: 'AWS/AmazonMQ',\n      metricName: 'CpuUtilization',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static currentConnectionsCountSum(dimensions: { Broker: string }) {\n    return {\n      namespace: 'AWS/AmazonMQ',\n      metricName: 'CurrentConnectionsCount',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static exchangeCountSum(dimensions: { Broker: string }) {\n    return {\n      namespace: 'AWS/AmazonMQ',\n      metricName: 'ExchangeCount',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static messageCountSum(dimensions: { Broker: string }) {\n    return {\n      namespace: 'AWS/AmazonMQ',\n      metricName: 'MessageCount',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static messageReadyCountSum(dimensions: { Broker: string }) {\n    return {\n      namespace: 'AWS/AmazonMQ',\n      metricName: 'MessageReadyCount',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static messageUnacknowledgedCountSum(dimensions: { Broker: string }) {\n    return {\n      namespace: 'AWS/AmazonMQ',\n      metricName: 'MessageUnacknowledgedCount',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static networkInSum(dimensions: { Broker: string }) {\n    return {\n      namespace: 'AWS/AmazonMQ',\n      metricName: 'NetworkIn',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static networkOutSum(dimensions: { Broker: string }) {\n    return {\n      namespace: 'AWS/AmazonMQ',\n      metricName: 'NetworkOut',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static publishRateAverage(dimensions: { Broker: string }) {\n    return {\n      namespace: 'AWS/AmazonMQ',\n      metricName: 'PublishRate',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static queueCountSum(dimensions: { Broker: string }) {\n    return {\n      namespace: 'AWS/AmazonMQ',\n      metricName: 'QueueCount',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static totalConsumerCountSum(dimensions: { Broker: string }) {\n    return {\n      namespace: 'AWS/AmazonMQ',\n      metricName: 'TotalConsumerCount',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static totalMessageCountSum(dimensions: { Broker: string }) {\n    return {\n      namespace: 'AWS/AmazonMQ',\n      metricName: 'TotalMessageCount',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static totalProducerCountSum(dimensions: { Broker: string }) {\n    return {\n      namespace: 'AWS/AmazonMQ',\n      metricName: 'TotalProducerCount',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n}\n"],
  "mappings": "mGAIA,MAAa,eAAe,OACZ,gBAAe,WAA8B,CACzD,MAAO,CACL,UAAW,eACX,WAAY,UACZ,cAAe,WACf,UAAW,iBAGD,iBAAgB,WAA8B,CAC1D,MAAO,CACL,UAAW,eACX,WAAY,eACZ,cAAe,WACf,UAAW,aAGD,oBAAmB,WAA8B,CAC7D,MAAO,CACL,UAAW,eACX,WAAY,cACZ,cAAe,WACf,UAAW,iBAGD,oBAAmB,WAA8B,CAC7D,MAAO,CACL,UAAW,eACX,WAAY,kBACZ,cAAe,WACf,UAAW,aAGD,kBAAiB,WAA8B,CAC3D,MAAO,CACL,UAAW,eACX,WAAY,gBACZ,cAAe,WACf,UAAW,aAGD,kCAAiC,WAA8B,CAC3E,MAAO,CACL,UAAW,eACX,WAAY,4BACZ,cAAe,WACf,UAAW,iBAGD,uBAAsB,WAA8B,CAChE,MAAO,CACL,UAAW,eACX,WAAY,iBACZ,cAAe,WACf,UAAW,iBAGD,4BAA2B,WAA8B,CACrE,MAAO,CACL,UAAW,eACX,WAAY,0BACZ,cAAe,WACf,UAAW,aAGD,kBAAiB,WAA8B,CAC3D,MAAO,CACL,UAAW,eACX,WAAY,gBACZ,cAAe,WACf,UAAW,aAGD,iBAAgB,WAA8B,CAC1D,MAAO,CACL,UAAW,eACX,WAAY,eACZ,cAAe,WACf,UAAW,aAGD,sBAAqB,WAA8B,CAC/D,MAAO,CACL,UAAW,eACX,WAAY,oBACZ,cAAe,WACf,UAAW,aAGD,+BAA8B,WAA8B,CACxE,MAAO,CACL,UAAW,eACX,WAAY,6BACZ,cAAe,WACf,UAAW,aAGD,cAAa,WAA8B,CACvD,MAAO,CACL,UAAW,eACX,WAAY,YACZ,cAAe,WACf,UAAW,aAGD,eAAc,WAA8B,CACxD,MAAO,CACL,UAAW,eACX,WAAY,aACZ,cAAe,WACf,UAAW,aAGD,oBAAmB,WAA8B,CAC7D,MAAO,CACL,UAAW,eACX,WAAY,cACZ,cAAe,WACf,UAAW,iBAGD,eAAc,WAA8B,CACxD,MAAO,CACL,UAAW,eACX,WAAY,aACZ,cAAe,WACf,UAAW,aAGD,uBAAsB,WAA8B,CAChE,MAAO,CACL,UAAW,eACX,WAAY,qBACZ,cAAe,WACf,UAAW,aAGD,sBAAqB,WAA8B,CAC/D,MAAO,CACL,UAAW,eACX,WAAY,oBACZ,cAAe,WACf,UAAW,aAGD,uBAAsB,WAA8B,CAChE,MAAO,CACL,UAAW,eACX,WAAY,qBACZ,cAAe,WACf,UAAW,QAtJjB,QAAA,gBAAA",
  "names": []
}
