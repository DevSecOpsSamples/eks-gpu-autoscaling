"use strict";var _a,_b,_c;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnConfigurationAssociation=exports.CfnConfiguration=exports.CfnBroker=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/cfn-parse");function CfnBrokerPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("authenticationStrategy",cdk.validateString)(properties.authenticationStrategy)),errors.collect(cdk.propertyValidator("autoMinorVersionUpgrade",cdk.requiredValidator)(properties.autoMinorVersionUpgrade)),errors.collect(cdk.propertyValidator("autoMinorVersionUpgrade",cdk.validateBoolean)(properties.autoMinorVersionUpgrade)),errors.collect(cdk.propertyValidator("brokerName",cdk.requiredValidator)(properties.brokerName)),errors.collect(cdk.propertyValidator("brokerName",cdk.validateString)(properties.brokerName)),errors.collect(cdk.propertyValidator("configuration",CfnBroker_ConfigurationIdPropertyValidator)(properties.configuration)),errors.collect(cdk.propertyValidator("deploymentMode",cdk.requiredValidator)(properties.deploymentMode)),errors.collect(cdk.propertyValidator("deploymentMode",cdk.validateString)(properties.deploymentMode)),errors.collect(cdk.propertyValidator("encryptionOptions",CfnBroker_EncryptionOptionsPropertyValidator)(properties.encryptionOptions)),errors.collect(cdk.propertyValidator("engineType",cdk.requiredValidator)(properties.engineType)),errors.collect(cdk.propertyValidator("engineType",cdk.validateString)(properties.engineType)),errors.collect(cdk.propertyValidator("engineVersion",cdk.requiredValidator)(properties.engineVersion)),errors.collect(cdk.propertyValidator("engineVersion",cdk.validateString)(properties.engineVersion)),errors.collect(cdk.propertyValidator("hostInstanceType",cdk.requiredValidator)(properties.hostInstanceType)),errors.collect(cdk.propertyValidator("hostInstanceType",cdk.validateString)(properties.hostInstanceType)),errors.collect(cdk.propertyValidator("ldapServerMetadata",CfnBroker_LdapServerMetadataPropertyValidator)(properties.ldapServerMetadata)),errors.collect(cdk.propertyValidator("logs",CfnBroker_LogListPropertyValidator)(properties.logs)),errors.collect(cdk.propertyValidator("maintenanceWindowStartTime",CfnBroker_MaintenanceWindowPropertyValidator)(properties.maintenanceWindowStartTime)),errors.collect(cdk.propertyValidator("publiclyAccessible",cdk.requiredValidator)(properties.publiclyAccessible)),errors.collect(cdk.propertyValidator("publiclyAccessible",cdk.validateBoolean)(properties.publiclyAccessible)),errors.collect(cdk.propertyValidator("securityGroups",cdk.listValidator(cdk.validateString))(properties.securityGroups)),errors.collect(cdk.propertyValidator("storageType",cdk.validateString)(properties.storageType)),errors.collect(cdk.propertyValidator("subnetIds",cdk.listValidator(cdk.validateString))(properties.subnetIds)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(CfnBroker_TagsEntryPropertyValidator))(properties.tags)),errors.collect(cdk.propertyValidator("users",cdk.requiredValidator)(properties.users)),errors.collect(cdk.propertyValidator("users",cdk.listValidator(CfnBroker_UserPropertyValidator))(properties.users)),errors.wrap('supplied properties not correct for "CfnBrokerProps"')}function cfnBrokerPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnBrokerPropsValidator(properties).assertSuccess(),{AutoMinorVersionUpgrade:cdk.booleanToCloudFormation(properties.autoMinorVersionUpgrade),BrokerName:cdk.stringToCloudFormation(properties.brokerName),DeploymentMode:cdk.stringToCloudFormation(properties.deploymentMode),EngineType:cdk.stringToCloudFormation(properties.engineType),EngineVersion:cdk.stringToCloudFormation(properties.engineVersion),HostInstanceType:cdk.stringToCloudFormation(properties.hostInstanceType),PubliclyAccessible:cdk.booleanToCloudFormation(properties.publiclyAccessible),Users:cdk.listMapper(cfnBrokerUserPropertyToCloudFormation)(properties.users),AuthenticationStrategy:cdk.stringToCloudFormation(properties.authenticationStrategy),Configuration:cfnBrokerConfigurationIdPropertyToCloudFormation(properties.configuration),EncryptionOptions:cfnBrokerEncryptionOptionsPropertyToCloudFormation(properties.encryptionOptions),LdapServerMetadata:cfnBrokerLdapServerMetadataPropertyToCloudFormation(properties.ldapServerMetadata),Logs:cfnBrokerLogListPropertyToCloudFormation(properties.logs),MaintenanceWindowStartTime:cfnBrokerMaintenanceWindowPropertyToCloudFormation(properties.maintenanceWindowStartTime),SecurityGroups:cdk.listMapper(cdk.stringToCloudFormation)(properties.securityGroups),StorageType:cdk.stringToCloudFormation(properties.storageType),SubnetIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.subnetIds),Tags:cdk.listMapper(cfnBrokerTagsEntryPropertyToCloudFormation)(properties.tags)}):properties}function CfnBrokerPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("autoMinorVersionUpgrade","AutoMinorVersionUpgrade",cfn_parse.FromCloudFormation.getBoolean(properties.AutoMinorVersionUpgrade)),ret.addPropertyResult("brokerName","BrokerName",cfn_parse.FromCloudFormation.getString(properties.BrokerName)),ret.addPropertyResult("deploymentMode","DeploymentMode",cfn_parse.FromCloudFormation.getString(properties.DeploymentMode)),ret.addPropertyResult("engineType","EngineType",cfn_parse.FromCloudFormation.getString(properties.EngineType)),ret.addPropertyResult("engineVersion","EngineVersion",cfn_parse.FromCloudFormation.getString(properties.EngineVersion)),ret.addPropertyResult("hostInstanceType","HostInstanceType",cfn_parse.FromCloudFormation.getString(properties.HostInstanceType)),ret.addPropertyResult("publiclyAccessible","PubliclyAccessible",cfn_parse.FromCloudFormation.getBoolean(properties.PubliclyAccessible)),ret.addPropertyResult("users","Users",cfn_parse.FromCloudFormation.getArray(CfnBrokerUserPropertyFromCloudFormation)(properties.Users)),ret.addPropertyResult("authenticationStrategy","AuthenticationStrategy",properties.AuthenticationStrategy!=null?cfn_parse.FromCloudFormation.getString(properties.AuthenticationStrategy):void 0),ret.addPropertyResult("configuration","Configuration",properties.Configuration!=null?CfnBrokerConfigurationIdPropertyFromCloudFormation(properties.Configuration):void 0),ret.addPropertyResult("encryptionOptions","EncryptionOptions",properties.EncryptionOptions!=null?CfnBrokerEncryptionOptionsPropertyFromCloudFormation(properties.EncryptionOptions):void 0),ret.addPropertyResult("ldapServerMetadata","LdapServerMetadata",properties.LdapServerMetadata!=null?CfnBrokerLdapServerMetadataPropertyFromCloudFormation(properties.LdapServerMetadata):void 0),ret.addPropertyResult("logs","Logs",properties.Logs!=null?CfnBrokerLogListPropertyFromCloudFormation(properties.Logs):void 0),ret.addPropertyResult("maintenanceWindowStartTime","MaintenanceWindowStartTime",properties.MaintenanceWindowStartTime!=null?CfnBrokerMaintenanceWindowPropertyFromCloudFormation(properties.MaintenanceWindowStartTime):void 0),ret.addPropertyResult("securityGroups","SecurityGroups",properties.SecurityGroups!=null?cfn_parse.FromCloudFormation.getStringArray(properties.SecurityGroups):void 0),ret.addPropertyResult("storageType","StorageType",properties.StorageType!=null?cfn_parse.FromCloudFormation.getString(properties.StorageType):void 0),ret.addPropertyResult("subnetIds","SubnetIds",properties.SubnetIds!=null?cfn_parse.FromCloudFormation.getStringArray(properties.SubnetIds):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(CfnBrokerTagsEntryPropertyFromCloudFormation)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnBroker extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnBroker.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_amazonmq_CfnBrokerProps(props),cdk.requireProperty(props,"autoMinorVersionUpgrade",this),cdk.requireProperty(props,"brokerName",this),cdk.requireProperty(props,"deploymentMode",this),cdk.requireProperty(props,"engineType",this),cdk.requireProperty(props,"engineVersion",this),cdk.requireProperty(props,"hostInstanceType",this),cdk.requireProperty(props,"publiclyAccessible",this),cdk.requireProperty(props,"users",this),this.attrAmqpEndpoints=cdk.Token.asList(this.getAtt("AmqpEndpoints")),this.attrArn=cdk.Token.asString(this.getAtt("Arn")),this.attrConfigurationId=cdk.Token.asString(this.getAtt("ConfigurationId")),this.attrConfigurationRevision=cdk.Token.asNumber(this.getAtt("ConfigurationRevision")),this.attrIpAddresses=cdk.Token.asList(this.getAtt("IpAddresses")),this.attrMqttEndpoints=cdk.Token.asList(this.getAtt("MqttEndpoints")),this.attrOpenWireEndpoints=cdk.Token.asList(this.getAtt("OpenWireEndpoints")),this.attrStompEndpoints=cdk.Token.asList(this.getAtt("StompEndpoints")),this.attrWssEndpoints=cdk.Token.asList(this.getAtt("WssEndpoints")),this.autoMinorVersionUpgrade=props.autoMinorVersionUpgrade,this.brokerName=props.brokerName,this.deploymentMode=props.deploymentMode,this.engineType=props.engineType,this.engineVersion=props.engineVersion,this.hostInstanceType=props.hostInstanceType,this.publiclyAccessible=props.publiclyAccessible,this.users=props.users,this.authenticationStrategy=props.authenticationStrategy,this.configuration=props.configuration,this.encryptionOptions=props.encryptionOptions,this.ldapServerMetadata=props.ldapServerMetadata,this.logs=props.logs,this.maintenanceWindowStartTime=props.maintenanceWindowStartTime,this.securityGroups=props.securityGroups,this.storageType=props.storageType,this.subnetIds=props.subnetIds,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::AmazonMQ::Broker",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnBrokerPropsFromCloudFormation(resourceProperties),ret=new CfnBroker(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnBroker.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{autoMinorVersionUpgrade:this.autoMinorVersionUpgrade,brokerName:this.brokerName,deploymentMode:this.deploymentMode,engineType:this.engineType,engineVersion:this.engineVersion,hostInstanceType:this.hostInstanceType,publiclyAccessible:this.publiclyAccessible,users:this.users,authenticationStrategy:this.authenticationStrategy,configuration:this.configuration,encryptionOptions:this.encryptionOptions,ldapServerMetadata:this.ldapServerMetadata,logs:this.logs,maintenanceWindowStartTime:this.maintenanceWindowStartTime,securityGroups:this.securityGroups,storageType:this.storageType,subnetIds:this.subnetIds,tags:this.tags.renderTags()}}renderProperties(props){return cfnBrokerPropsToCloudFormation(props)}}exports.CfnBroker=CfnBroker,_a=JSII_RTTI_SYMBOL_1,CfnBroker[_a]={fqn:"aws-cdk-lib.aws_amazonmq.CfnBroker",version:"2.20.0"},CfnBroker.CFN_RESOURCE_TYPE_NAME="AWS::AmazonMQ::Broker";function CfnBroker_ConfigurationIdPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("id",cdk.requiredValidator)(properties.id)),errors.collect(cdk.propertyValidator("id",cdk.validateString)(properties.id)),errors.collect(cdk.propertyValidator("revision",cdk.requiredValidator)(properties.revision)),errors.collect(cdk.propertyValidator("revision",cdk.validateNumber)(properties.revision)),errors.wrap('supplied properties not correct for "ConfigurationIdProperty"')}function cfnBrokerConfigurationIdPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnBroker_ConfigurationIdPropertyValidator(properties).assertSuccess(),{Id:cdk.stringToCloudFormation(properties.id),Revision:cdk.numberToCloudFormation(properties.revision)}):properties}function CfnBrokerConfigurationIdPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("id","Id",cfn_parse.FromCloudFormation.getString(properties.Id)),ret.addPropertyResult("revision","Revision",cfn_parse.FromCloudFormation.getNumber(properties.Revision)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBroker_EncryptionOptionsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("kmsKeyId",cdk.validateString)(properties.kmsKeyId)),errors.collect(cdk.propertyValidator("useAwsOwnedKey",cdk.requiredValidator)(properties.useAwsOwnedKey)),errors.collect(cdk.propertyValidator("useAwsOwnedKey",cdk.validateBoolean)(properties.useAwsOwnedKey)),errors.wrap('supplied properties not correct for "EncryptionOptionsProperty"')}function cfnBrokerEncryptionOptionsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnBroker_EncryptionOptionsPropertyValidator(properties).assertSuccess(),{KmsKeyId:cdk.stringToCloudFormation(properties.kmsKeyId),UseAwsOwnedKey:cdk.booleanToCloudFormation(properties.useAwsOwnedKey)}):properties}function CfnBrokerEncryptionOptionsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("kmsKeyId","KmsKeyId",properties.KmsKeyId!=null?cfn_parse.FromCloudFormation.getString(properties.KmsKeyId):void 0),ret.addPropertyResult("useAwsOwnedKey","UseAwsOwnedKey",cfn_parse.FromCloudFormation.getBoolean(properties.UseAwsOwnedKey)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBroker_LdapServerMetadataPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("hosts",cdk.requiredValidator)(properties.hosts)),errors.collect(cdk.propertyValidator("hosts",cdk.listValidator(cdk.validateString))(properties.hosts)),errors.collect(cdk.propertyValidator("roleBase",cdk.requiredValidator)(properties.roleBase)),errors.collect(cdk.propertyValidator("roleBase",cdk.validateString)(properties.roleBase)),errors.collect(cdk.propertyValidator("roleName",cdk.validateString)(properties.roleName)),errors.collect(cdk.propertyValidator("roleSearchMatching",cdk.requiredValidator)(properties.roleSearchMatching)),errors.collect(cdk.propertyValidator("roleSearchMatching",cdk.validateString)(properties.roleSearchMatching)),errors.collect(cdk.propertyValidator("roleSearchSubtree",cdk.validateBoolean)(properties.roleSearchSubtree)),errors.collect(cdk.propertyValidator("serviceAccountPassword",cdk.requiredValidator)(properties.serviceAccountPassword)),errors.collect(cdk.propertyValidator("serviceAccountPassword",cdk.validateString)(properties.serviceAccountPassword)),errors.collect(cdk.propertyValidator("serviceAccountUsername",cdk.requiredValidator)(properties.serviceAccountUsername)),errors.collect(cdk.propertyValidator("serviceAccountUsername",cdk.validateString)(properties.serviceAccountUsername)),errors.collect(cdk.propertyValidator("userBase",cdk.requiredValidator)(properties.userBase)),errors.collect(cdk.propertyValidator("userBase",cdk.validateString)(properties.userBase)),errors.collect(cdk.propertyValidator("userRoleName",cdk.validateString)(properties.userRoleName)),errors.collect(cdk.propertyValidator("userSearchMatching",cdk.requiredValidator)(properties.userSearchMatching)),errors.collect(cdk.propertyValidator("userSearchMatching",cdk.validateString)(properties.userSearchMatching)),errors.collect(cdk.propertyValidator("userSearchSubtree",cdk.validateBoolean)(properties.userSearchSubtree)),errors.wrap('supplied properties not correct for "LdapServerMetadataProperty"')}function cfnBrokerLdapServerMetadataPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnBroker_LdapServerMetadataPropertyValidator(properties).assertSuccess(),{Hosts:cdk.listMapper(cdk.stringToCloudFormation)(properties.hosts),RoleBase:cdk.stringToCloudFormation(properties.roleBase),RoleName:cdk.stringToCloudFormation(properties.roleName),RoleSearchMatching:cdk.stringToCloudFormation(properties.roleSearchMatching),RoleSearchSubtree:cdk.booleanToCloudFormation(properties.roleSearchSubtree),ServiceAccountPassword:cdk.stringToCloudFormation(properties.serviceAccountPassword),ServiceAccountUsername:cdk.stringToCloudFormation(properties.serviceAccountUsername),UserBase:cdk.stringToCloudFormation(properties.userBase),UserRoleName:cdk.stringToCloudFormation(properties.userRoleName),UserSearchMatching:cdk.stringToCloudFormation(properties.userSearchMatching),UserSearchSubtree:cdk.booleanToCloudFormation(properties.userSearchSubtree)}):properties}function CfnBrokerLdapServerMetadataPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("hosts","Hosts",cfn_parse.FromCloudFormation.getStringArray(properties.Hosts)),ret.addPropertyResult("roleBase","RoleBase",cfn_parse.FromCloudFormation.getString(properties.RoleBase)),ret.addPropertyResult("roleName","RoleName",properties.RoleName!=null?cfn_parse.FromCloudFormation.getString(properties.RoleName):void 0),ret.addPropertyResult("roleSearchMatching","RoleSearchMatching",cfn_parse.FromCloudFormation.getString(properties.RoleSearchMatching)),ret.addPropertyResult("roleSearchSubtree","RoleSearchSubtree",properties.RoleSearchSubtree!=null?cfn_parse.FromCloudFormation.getBoolean(properties.RoleSearchSubtree):void 0),ret.addPropertyResult("serviceAccountPassword","ServiceAccountPassword",cfn_parse.FromCloudFormation.getString(properties.ServiceAccountPassword)),ret.addPropertyResult("serviceAccountUsername","ServiceAccountUsername",cfn_parse.FromCloudFormation.getString(properties.ServiceAccountUsername)),ret.addPropertyResult("userBase","UserBase",cfn_parse.FromCloudFormation.getString(properties.UserBase)),ret.addPropertyResult("userRoleName","UserRoleName",properties.UserRoleName!=null?cfn_parse.FromCloudFormation.getString(properties.UserRoleName):void 0),ret.addPropertyResult("userSearchMatching","UserSearchMatching",cfn_parse.FromCloudFormation.getString(properties.UserSearchMatching)),ret.addPropertyResult("userSearchSubtree","UserSearchSubtree",properties.UserSearchSubtree!=null?cfn_parse.FromCloudFormation.getBoolean(properties.UserSearchSubtree):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBroker_LogListPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("audit",cdk.validateBoolean)(properties.audit)),errors.collect(cdk.propertyValidator("general",cdk.validateBoolean)(properties.general)),errors.wrap('supplied properties not correct for "LogListProperty"')}function cfnBrokerLogListPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnBroker_LogListPropertyValidator(properties).assertSuccess(),{Audit:cdk.booleanToCloudFormation(properties.audit),General:cdk.booleanToCloudFormation(properties.general)}):properties}function CfnBrokerLogListPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("audit","Audit",properties.Audit!=null?cfn_parse.FromCloudFormation.getBoolean(properties.Audit):void 0),ret.addPropertyResult("general","General",properties.General!=null?cfn_parse.FromCloudFormation.getBoolean(properties.General):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBroker_MaintenanceWindowPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("dayOfWeek",cdk.requiredValidator)(properties.dayOfWeek)),errors.collect(cdk.propertyValidator("dayOfWeek",cdk.validateString)(properties.dayOfWeek)),errors.collect(cdk.propertyValidator("timeOfDay",cdk.requiredValidator)(properties.timeOfDay)),errors.collect(cdk.propertyValidator("timeOfDay",cdk.validateString)(properties.timeOfDay)),errors.collect(cdk.propertyValidator("timeZone",cdk.requiredValidator)(properties.timeZone)),errors.collect(cdk.propertyValidator("timeZone",cdk.validateString)(properties.timeZone)),errors.wrap('supplied properties not correct for "MaintenanceWindowProperty"')}function cfnBrokerMaintenanceWindowPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnBroker_MaintenanceWindowPropertyValidator(properties).assertSuccess(),{DayOfWeek:cdk.stringToCloudFormation(properties.dayOfWeek),TimeOfDay:cdk.stringToCloudFormation(properties.timeOfDay),TimeZone:cdk.stringToCloudFormation(properties.timeZone)}):properties}function CfnBrokerMaintenanceWindowPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("dayOfWeek","DayOfWeek",cfn_parse.FromCloudFormation.getString(properties.DayOfWeek)),ret.addPropertyResult("timeOfDay","TimeOfDay",cfn_parse.FromCloudFormation.getString(properties.TimeOfDay)),ret.addPropertyResult("timeZone","TimeZone",cfn_parse.FromCloudFormation.getString(properties.TimeZone)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBroker_TagsEntryPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("key",cdk.requiredValidator)(properties.key)),errors.collect(cdk.propertyValidator("key",cdk.validateString)(properties.key)),errors.collect(cdk.propertyValidator("value",cdk.requiredValidator)(properties.value)),errors.collect(cdk.propertyValidator("value",cdk.validateString)(properties.value)),errors.wrap('supplied properties not correct for "TagsEntryProperty"')}function cfnBrokerTagsEntryPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnBroker_TagsEntryPropertyValidator(properties).assertSuccess(),{Key:cdk.stringToCloudFormation(properties.key),Value:cdk.stringToCloudFormation(properties.value)}):properties}function CfnBrokerTagsEntryPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("key","Key",cfn_parse.FromCloudFormation.getString(properties.Key)),ret.addPropertyResult("value","Value",cfn_parse.FromCloudFormation.getString(properties.Value)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBroker_UserPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("consoleAccess",cdk.validateBoolean)(properties.consoleAccess)),errors.collect(cdk.propertyValidator("groups",cdk.listValidator(cdk.validateString))(properties.groups)),errors.collect(cdk.propertyValidator("password",cdk.requiredValidator)(properties.password)),errors.collect(cdk.propertyValidator("password",cdk.validateString)(properties.password)),errors.collect(cdk.propertyValidator("username",cdk.requiredValidator)(properties.username)),errors.collect(cdk.propertyValidator("username",cdk.validateString)(properties.username)),errors.wrap('supplied properties not correct for "UserProperty"')}function cfnBrokerUserPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnBroker_UserPropertyValidator(properties).assertSuccess(),{ConsoleAccess:cdk.booleanToCloudFormation(properties.consoleAccess),Groups:cdk.listMapper(cdk.stringToCloudFormation)(properties.groups),Password:cdk.stringToCloudFormation(properties.password),Username:cdk.stringToCloudFormation(properties.username)}):properties}function CfnBrokerUserPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("consoleAccess","ConsoleAccess",properties.ConsoleAccess!=null?cfn_parse.FromCloudFormation.getBoolean(properties.ConsoleAccess):void 0),ret.addPropertyResult("groups","Groups",properties.Groups!=null?cfn_parse.FromCloudFormation.getStringArray(properties.Groups):void 0),ret.addPropertyResult("password","Password",cfn_parse.FromCloudFormation.getString(properties.Password)),ret.addPropertyResult("username","Username",cfn_parse.FromCloudFormation.getString(properties.Username)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnConfigurationPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("authenticationStrategy",cdk.validateString)(properties.authenticationStrategy)),errors.collect(cdk.propertyValidator("data",cdk.requiredValidator)(properties.data)),errors.collect(cdk.propertyValidator("data",cdk.validateString)(properties.data)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("engineType",cdk.requiredValidator)(properties.engineType)),errors.collect(cdk.propertyValidator("engineType",cdk.validateString)(properties.engineType)),errors.collect(cdk.propertyValidator("engineVersion",cdk.requiredValidator)(properties.engineVersion)),errors.collect(cdk.propertyValidator("engineVersion",cdk.validateString)(properties.engineVersion)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(CfnConfiguration_TagsEntryPropertyValidator))(properties.tags)),errors.wrap('supplied properties not correct for "CfnConfigurationProps"')}function cfnConfigurationPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnConfigurationPropsValidator(properties).assertSuccess(),{Data:cdk.stringToCloudFormation(properties.data),EngineType:cdk.stringToCloudFormation(properties.engineType),EngineVersion:cdk.stringToCloudFormation(properties.engineVersion),Name:cdk.stringToCloudFormation(properties.name),AuthenticationStrategy:cdk.stringToCloudFormation(properties.authenticationStrategy),Description:cdk.stringToCloudFormation(properties.description),Tags:cdk.listMapper(cfnConfigurationTagsEntryPropertyToCloudFormation)(properties.tags)}):properties}function CfnConfigurationPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("data","Data",cfn_parse.FromCloudFormation.getString(properties.Data)),ret.addPropertyResult("engineType","EngineType",cfn_parse.FromCloudFormation.getString(properties.EngineType)),ret.addPropertyResult("engineVersion","EngineVersion",cfn_parse.FromCloudFormation.getString(properties.EngineVersion)),ret.addPropertyResult("name","Name",cfn_parse.FromCloudFormation.getString(properties.Name)),ret.addPropertyResult("authenticationStrategy","AuthenticationStrategy",properties.AuthenticationStrategy!=null?cfn_parse.FromCloudFormation.getString(properties.AuthenticationStrategy):void 0),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(CfnConfigurationTagsEntryPropertyFromCloudFormation)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnConfiguration extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnConfiguration.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_amazonmq_CfnConfigurationProps(props),cdk.requireProperty(props,"data",this),cdk.requireProperty(props,"engineType",this),cdk.requireProperty(props,"engineVersion",this),cdk.requireProperty(props,"name",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn")),this.attrId=cdk.Token.asString(this.getAtt("Id")),this.attrRevision=cdk.Token.asNumber(this.getAtt("Revision")),this.data=props.data,this.engineType=props.engineType,this.engineVersion=props.engineVersion,this.name=props.name,this.authenticationStrategy=props.authenticationStrategy,this.description=props.description,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::AmazonMQ::Configuration",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnConfigurationPropsFromCloudFormation(resourceProperties),ret=new CfnConfiguration(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnConfiguration.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{data:this.data,engineType:this.engineType,engineVersion:this.engineVersion,name:this.name,authenticationStrategy:this.authenticationStrategy,description:this.description,tags:this.tags.renderTags()}}renderProperties(props){return cfnConfigurationPropsToCloudFormation(props)}}exports.CfnConfiguration=CfnConfiguration,_b=JSII_RTTI_SYMBOL_1,CfnConfiguration[_b]={fqn:"aws-cdk-lib.aws_amazonmq.CfnConfiguration",version:"2.20.0"},CfnConfiguration.CFN_RESOURCE_TYPE_NAME="AWS::AmazonMQ::Configuration";function CfnConfiguration_TagsEntryPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("key",cdk.requiredValidator)(properties.key)),errors.collect(cdk.propertyValidator("key",cdk.validateString)(properties.key)),errors.collect(cdk.propertyValidator("value",cdk.requiredValidator)(properties.value)),errors.collect(cdk.propertyValidator("value",cdk.validateString)(properties.value)),errors.wrap('supplied properties not correct for "TagsEntryProperty"')}function cfnConfigurationTagsEntryPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnConfiguration_TagsEntryPropertyValidator(properties).assertSuccess(),{Key:cdk.stringToCloudFormation(properties.key),Value:cdk.stringToCloudFormation(properties.value)}):properties}function CfnConfigurationTagsEntryPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("key","Key",cfn_parse.FromCloudFormation.getString(properties.Key)),ret.addPropertyResult("value","Value",cfn_parse.FromCloudFormation.getString(properties.Value)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnConfigurationAssociationPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("broker",cdk.requiredValidator)(properties.broker)),errors.collect(cdk.propertyValidator("broker",cdk.validateString)(properties.broker)),errors.collect(cdk.propertyValidator("configuration",cdk.requiredValidator)(properties.configuration)),errors.collect(cdk.propertyValidator("configuration",CfnConfigurationAssociation_ConfigurationIdPropertyValidator)(properties.configuration)),errors.wrap('supplied properties not correct for "CfnConfigurationAssociationProps"')}function cfnConfigurationAssociationPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnConfigurationAssociationPropsValidator(properties).assertSuccess(),{Broker:cdk.stringToCloudFormation(properties.broker),Configuration:cfnConfigurationAssociationConfigurationIdPropertyToCloudFormation(properties.configuration)}):properties}function CfnConfigurationAssociationPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("broker","Broker",cfn_parse.FromCloudFormation.getString(properties.Broker)),ret.addPropertyResult("configuration","Configuration",CfnConfigurationAssociationConfigurationIdPropertyFromCloudFormation(properties.Configuration)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnConfigurationAssociation extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnConfigurationAssociation.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_amazonmq_CfnConfigurationAssociationProps(props),cdk.requireProperty(props,"broker",this),cdk.requireProperty(props,"configuration",this),this.broker=props.broker,this.configuration=props.configuration}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnConfigurationAssociationPropsFromCloudFormation(resourceProperties),ret=new CfnConfigurationAssociation(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnConfigurationAssociation.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{broker:this.broker,configuration:this.configuration}}renderProperties(props){return cfnConfigurationAssociationPropsToCloudFormation(props)}}exports.CfnConfigurationAssociation=CfnConfigurationAssociation,_c=JSII_RTTI_SYMBOL_1,CfnConfigurationAssociation[_c]={fqn:"aws-cdk-lib.aws_amazonmq.CfnConfigurationAssociation",version:"2.20.0"},CfnConfigurationAssociation.CFN_RESOURCE_TYPE_NAME="AWS::AmazonMQ::ConfigurationAssociation";function CfnConfigurationAssociation_ConfigurationIdPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("id",cdk.requiredValidator)(properties.id)),errors.collect(cdk.propertyValidator("id",cdk.validateString)(properties.id)),errors.collect(cdk.propertyValidator("revision",cdk.requiredValidator)(properties.revision)),errors.collect(cdk.propertyValidator("revision",cdk.validateNumber)(properties.revision)),errors.wrap('supplied properties not correct for "ConfigurationIdProperty"')}function cfnConfigurationAssociationConfigurationIdPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnConfigurationAssociation_ConfigurationIdPropertyValidator(properties).assertSuccess(),{Id:cdk.stringToCloudFormation(properties.id),Revision:cdk.numberToCloudFormation(properties.revision)}):properties}function CfnConfigurationAssociationConfigurationIdPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("id","Id",cfn_parse.FromCloudFormation.getString(properties.Id)),ret.addPropertyResult("revision","Revision",cfn_parse.FromCloudFormation.getNumber(properties.Revision)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
//# sourceMappingURL=amazonmq.generated.js.map
