{
  "version": 3,
  "sources": ["accelerator.ts"],
  "sourcesContent": ["import * as cdk from '../../core';\nimport { Construct } from 'constructs';\nimport * as ga from './globalaccelerator.generated';\nimport { Listener, ListenerOptions } from './listener';\n\n/**\n * The interface of the Accelerator\n */\nexport interface IAccelerator extends cdk.IResource {\n  /**\n   * The ARN of the accelerator\n   *\n   * @attribute\n   */\n  readonly acceleratorArn: string;\n\n  /**\n   * The Domain Name System (DNS) name that Global Accelerator creates that points to your accelerator's static\n   * IP addresses.\n   *\n   * @attribute\n   */\n  readonly dnsName: string;\n}\n\n/**\n * Construct properties of the Accelerator\n */\nexport interface AcceleratorProps {\n  /**\n   * The name of the accelerator\n   *\n   * @default - resource ID\n   */\n  readonly acceleratorName?: string;\n\n  /**\n   * Indicates whether the accelerator is enabled.\n   *\n   * @default true\n   */\n  readonly enabled?: boolean;\n}\n\n/**\n * Attributes required to import an existing accelerator to the stack\n */\nexport interface AcceleratorAttributes {\n  /**\n   * The ARN of the accelerator\n   */\n  readonly acceleratorArn: string;\n\n  /**\n   * The DNS name of the accelerator\n   */\n  readonly dnsName: string;\n}\n\n/**\n * The Accelerator construct\n */\nexport class Accelerator extends cdk.Resource implements IAccelerator {\n  /**\n   * import from attributes\n   */\n  public static fromAcceleratorAttributes(scope: Construct, id: string, attrs: AcceleratorAttributes): IAccelerator {\n    class Import extends cdk.Resource implements IAccelerator {\n      public readonly acceleratorArn = attrs.acceleratorArn;\n      public readonly dnsName = attrs.dnsName;\n    }\n    return new Import(scope, id);\n  }\n  /**\n   * The ARN of the accelerator.\n   */\n  public readonly acceleratorArn: string;\n\n  /**\n   * The Domain Name System (DNS) name that Global Accelerator creates that points to your accelerator's static\n   * IP addresses.\n   */\n  public readonly dnsName: string;\n\n  constructor(scope: Construct, id: string, props: AcceleratorProps = {}) {\n    super(scope, id);\n\n    const resource = new ga.CfnAccelerator(this, 'Resource', {\n      enabled: props.enabled ?? true,\n      name: props.acceleratorName ?? cdk.Names.uniqueId(this),\n    });\n\n    this.acceleratorArn = resource.attrAcceleratorArn;\n    this.dnsName = resource.attrDnsName;\n  }\n\n  /**\n   * Add a listener to the accelerator\n   */\n  public addListener(id: string, options: ListenerOptions) {\n    return new Listener(this, id, {\n      accelerator: this,\n      ...options,\n    });\n  }\n}\n"],
  "mappings": "kNAAA,IAAA,QAAA,YAAA,EAEA,GAAA,QAAA,+BAAA,EACA,WAAA,QAAA,YAAA,EA2DA,MAAa,mBAAoB,KAAI,QAAQ,CAsB3C,YAAY,MAAkB,GAAY,MAA0B,CAAA,EAAE,WACpE,MAAM,MAAO,EAAE,oFAEf,KAAM,UAAW,GAAI,IAAG,eAAe,KAAM,WAAY,CACvD,QAAO,IAAE,MAAM,WAAO,MAAA,KAAA,OAAA,GAAI,GAC1B,KAAI,IAAE,MAAM,mBAAe,MAAA,KAAA,OAAA,GAAI,IAAI,MAAM,SAAS,IAAI,EACvD,EAED,KAAK,eAAiB,SAAS,mBAC/B,KAAK,QAAU,SAAS,kBA3BZ,2BAA0B,MAAkB,GAAY,MAA4B,wFAChG,MAAM,cAAe,KAAI,QAAQ,CAAjC,aAAA,qBACkB,KAAA,eAAiB,MAAM,eACvB,KAAA,QAAU,MAAM,OAClC,EACA,MAAO,IAAI,QAAO,MAAO,EAAE,EA4BtB,YAAY,GAAY,QAAwB,2FAC9C,GAAI,YAAA,SAAS,KAAM,GAAI,CAC5B,YAAa,QACV,QACJ,GAzCL,QAAA,YAAA",
  "names": []
}
