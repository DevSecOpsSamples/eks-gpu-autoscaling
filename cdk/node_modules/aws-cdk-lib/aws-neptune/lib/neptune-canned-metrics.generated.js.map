{
  "version": 3,
  "sources": ["neptune-canned-metrics.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nexport class NeptuneMetrics {\n  public static cpuUtilizationAverage(dimensions: { DBClusterIdentifier: string }) {\n    return {\n      namespace: 'AWS/Neptune',\n      metricName: 'CPUUtilization',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static freeLocalStorageMinimum(dimensions: { DBClusterIdentifier: string }) {\n    return {\n      namespace: 'AWS/Neptune',\n      metricName: 'FreeLocalStorage',\n      dimensionsMap: dimensions,\n      statistic: 'Minimum',\n    };\n  }\n  public static freeableMemoryMinimum(dimensions: { DBClusterIdentifier: string }) {\n    return {\n      namespace: 'AWS/Neptune',\n      metricName: 'FreeableMemory',\n      dimensionsMap: dimensions,\n      statistic: 'Minimum',\n    };\n  }\n  public static gremlinErrorsSum(dimensions: { DBClusterIdentifier: string }) {\n    return {\n      namespace: 'AWS/Neptune',\n      metricName: 'GremlinErrors',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static gremlinRequestsSum(dimensions: { DBClusterIdentifier: string }) {\n    return {\n      namespace: 'AWS/Neptune',\n      metricName: 'GremlinRequests',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static gremlinRequestsPerSecAverage(dimensions: { DBClusterIdentifier: string }) {\n    return {\n      namespace: 'AWS/Neptune',\n      metricName: 'GremlinRequestsPerSec',\n      dimensionsMap: dimensions,\n      statistic: 'Average',\n    };\n  }\n  public static http413Sum(dimensions: { DBClusterIdentifier: string }) {\n    return {\n      namespace: 'AWS/Neptune',\n      metricName: 'Http413',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static http500Sum(dimensions: { DBClusterIdentifier: string }) {\n    return {\n      namespace: 'AWS/Neptune',\n      metricName: 'Http500',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static loaderRequestsSum(dimensions: { DBClusterIdentifier: string }) {\n    return {\n      namespace: 'AWS/Neptune',\n      metricName: 'LoaderRequests',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static networkReceiveThroughputSum(dimensions: { DBClusterIdentifier: string }) {\n    return {\n      namespace: 'AWS/Neptune',\n      metricName: 'NetworkReceiveThroughput',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static sparqlErrorsSum(dimensions: { DBClusterIdentifier: string }) {\n    return {\n      namespace: 'AWS/Neptune',\n      metricName: 'SparqlErrors',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static sparqlRequestsPerSecSum(dimensions: { DBClusterIdentifier: string }) {\n    return {\n      namespace: 'AWS/Neptune',\n      metricName: 'SparqlRequestsPerSec',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static volumeBytesUsedSum(dimensions: { DBClusterIdentifier: string }) {\n    return {\n      namespace: 'AWS/Neptune',\n      metricName: 'VolumeBytesUsed',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static volumeReadIoPsSum(dimensions: { DBClusterIdentifier: string }) {\n    return {\n      namespace: 'AWS/Neptune',\n      metricName: 'VolumeReadIOPs',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n  public static volumeWriteIoPsSum(dimensions: { DBClusterIdentifier: string }) {\n    return {\n      namespace: 'AWS/Neptune',\n      metricName: 'VolumeWriteIOPs',\n      dimensionsMap: dimensions,\n      statistic: 'Sum',\n    };\n  }\n}\n"],
  "mappings": "kGAIA,MAAa,cAAc,OACX,uBAAsB,WAA2C,CAC7E,MAAO,CACL,UAAW,cACX,WAAY,iBACZ,cAAe,WACf,UAAW,iBAGD,yBAAwB,WAA2C,CAC/E,MAAO,CACL,UAAW,cACX,WAAY,mBACZ,cAAe,WACf,UAAW,iBAGD,uBAAsB,WAA2C,CAC7E,MAAO,CACL,UAAW,cACX,WAAY,iBACZ,cAAe,WACf,UAAW,iBAGD,kBAAiB,WAA2C,CACxE,MAAO,CACL,UAAW,cACX,WAAY,gBACZ,cAAe,WACf,UAAW,aAGD,oBAAmB,WAA2C,CAC1E,MAAO,CACL,UAAW,cACX,WAAY,kBACZ,cAAe,WACf,UAAW,aAGD,8BAA6B,WAA2C,CACpF,MAAO,CACL,UAAW,cACX,WAAY,wBACZ,cAAe,WACf,UAAW,iBAGD,YAAW,WAA2C,CAClE,MAAO,CACL,UAAW,cACX,WAAY,UACZ,cAAe,WACf,UAAW,aAGD,YAAW,WAA2C,CAClE,MAAO,CACL,UAAW,cACX,WAAY,UACZ,cAAe,WACf,UAAW,aAGD,mBAAkB,WAA2C,CACzE,MAAO,CACL,UAAW,cACX,WAAY,iBACZ,cAAe,WACf,UAAW,aAGD,6BAA4B,WAA2C,CACnF,MAAO,CACL,UAAW,cACX,WAAY,2BACZ,cAAe,WACf,UAAW,aAGD,iBAAgB,WAA2C,CACvE,MAAO,CACL,UAAW,cACX,WAAY,eACZ,cAAe,WACf,UAAW,aAGD,yBAAwB,WAA2C,CAC/E,MAAO,CACL,UAAW,cACX,WAAY,uBACZ,cAAe,WACf,UAAW,aAGD,oBAAmB,WAA2C,CAC1E,MAAO,CACL,UAAW,cACX,WAAY,kBACZ,cAAe,WACf,UAAW,aAGD,mBAAkB,WAA2C,CACzE,MAAO,CACL,UAAW,cACX,WAAY,iBACZ,cAAe,WACf,UAAW,aAGD,oBAAmB,WAA2C,CAC1E,MAAO,CACL,UAAW,cACX,WAAY,kBACZ,cAAe,WACf,UAAW,QAtHjB,QAAA,eAAA",
  "names": []
}
