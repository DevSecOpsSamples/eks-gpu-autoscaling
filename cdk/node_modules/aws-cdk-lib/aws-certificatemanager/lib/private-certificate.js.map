{
  "version": 3,
  "sources": ["private-certificate.ts"],
  "sourcesContent": ["import * as acmpca from '../../aws-acmpca';\nimport { Construct } from 'constructs';\nimport { ICertificate } from './certificate';\nimport { CertificateBase } from './certificate-base';\nimport { CfnCertificate } from './certificatemanager.generated';\n\n/**\n * Properties for your private certificate\n */\nexport interface PrivateCertificateProps {\n  /**\n   * Fully-qualified domain name to request a private certificate for.\n   *\n   * May contain wildcards, such as ``*.domain.com``.\n   */\n  readonly domainName: string;\n\n  /**\n   * Alternative domain names on your private certificate.\n   *\n   * Use this to register alternative domain names that represent the same site.\n   *\n   * @default - No additional FQDNs will be included as alternative domain names.\n   */\n  readonly subjectAlternativeNames?: string[];\n\n  /**\n   * Private certificate authority (CA) that will be used to issue the certificate.\n   */\n  readonly certificateAuthority: acmpca.ICertificateAuthority;\n}\n\n/**\n * A private certificate managed by AWS Certificate Manager\n *\n * @resource AWS::CertificateManager::Certificate\n */\nexport class PrivateCertificate extends CertificateBase implements ICertificate {\n  /**\n   * Import a certificate\n   */\n  public static fromCertificateArn(scope: Construct, id: string, certificateArn: string): ICertificate {\n    class Import extends CertificateBase {\n      public readonly certificateArn = certificateArn;\n    }\n\n    return new Import(scope, id);\n  }\n\n  /**\n   * The certificate's ARN\n   */\n  public readonly certificateArn: string;\n\n  constructor(scope: Construct, id: string, props: PrivateCertificateProps) {\n    super(scope, id);\n\n    const cert = new CfnCertificate(this, 'Resource', {\n      domainName: props.domainName,\n      subjectAlternativeNames: props.subjectAlternativeNames,\n      certificateAuthorityArn: props.certificateAuthority.certificateAuthorityArn,\n    });\n\n    this.certificateArn = cert.ref;\n  }\n}\n"],
  "mappings": "yNAGA,mBAAA,QAAA,oBAAA,EACA,+BAAA,QAAA,gCAAA,EAiCA,MAAa,0BAA2B,oBAAA,eAAe,CAiBrD,YAAY,MAAkB,GAAY,MAA8B,CACtE,MAAM,MAAO,EAAE,4FAEf,KAAM,MAAO,GAAI,gCAAA,eAAe,KAAM,WAAY,CAChD,WAAY,MAAM,WAClB,wBAAyB,MAAM,wBAC/B,wBAAyB,MAAM,qBAAqB,wBACrD,EAED,KAAK,eAAiB,KAAK,UAtBf,oBAAmB,MAAkB,GAAY,eAAsB,CACnF,MAAM,cAAe,oBAAA,eAAe,CAApC,aAAA,qBACkB,KAAA,eAAiB,cACnC,EAEA,MAAO,IAAI,QAAO,MAAO,EAAE,GAT/B,QAAA,mBAAA",
  "names": []
}
