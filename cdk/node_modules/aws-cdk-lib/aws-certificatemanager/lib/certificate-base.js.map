{
  "version": 3,
  "sources": ["certificate-base.ts"],
  "sourcesContent": ["import * as cloudwatch from '../../aws-cloudwatch';\nimport { Statistic } from '../../aws-cloudwatch';\nimport { Duration, Resource } from '../../core';\nimport { ICertificate } from './certificate';\n\n/**\n * Shared implementation details of ICertificate implementations.\n *\n * @internal\n */\nexport abstract class CertificateBase extends Resource implements ICertificate {\n  public abstract readonly certificateArn: string;\n\n  /**\n    * If the certificate is provisionned in a different region than the\n    * containing stack, this should be the region in which the certificate lives\n    * so we can correctly create `Metric` instances.\n    */\n  protected readonly region?: string;\n\n  public metricDaysToExpiry(props?: cloudwatch.MetricOptions): cloudwatch.Metric {\n    return new cloudwatch.Metric({\n      period: Duration.days(1),\n      ...props,\n      dimensionsMap: { CertificateArn: this.certificateArn },\n      metricName: 'DaysToExpiry',\n      namespace: 'AWS/CertificateManager',\n      region: this.region,\n      statistic: Statistic.MINIMUM,\n    });\n  }\n}\n"],
  "mappings": "mGAAA,KAAA,YAAA,QAAA,sBAAA,EACA,iBAAA,QAAA,sBAAA,EACA,OAAA,QAAA,YAAA,EAQA,MAAsB,uBAAwB,QAAA,QAAQ,CAU7C,mBAAmB,MAAgC,CACxD,MAAO,IAAI,YAAW,OAAO,CAC3B,OAAQ,OAAA,SAAS,KAAK,CAAC,KACpB,MACH,cAAe,CAAE,eAAgB,KAAK,cAAc,EACpD,WAAY,eACZ,UAAW,yBACX,OAAQ,KAAK,OACb,UAAW,iBAAA,UAAU,QACtB,GAnBL,QAAA,gBAAA",
  "names": []
}
