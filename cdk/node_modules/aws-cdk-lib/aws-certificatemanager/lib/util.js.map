{
  "version": 3,
  "sources": ["util.ts"],
  "sourcesContent": ["import { Arn, ArnFormat, Stack, Token } from '../../core';\nimport { ICertificate } from './certificate';\nimport { DnsValidatedCertificate } from './dns-validated-certificate';\nimport { publicSuffixes } from './public-suffixes';\n\n/**\n * Returns the apex domain (domain.com) from a subdomain (www.sub.domain.com)\n */\nexport function apexDomain(domainName: string): string {\n  const parts = domainName.split('.').reverse();\n\n  let curr: any = publicSuffixes;\n\n  const accumulated: string[] = [];\n  for (const part of parts) {\n    accumulated.push(part);\n    if (!(part in curr)) { break; }\n    curr = curr[part];\n  }\n  return accumulated.reverse().join('.');\n}\n\nexport function isDnsValidatedCertificate(cert: ICertificate): cert is DnsValidatedCertificate {\n  return cert.hasOwnProperty('domainName');\n}\n\nexport function getCertificateRegion(cert: ICertificate): string | undefined {\n  const { certificateArn, stack } = cert;\n\n  if (isDnsValidatedCertificate(cert)) {\n    const requestResource = cert.node.findChild('CertificateRequestorResource').node.defaultChild;\n\n    // @ts-ignore\n    const { _cfnProperties: properties } = requestResource;\n    const { Region: region } = properties;\n\n    if (region && !Token.isUnresolved(region)) {\n      return region;\n    }\n  }\n\n  {\n    const { region } = Arn.split(certificateArn, ArnFormat.SLASH_RESOURCE_NAME);\n\n    if (region && !Token.isUnresolved(region)) {\n      return region;\n    }\n  }\n\n  return Stack.of(stack).region;\n}\n"],
  "mappings": "6JAAA,KAAA,QAAA,QAAA,YAAA,EAGA,kBAAA,QAAA,mBAAA,EAKA,oBAA2B,WAAkB,CAC3C,KAAM,OAAQ,WAAW,MAAM,GAAG,EAAE,QAAO,EAE3C,GAAI,MAAY,kBAAA,eAEhB,KAAM,aAAwB,CAAA,EAC9B,SAAW,QAAQ,OAAO,CAExB,GADA,YAAY,KAAK,IAAI,EACjB,CAAE,QAAQ,OAAS,MACvB,KAAO,KAAK,MAEd,MAAO,aAAY,QAAO,EAAG,KAAK,GAAG,CACvC,CAZA,QAAA,WAAA,WAcA,mCAA0C,KAAkB,CAC1D,MAAO,MAAK,eAAe,YAAY,CACzC,CAFA,QAAA,0BAAA,0BAIA,8BAAqC,KAAkB,CACrD,KAAM,CAAE,eAAgB,OAAU,KAElC,GAAI,0BAA0B,IAAI,EAAG,CACnC,KAAM,iBAAkB,KAAK,KAAK,UAAU,8BAA8B,EAAE,KAAK,aAG3E,CAAE,eAAgB,YAAe,gBACjC,CAAE,OAAQ,QAAW,WAE3B,GAAI,QAAU,CAAC,OAAA,MAAM,aAAa,MAAM,EACtC,MAAO,QAIX,CACE,KAAM,CAAE,QAAW,OAAA,IAAI,MAAM,eAAgB,OAAA,UAAU,mBAAmB,EAE1E,GAAI,QAAU,CAAC,OAAA,MAAM,aAAa,MAAM,EACtC,MAAO,QAIX,MAAO,QAAA,MAAM,GAAG,KAAK,EAAE,MACzB,CAxBA,QAAA,qBAAA",
  "names": []
}
