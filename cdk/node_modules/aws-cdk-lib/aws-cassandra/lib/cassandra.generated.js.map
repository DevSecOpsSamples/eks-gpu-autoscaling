{
  "version": 3,
  "sources": ["cassandra.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-04-07T10:53:53.559Z\",\"fingerprint\":\"jRh7VseXv4/m79WjERLLFLhGwrIGLoJ9DNbx25DVUIs=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n/**\n * Properties for defining a `CfnKeyspace`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-keyspace.html\n */\nexport interface CfnKeyspaceProps {\n\n    /**\n     * The name of the keyspace to be created. The keyspace name is case sensitive. If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the keyspace name. For more information, see [Name type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html) .\n     *\n     * *Length constraints:* Minimum length of 3. Maximum length of 255.\n     *\n     * *Pattern:* `^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-keyspace.html#cfn-cassandra-keyspace-keyspacename\n     */\n    readonly keyspaceName?: string;\n\n    /**\n     * A list of key-value pair tags to be attached to the resource.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-keyspace.html#cfn-cassandra-keyspace-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnKeyspaceProps`\n *\n * @param properties - the TypeScript properties of a `CfnKeyspaceProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnKeyspacePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('keyspaceName', cdk.validateString)(properties.keyspaceName));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnKeyspaceProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Cassandra::Keyspace` resource\n *\n * @param properties - the TypeScript properties of a `CfnKeyspaceProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Cassandra::Keyspace` resource.\n */\n// @ts-ignore TS6133\nfunction cfnKeyspacePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnKeyspacePropsValidator(properties).assertSuccess();\n    return {\n        KeyspaceName: cdk.stringToCloudFormation(properties.keyspaceName),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnKeyspacePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnKeyspaceProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnKeyspaceProps>();\n    ret.addPropertyResult('keyspaceName', 'KeyspaceName', properties.KeyspaceName != null ? cfn_parse.FromCloudFormation.getString(properties.KeyspaceName) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::Cassandra::Keyspace`\n *\n * The `AWS::Cassandra::Keyspace` resource allows you to create a new keyspace in Amazon Keyspaces (for Apache Cassandra). For more information, see [Create a keyspace and a table](https://docs.aws.amazon.com/keyspaces/latest/devguide/getting-started.ddl.html) in the *Amazon Keyspaces Developer Guide* .\n *\n * @cloudformationResource AWS::Cassandra::Keyspace\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-keyspace.html\n */\nexport class CfnKeyspace extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Cassandra::Keyspace\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnKeyspace {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnKeyspacePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnKeyspace(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The name of the keyspace to be created. The keyspace name is case sensitive. If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the keyspace name. For more information, see [Name type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html) .\n     *\n     * *Length constraints:* Minimum length of 3. Maximum length of 255.\n     *\n     * *Pattern:* `^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-keyspace.html#cfn-cassandra-keyspace-keyspacename\n     */\n    public keyspaceName: string | undefined;\n\n    /**\n     * A list of key-value pair tags to be attached to the resource.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-keyspace.html#cfn-cassandra-keyspace-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::Cassandra::Keyspace`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnKeyspaceProps = {}) {\n        super(scope, id, { type: CfnKeyspace.CFN_RESOURCE_TYPE_NAME, properties: props });\n\n        this.keyspaceName = props.keyspaceName;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::Cassandra::Keyspace\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnKeyspace.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            keyspaceName: this.keyspaceName,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnKeyspacePropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnTable`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html\n */\nexport interface CfnTableProps {\n\n    /**\n     * The name of the keyspace in which to create the table. The keyspace must already exist.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-keyspacename\n     */\n    readonly keyspaceName: string;\n\n    /**\n     * One or more columns that uniquely identify every row in the table. Every table must have a partition key.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-partitionkeycolumns\n     */\n    readonly partitionKeyColumns: Array<CfnTable.ColumnProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * The billing mode for the table, which determines how you'll be charged for reads and writes:\n     *\n     * - *On-demand mode* (default) - You pay based on the actual reads and writes your application performs.\n     * - *Provisioned mode* - Lets you specify the number of reads and writes per second that you need for your application.\n     *\n     * If you don't specify a value for this property, then the table will use on-demand mode.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-billingmode\n     */\n    readonly billingMode?: CfnTable.BillingModeProperty | cdk.IResolvable;\n\n    /**\n     * One or more columns that determine how the table data is sorted.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-clusteringkeycolumns\n     */\n    readonly clusteringKeyColumns?: Array<CfnTable.ClusteringKeyColumnProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * The default Time To Live (TTL) value for all rows in a table in seconds. The maximum configurable value is 630,720,000 seconds, which is the equivalent of 20 years. By default, the TTL value for a table is 0, which means data does not expire.\n     *\n     * For more information, see [Setting the default TTL value for a table](https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL-how-it-works.html#ttl-howitworks_default_ttl) in the *Amazon Keyspaces Developer Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-defaulttimetolive\n     */\n    readonly defaultTimeToLive?: number;\n\n    /**\n     * The encryption at rest options for the table.\n     *\n     * - *AWS owned key* (default) - The key is owned by Amazon Keyspaces.\n     * - *Customer managed key* - The key is stored in your account and is created, owned, and managed by you.\n     *\n     * > If you choose encryption with a customer managed key, you must specify a valid customer managed KMS key with permissions granted to Amazon Keyspaces.\n     *\n     * For more information, see [Encryption at rest in Amazon Keyspaces](https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html) in the *Amazon Keyspaces Developer Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-encryptionspecification\n     */\n    readonly encryptionSpecification?: CfnTable.EncryptionSpecificationProperty | cdk.IResolvable;\n\n    /**\n     * Specifies if point-in-time recovery is enabled or disabled for the table. The options are `PointInTimeRecoveryEnabled=true` and `PointInTimeRecoveryEnabled=false` . If not specified, the default is `PointInTimeRecoveryEnabled=false` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-pointintimerecoveryenabled\n     */\n    readonly pointInTimeRecoveryEnabled?: boolean | cdk.IResolvable;\n\n    /**\n     * One or more columns that are not part of the primary key - that is, columns that are *not* defined as partition key columns or clustering key columns.\n     *\n     * You can add regular columns to existing tables by adding them to the template.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-regularcolumns\n     */\n    readonly regularColumns?: Array<CfnTable.ColumnProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * The name of the table to be created. The table name is case sensitive. If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the table name. For more information, see [Name type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html) .\n     *\n     * > If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.\n     *\n     * *Length constraints:* Minimum length of 3. Maximum length of 255.\n     *\n     * *Pattern:* `^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-tablename\n     */\n    readonly tableName?: string;\n\n    /**\n     * A list of key-value pair tags to be attached to the resource.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnTableProps`\n *\n * @param properties - the TypeScript properties of a `CfnTableProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnTablePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('billingMode', CfnTable_BillingModePropertyValidator)(properties.billingMode));\n    errors.collect(cdk.propertyValidator('clusteringKeyColumns', cdk.listValidator(CfnTable_ClusteringKeyColumnPropertyValidator))(properties.clusteringKeyColumns));\n    errors.collect(cdk.propertyValidator('defaultTimeToLive', cdk.validateNumber)(properties.defaultTimeToLive));\n    errors.collect(cdk.propertyValidator('encryptionSpecification', CfnTable_EncryptionSpecificationPropertyValidator)(properties.encryptionSpecification));\n    errors.collect(cdk.propertyValidator('keyspaceName', cdk.requiredValidator)(properties.keyspaceName));\n    errors.collect(cdk.propertyValidator('keyspaceName', cdk.validateString)(properties.keyspaceName));\n    errors.collect(cdk.propertyValidator('partitionKeyColumns', cdk.requiredValidator)(properties.partitionKeyColumns));\n    errors.collect(cdk.propertyValidator('partitionKeyColumns', cdk.listValidator(CfnTable_ColumnPropertyValidator))(properties.partitionKeyColumns));\n    errors.collect(cdk.propertyValidator('pointInTimeRecoveryEnabled', cdk.validateBoolean)(properties.pointInTimeRecoveryEnabled));\n    errors.collect(cdk.propertyValidator('regularColumns', cdk.listValidator(CfnTable_ColumnPropertyValidator))(properties.regularColumns));\n    errors.collect(cdk.propertyValidator('tableName', cdk.validateString)(properties.tableName));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnTableProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Cassandra::Table` resource\n *\n * @param properties - the TypeScript properties of a `CfnTableProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Cassandra::Table` resource.\n */\n// @ts-ignore TS6133\nfunction cfnTablePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnTablePropsValidator(properties).assertSuccess();\n    return {\n        KeyspaceName: cdk.stringToCloudFormation(properties.keyspaceName),\n        PartitionKeyColumns: cdk.listMapper(cfnTableColumnPropertyToCloudFormation)(properties.partitionKeyColumns),\n        BillingMode: cfnTableBillingModePropertyToCloudFormation(properties.billingMode),\n        ClusteringKeyColumns: cdk.listMapper(cfnTableClusteringKeyColumnPropertyToCloudFormation)(properties.clusteringKeyColumns),\n        DefaultTimeToLive: cdk.numberToCloudFormation(properties.defaultTimeToLive),\n        EncryptionSpecification: cfnTableEncryptionSpecificationPropertyToCloudFormation(properties.encryptionSpecification),\n        PointInTimeRecoveryEnabled: cdk.booleanToCloudFormation(properties.pointInTimeRecoveryEnabled),\n        RegularColumns: cdk.listMapper(cfnTableColumnPropertyToCloudFormation)(properties.regularColumns),\n        TableName: cdk.stringToCloudFormation(properties.tableName),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnTablePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnTableProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnTableProps>();\n    ret.addPropertyResult('keyspaceName', 'KeyspaceName', cfn_parse.FromCloudFormation.getString(properties.KeyspaceName));\n    ret.addPropertyResult('partitionKeyColumns', 'PartitionKeyColumns', cfn_parse.FromCloudFormation.getArray(CfnTableColumnPropertyFromCloudFormation)(properties.PartitionKeyColumns));\n    ret.addPropertyResult('billingMode', 'BillingMode', properties.BillingMode != null ? CfnTableBillingModePropertyFromCloudFormation(properties.BillingMode) : undefined);\n    ret.addPropertyResult('clusteringKeyColumns', 'ClusteringKeyColumns', properties.ClusteringKeyColumns != null ? cfn_parse.FromCloudFormation.getArray(CfnTableClusteringKeyColumnPropertyFromCloudFormation)(properties.ClusteringKeyColumns) : undefined);\n    ret.addPropertyResult('defaultTimeToLive', 'DefaultTimeToLive', properties.DefaultTimeToLive != null ? cfn_parse.FromCloudFormation.getNumber(properties.DefaultTimeToLive) : undefined);\n    ret.addPropertyResult('encryptionSpecification', 'EncryptionSpecification', properties.EncryptionSpecification != null ? CfnTableEncryptionSpecificationPropertyFromCloudFormation(properties.EncryptionSpecification) : undefined);\n    ret.addPropertyResult('pointInTimeRecoveryEnabled', 'PointInTimeRecoveryEnabled', properties.PointInTimeRecoveryEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.PointInTimeRecoveryEnabled) : undefined);\n    ret.addPropertyResult('regularColumns', 'RegularColumns', properties.RegularColumns != null ? cfn_parse.FromCloudFormation.getArray(CfnTableColumnPropertyFromCloudFormation)(properties.RegularColumns) : undefined);\n    ret.addPropertyResult('tableName', 'TableName', properties.TableName != null ? cfn_parse.FromCloudFormation.getString(properties.TableName) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::Cassandra::Table`\n *\n * The `AWS::Cassandra::Table` resource allows you to create a new table in Amazon Keyspaces (for Apache Cassandra). For more information, see [Create a keyspace and a table](https://docs.aws.amazon.com/keyspaces/latest/devguide/getting-started.ddl.html) in the *Amazon Keyspaces Developer Guide* .\n *\n * @cloudformationResource AWS::Cassandra::Table\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html\n */\nexport class CfnTable extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Cassandra::Table\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnTable {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnTablePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnTable(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The name of the keyspace in which to create the table. The keyspace must already exist.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-keyspacename\n     */\n    public keyspaceName: string;\n\n    /**\n     * One or more columns that uniquely identify every row in the table. Every table must have a partition key.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-partitionkeycolumns\n     */\n    public partitionKeyColumns: Array<CfnTable.ColumnProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * The billing mode for the table, which determines how you'll be charged for reads and writes:\n     *\n     * - *On-demand mode* (default) - You pay based on the actual reads and writes your application performs.\n     * - *Provisioned mode* - Lets you specify the number of reads and writes per second that you need for your application.\n     *\n     * If you don't specify a value for this property, then the table will use on-demand mode.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-billingmode\n     */\n    public billingMode: CfnTable.BillingModeProperty | cdk.IResolvable | undefined;\n\n    /**\n     * One or more columns that determine how the table data is sorted.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-clusteringkeycolumns\n     */\n    public clusteringKeyColumns: Array<CfnTable.ClusteringKeyColumnProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n    /**\n     * The default Time To Live (TTL) value for all rows in a table in seconds. The maximum configurable value is 630,720,000 seconds, which is the equivalent of 20 years. By default, the TTL value for a table is 0, which means data does not expire.\n     *\n     * For more information, see [Setting the default TTL value for a table](https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL-how-it-works.html#ttl-howitworks_default_ttl) in the *Amazon Keyspaces Developer Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-defaulttimetolive\n     */\n    public defaultTimeToLive: number | undefined;\n\n    /**\n     * The encryption at rest options for the table.\n     *\n     * - *AWS owned key* (default) - The key is owned by Amazon Keyspaces.\n     * - *Customer managed key* - The key is stored in your account and is created, owned, and managed by you.\n     *\n     * > If you choose encryption with a customer managed key, you must specify a valid customer managed KMS key with permissions granted to Amazon Keyspaces.\n     *\n     * For more information, see [Encryption at rest in Amazon Keyspaces](https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html) in the *Amazon Keyspaces Developer Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-encryptionspecification\n     */\n    public encryptionSpecification: CfnTable.EncryptionSpecificationProperty | cdk.IResolvable | undefined;\n\n    /**\n     * Specifies if point-in-time recovery is enabled or disabled for the table. The options are `PointInTimeRecoveryEnabled=true` and `PointInTimeRecoveryEnabled=false` . If not specified, the default is `PointInTimeRecoveryEnabled=false` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-pointintimerecoveryenabled\n     */\n    public pointInTimeRecoveryEnabled: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * One or more columns that are not part of the primary key - that is, columns that are *not* defined as partition key columns or clustering key columns.\n     *\n     * You can add regular columns to existing tables by adding them to the template.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-regularcolumns\n     */\n    public regularColumns: Array<CfnTable.ColumnProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n    /**\n     * The name of the table to be created. The table name is case sensitive. If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the table name. For more information, see [Name type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html) .\n     *\n     * > If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.\n     *\n     * *Length constraints:* Minimum length of 3. Maximum length of 255.\n     *\n     * *Pattern:* `^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-tablename\n     */\n    public tableName: string | undefined;\n\n    /**\n     * A list of key-value pair tags to be attached to the resource.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::Cassandra::Table`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnTableProps) {\n        super(scope, id, { type: CfnTable.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'keyspaceName', this);\n        cdk.requireProperty(props, 'partitionKeyColumns', this);\n\n        this.keyspaceName = props.keyspaceName;\n        this.partitionKeyColumns = props.partitionKeyColumns;\n        this.billingMode = props.billingMode;\n        this.clusteringKeyColumns = props.clusteringKeyColumns;\n        this.defaultTimeToLive = props.defaultTimeToLive;\n        this.encryptionSpecification = props.encryptionSpecification;\n        this.pointInTimeRecoveryEnabled = props.pointInTimeRecoveryEnabled;\n        this.regularColumns = props.regularColumns;\n        this.tableName = props.tableName;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::Cassandra::Table\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnTable.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            keyspaceName: this.keyspaceName,\n            partitionKeyColumns: this.partitionKeyColumns,\n            billingMode: this.billingMode,\n            clusteringKeyColumns: this.clusteringKeyColumns,\n            defaultTimeToLive: this.defaultTimeToLive,\n            encryptionSpecification: this.encryptionSpecification,\n            pointInTimeRecoveryEnabled: this.pointInTimeRecoveryEnabled,\n            regularColumns: this.regularColumns,\n            tableName: this.tableName,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnTablePropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnTable {\n    /**\n     * Determines the billing mode for the table - On-demand or provisioned.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-billingmode.html\n     */\n    export interface BillingModeProperty {\n        /**\n         * The billing mode for the table:\n         *\n         * - On-demand mode - `ON_DEMAND`\n         * - Provisioned mode - `PROVISIONED`\n         *\n         * > If you choose `PROVISIONED` mode, then you also need to specify provisioned throughput (read and write capacity) for the table.\n         *\n         * Valid values: `ON_DEMAND` | `PROVISIONED`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-billingmode.html#cfn-cassandra-table-billingmode-mode\n         */\n        readonly mode: string;\n        /**\n         * The provisioned read capacity and write capacity for the table. For more information, see [Provisioned throughput capacity mode](https://docs.aws.amazon.com/keyspaces/latest/devguide/ReadWriteCapacityMode.html#ReadWriteCapacityMode.Provisioned) in the *Amazon Keyspaces Developer Guide* .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-billingmode.html#cfn-cassandra-table-billingmode-provisionedthroughput\n         */\n        readonly provisionedThroughput?: CfnTable.ProvisionedThroughputProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `BillingModeProperty`\n *\n * @param properties - the TypeScript properties of a `BillingModeProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnTable_BillingModePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('mode', cdk.requiredValidator)(properties.mode));\n    errors.collect(cdk.propertyValidator('mode', cdk.validateString)(properties.mode));\n    errors.collect(cdk.propertyValidator('provisionedThroughput', CfnTable_ProvisionedThroughputPropertyValidator)(properties.provisionedThroughput));\n    return errors.wrap('supplied properties not correct for \"BillingModeProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Cassandra::Table.BillingMode` resource\n *\n * @param properties - the TypeScript properties of a `BillingModeProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Cassandra::Table.BillingMode` resource.\n */\n// @ts-ignore TS6133\nfunction cfnTableBillingModePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnTable_BillingModePropertyValidator(properties).assertSuccess();\n    return {\n        Mode: cdk.stringToCloudFormation(properties.mode),\n        ProvisionedThroughput: cfnTableProvisionedThroughputPropertyToCloudFormation(properties.provisionedThroughput),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnTableBillingModePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnTable.BillingModeProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnTable.BillingModeProperty>();\n    ret.addPropertyResult('mode', 'Mode', cfn_parse.FromCloudFormation.getString(properties.Mode));\n    ret.addPropertyResult('provisionedThroughput', 'ProvisionedThroughput', properties.ProvisionedThroughput != null ? CfnTableProvisionedThroughputPropertyFromCloudFormation(properties.ProvisionedThroughput) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnTable {\n    /**\n     * Defines an individual column within the clustering key.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-clusteringkeycolumn.html\n     */\n    export interface ClusteringKeyColumnProperty {\n        /**\n         * The name and data type of this clustering key column.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-clusteringkeycolumn.html#cfn-cassandra-table-clusteringkeycolumn-column\n         */\n        readonly column: CfnTable.ColumnProperty | cdk.IResolvable;\n        /**\n         * The order in which this column's data is stored:\n         *\n         * - `ASC` (default) - The column's data is stored in ascending order.\n         * - `DESC` - The column's data is stored in descending order.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-clusteringkeycolumn.html#cfn-cassandra-table-clusteringkeycolumn-orderby\n         */\n        readonly orderBy?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ClusteringKeyColumnProperty`\n *\n * @param properties - the TypeScript properties of a `ClusteringKeyColumnProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnTable_ClusteringKeyColumnPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('column', cdk.requiredValidator)(properties.column));\n    errors.collect(cdk.propertyValidator('column', CfnTable_ColumnPropertyValidator)(properties.column));\n    errors.collect(cdk.propertyValidator('orderBy', cdk.validateString)(properties.orderBy));\n    return errors.wrap('supplied properties not correct for \"ClusteringKeyColumnProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Cassandra::Table.ClusteringKeyColumn` resource\n *\n * @param properties - the TypeScript properties of a `ClusteringKeyColumnProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Cassandra::Table.ClusteringKeyColumn` resource.\n */\n// @ts-ignore TS6133\nfunction cfnTableClusteringKeyColumnPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnTable_ClusteringKeyColumnPropertyValidator(properties).assertSuccess();\n    return {\n        Column: cfnTableColumnPropertyToCloudFormation(properties.column),\n        OrderBy: cdk.stringToCloudFormation(properties.orderBy),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnTableClusteringKeyColumnPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnTable.ClusteringKeyColumnProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnTable.ClusteringKeyColumnProperty>();\n    ret.addPropertyResult('column', 'Column', CfnTableColumnPropertyFromCloudFormation(properties.Column));\n    ret.addPropertyResult('orderBy', 'OrderBy', properties.OrderBy != null ? cfn_parse.FromCloudFormation.getString(properties.OrderBy) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnTable {\n    /**\n     * The name and data type of an individual column in a table.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-column.html\n     */\n    export interface ColumnProperty {\n        /**\n         * The name of the column. For more information, see [Identifiers](https://docs.aws.amazon.com/keyspaces/latest/devguide/cql.elements.html#cql.elements.identifier) in the *Amazon Keyspaces Developer Guide* .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-column.html#cfn-cassandra-table-column-columnname\n         */\n        readonly columnName: string;\n        /**\n         * The data type of the column. For more information, see [Data types](https://docs.aws.amazon.com/keyspaces/latest/devguide/cql.elements.html#cql.data-types) in the *Amazon Keyspaces Developer Guide* .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-column.html#cfn-cassandra-table-column-columntype\n         */\n        readonly columnType: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ColumnProperty`\n *\n * @param properties - the TypeScript properties of a `ColumnProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnTable_ColumnPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('columnName', cdk.requiredValidator)(properties.columnName));\n    errors.collect(cdk.propertyValidator('columnName', cdk.validateString)(properties.columnName));\n    errors.collect(cdk.propertyValidator('columnType', cdk.requiredValidator)(properties.columnType));\n    errors.collect(cdk.propertyValidator('columnType', cdk.validateString)(properties.columnType));\n    return errors.wrap('supplied properties not correct for \"ColumnProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Cassandra::Table.Column` resource\n *\n * @param properties - the TypeScript properties of a `ColumnProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Cassandra::Table.Column` resource.\n */\n// @ts-ignore TS6133\nfunction cfnTableColumnPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnTable_ColumnPropertyValidator(properties).assertSuccess();\n    return {\n        ColumnName: cdk.stringToCloudFormation(properties.columnName),\n        ColumnType: cdk.stringToCloudFormation(properties.columnType),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnTableColumnPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnTable.ColumnProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnTable.ColumnProperty>();\n    ret.addPropertyResult('columnName', 'ColumnName', cfn_parse.FromCloudFormation.getString(properties.ColumnName));\n    ret.addPropertyResult('columnType', 'ColumnType', cfn_parse.FromCloudFormation.getString(properties.ColumnType));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnTable {\n    /**\n     * Specifies the encryption at rest option selected for the table.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-encryptionspecification.html\n     */\n    export interface EncryptionSpecificationProperty {\n        /**\n         * The encryption at rest options for the table.\n         *\n         * - *AWS owned key* (default) - `AWS_OWNED_KMS_KEY`\n         * - *Customer managed key* - `CUSTOMER_MANAGED_KMS_KEY`\n         *\n         * > If you choose `CUSTOMER_MANAGED_KMS_KEY` , a `kms_key_identifier` in the format of a key ARN is required.\n         *\n         * Valid values: `CUSTOMER_MANAGED_KMS_KEY` | `AWS_OWNED_KMS_KEY` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-encryptionspecification.html#cfn-cassandra-table-encryptionspecification-encryptiontype\n         */\n        readonly encryptionType: string;\n        /**\n         * Requires a `kms_key_identifier` in the format of a key ARN.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-encryptionspecification.html#cfn-cassandra-table-encryptionspecification-kmskeyidentifier\n         */\n        readonly kmsKeyIdentifier?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `EncryptionSpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `EncryptionSpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnTable_EncryptionSpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('encryptionType', cdk.requiredValidator)(properties.encryptionType));\n    errors.collect(cdk.propertyValidator('encryptionType', cdk.validateString)(properties.encryptionType));\n    errors.collect(cdk.propertyValidator('kmsKeyIdentifier', cdk.validateString)(properties.kmsKeyIdentifier));\n    return errors.wrap('supplied properties not correct for \"EncryptionSpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Cassandra::Table.EncryptionSpecification` resource\n *\n * @param properties - the TypeScript properties of a `EncryptionSpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Cassandra::Table.EncryptionSpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnTableEncryptionSpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnTable_EncryptionSpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        EncryptionType: cdk.stringToCloudFormation(properties.encryptionType),\n        KmsKeyIdentifier: cdk.stringToCloudFormation(properties.kmsKeyIdentifier),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnTableEncryptionSpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnTable.EncryptionSpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnTable.EncryptionSpecificationProperty>();\n    ret.addPropertyResult('encryptionType', 'EncryptionType', cfn_parse.FromCloudFormation.getString(properties.EncryptionType));\n    ret.addPropertyResult('kmsKeyIdentifier', 'KmsKeyIdentifier', properties.KmsKeyIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.KmsKeyIdentifier) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnTable {\n    /**\n     * The provisioned throughput for the table, which consists of `ReadCapacityUnits` and `WriteCapacityUnits` .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-provisionedthroughput.html\n     */\n    export interface ProvisionedThroughputProperty {\n        /**\n         * The amount of read capacity that's provisioned for the table. For more information, see [Read/write capacity mode](https://docs.aws.amazon.com/keyspaces/latest/devguide/ReadWriteCapacityMode.html) in the *Amazon Keyspaces Developer Guide* .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-provisionedthroughput.html#cfn-cassandra-table-provisionedthroughput-readcapacityunits\n         */\n        readonly readCapacityUnits: number;\n        /**\n         * The amount of write capacity that's provisioned for the table. For more information, see [Read/write capacity mode](https://docs.aws.amazon.com/keyspaces/latest/devguide/ReadWriteCapacityMode.html) in the *Amazon Keyspaces Developer Guide* .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-provisionedthroughput.html#cfn-cassandra-table-provisionedthroughput-writecapacityunits\n         */\n        readonly writeCapacityUnits: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ProvisionedThroughputProperty`\n *\n * @param properties - the TypeScript properties of a `ProvisionedThroughputProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnTable_ProvisionedThroughputPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('readCapacityUnits', cdk.requiredValidator)(properties.readCapacityUnits));\n    errors.collect(cdk.propertyValidator('readCapacityUnits', cdk.validateNumber)(properties.readCapacityUnits));\n    errors.collect(cdk.propertyValidator('writeCapacityUnits', cdk.requiredValidator)(properties.writeCapacityUnits));\n    errors.collect(cdk.propertyValidator('writeCapacityUnits', cdk.validateNumber)(properties.writeCapacityUnits));\n    return errors.wrap('supplied properties not correct for \"ProvisionedThroughputProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Cassandra::Table.ProvisionedThroughput` resource\n *\n * @param properties - the TypeScript properties of a `ProvisionedThroughputProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Cassandra::Table.ProvisionedThroughput` resource.\n */\n// @ts-ignore TS6133\nfunction cfnTableProvisionedThroughputPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnTable_ProvisionedThroughputPropertyValidator(properties).assertSuccess();\n    return {\n        ReadCapacityUnits: cdk.numberToCloudFormation(properties.readCapacityUnits),\n        WriteCapacityUnits: cdk.numberToCloudFormation(properties.writeCapacityUnits),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnTableProvisionedThroughputPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnTable.ProvisionedThroughputProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnTable.ProvisionedThroughputProperty>();\n    ret.addPropertyResult('readCapacityUnits', 'ReadCapacityUnits', cfn_parse.FromCloudFormation.getNumber(properties.ReadCapacityUnits));\n    ret.addPropertyResult('writeCapacityUnits', 'WriteCapacityUnits', cfn_parse.FromCloudFormation.getNumber(properties.WriteCapacityUnits));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n"],
  "mappings": "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",
  "names": []
}
