{
  "version": 3,
  "sources": ["deployment-group.ts"],
  "sourcesContent": ["import * as cloudwatch from '../../../aws-cloudwatch';\nimport * as iam from '../../../aws-iam';\nimport * as lambda from '../../../aws-lambda';\nimport * as cdk from '../../../core';\nimport { Construct } from 'constructs';\nimport { CfnDeploymentGroup } from '../codedeploy.generated';\nimport { AutoRollbackConfig } from '../rollback-config';\nimport { arnForDeploymentGroup, renderAlarmConfiguration, renderAutoRollbackConfiguration, validateName } from '../utils';\nimport { ILambdaApplication, LambdaApplication } from './application';\nimport { ILambdaDeploymentConfig, LambdaDeploymentConfig } from './deployment-config';\n\n/**\n * Interface for a Lambda deployment groups.\n */\nexport interface ILambdaDeploymentGroup extends cdk.IResource {\n  /**\n   * The reference to the CodeDeploy Lambda Application that this Deployment Group belongs to.\n   */\n  readonly application: ILambdaApplication;\n\n  /**\n   * The physical name of the CodeDeploy Deployment Group.\n   * @attribute\n   */\n  readonly deploymentGroupName: string;\n\n  /**\n   * The ARN of this Deployment Group.\n   * @attribute\n   */\n  readonly deploymentGroupArn: string;\n\n  /**\n   * The Deployment Configuration this Group uses.\n   */\n  readonly deploymentConfig: ILambdaDeploymentConfig;\n}\n\n/**\n * Construction properties for {@link LambdaDeploymentGroup}.\n */\nexport interface LambdaDeploymentGroupProps {\n  /**\n   * The reference to the CodeDeploy Lambda Application that this Deployment Group belongs to.\n   *\n   * @default - One will be created for you.\n   */\n  readonly application?: ILambdaApplication;\n\n  /**\n   * The physical, human-readable name of the CodeDeploy Deployment Group.\n   *\n   * @default - An auto-generated name will be used.\n   */\n  readonly deploymentGroupName?: string;\n\n  /**\n   * The Deployment Configuration this Deployment Group uses.\n   *\n   * @default LambdaDeploymentConfig.CANARY_10PERCENT_5MINUTES\n   */\n  readonly deploymentConfig?: ILambdaDeploymentConfig;\n\n  /**\n   * The CloudWatch alarms associated with this Deployment Group.\n   * CodeDeploy will stop (and optionally roll back)\n   * a deployment if during it any of the alarms trigger.\n   *\n   * Alarms can also be added after the Deployment Group is created using the {@link #addAlarm} method.\n   *\n   * @default []\n   * @see https://docs.aws.amazon.com/codedeploy/latest/userguide/monitoring-create-alarms.html\n   */\n  readonly alarms?: cloudwatch.IAlarm[];\n\n  /**\n   * The service Role of this Deployment Group.\n   *\n   * @default - A new Role will be created.\n   */\n  readonly role?: iam.IRole;\n\n  /**\n   * Lambda Alias to shift traffic. Updating the version\n   * of the alias will trigger a CodeDeploy deployment.\n   *\n   * [disable-awslint:ref-via-interface] since we need to modify the alias CFN resource update policy\n   */\n  readonly alias: lambda.Alias;\n\n  /**\n   * The Lambda function to run before traffic routing starts.\n   *\n   * @default - None.\n   */\n  readonly preHook?: lambda.IFunction;\n\n  /**\n   * The Lambda function to run after traffic routing starts.\n   *\n   * @default - None.\n   */\n  readonly postHook?: lambda.IFunction;\n\n  /**\n   * Whether to continue a deployment even if fetching the alarm status from CloudWatch failed.\n   *\n   * @default false\n   */\n  readonly ignorePollAlarmsFailure?: boolean;\n\n  /**\n   * The auto-rollback configuration for this Deployment Group.\n   *\n   * @default - default AutoRollbackConfig.\n   */\n  readonly autoRollback?: AutoRollbackConfig;\n}\n\n/**\n * @resource AWS::CodeDeploy::DeploymentGroup\n */\nexport class LambdaDeploymentGroup extends cdk.Resource implements ILambdaDeploymentGroup {\n  /**\n   * Import an Lambda Deployment Group defined either outside the CDK app, or in a different AWS region.\n   *\n   * @param scope the parent Construct for this new Construct\n   * @param id the logical ID of this new Construct\n   * @param attrs the properties of the referenced Deployment Group\n   * @returns a Construct representing a reference to an existing Deployment Group\n   */\n  public static fromLambdaDeploymentGroupAttributes(\n    scope: Construct,\n    id: string,\n    attrs: LambdaDeploymentGroupAttributes): ILambdaDeploymentGroup {\n    return new ImportedLambdaDeploymentGroup(scope, id, attrs);\n  }\n\n  public readonly application: ILambdaApplication;\n  public readonly deploymentGroupName: string;\n  public readonly deploymentGroupArn: string;\n  public readonly deploymentConfig: ILambdaDeploymentConfig;\n  public readonly role: iam.IRole;\n\n  private readonly alarms: cloudwatch.IAlarm[];\n  private preHook?: lambda.IFunction;\n  private postHook?: lambda.IFunction;\n\n  constructor(scope: Construct, id: string, props: LambdaDeploymentGroupProps) {\n    super(scope, id, {\n      physicalName: props.deploymentGroupName,\n    });\n\n    this.application = props.application || new LambdaApplication(this, 'Application');\n    this.alarms = props.alarms || [];\n\n    this.role = props.role || new iam.Role(this, 'ServiceRole', {\n      assumedBy: new iam.ServicePrincipal('codedeploy.amazonaws.com'),\n    });\n\n    this.role.addManagedPolicy(iam.ManagedPolicy.fromAwsManagedPolicyName('service-role/AWSCodeDeployRoleForLambdaLimited'));\n    this.deploymentConfig = props.deploymentConfig || LambdaDeploymentConfig.CANARY_10PERCENT_5MINUTES;\n\n    const resource = new CfnDeploymentGroup(this, 'Resource', {\n      applicationName: this.application.applicationName,\n      serviceRoleArn: this.role.roleArn,\n      deploymentGroupName: this.physicalName,\n      deploymentConfigName: this.deploymentConfig.deploymentConfigName,\n      deploymentStyle: {\n        deploymentType: 'BLUE_GREEN',\n        deploymentOption: 'WITH_TRAFFIC_CONTROL',\n      },\n      alarmConfiguration: cdk.Lazy.any({ produce: () => renderAlarmConfiguration(this.alarms, props.ignorePollAlarmsFailure) }),\n      autoRollbackConfiguration: cdk.Lazy.any({ produce: () => renderAutoRollbackConfiguration(this.alarms, props.autoRollback) }),\n    });\n\n    this.deploymentGroupName = this.getResourceNameAttribute(resource.ref);\n    this.deploymentGroupArn = this.getResourceArnAttribute(arnForDeploymentGroup(this.application.applicationName, resource.ref), {\n      service: 'codedeploy',\n      resource: 'deploymentgroup',\n      resourceName: `${this.application.applicationName}/${this.physicalName}`,\n      arnFormat: cdk.ArnFormat.COLON_RESOURCE_NAME,\n    });\n\n    if (props.preHook) {\n      this.addPreHook(props.preHook);\n    }\n    if (props.postHook) {\n      this.addPostHook(props.postHook);\n    }\n\n    (props.alias.node.defaultChild as lambda.CfnAlias).cfnOptions.updatePolicy = {\n      codeDeployLambdaAliasUpdate: {\n        applicationName: this.application.applicationName,\n        deploymentGroupName: resource.ref,\n        beforeAllowTrafficHook: cdk.Lazy.string({ produce: () => this.preHook && this.preHook.functionName }),\n        afterAllowTrafficHook: cdk.Lazy.string({ produce: () => this.postHook && this.postHook.functionName }),\n      },\n    };\n\n    // If the deployment config is a construct, add a dependency to ensure the deployment config\n    // is created before the deployment group is.\n    if (this.deploymentConfig instanceof Construct) {\n      this.node.addDependency(this.deploymentConfig);\n    }\n\n    this.node.addValidation({ validate: () => validateName('Deployment group', this.physicalName) });\n  }\n\n  /**\n   * Associates an additional alarm with this Deployment Group.\n   *\n   * @param alarm the alarm to associate with this Deployment Group\n   */\n  public addAlarm(alarm: cloudwatch.IAlarm): void {\n    this.alarms.push(alarm);\n  }\n\n  /**\n   * Associate a function to run before deployment begins.\n   * @param preHook function to run before deployment beings\n   * @throws an error if a pre-hook function is already configured\n   */\n  public addPreHook(preHook: lambda.IFunction): void {\n    if (this.preHook !== undefined) {\n      throw new Error('A pre-hook function is already defined for this deployment group');\n    }\n    this.preHook = preHook;\n    this.grantPutLifecycleEventHookExecutionStatus(this.preHook);\n    this.preHook.grantInvoke(this.role);\n  }\n\n  /**\n   * Associate a function to run after deployment completes.\n   * @param postHook function to run after deployment completes\n   * @throws an error if a post-hook function is already configured\n   */\n  public addPostHook(postHook: lambda.IFunction): void {\n    if (this.postHook !== undefined) {\n      throw new Error('A post-hook function is already defined for this deployment group');\n    }\n    this.postHook = postHook;\n    this.grantPutLifecycleEventHookExecutionStatus(this.postHook);\n    this.postHook.grantInvoke(this.role);\n  }\n\n  /**\n   * Grant a principal permission to codedeploy:PutLifecycleEventHookExecutionStatus\n   * on this deployment group resource.\n   * @param grantee to grant permission to\n   */\n  public grantPutLifecycleEventHookExecutionStatus(grantee: iam.IGrantable): iam.Grant {\n    return iam.Grant.addToPrincipal({\n      grantee,\n      resourceArns: [this.deploymentGroupArn],\n      actions: ['codedeploy:PutLifecycleEventHookExecutionStatus'],\n    });\n  }\n}\n\n/**\n * Properties of a reference to a CodeDeploy Lambda Deployment Group.\n *\n * @see LambdaDeploymentGroup#fromLambdaDeploymentGroupAttributes\n */\nexport interface LambdaDeploymentGroupAttributes {\n  /**\n   * The reference to the CodeDeploy Lambda Application\n   * that this Deployment Group belongs to.\n   */\n  readonly application: ILambdaApplication;\n\n  /**\n   * The physical, human-readable name of the CodeDeploy Lambda Deployment Group\n   * that we are referencing.\n   */\n  readonly deploymentGroupName: string;\n\n  /**\n   * The Deployment Configuration this Deployment Group uses.\n   *\n   * @default LambdaDeploymentConfig.CANARY_10PERCENT_5MINUTES\n   */\n  readonly deploymentConfig?: ILambdaDeploymentConfig;\n}\n\nclass ImportedLambdaDeploymentGroup extends cdk.Resource implements ILambdaDeploymentGroup {\n  public readonly application: ILambdaApplication;\n  public readonly deploymentGroupName: string;\n  public readonly deploymentGroupArn: string;\n  public readonly deploymentConfig: ILambdaDeploymentConfig;\n\n  constructor(scope:Construct, id: string, props: LambdaDeploymentGroupAttributes) {\n    super(scope, id);\n    this.application = props.application;\n    this.deploymentGroupName = props.deploymentGroupName;\n    this.deploymentGroupArn = arnForDeploymentGroup(props.application.applicationName, props.deploymentGroupName);\n    this.deploymentConfig = props.deploymentConfig || LambdaDeploymentConfig.CANARY_10PERCENT_5MINUTES;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
