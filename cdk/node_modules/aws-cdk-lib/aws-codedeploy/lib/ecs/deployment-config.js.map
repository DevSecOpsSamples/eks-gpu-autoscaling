{
  "version": 3,
  "sources": ["deployment-config.ts"],
  "sourcesContent": ["import { Construct } from 'constructs';\nimport { arnForDeploymentConfig } from '../utils';\n\n/**\n * The Deployment Configuration of an ECS Deployment Group.\n * The default, pre-defined Configurations are available as constants on the {@link EcsDeploymentConfig} class\n * (for example, `EcsDeploymentConfig.AllAtOnce`).\n *\n * Note: CloudFormation does not currently support creating custom ECS configs outside\n * of using a custom resource. You can import custom deployment config created outside the\n * CDK or via a custom resource with {@link EcsDeploymentConfig#fromEcsDeploymentConfigName}.\n */\nexport interface IEcsDeploymentConfig {\n  readonly deploymentConfigName: string;\n  readonly deploymentConfigArn: string;\n}\n\n/**\n * A custom Deployment Configuration for an ECS Deployment Group.\n *\n * Note: This class currently stands as namespaced container of the default configurations\n * until CloudFormation supports custom ECS Deployment Configs. Until then it is closed\n * (private constructor) and does not extend {@link Construct}\n *\n * @resource AWS::CodeDeploy::DeploymentConfig\n */\nexport class EcsDeploymentConfig {\n  public static readonly ALL_AT_ONCE = deploymentConfig('CodeDeployDefault.ECSAllAtOnce');\n\n  /**\n   * Import a custom Deployment Configuration for an ECS Deployment Group defined outside the CDK.\n   *\n   * @param _scope the parent Construct for this new Construct\n   * @param _id the logical ID of this new Construct\n   * @param ecsDeploymentConfigName the name of the referenced custom Deployment Configuration\n   * @returns a Construct representing a reference to an existing custom Deployment Configuration\n   */\n  public static fromEcsDeploymentConfigName(_scope: Construct, _id: string, ecsDeploymentConfigName: string): IEcsDeploymentConfig {\n    return deploymentConfig(ecsDeploymentConfigName);\n  }\n\n  private constructor() {\n    // nothing to do until CFN supports custom ECS deployment configurations\n  }\n}\n\nfunction deploymentConfig(name: string): IEcsDeploymentConfig {\n  return {\n    deploymentConfigName: name,\n    deploymentConfigArn: arnForDeploymentConfig(name),\n  };\n}\n"],
  "mappings": "+JACA,QAAA,QAAA,UAAA,EAyBA,MAAa,mBAAmB,CAe9B,aAAA,QAJc,6BAA4B,OAAmB,IAAa,wBAA+B,CACvG,MAAO,kBAAiB,uBAAuB,GAZnD,QAAA,oBAAA,0IACyB,oBAAA,YAAc,iBAAiB,gCAAgC,EAmBxF,0BAA0B,KAAY,CACpC,MAAO,CACL,qBAAsB,KACtB,oBAAqB,QAAA,uBAAuB,IAAI,EAEpD",
  "names": []
}
