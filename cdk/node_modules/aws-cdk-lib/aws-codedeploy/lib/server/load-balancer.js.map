{
  "version": 3,
  "sources": ["load-balancer.ts"],
  "sourcesContent": ["import * as elb from '../../../aws-elasticloadbalancing';\nimport * as elbv2 from '../../../aws-elasticloadbalancingv2';\n\n/**\n * The generations of AWS load balancing solutions.\n */\nexport enum LoadBalancerGeneration {\n  /**\n   * The first generation (ELB Classic).\n   */\n  FIRST = 0,\n\n  /**\n   * The second generation (ALB and NLB).\n   */\n  SECOND = 1\n}\n\n/**\n * An interface of an abstract load balancer, as needed by CodeDeploy.\n * Create instances using the static factory methods:\n * {@link #classic}, {@link #application} and {@link #network}.\n */\nexport abstract class LoadBalancer {\n  /**\n   * Creates a new CodeDeploy load balancer from a Classic ELB Load Balancer.\n   *\n   * @param loadBalancer a classic ELB Load Balancer\n   */\n  public static classic(loadBalancer: elb.LoadBalancer): LoadBalancer {\n    class ClassicLoadBalancer extends LoadBalancer {\n      public readonly generation = LoadBalancerGeneration.FIRST;\n      public readonly name = loadBalancer.loadBalancerName;\n    }\n\n    return new ClassicLoadBalancer();\n  }\n\n  /**\n   * Creates a new CodeDeploy load balancer from an Application Load Balancer Target Group.\n   *\n   * @param albTargetGroup an ALB Target Group\n   */\n  public static application(albTargetGroup: elbv2.IApplicationTargetGroup): LoadBalancer {\n    class AlbLoadBalancer extends LoadBalancer {\n      public readonly generation = LoadBalancerGeneration.SECOND;\n      public readonly name = albTargetGroup.targetGroupName;\n    }\n\n    return new AlbLoadBalancer();\n  }\n\n  /**\n   * Creates a new CodeDeploy load balancer from a Network Load Balancer Target Group.\n   *\n   * @param nlbTargetGroup an NLB Target Group\n   */\n  public static network(nlbTargetGroup: elbv2.INetworkTargetGroup): LoadBalancer {\n    class NlbLoadBalancer extends LoadBalancer {\n      public readonly generation = LoadBalancerGeneration.SECOND;\n      public readonly name = nlbTargetGroup.targetGroupName;\n    }\n\n    return new NlbLoadBalancer();\n  }\n\n  public abstract readonly generation: LoadBalancerGeneration;\n  public abstract readonly name: string;\n}\n"],
  "mappings": "qPAMA,GAAY,wBAAZ,AAAA,UAAY,wBAAsB,CAIhC,wBAAA,wBAAA,MAAA,GAAA,QAKA,wBAAA,wBAAA,OAAA,GAAA,QACF,GAVY,uBAAA,QAAA,wBAAA,SAAA,uBAAsB,CAAA,EAAA,EAiBlC,MAAsB,YAAY,OAMlB,SAAQ,aAA8B,yFAClD,MAAM,2BAA4B,aAAY,CAA9C,aAAA,qBACkB,KAAA,WAAa,uBAAuB,MACpC,KAAA,KAAO,aAAa,gBACtC,EAEA,MAAO,IAAI,2BAQC,aAAY,eAA6C,wGACrE,MAAM,uBAAwB,aAAY,CAA1C,aAAA,qBACkB,KAAA,WAAa,uBAAuB,OACpC,KAAA,KAAO,eAAe,eACxC,EAEA,MAAO,IAAI,uBAQC,SAAQ,eAAyC,oGAC7D,MAAM,uBAAwB,aAAY,CAA1C,aAAA,qBACkB,KAAA,WAAa,uBAAuB,OACpC,KAAA,KAAO,eAAe,eACxC,EAEA,MAAO,IAAI,kBAxCf,QAAA,aAAA",
  "names": []
}
