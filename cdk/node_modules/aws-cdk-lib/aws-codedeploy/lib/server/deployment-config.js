"use strict";var _a,_b;Object.defineProperty(exports,"__esModule",{value:!0}),exports.ServerDeploymentConfig=exports.MinimumHealthyHosts=void 0;const jsiiDeprecationWarnings=require("../../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../../core"),codedeploy_generated_1=require("../codedeploy.generated"),utils_1=require("../utils");class MinimumHealthyHosts{constructor(json){this.json=json}static count(value){return new MinimumHealthyHosts({type:"HOST_COUNT",value})}static percentage(value){return new MinimumHealthyHosts({type:"FLEET_PERCENT",value})}get _json(){return this.json}}exports.MinimumHealthyHosts=MinimumHealthyHosts,_a=JSII_RTTI_SYMBOL_1,MinimumHealthyHosts[_a]={fqn:"aws-cdk-lib.aws_codedeploy.MinimumHealthyHosts",version:"2.20.0"};class ServerDeploymentConfig extends cdk.Resource{constructor(scope,id,props){super(scope,id,{physicalName:props.deploymentConfigName});jsiiDeprecationWarnings.aws_cdk_lib_aws_codedeploy_ServerDeploymentConfigProps(props);const resource=new codedeploy_generated_1.CfnDeploymentConfig(this,"Resource",{deploymentConfigName:this.physicalName,minimumHealthyHosts:props.minimumHealthyHosts._json});this.deploymentConfigName=resource.ref,this.deploymentConfigArn=utils_1.arnForDeploymentConfig(this.deploymentConfigName),this.node.addValidation({validate:()=>utils_1.validateName("Deployment config",this.physicalName)})}static fromServerDeploymentConfigName(scope,id,serverDeploymentConfigName){return deploymentConfig(serverDeploymentConfigName)}}exports.ServerDeploymentConfig=ServerDeploymentConfig,_b=JSII_RTTI_SYMBOL_1,ServerDeploymentConfig[_b]={fqn:"aws-cdk-lib.aws_codedeploy.ServerDeploymentConfig",version:"2.20.0"},ServerDeploymentConfig.ONE_AT_A_TIME=deploymentConfig("CodeDeployDefault.OneAtATime"),ServerDeploymentConfig.HALF_AT_A_TIME=deploymentConfig("CodeDeployDefault.HalfAtATime"),ServerDeploymentConfig.ALL_AT_ONCE=deploymentConfig("CodeDeployDefault.AllAtOnce");function deploymentConfig(name){return{deploymentConfigName:name,deploymentConfigArn:utils_1.arnForDeploymentConfig(name)}}function ignore(_x){}
//# sourceMappingURL=deployment-config.js.map
