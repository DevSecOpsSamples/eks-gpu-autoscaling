{
  "version": 3,
  "sources": ["workspaces.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-04-07T10:53:59.886Z\",\"fingerprint\":\"OFXaMIInB1CZoT4N/Ix/uQ25gF6gRJRJMYCTTn446+I=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n/**\n * Properties for defining a `CfnConnectionAlias`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-connectionalias.html\n */\nexport interface CfnConnectionAliasProps {\n\n    /**\n     * The connection string specified for the connection alias. The connection string must be in the form of a fully qualified domain name (FQDN), such as `www.example.com` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-connectionalias.html#cfn-workspaces-connectionalias-connectionstring\n     */\n    readonly connectionString: string;\n\n    /**\n     * The tags to associate with the connection alias.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-connectionalias.html#cfn-workspaces-connectionalias-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnConnectionAliasProps`\n *\n * @param properties - the TypeScript properties of a `CfnConnectionAliasProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnConnectionAliasPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('connectionString', cdk.requiredValidator)(properties.connectionString));\n    errors.collect(cdk.propertyValidator('connectionString', cdk.validateString)(properties.connectionString));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnConnectionAliasProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::WorkSpaces::ConnectionAlias` resource\n *\n * @param properties - the TypeScript properties of a `CfnConnectionAliasProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::WorkSpaces::ConnectionAlias` resource.\n */\n// @ts-ignore TS6133\nfunction cfnConnectionAliasPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnConnectionAliasPropsValidator(properties).assertSuccess();\n    return {\n        ConnectionString: cdk.stringToCloudFormation(properties.connectionString),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnConnectionAliasPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnConnectionAliasProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnConnectionAliasProps>();\n    ret.addPropertyResult('connectionString', 'ConnectionString', cfn_parse.FromCloudFormation.getString(properties.ConnectionString));\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::WorkSpaces::ConnectionAlias`\n *\n * The `AWS::WorkSpaces::ConnectionAlias` resource specifies a connection alias. Connection aliases are used for cross-Region redirection. For more information, see [Cross-Region Redirection for Amazon WorkSpaces](https://docs.aws.amazon.com/workspaces/latest/adminguide/cross-region-redirection.html) .\n *\n * @cloudformationResource AWS::WorkSpaces::ConnectionAlias\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-connectionalias.html\n */\nexport class CfnConnectionAlias extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::WorkSpaces::ConnectionAlias\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnConnectionAlias {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnConnectionAliasPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnConnectionAlias(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The identifier of the connection alias, returned as a string.\n     * @cloudformationAttribute AliasId\n     */\n    public readonly attrAliasId: string;\n\n    /**\n     * The association status of the connection alias, returned as an array of `ConnectionAliasAssociation` objects.\n     * @cloudformationAttribute Associations\n     */\n    public readonly attrAssociations: cdk.IResolvable;\n\n    /**\n     * The current state of the connection alias, returned as a string.\n     * @cloudformationAttribute ConnectionAliasState\n     */\n    public readonly attrConnectionAliasState: string;\n\n    /**\n     * The connection string specified for the connection alias. The connection string must be in the form of a fully qualified domain name (FQDN), such as `www.example.com` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-connectionalias.html#cfn-workspaces-connectionalias-connectionstring\n     */\n    public connectionString: string;\n\n    /**\n     * The tags to associate with the connection alias.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-connectionalias.html#cfn-workspaces-connectionalias-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::WorkSpaces::ConnectionAlias`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnConnectionAliasProps) {\n        super(scope, id, { type: CfnConnectionAlias.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'connectionString', this);\n        this.attrAliasId = cdk.Token.asString(this.getAtt('AliasId'));\n        this.attrAssociations = this.getAtt('Associations');\n        this.attrConnectionAliasState = cdk.Token.asString(this.getAtt('ConnectionAliasState'));\n\n        this.connectionString = props.connectionString;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::WorkSpaces::ConnectionAlias\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnConnectionAlias.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            connectionString: this.connectionString,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnConnectionAliasPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnConnectionAlias {\n    /**\n     * Describes a connection alias association that is used for cross-Region redirection. For more information, see [Cross-Region Redirection for Amazon WorkSpaces](https://docs.aws.amazon.com/workspaces/latest/adminguide/cross-region-redirection.html) .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-workspaces-connectionalias-connectionaliasassociation.html\n     */\n    export interface ConnectionAliasAssociationProperty {\n        /**\n         * The identifier of the AWS account that associated the connection alias with a directory.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-workspaces-connectionalias-connectionaliasassociation.html#cfn-workspaces-connectionalias-connectionaliasassociation-associatedaccountid\n         */\n        readonly associatedAccountId?: string;\n        /**\n         * The association status of the connection alias.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-workspaces-connectionalias-connectionaliasassociation.html#cfn-workspaces-connectionalias-connectionaliasassociation-associationstatus\n         */\n        readonly associationStatus?: string;\n        /**\n         * The identifier of the connection alias association. You use the connection identifier in the DNS TXT record when you're configuring your DNS routing policies.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-workspaces-connectionalias-connectionaliasassociation.html#cfn-workspaces-connectionalias-connectionaliasassociation-connectionidentifier\n         */\n        readonly connectionIdentifier?: string;\n        /**\n         * The identifier of the directory associated with a connection alias.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-workspaces-connectionalias-connectionaliasassociation.html#cfn-workspaces-connectionalias-connectionaliasassociation-resourceid\n         */\n        readonly resourceId?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ConnectionAliasAssociationProperty`\n *\n * @param properties - the TypeScript properties of a `ConnectionAliasAssociationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnConnectionAlias_ConnectionAliasAssociationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('associatedAccountId', cdk.validateString)(properties.associatedAccountId));\n    errors.collect(cdk.propertyValidator('associationStatus', cdk.validateString)(properties.associationStatus));\n    errors.collect(cdk.propertyValidator('connectionIdentifier', cdk.validateString)(properties.connectionIdentifier));\n    errors.collect(cdk.propertyValidator('resourceId', cdk.validateString)(properties.resourceId));\n    return errors.wrap('supplied properties not correct for \"ConnectionAliasAssociationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::WorkSpaces::ConnectionAlias.ConnectionAliasAssociation` resource\n *\n * @param properties - the TypeScript properties of a `ConnectionAliasAssociationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::WorkSpaces::ConnectionAlias.ConnectionAliasAssociation` resource.\n */\n// @ts-ignore TS6133\nfunction cfnConnectionAliasConnectionAliasAssociationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnConnectionAlias_ConnectionAliasAssociationPropertyValidator(properties).assertSuccess();\n    return {\n        AssociatedAccountId: cdk.stringToCloudFormation(properties.associatedAccountId),\n        AssociationStatus: cdk.stringToCloudFormation(properties.associationStatus),\n        ConnectionIdentifier: cdk.stringToCloudFormation(properties.connectionIdentifier),\n        ResourceId: cdk.stringToCloudFormation(properties.resourceId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnConnectionAliasConnectionAliasAssociationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnConnectionAlias.ConnectionAliasAssociationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnConnectionAlias.ConnectionAliasAssociationProperty>();\n    ret.addPropertyResult('associatedAccountId', 'AssociatedAccountId', properties.AssociatedAccountId != null ? cfn_parse.FromCloudFormation.getString(properties.AssociatedAccountId) : undefined);\n    ret.addPropertyResult('associationStatus', 'AssociationStatus', properties.AssociationStatus != null ? cfn_parse.FromCloudFormation.getString(properties.AssociationStatus) : undefined);\n    ret.addPropertyResult('connectionIdentifier', 'ConnectionIdentifier', properties.ConnectionIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.ConnectionIdentifier) : undefined);\n    ret.addPropertyResult('resourceId', 'ResourceId', properties.ResourceId != null ? cfn_parse.FromCloudFormation.getString(properties.ResourceId) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnWorkspace`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html\n */\nexport interface CfnWorkspaceProps {\n\n    /**\n     * The identifier of the bundle for the WorkSpace.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html#cfn-workspaces-workspace-bundleid\n     */\n    readonly bundleId: string;\n\n    /**\n     * The identifier of the AWS Directory Service directory for the WorkSpace.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html#cfn-workspaces-workspace-directoryid\n     */\n    readonly directoryId: string;\n\n    /**\n     * The user name of the user for the WorkSpace. This user name must exist in the AWS Directory Service directory for the WorkSpace.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html#cfn-workspaces-workspace-username\n     */\n    readonly userName: string;\n\n    /**\n     * Indicates whether the data stored on the root volume is encrypted.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html#cfn-workspaces-workspace-rootvolumeencryptionenabled\n     */\n    readonly rootVolumeEncryptionEnabled?: boolean | cdk.IResolvable;\n\n    /**\n     * The tags for the WorkSpace.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html#cfn-workspaces-workspace-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n\n    /**\n     * Indicates whether the data stored on the user volume is encrypted.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html#cfn-workspaces-workspace-uservolumeencryptionenabled\n     */\n    readonly userVolumeEncryptionEnabled?: boolean | cdk.IResolvable;\n\n    /**\n     * The symmetric AWS KMS key used to encrypt data stored on your WorkSpace. Amazon WorkSpaces does not support asymmetric KMS keys.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html#cfn-workspaces-workspace-volumeencryptionkey\n     */\n    readonly volumeEncryptionKey?: string;\n\n    /**\n     * The WorkSpace properties.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html#cfn-workspaces-workspace-workspaceproperties\n     */\n    readonly workspaceProperties?: CfnWorkspace.WorkspacePropertiesProperty | cdk.IResolvable;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnWorkspaceProps`\n *\n * @param properties - the TypeScript properties of a `CfnWorkspaceProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnWorkspacePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('bundleId', cdk.requiredValidator)(properties.bundleId));\n    errors.collect(cdk.propertyValidator('bundleId', cdk.validateString)(properties.bundleId));\n    errors.collect(cdk.propertyValidator('directoryId', cdk.requiredValidator)(properties.directoryId));\n    errors.collect(cdk.propertyValidator('directoryId', cdk.validateString)(properties.directoryId));\n    errors.collect(cdk.propertyValidator('rootVolumeEncryptionEnabled', cdk.validateBoolean)(properties.rootVolumeEncryptionEnabled));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('userName', cdk.requiredValidator)(properties.userName));\n    errors.collect(cdk.propertyValidator('userName', cdk.validateString)(properties.userName));\n    errors.collect(cdk.propertyValidator('userVolumeEncryptionEnabled', cdk.validateBoolean)(properties.userVolumeEncryptionEnabled));\n    errors.collect(cdk.propertyValidator('volumeEncryptionKey', cdk.validateString)(properties.volumeEncryptionKey));\n    errors.collect(cdk.propertyValidator('workspaceProperties', CfnWorkspace_WorkspacePropertiesPropertyValidator)(properties.workspaceProperties));\n    return errors.wrap('supplied properties not correct for \"CfnWorkspaceProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::WorkSpaces::Workspace` resource\n *\n * @param properties - the TypeScript properties of a `CfnWorkspaceProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::WorkSpaces::Workspace` resource.\n */\n// @ts-ignore TS6133\nfunction cfnWorkspacePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnWorkspacePropsValidator(properties).assertSuccess();\n    return {\n        BundleId: cdk.stringToCloudFormation(properties.bundleId),\n        DirectoryId: cdk.stringToCloudFormation(properties.directoryId),\n        UserName: cdk.stringToCloudFormation(properties.userName),\n        RootVolumeEncryptionEnabled: cdk.booleanToCloudFormation(properties.rootVolumeEncryptionEnabled),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n        UserVolumeEncryptionEnabled: cdk.booleanToCloudFormation(properties.userVolumeEncryptionEnabled),\n        VolumeEncryptionKey: cdk.stringToCloudFormation(properties.volumeEncryptionKey),\n        WorkspaceProperties: cfnWorkspaceWorkspacePropertiesPropertyToCloudFormation(properties.workspaceProperties),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnWorkspacePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnWorkspaceProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnWorkspaceProps>();\n    ret.addPropertyResult('bundleId', 'BundleId', cfn_parse.FromCloudFormation.getString(properties.BundleId));\n    ret.addPropertyResult('directoryId', 'DirectoryId', cfn_parse.FromCloudFormation.getString(properties.DirectoryId));\n    ret.addPropertyResult('userName', 'UserName', cfn_parse.FromCloudFormation.getString(properties.UserName));\n    ret.addPropertyResult('rootVolumeEncryptionEnabled', 'RootVolumeEncryptionEnabled', properties.RootVolumeEncryptionEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.RootVolumeEncryptionEnabled) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addPropertyResult('userVolumeEncryptionEnabled', 'UserVolumeEncryptionEnabled', properties.UserVolumeEncryptionEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.UserVolumeEncryptionEnabled) : undefined);\n    ret.addPropertyResult('volumeEncryptionKey', 'VolumeEncryptionKey', properties.VolumeEncryptionKey != null ? cfn_parse.FromCloudFormation.getString(properties.VolumeEncryptionKey) : undefined);\n    ret.addPropertyResult('workspaceProperties', 'WorkspaceProperties', properties.WorkspaceProperties != null ? CfnWorkspaceWorkspacePropertiesPropertyFromCloudFormation(properties.WorkspaceProperties) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::WorkSpaces::Workspace`\n *\n * The `AWS::WorkSpaces::Workspace` resource specifies a WorkSpace.\n *\n * Updates are not supported for the `BundleId` , `RootVolumeEncryptionEnabled` , `UserVolumeEncryptionEnabled` , or `VolumeEncryptionKey` properties. To update these properties, you must also update a property that triggers a replacement, such as the `UserName` property.\n *\n * @cloudformationResource AWS::WorkSpaces::Workspace\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html\n */\nexport class CfnWorkspace extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::WorkSpaces::Workspace\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnWorkspace {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnWorkspacePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnWorkspace(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The identifier of the bundle for the WorkSpace.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html#cfn-workspaces-workspace-bundleid\n     */\n    public bundleId: string;\n\n    /**\n     * The identifier of the AWS Directory Service directory for the WorkSpace.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html#cfn-workspaces-workspace-directoryid\n     */\n    public directoryId: string;\n\n    /**\n     * The user name of the user for the WorkSpace. This user name must exist in the AWS Directory Service directory for the WorkSpace.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html#cfn-workspaces-workspace-username\n     */\n    public userName: string;\n\n    /**\n     * Indicates whether the data stored on the root volume is encrypted.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html#cfn-workspaces-workspace-rootvolumeencryptionenabled\n     */\n    public rootVolumeEncryptionEnabled: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * The tags for the WorkSpace.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html#cfn-workspaces-workspace-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Indicates whether the data stored on the user volume is encrypted.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html#cfn-workspaces-workspace-uservolumeencryptionenabled\n     */\n    public userVolumeEncryptionEnabled: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * The symmetric AWS KMS key used to encrypt data stored on your WorkSpace. Amazon WorkSpaces does not support asymmetric KMS keys.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html#cfn-workspaces-workspace-volumeencryptionkey\n     */\n    public volumeEncryptionKey: string | undefined;\n\n    /**\n     * The WorkSpace properties.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html#cfn-workspaces-workspace-workspaceproperties\n     */\n    public workspaceProperties: CfnWorkspace.WorkspacePropertiesProperty | cdk.IResolvable | undefined;\n\n    /**\n     * Create a new `AWS::WorkSpaces::Workspace`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnWorkspaceProps) {\n        super(scope, id, { type: CfnWorkspace.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'bundleId', this);\n        cdk.requireProperty(props, 'directoryId', this);\n        cdk.requireProperty(props, 'userName', this);\n\n        this.bundleId = props.bundleId;\n        this.directoryId = props.directoryId;\n        this.userName = props.userName;\n        this.rootVolumeEncryptionEnabled = props.rootVolumeEncryptionEnabled;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::WorkSpaces::Workspace\", props.tags, { tagPropertyName: 'tags' });\n        this.userVolumeEncryptionEnabled = props.userVolumeEncryptionEnabled;\n        this.volumeEncryptionKey = props.volumeEncryptionKey;\n        this.workspaceProperties = props.workspaceProperties;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnWorkspace.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            bundleId: this.bundleId,\n            directoryId: this.directoryId,\n            userName: this.userName,\n            rootVolumeEncryptionEnabled: this.rootVolumeEncryptionEnabled,\n            tags: this.tags.renderTags(),\n            userVolumeEncryptionEnabled: this.userVolumeEncryptionEnabled,\n            volumeEncryptionKey: this.volumeEncryptionKey,\n            workspaceProperties: this.workspaceProperties,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnWorkspacePropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnWorkspace {\n    /**\n     * Information about a WorkSpace.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-workspaces-workspace-workspaceproperties.html\n     */\n    export interface WorkspacePropertiesProperty {\n        /**\n         * The compute type. For more information, see [Amazon WorkSpaces Bundles](https://docs.aws.amazon.com/workspaces/details/#Amazon_WorkSpaces_Bundles) .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-workspaces-workspace-workspaceproperties.html#cfn-workspaces-workspace-workspaceproperties-computetypename\n         */\n        readonly computeTypeName?: string;\n        /**\n         * The size of the root volume. For important information about how to modify the size of the root and user volumes, see [Modify a WorkSpace](https://docs.aws.amazon.com/workspaces/latest/adminguide/modify-workspaces.html) .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-workspaces-workspace-workspaceproperties.html#cfn-workspaces-workspace-workspaceproperties-rootvolumesizegib\n         */\n        readonly rootVolumeSizeGib?: number;\n        /**\n         * The running mode. For more information, see [Manage the WorkSpace Running Mode](https://docs.aws.amazon.com/workspaces/latest/adminguide/running-mode.html) .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-workspaces-workspace-workspaceproperties.html#cfn-workspaces-workspace-workspaceproperties-runningmode\n         */\n        readonly runningMode?: string;\n        /**\n         * The time after a user logs off when WorkSpaces are automatically stopped. Configured in 60-minute intervals.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-workspaces-workspace-workspaceproperties.html#cfn-workspaces-workspace-workspaceproperties-runningmodeautostoptimeoutinminutes\n         */\n        readonly runningModeAutoStopTimeoutInMinutes?: number;\n        /**\n         * The size of the user storage. For important information about how to modify the size of the root and user volumes, see [Modify a WorkSpace](https://docs.aws.amazon.com/workspaces/latest/adminguide/modify-workspaces.html) .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-workspaces-workspace-workspaceproperties.html#cfn-workspaces-workspace-workspaceproperties-uservolumesizegib\n         */\n        readonly userVolumeSizeGib?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `WorkspacePropertiesProperty`\n *\n * @param properties - the TypeScript properties of a `WorkspacePropertiesProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnWorkspace_WorkspacePropertiesPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('computeTypeName', cdk.validateString)(properties.computeTypeName));\n    errors.collect(cdk.propertyValidator('rootVolumeSizeGib', cdk.validateNumber)(properties.rootVolumeSizeGib));\n    errors.collect(cdk.propertyValidator('runningMode', cdk.validateString)(properties.runningMode));\n    errors.collect(cdk.propertyValidator('runningModeAutoStopTimeoutInMinutes', cdk.validateNumber)(properties.runningModeAutoStopTimeoutInMinutes));\n    errors.collect(cdk.propertyValidator('userVolumeSizeGib', cdk.validateNumber)(properties.userVolumeSizeGib));\n    return errors.wrap('supplied properties not correct for \"WorkspacePropertiesProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::WorkSpaces::Workspace.WorkspaceProperties` resource\n *\n * @param properties - the TypeScript properties of a `WorkspacePropertiesProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::WorkSpaces::Workspace.WorkspaceProperties` resource.\n */\n// @ts-ignore TS6133\nfunction cfnWorkspaceWorkspacePropertiesPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnWorkspace_WorkspacePropertiesPropertyValidator(properties).assertSuccess();\n    return {\n        ComputeTypeName: cdk.stringToCloudFormation(properties.computeTypeName),\n        RootVolumeSizeGib: cdk.numberToCloudFormation(properties.rootVolumeSizeGib),\n        RunningMode: cdk.stringToCloudFormation(properties.runningMode),\n        RunningModeAutoStopTimeoutInMinutes: cdk.numberToCloudFormation(properties.runningModeAutoStopTimeoutInMinutes),\n        UserVolumeSizeGib: cdk.numberToCloudFormation(properties.userVolumeSizeGib),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnWorkspaceWorkspacePropertiesPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnWorkspace.WorkspacePropertiesProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnWorkspace.WorkspacePropertiesProperty>();\n    ret.addPropertyResult('computeTypeName', 'ComputeTypeName', properties.ComputeTypeName != null ? cfn_parse.FromCloudFormation.getString(properties.ComputeTypeName) : undefined);\n    ret.addPropertyResult('rootVolumeSizeGib', 'RootVolumeSizeGib', properties.RootVolumeSizeGib != null ? cfn_parse.FromCloudFormation.getNumber(properties.RootVolumeSizeGib) : undefined);\n    ret.addPropertyResult('runningMode', 'RunningMode', properties.RunningMode != null ? cfn_parse.FromCloudFormation.getString(properties.RunningMode) : undefined);\n    ret.addPropertyResult('runningModeAutoStopTimeoutInMinutes', 'RunningModeAutoStopTimeoutInMinutes', properties.RunningModeAutoStopTimeoutInMinutes != null ? cfn_parse.FromCloudFormation.getNumber(properties.RunningModeAutoStopTimeoutInMinutes) : undefined);\n    ret.addPropertyResult('userVolumeSizeGib', 'UserVolumeSizeGib', properties.UserVolumeSizeGib != null ? cfn_parse.FromCloudFormation.getNumber(properties.UserVolumeSizeGib) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n"],
  "mappings": "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",
  "names": []
}
