{
  "version": 3,
  "sources": ["cross-account-destination.ts"],
  "sourcesContent": ["import * as iam from '../../aws-iam';\nimport * as cdk from '../../core';\nimport { Construct } from 'constructs';\nimport { ILogGroup } from './log-group';\nimport { CfnDestination } from './logs.generated';\nimport { ILogSubscriptionDestination, LogSubscriptionDestinationConfig } from './subscription-filter';\nimport { ArnFormat } from '../../core';\n\n/**\n * Properties for a CrossAccountDestination\n */\nexport interface CrossAccountDestinationProps {\n  /**\n   * The name of the log destination.\n   *\n   * @default Automatically generated\n   */\n  readonly destinationName?: string;\n\n  /**\n   * The role to assume that grants permissions to write to 'target'.\n   *\n   * The role must be assumable by 'logs.{REGION}.amazonaws.com'.\n   */\n  readonly role: iam.IRole;\n\n  /**\n   * The log destination target's ARN\n   */\n  readonly targetArn: string;\n}\n\n/**\n * A new CloudWatch Logs Destination for use in cross-account scenarios\n *\n * CrossAccountDestinations are used to subscribe a Kinesis stream in a\n * different account to a CloudWatch Subscription.\n *\n * Consumers will hardly ever need to use this class. Instead, directly\n * subscribe a Kinesis stream using the integration class in the\n * `@aws-cdk/aws-logs-destinations` package; if necessary, a\n * `CrossAccountDestination` will be created automatically.\n *\n * @resource AWS::Logs::Destination\n */\nexport class CrossAccountDestination extends cdk.Resource implements ILogSubscriptionDestination {\n  /**\n   * Policy object of this CrossAccountDestination object\n   */\n  public readonly policyDocument: iam.PolicyDocument = new iam.PolicyDocument();\n\n  /**\n   * The name of this CrossAccountDestination object\n   * @attribute\n   */\n  public readonly destinationName: string;\n\n  /**\n   * The ARN of this CrossAccountDestination object\n   * @attribute\n   */\n  public readonly destinationArn: string;\n\n  /**\n   * The inner resource\n   */\n  private readonly resource: CfnDestination;\n\n  constructor(scope: Construct, id: string, props: CrossAccountDestinationProps) {\n    super(scope, id, {\n      physicalName: props.destinationName ||\n        // In the underlying model, the name is not optional, but we make it so anyway.\n        cdk.Lazy.string({ produce: () => this.generateUniqueName() }),\n    });\n\n    this.resource = new CfnDestination(this, 'Resource', {\n      destinationName: this.physicalName!,\n      // Must be stringified policy\n      destinationPolicy: this.lazyStringifiedPolicyDocument(),\n      roleArn: props.role.roleArn,\n      targetArn: props.targetArn,\n    });\n\n    this.destinationArn = this.getResourceArnAttribute(this.resource.attrArn, {\n      service: 'logs',\n      resource: 'destination',\n      resourceName: this.physicalName,\n      arnFormat: ArnFormat.COLON_RESOURCE_NAME,\n    });\n    this.destinationName = this.getResourceNameAttribute(this.resource.ref);\n  }\n\n  public addToPolicy(statement: iam.PolicyStatement) {\n    this.policyDocument.addStatements(statement);\n  }\n\n  public bind(_scope: Construct, _sourceLogGroup: ILogGroup): LogSubscriptionDestinationConfig {\n    return { arn: this.destinationArn };\n  }\n\n  /**\n   * Generate a unique Destination name in case the user didn't supply one\n   */\n  private generateUniqueName(): string {\n    // Combination of stack name and LogicalID, which are guaranteed to be unique.\n    return cdk.Stack.of(this).stackName + '-' + this.resource.logicalId;\n  }\n\n  /**\n   * Return a stringified JSON version of the PolicyDocument\n   */\n  private lazyStringifiedPolicyDocument(): string {\n    return cdk.Lazy.string({\n      produce: () =>\n        this.policyDocument.isEmpty ? '' : cdk.Stack.of(this).toJsonString(this.policyDocument),\n    });\n  }\n}\n"],
  "mappings": "8NAAA,IAAA,QAAA,eAAA,EACA,IAAA,QAAA,YAAA,EAGA,iBAAA,QAAA,kBAAA,EAEA,OAAA,QAAA,YAAA,EAuCA,MAAa,+BAAgC,KAAI,QAAQ,CAuBvD,YAAY,MAAkB,GAAY,MAAmC,CAC3E,MAAM,MAAO,GAAI,CACf,aAAc,MAAM,iBAElB,IAAI,KAAK,OAAO,CAAE,QAAS,IAAM,KAAK,mBAAkB,CAAE,CAAE,EAC/D,EAxBa,KAAA,eAAqC,GAAI,KAAI,gGA0B3D,KAAK,SAAW,GAAI,kBAAA,eAAe,KAAM,WAAY,CACnD,gBAAiB,KAAK,aAEtB,kBAAmB,KAAK,8BAA6B,EACrD,QAAS,MAAM,KAAK,QACpB,UAAW,MAAM,UAClB,EAED,KAAK,eAAiB,KAAK,wBAAwB,KAAK,SAAS,QAAS,CACxE,QAAS,OACT,SAAU,cACV,aAAc,KAAK,aACnB,UAAW,OAAA,UAAU,oBACtB,EACD,KAAK,gBAAkB,KAAK,yBAAyB,KAAK,SAAS,GAAG,EAGjE,YAAY,UAA8B,wEAC/C,KAAK,eAAe,cAAc,SAAS,EAGtC,KAAK,OAAmB,gBAA0B,gFAChD,CAAE,IAAK,KAAK,cAAc,EAM3B,oBAAkB,CAExB,MAAO,KAAI,MAAM,GAAG,IAAI,EAAE,UAAY,IAAM,KAAK,SAAS,UAMpD,+BAA6B,CACnC,MAAO,KAAI,KAAK,OAAO,CACrB,QAAS,IACP,KAAK,eAAe,QAAU,GAAK,IAAI,MAAM,GAAG,IAAI,EAAE,aAAa,KAAK,cAAc,EACzF,GAtEL,QAAA,wBAAA",
  "names": []
}
