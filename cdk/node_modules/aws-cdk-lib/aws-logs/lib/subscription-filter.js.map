{
  "version": 3,
  "sources": ["subscription-filter.ts"],
  "sourcesContent": ["import * as iam from '../../aws-iam';\nimport { Resource } from '../../core';\nimport { Construct } from 'constructs';\nimport { ILogGroup, SubscriptionFilterOptions } from './log-group';\nimport { CfnSubscriptionFilter } from './logs.generated';\n\n/**\n * Interface for classes that can be the destination of a log Subscription\n */\nexport interface ILogSubscriptionDestination {\n  /**\n   * Return the properties required to send subscription events to this destination.\n   *\n   * If necessary, the destination can use the properties of the SubscriptionFilter\n   * object itself to configure its permissions to allow the subscription to write\n   * to it.\n   *\n   * The destination may reconfigure its own permissions in response to this\n   * function call.\n   */\n  bind(scope: Construct, sourceLogGroup: ILogGroup): LogSubscriptionDestinationConfig;\n}\n\n/**\n * Properties returned by a Subscription destination\n */\nexport interface LogSubscriptionDestinationConfig {\n  /**\n   * The ARN of the subscription's destination\n   */\n  readonly arn: string;\n\n  /**\n   * The role to assume to write log events to the destination\n   *\n   * @default No role assumed\n   */\n  readonly role?: iam.IRole;\n}\n\n/**\n * Properties for a SubscriptionFilter\n */\nexport interface SubscriptionFilterProps extends SubscriptionFilterOptions {\n  /**\n   * The log group to create the subscription on.\n   */\n  readonly logGroup: ILogGroup;\n}\n\n/**\n * A new Subscription on a CloudWatch log group.\n */\nexport class SubscriptionFilter extends Resource {\n  constructor(scope: Construct, id: string, props: SubscriptionFilterProps) {\n    super(scope, id);\n\n    const destProps = props.destination.bind(this, props.logGroup);\n\n    new CfnSubscriptionFilter(this, 'Resource', {\n      logGroupName: props.logGroup.logGroupName,\n      destinationArn: destProps.arn,\n      roleArn: destProps.role && destProps.role.roleArn,\n      filterPattern: props.filterPattern.logPatternString,\n    });\n  }\n}\n"],
  "mappings": "yNACA,OAAA,QAAA,YAAA,EAGA,iBAAA,QAAA,kBAAA,EAiDA,MAAa,0BAA2B,QAAA,QAAQ,CAC9C,YAAY,MAAkB,GAAY,MAA8B,CACtE,MAAM,MAAO,EAAE,8EAEf,KAAM,WAAY,MAAM,YAAY,KAAK,KAAM,MAAM,QAAQ,EAE7D,GAAI,kBAAA,sBAAsB,KAAM,WAAY,CAC1C,aAAc,MAAM,SAAS,aAC7B,eAAgB,UAAU,IAC1B,QAAS,UAAU,MAAQ,UAAU,KAAK,QAC1C,cAAe,MAAM,cAAc,iBACpC,GAXL,QAAA,mBAAA",
  "names": []
}
