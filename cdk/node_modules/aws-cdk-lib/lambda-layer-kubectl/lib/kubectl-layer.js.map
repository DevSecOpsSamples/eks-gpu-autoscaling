{
  "version": 3,
  "sources": ["kubectl-layer.ts"],
  "sourcesContent": ["import * as crypto from 'crypto';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as lambda from '../../aws-lambda';\nimport { Construct } from 'constructs';\n\n/**\n * An AWS Lambda layer that includes `kubectl` and `helm`.\n */\nexport class KubectlLayer extends lambda.LayerVersion {\n  constructor(scope: Construct, id: string) {\n    super(scope, id, {\n      code: lambda.Code.fromAsset(path.join(__dirname, 'layer.zip'), {\n        // we hash the Dockerfile (it contains the tools versions) because hashing the zip is non-deterministic\n        assetHash: hashFile(path.join(__dirname, '..', 'layer', 'Dockerfile')),\n      }),\n      description: '/opt/kubectl/kubectl and /opt/helm/helm',\n    });\n  }\n}\n\nfunction hashFile(fileName: string) {\n  return crypto\n    .createHash('sha256')\n    .update(fs.readFileSync(fileName))\n    .digest('hex');\n}"],
  "mappings": "wJAAA,OAAA,QAAA,QAAA,EACA,GAAA,QAAA,IAAA,EACA,KAAA,QAAA,MAAA,EACA,OAAA,QAAA,kBAAA,EAMA,MAAa,oBAAqB,QAAO,YAAY,CACnD,YAAY,MAAkB,GAAU,CACtC,MAAM,MAAO,GAAI,CACf,KAAM,OAAO,KAAK,UAAU,KAAK,KAAK,UAAW,WAAW,EAAG,CAE7D,UAAW,SAAS,KAAK,KAAK,UAAW,KAAM,QAAS,YAAY,CAAC,EACtE,EACD,YAAa,0CACd,GARL,QAAA,aAAA,2HAYA,kBAAkB,SAAgB,CAChC,MAAO,QACJ,WAAW,QAAQ,EACnB,OAAO,GAAG,aAAa,QAAQ,CAAC,EAChC,OAAO,KAAK,CACjB",
  "names": []
}
