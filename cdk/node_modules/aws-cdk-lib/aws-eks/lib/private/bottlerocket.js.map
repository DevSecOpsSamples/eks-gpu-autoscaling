{
  "version": 3,
  "sources": ["bottlerocket.ts"],
  "sourcesContent": ["import * as ec2 from '../../../aws-ec2';\nimport * as ssm from '../../../aws-ssm';\nimport { Construct } from 'constructs';\n\n/**\n * Properties for BottleRocketImage\n */\nexport interface BottleRocketImageProps {\n  /**\n   * The Kubernetes version to use\n   */\n  readonly kubernetesVersion: string;\n}\n\n/**\n * Construct an Bottlerocket image from the latest AMI published in SSM\n */\nexport class BottleRocketImage implements ec2.IMachineImage {\n  private readonly kubernetesVersion: string;\n\n  private readonly amiParameterName: string;\n\n  /**\n   * Constructs a new instance of the BottleRocketImage class.\n   */\n  public constructor(props: BottleRocketImageProps) {\n    this.kubernetesVersion = props.kubernetesVersion;\n\n    // set the SSM parameter name\n    this.amiParameterName = `/aws/service/bottlerocket/aws-k8s-${this.kubernetesVersion}/x86_64/latest/image_id`;\n  }\n\n  /**\n   * Return the correct image\n   */\n  public getImage(scope: Construct): ec2.MachineImageConfig {\n    const ami = ssm.StringParameter.valueForStringParameter(scope, this.amiParameterName);\n    return {\n      imageId: ami,\n      osType: ec2.OperatingSystemType.LINUX,\n      userData: ec2.UserData.custom(''),\n    };\n  }\n}\n"],
  "mappings": "qGAAA,KAAA,KAAA,QAAA,kBAAA,EACA,IAAA,QAAA,kBAAA,EAgBA,MAAa,iBAAiB,CAQ5B,YAAmB,MAA6B,CAC9C,KAAK,kBAAoB,MAAM,kBAG/B,KAAK,iBAAmB,qCAAqC,KAAK,2CAM7D,SAAS,MAAgB,CAE9B,MAAO,CACL,QAFU,IAAI,gBAAgB,wBAAwB,MAAO,KAAK,gBAAgB,EAGlF,OAAQ,IAAI,oBAAoB,MAChC,SAAU,IAAI,SAAS,OAAO,EAAE,IAvBtC,QAAA,kBAAA",
  "names": []
}
