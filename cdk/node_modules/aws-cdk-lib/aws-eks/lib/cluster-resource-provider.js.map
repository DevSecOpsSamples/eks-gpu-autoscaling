{
  "version": 3,
  "sources": ["cluster-resource-provider.ts"],
  "sourcesContent": ["import * as path from 'path';\nimport * as ec2 from '../../aws-ec2';\nimport * as iam from '../../aws-iam';\nimport * as lambda from '../../aws-lambda';\nimport { Duration, NestedStack, Stack } from '../../core';\nimport * as cr from '../../custom-resources';\nimport { NodeProxyAgentLayer } from '../../lambda-layer-node-proxy-agent';\nimport { Construct } from 'constructs';\n\nconst HANDLER_DIR = path.join(__dirname, 'cluster-resource-handler');\nconst HANDLER_RUNTIME = lambda.Runtime.NODEJS_12_X;\n\nexport interface ClusterResourceProviderProps {\n  /**\n   * The IAM role to assume in order to interact with the cluster.\n   */\n  readonly adminRole: iam.IRole;\n\n  /**\n   * The VPC to provision the functions in.\n   */\n  readonly vpc?: ec2.IVpc;\n\n  /**\n   * The subnets to place the functions in.\n   */\n  readonly subnets?: ec2.ISubnet[];\n\n  /**\n   * Environment to add to the handler.\n   */\n  readonly environment?: { [key: string]: string };\n\n  /**\n   * An AWS Lambda layer that includes the NPM dependency `proxy-agent`.\n   *\n   * If not defined, a default layer will be used.\n   */\n  readonly onEventLayer?: lambda.ILayerVersion;\n\n  /**\n   * The security group to associate with the functions.\n   *\n   * @default - No security group.\n   */\n  readonly securityGroup?: ec2.ISecurityGroup;\n}\n\n/**\n * A custom resource provider that handles cluster operations. It serves\n * multiple custom resources such as the cluster resource and the fargate\n * resource.\n *\n * @internal\n */\nexport class ClusterResourceProvider extends NestedStack {\n\n  public static getOrCreate(scope: Construct, props: ClusterResourceProviderProps) {\n    const stack = Stack.of(scope);\n    const uid = '@aws-cdk/aws-eks.ClusterResourceProvider';\n    return stack.node.tryFindChild(uid) as ClusterResourceProvider ?? new ClusterResourceProvider(stack, uid, props);\n  }\n\n  /**\n   * The custom resource provider to use for custom resources.\n   */\n  public readonly provider: cr.Provider;\n\n  private constructor(scope: Construct, id: string, props: ClusterResourceProviderProps) {\n    super(scope, id);\n\n    // The NPM dependency proxy-agent is required in order to support proxy routing with the AWS JS SDK.\n    const nodeProxyAgentLayer = new NodeProxyAgentLayer(this, 'NodeProxyAgentLayer');\n\n    const onEvent = new lambda.Function(this, 'OnEventHandler', {\n      code: lambda.Code.fromAsset(HANDLER_DIR),\n      description: 'onEvent handler for EKS cluster resource provider',\n      runtime: HANDLER_RUNTIME,\n      environment: props.environment,\n      handler: 'index.onEvent',\n      timeout: Duration.minutes(1),\n      vpc: props.subnets ? props.vpc : undefined,\n      vpcSubnets: props.subnets ? { subnets: props.subnets } : undefined,\n      securityGroups: props.securityGroup ? [props.securityGroup] : undefined,\n      // Allow user to override the layer.\n      layers: props.onEventLayer ? [props.onEventLayer] : [nodeProxyAgentLayer],\n    });\n\n    const isComplete = new lambda.Function(this, 'IsCompleteHandler', {\n      code: lambda.Code.fromAsset(HANDLER_DIR),\n      description: 'isComplete handler for EKS cluster resource provider',\n      runtime: HANDLER_RUNTIME,\n      environment: props.environment,\n      handler: 'index.isComplete',\n      timeout: Duration.minutes(1),\n      vpc: props.subnets ? props.vpc : undefined,\n      vpcSubnets: props.subnets ? { subnets: props.subnets } : undefined,\n      securityGroups: props.securityGroup ? [props.securityGroup] : undefined,\n      layers: [nodeProxyAgentLayer],\n    });\n\n    this.provider = new cr.Provider(this, 'Provider', {\n      onEventHandler: onEvent,\n      isCompleteHandler: isComplete,\n      totalTimeout: Duration.hours(1),\n      queryInterval: Duration.minutes(1),\n      vpc: props.subnets ? props.vpc : undefined,\n      vpcSubnets: props.subnets ? { subnets: props.subnets } : undefined,\n      securityGroups: props.securityGroup ? [props.securityGroup] : undefined,\n    });\n\n    props.adminRole.grant(onEvent.role!, 'sts:AssumeRole');\n    props.adminRole.grant(isComplete.role!, 'sts:AssumeRole');\n  }\n\n  /**\n   * The custom resource service token for this provider.\n   */\n  public get serviceToken() { return this.provider.serviceToken; }\n}\n"],
  "mappings": "2GAAA,KAAA,MAAA,QAAA,MAAA,EAGA,OAAA,QAAA,kBAAA,EACA,OAAA,QAAA,YAAA,EACA,GAAA,QAAA,wBAAA,EACA,gCAAA,QAAA,qCAAA,EAGM,YAAc,KAAK,KAAK,UAAW,0BAA0B,EAC7D,gBAAkB,OAAO,QAAQ,YA6CvC,MAAa,+BAAgC,QAAA,WAAW,CAatD,YAAoB,MAAkB,GAAY,MAAmC,CACnF,MAAM,MAAO,EAAE,EAGf,KAAM,qBAAsB,GAAI,iCAAA,oBAAoB,KAAM,qBAAqB,EAEzE,QAAU,GAAI,QAAO,SAAS,KAAM,iBAAkB,CAC1D,KAAM,OAAO,KAAK,UAAU,WAAW,EACvC,YAAa,oDACb,QAAS,gBACT,YAAa,MAAM,YACnB,QAAS,gBACT,QAAS,OAAA,SAAS,QAAQ,CAAC,EAC3B,IAAK,MAAM,QAAU,MAAM,IAAM,OACjC,WAAY,MAAM,QAAU,CAAE,QAAS,MAAM,OAAO,EAAK,OACzD,eAAgB,MAAM,cAAgB,CAAC,MAAM,aAAa,EAAI,OAE9D,OAAQ,MAAM,aAAe,CAAC,MAAM,YAAY,EAAI,CAAC,mBAAmB,EACzE,EAEK,WAAa,GAAI,QAAO,SAAS,KAAM,oBAAqB,CAChE,KAAM,OAAO,KAAK,UAAU,WAAW,EACvC,YAAa,uDACb,QAAS,gBACT,YAAa,MAAM,YACnB,QAAS,mBACT,QAAS,OAAA,SAAS,QAAQ,CAAC,EAC3B,IAAK,MAAM,QAAU,MAAM,IAAM,OACjC,WAAY,MAAM,QAAU,CAAE,QAAS,MAAM,OAAO,EAAK,OACzD,eAAgB,MAAM,cAAgB,CAAC,MAAM,aAAa,EAAI,OAC9D,OAAQ,CAAC,mBAAmB,EAC7B,EAED,KAAK,SAAW,GAAI,IAAG,SAAS,KAAM,WAAY,CAChD,eAAgB,QAChB,kBAAmB,WACnB,aAAc,OAAA,SAAS,MAAM,CAAC,EAC9B,cAAe,OAAA,SAAS,QAAQ,CAAC,EACjC,IAAK,MAAM,QAAU,MAAM,IAAM,OACjC,WAAY,MAAM,QAAU,CAAE,QAAS,MAAM,OAAO,EAAK,OACzD,eAAgB,MAAM,cAAgB,CAAC,MAAM,aAAa,EAAI,OAC/D,EAED,MAAM,UAAU,MAAM,QAAQ,KAAO,gBAAgB,EACrD,MAAM,UAAU,MAAM,WAAW,KAAO,gBAAgB,QAvD5C,aAAY,MAAkB,MAAmC,QAC7E,KAAM,OAAQ,OAAA,MAAM,GAAG,KAAK,EACtB,IAAM,2CACZ,MAAA,IAAO,MAAM,KAAK,aAAa,GAAG,KAA4B,MAAA,KAAA,OAAA,GAAI,GAAI,yBAAwB,MAAO,IAAK,KAAK,KA0DtG,eAAY,CAAK,MAAO,MAAK,SAAS,YAAa,EA/DhE,QAAA,wBAAA",
  "names": []
}
