"use strict";var _a,_b,_c,_d,_e;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnNodegroup=exports.CfnIdentityProviderConfig=exports.CfnFargateProfile=exports.CfnCluster=exports.CfnAddon=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/cfn-parse");function CfnAddonPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("addonName",cdk.requiredValidator)(properties.addonName)),errors.collect(cdk.propertyValidator("addonName",cdk.validateString)(properties.addonName)),errors.collect(cdk.propertyValidator("addonVersion",cdk.validateString)(properties.addonVersion)),errors.collect(cdk.propertyValidator("clusterName",cdk.requiredValidator)(properties.clusterName)),errors.collect(cdk.propertyValidator("clusterName",cdk.validateString)(properties.clusterName)),errors.collect(cdk.propertyValidator("resolveConflicts",cdk.validateString)(properties.resolveConflicts)),errors.collect(cdk.propertyValidator("serviceAccountRoleArn",cdk.validateString)(properties.serviceAccountRoleArn)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnAddonProps"')}function cfnAddonPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnAddonPropsValidator(properties).assertSuccess(),{AddonName:cdk.stringToCloudFormation(properties.addonName),ClusterName:cdk.stringToCloudFormation(properties.clusterName),AddonVersion:cdk.stringToCloudFormation(properties.addonVersion),ResolveConflicts:cdk.stringToCloudFormation(properties.resolveConflicts),ServiceAccountRoleArn:cdk.stringToCloudFormation(properties.serviceAccountRoleArn),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnAddonPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("addonName","AddonName",cfn_parse.FromCloudFormation.getString(properties.AddonName)),ret.addPropertyResult("clusterName","ClusterName",cfn_parse.FromCloudFormation.getString(properties.ClusterName)),ret.addPropertyResult("addonVersion","AddonVersion",properties.AddonVersion!=null?cfn_parse.FromCloudFormation.getString(properties.AddonVersion):void 0),ret.addPropertyResult("resolveConflicts","ResolveConflicts",properties.ResolveConflicts!=null?cfn_parse.FromCloudFormation.getString(properties.ResolveConflicts):void 0),ret.addPropertyResult("serviceAccountRoleArn","ServiceAccountRoleArn",properties.ServiceAccountRoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.ServiceAccountRoleArn):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnAddon extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnAddon.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_eks_CfnAddonProps(props),cdk.requireProperty(props,"addonName",this),cdk.requireProperty(props,"clusterName",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn")),this.addonName=props.addonName,this.clusterName=props.clusterName,this.addonVersion=props.addonVersion,this.resolveConflicts=props.resolveConflicts,this.serviceAccountRoleArn=props.serviceAccountRoleArn,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::EKS::Addon",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnAddonPropsFromCloudFormation(resourceProperties),ret=new CfnAddon(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnAddon.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{addonName:this.addonName,clusterName:this.clusterName,addonVersion:this.addonVersion,resolveConflicts:this.resolveConflicts,serviceAccountRoleArn:this.serviceAccountRoleArn,tags:this.tags.renderTags()}}renderProperties(props){return cfnAddonPropsToCloudFormation(props)}}exports.CfnAddon=CfnAddon,_a=JSII_RTTI_SYMBOL_1,CfnAddon[_a]={fqn:"aws-cdk-lib.aws_eks.CfnAddon",version:"2.20.0"},CfnAddon.CFN_RESOURCE_TYPE_NAME="AWS::EKS::Addon";function CfnClusterPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("encryptionConfig",cdk.listValidator(CfnCluster_EncryptionConfigPropertyValidator))(properties.encryptionConfig)),errors.collect(cdk.propertyValidator("kubernetesNetworkConfig",CfnCluster_KubernetesNetworkConfigPropertyValidator)(properties.kubernetesNetworkConfig)),errors.collect(cdk.propertyValidator("logging",CfnCluster_LoggingPropertyValidator)(properties.logging)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("resourcesVpcConfig",cdk.requiredValidator)(properties.resourcesVpcConfig)),errors.collect(cdk.propertyValidator("resourcesVpcConfig",CfnCluster_ResourcesVpcConfigPropertyValidator)(properties.resourcesVpcConfig)),errors.collect(cdk.propertyValidator("roleArn",cdk.requiredValidator)(properties.roleArn)),errors.collect(cdk.propertyValidator("roleArn",cdk.validateString)(properties.roleArn)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("version",cdk.validateString)(properties.version)),errors.wrap('supplied properties not correct for "CfnClusterProps"')}function cfnClusterPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnClusterPropsValidator(properties).assertSuccess(),{ResourcesVpcConfig:cfnClusterResourcesVpcConfigPropertyToCloudFormation(properties.resourcesVpcConfig),RoleArn:cdk.stringToCloudFormation(properties.roleArn),EncryptionConfig:cdk.listMapper(cfnClusterEncryptionConfigPropertyToCloudFormation)(properties.encryptionConfig),KubernetesNetworkConfig:cfnClusterKubernetesNetworkConfigPropertyToCloudFormation(properties.kubernetesNetworkConfig),Logging:cfnClusterLoggingPropertyToCloudFormation(properties.logging),Name:cdk.stringToCloudFormation(properties.name),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),Version:cdk.stringToCloudFormation(properties.version)}):properties}function CfnClusterPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("resourcesVpcConfig","ResourcesVpcConfig",CfnClusterResourcesVpcConfigPropertyFromCloudFormation(properties.ResourcesVpcConfig)),ret.addPropertyResult("roleArn","RoleArn",cfn_parse.FromCloudFormation.getString(properties.RoleArn)),ret.addPropertyResult("encryptionConfig","EncryptionConfig",properties.EncryptionConfig!=null?cfn_parse.FromCloudFormation.getArray(CfnClusterEncryptionConfigPropertyFromCloudFormation)(properties.EncryptionConfig):void 0),ret.addPropertyResult("kubernetesNetworkConfig","KubernetesNetworkConfig",properties.KubernetesNetworkConfig!=null?CfnClusterKubernetesNetworkConfigPropertyFromCloudFormation(properties.KubernetesNetworkConfig):void 0),ret.addPropertyResult("logging","Logging",properties.Logging!=null?CfnClusterLoggingPropertyFromCloudFormation(properties.Logging):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("version","Version",properties.Version!=null?cfn_parse.FromCloudFormation.getString(properties.Version):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnCluster extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnCluster.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_eks_CfnClusterProps(props),cdk.requireProperty(props,"resourcesVpcConfig",this),cdk.requireProperty(props,"roleArn",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn")),this.attrCertificateAuthorityData=cdk.Token.asString(this.getAtt("CertificateAuthorityData")),this.attrClusterSecurityGroupId=cdk.Token.asString(this.getAtt("ClusterSecurityGroupId")),this.attrEncryptionConfigKeyArn=cdk.Token.asString(this.getAtt("EncryptionConfigKeyArn")),this.attrEndpoint=cdk.Token.asString(this.getAtt("Endpoint")),this.attrKubernetesNetworkConfigServiceIpv6Cidr=cdk.Token.asString(this.getAtt("KubernetesNetworkConfig.ServiceIpv6Cidr")),this.attrOpenIdConnectIssuerUrl=cdk.Token.asString(this.getAtt("OpenIdConnectIssuerUrl")),this.resourcesVpcConfig=props.resourcesVpcConfig,this.roleArn=props.roleArn,this.encryptionConfig=props.encryptionConfig,this.kubernetesNetworkConfig=props.kubernetesNetworkConfig,this.logging=props.logging,this.name=props.name,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::EKS::Cluster",props.tags,{tagPropertyName:"tags"}),this.version=props.version}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnClusterPropsFromCloudFormation(resourceProperties),ret=new CfnCluster(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnCluster.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{resourcesVpcConfig:this.resourcesVpcConfig,roleArn:this.roleArn,encryptionConfig:this.encryptionConfig,kubernetesNetworkConfig:this.kubernetesNetworkConfig,logging:this.logging,name:this.name,tags:this.tags.renderTags(),version:this.version}}renderProperties(props){return cfnClusterPropsToCloudFormation(props)}}exports.CfnCluster=CfnCluster,_b=JSII_RTTI_SYMBOL_1,CfnCluster[_b]={fqn:"aws-cdk-lib.aws_eks.CfnCluster",version:"2.20.0"},CfnCluster.CFN_RESOURCE_TYPE_NAME="AWS::EKS::Cluster";function CfnCluster_ClusterLoggingPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("enabledTypes",cdk.listValidator(CfnCluster_LoggingTypeConfigPropertyValidator))(properties.enabledTypes)),errors.wrap('supplied properties not correct for "ClusterLoggingProperty"')}function cfnClusterClusterLoggingPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnCluster_ClusterLoggingPropertyValidator(properties).assertSuccess(),{EnabledTypes:cdk.listMapper(cfnClusterLoggingTypeConfigPropertyToCloudFormation)(properties.enabledTypes)}):properties}function CfnClusterClusterLoggingPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("enabledTypes","EnabledTypes",properties.EnabledTypes!=null?cfn_parse.FromCloudFormation.getArray(CfnClusterLoggingTypeConfigPropertyFromCloudFormation)(properties.EnabledTypes):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnCluster_EncryptionConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("provider",CfnCluster_ProviderPropertyValidator)(properties.provider)),errors.collect(cdk.propertyValidator("resources",cdk.listValidator(cdk.validateString))(properties.resources)),errors.wrap('supplied properties not correct for "EncryptionConfigProperty"')}function cfnClusterEncryptionConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnCluster_EncryptionConfigPropertyValidator(properties).assertSuccess(),{Provider:cfnClusterProviderPropertyToCloudFormation(properties.provider),Resources:cdk.listMapper(cdk.stringToCloudFormation)(properties.resources)}):properties}function CfnClusterEncryptionConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("provider","Provider",properties.Provider!=null?CfnClusterProviderPropertyFromCloudFormation(properties.Provider):void 0),ret.addPropertyResult("resources","Resources",properties.Resources!=null?cfn_parse.FromCloudFormation.getStringArray(properties.Resources):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnCluster_KubernetesNetworkConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("ipFamily",cdk.validateString)(properties.ipFamily)),errors.collect(cdk.propertyValidator("serviceIpv4Cidr",cdk.validateString)(properties.serviceIpv4Cidr)),errors.collect(cdk.propertyValidator("serviceIpv6Cidr",cdk.validateString)(properties.serviceIpv6Cidr)),errors.wrap('supplied properties not correct for "KubernetesNetworkConfigProperty"')}function cfnClusterKubernetesNetworkConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnCluster_KubernetesNetworkConfigPropertyValidator(properties).assertSuccess(),{IpFamily:cdk.stringToCloudFormation(properties.ipFamily),ServiceIpv4Cidr:cdk.stringToCloudFormation(properties.serviceIpv4Cidr),ServiceIpv6Cidr:cdk.stringToCloudFormation(properties.serviceIpv6Cidr)}):properties}function CfnClusterKubernetesNetworkConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("ipFamily","IpFamily",properties.IpFamily!=null?cfn_parse.FromCloudFormation.getString(properties.IpFamily):void 0),ret.addPropertyResult("serviceIpv4Cidr","ServiceIpv4Cidr",properties.ServiceIpv4Cidr!=null?cfn_parse.FromCloudFormation.getString(properties.ServiceIpv4Cidr):void 0),ret.addPropertyResult("serviceIpv6Cidr","ServiceIpv6Cidr",properties.ServiceIpv6Cidr!=null?cfn_parse.FromCloudFormation.getString(properties.ServiceIpv6Cidr):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnCluster_LoggingPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("clusterLogging",CfnCluster_ClusterLoggingPropertyValidator)(properties.clusterLogging)),errors.wrap('supplied properties not correct for "LoggingProperty"')}function cfnClusterLoggingPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnCluster_LoggingPropertyValidator(properties).assertSuccess(),{ClusterLogging:cfnClusterClusterLoggingPropertyToCloudFormation(properties.clusterLogging)}):properties}function CfnClusterLoggingPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("clusterLogging","ClusterLogging",properties.ClusterLogging!=null?CfnClusterClusterLoggingPropertyFromCloudFormation(properties.ClusterLogging):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnCluster_LoggingTypeConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("type",cdk.validateString)(properties.type)),errors.wrap('supplied properties not correct for "LoggingTypeConfigProperty"')}function cfnClusterLoggingTypeConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnCluster_LoggingTypeConfigPropertyValidator(properties).assertSuccess(),{Type:cdk.stringToCloudFormation(properties.type)}):properties}function CfnClusterLoggingTypeConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("type","Type",properties.Type!=null?cfn_parse.FromCloudFormation.getString(properties.Type):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnCluster_ProviderPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("keyArn",cdk.validateString)(properties.keyArn)),errors.wrap('supplied properties not correct for "ProviderProperty"')}function cfnClusterProviderPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnCluster_ProviderPropertyValidator(properties).assertSuccess(),{KeyArn:cdk.stringToCloudFormation(properties.keyArn)}):properties}function CfnClusterProviderPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("keyArn","KeyArn",properties.KeyArn!=null?cfn_parse.FromCloudFormation.getString(properties.KeyArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnCluster_ResourcesVpcConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("endpointPrivateAccess",cdk.validateBoolean)(properties.endpointPrivateAccess)),errors.collect(cdk.propertyValidator("endpointPublicAccess",cdk.validateBoolean)(properties.endpointPublicAccess)),errors.collect(cdk.propertyValidator("publicAccessCidrs",cdk.listValidator(cdk.validateString))(properties.publicAccessCidrs)),errors.collect(cdk.propertyValidator("securityGroupIds",cdk.listValidator(cdk.validateString))(properties.securityGroupIds)),errors.collect(cdk.propertyValidator("subnetIds",cdk.requiredValidator)(properties.subnetIds)),errors.collect(cdk.propertyValidator("subnetIds",cdk.listValidator(cdk.validateString))(properties.subnetIds)),errors.wrap('supplied properties not correct for "ResourcesVpcConfigProperty"')}function cfnClusterResourcesVpcConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnCluster_ResourcesVpcConfigPropertyValidator(properties).assertSuccess(),{EndpointPrivateAccess:cdk.booleanToCloudFormation(properties.endpointPrivateAccess),EndpointPublicAccess:cdk.booleanToCloudFormation(properties.endpointPublicAccess),PublicAccessCidrs:cdk.listMapper(cdk.stringToCloudFormation)(properties.publicAccessCidrs),SecurityGroupIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.securityGroupIds),SubnetIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.subnetIds)}):properties}function CfnClusterResourcesVpcConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("endpointPrivateAccess","EndpointPrivateAccess",properties.EndpointPrivateAccess!=null?cfn_parse.FromCloudFormation.getBoolean(properties.EndpointPrivateAccess):void 0),ret.addPropertyResult("endpointPublicAccess","EndpointPublicAccess",properties.EndpointPublicAccess!=null?cfn_parse.FromCloudFormation.getBoolean(properties.EndpointPublicAccess):void 0),ret.addPropertyResult("publicAccessCidrs","PublicAccessCidrs",properties.PublicAccessCidrs!=null?cfn_parse.FromCloudFormation.getStringArray(properties.PublicAccessCidrs):void 0),ret.addPropertyResult("securityGroupIds","SecurityGroupIds",properties.SecurityGroupIds!=null?cfn_parse.FromCloudFormation.getStringArray(properties.SecurityGroupIds):void 0),ret.addPropertyResult("subnetIds","SubnetIds",cfn_parse.FromCloudFormation.getStringArray(properties.SubnetIds)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnFargateProfilePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("clusterName",cdk.requiredValidator)(properties.clusterName)),errors.collect(cdk.propertyValidator("clusterName",cdk.validateString)(properties.clusterName)),errors.collect(cdk.propertyValidator("fargateProfileName",cdk.validateString)(properties.fargateProfileName)),errors.collect(cdk.propertyValidator("podExecutionRoleArn",cdk.requiredValidator)(properties.podExecutionRoleArn)),errors.collect(cdk.propertyValidator("podExecutionRoleArn",cdk.validateString)(properties.podExecutionRoleArn)),errors.collect(cdk.propertyValidator("selectors",cdk.requiredValidator)(properties.selectors)),errors.collect(cdk.propertyValidator("selectors",cdk.listValidator(CfnFargateProfile_SelectorPropertyValidator))(properties.selectors)),errors.collect(cdk.propertyValidator("subnets",cdk.listValidator(cdk.validateString))(properties.subnets)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnFargateProfileProps"')}function cfnFargateProfilePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnFargateProfilePropsValidator(properties).assertSuccess(),{ClusterName:cdk.stringToCloudFormation(properties.clusterName),PodExecutionRoleArn:cdk.stringToCloudFormation(properties.podExecutionRoleArn),Selectors:cdk.listMapper(cfnFargateProfileSelectorPropertyToCloudFormation)(properties.selectors),FargateProfileName:cdk.stringToCloudFormation(properties.fargateProfileName),Subnets:cdk.listMapper(cdk.stringToCloudFormation)(properties.subnets),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnFargateProfilePropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("clusterName","ClusterName",cfn_parse.FromCloudFormation.getString(properties.ClusterName)),ret.addPropertyResult("podExecutionRoleArn","PodExecutionRoleArn",cfn_parse.FromCloudFormation.getString(properties.PodExecutionRoleArn)),ret.addPropertyResult("selectors","Selectors",cfn_parse.FromCloudFormation.getArray(CfnFargateProfileSelectorPropertyFromCloudFormation)(properties.Selectors)),ret.addPropertyResult("fargateProfileName","FargateProfileName",properties.FargateProfileName!=null?cfn_parse.FromCloudFormation.getString(properties.FargateProfileName):void 0),ret.addPropertyResult("subnets","Subnets",properties.Subnets!=null?cfn_parse.FromCloudFormation.getStringArray(properties.Subnets):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnFargateProfile extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnFargateProfile.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_eks_CfnFargateProfileProps(props),cdk.requireProperty(props,"clusterName",this),cdk.requireProperty(props,"podExecutionRoleArn",this),cdk.requireProperty(props,"selectors",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn")),this.clusterName=props.clusterName,this.podExecutionRoleArn=props.podExecutionRoleArn,this.selectors=props.selectors,this.fargateProfileName=props.fargateProfileName,this.subnets=props.subnets,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::EKS::FargateProfile",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnFargateProfilePropsFromCloudFormation(resourceProperties),ret=new CfnFargateProfile(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnFargateProfile.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{clusterName:this.clusterName,podExecutionRoleArn:this.podExecutionRoleArn,selectors:this.selectors,fargateProfileName:this.fargateProfileName,subnets:this.subnets,tags:this.tags.renderTags()}}renderProperties(props){return cfnFargateProfilePropsToCloudFormation(props)}}exports.CfnFargateProfile=CfnFargateProfile,_c=JSII_RTTI_SYMBOL_1,CfnFargateProfile[_c]={fqn:"aws-cdk-lib.aws_eks.CfnFargateProfile",version:"2.20.0"},CfnFargateProfile.CFN_RESOURCE_TYPE_NAME="AWS::EKS::FargateProfile";function CfnFargateProfile_LabelPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("key",cdk.requiredValidator)(properties.key)),errors.collect(cdk.propertyValidator("key",cdk.validateString)(properties.key)),errors.collect(cdk.propertyValidator("value",cdk.requiredValidator)(properties.value)),errors.collect(cdk.propertyValidator("value",cdk.validateString)(properties.value)),errors.wrap('supplied properties not correct for "LabelProperty"')}function cfnFargateProfileLabelPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnFargateProfile_LabelPropertyValidator(properties).assertSuccess(),{Key:cdk.stringToCloudFormation(properties.key),Value:cdk.stringToCloudFormation(properties.value)}):properties}function CfnFargateProfileLabelPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("key","Key",cfn_parse.FromCloudFormation.getString(properties.Key)),ret.addPropertyResult("value","Value",cfn_parse.FromCloudFormation.getString(properties.Value)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnFargateProfile_SelectorPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("labels",cdk.listValidator(CfnFargateProfile_LabelPropertyValidator))(properties.labels)),errors.collect(cdk.propertyValidator("namespace",cdk.requiredValidator)(properties.namespace)),errors.collect(cdk.propertyValidator("namespace",cdk.validateString)(properties.namespace)),errors.wrap('supplied properties not correct for "SelectorProperty"')}function cfnFargateProfileSelectorPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnFargateProfile_SelectorPropertyValidator(properties).assertSuccess(),{Labels:cdk.listMapper(cfnFargateProfileLabelPropertyToCloudFormation)(properties.labels),Namespace:cdk.stringToCloudFormation(properties.namespace)}):properties}function CfnFargateProfileSelectorPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("labels","Labels",properties.Labels!=null?cfn_parse.FromCloudFormation.getArray(CfnFargateProfileLabelPropertyFromCloudFormation)(properties.Labels):void 0),ret.addPropertyResult("namespace","Namespace",cfn_parse.FromCloudFormation.getString(properties.Namespace)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnIdentityProviderConfigPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("clusterName",cdk.requiredValidator)(properties.clusterName)),errors.collect(cdk.propertyValidator("clusterName",cdk.validateString)(properties.clusterName)),errors.collect(cdk.propertyValidator("identityProviderConfigName",cdk.validateString)(properties.identityProviderConfigName)),errors.collect(cdk.propertyValidator("oidc",CfnIdentityProviderConfig_OidcIdentityProviderConfigPropertyValidator)(properties.oidc)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("type",cdk.requiredValidator)(properties.type)),errors.collect(cdk.propertyValidator("type",cdk.validateString)(properties.type)),errors.wrap('supplied properties not correct for "CfnIdentityProviderConfigProps"')}function cfnIdentityProviderConfigPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnIdentityProviderConfigPropsValidator(properties).assertSuccess(),{ClusterName:cdk.stringToCloudFormation(properties.clusterName),Type:cdk.stringToCloudFormation(properties.type),IdentityProviderConfigName:cdk.stringToCloudFormation(properties.identityProviderConfigName),Oidc:cfnIdentityProviderConfigOidcIdentityProviderConfigPropertyToCloudFormation(properties.oidc),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnIdentityProviderConfigPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("clusterName","ClusterName",cfn_parse.FromCloudFormation.getString(properties.ClusterName)),ret.addPropertyResult("type","Type",cfn_parse.FromCloudFormation.getString(properties.Type)),ret.addPropertyResult("identityProviderConfigName","IdentityProviderConfigName",properties.IdentityProviderConfigName!=null?cfn_parse.FromCloudFormation.getString(properties.IdentityProviderConfigName):void 0),ret.addPropertyResult("oidc","Oidc",properties.Oidc!=null?CfnIdentityProviderConfigOidcIdentityProviderConfigPropertyFromCloudFormation(properties.Oidc):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnIdentityProviderConfig extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnIdentityProviderConfig.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_eks_CfnIdentityProviderConfigProps(props),cdk.requireProperty(props,"clusterName",this),cdk.requireProperty(props,"type",this),this.attrIdentityProviderConfigArn=cdk.Token.asString(this.getAtt("IdentityProviderConfigArn")),this.clusterName=props.clusterName,this.type=props.type,this.identityProviderConfigName=props.identityProviderConfigName,this.oidc=props.oidc,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::EKS::IdentityProviderConfig",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnIdentityProviderConfigPropsFromCloudFormation(resourceProperties),ret=new CfnIdentityProviderConfig(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnIdentityProviderConfig.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{clusterName:this.clusterName,type:this.type,identityProviderConfigName:this.identityProviderConfigName,oidc:this.oidc,tags:this.tags.renderTags()}}renderProperties(props){return cfnIdentityProviderConfigPropsToCloudFormation(props)}}exports.CfnIdentityProviderConfig=CfnIdentityProviderConfig,_d=JSII_RTTI_SYMBOL_1,CfnIdentityProviderConfig[_d]={fqn:"aws-cdk-lib.aws_eks.CfnIdentityProviderConfig",version:"2.20.0"},CfnIdentityProviderConfig.CFN_RESOURCE_TYPE_NAME="AWS::EKS::IdentityProviderConfig";function CfnIdentityProviderConfig_OidcIdentityProviderConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("clientId",cdk.requiredValidator)(properties.clientId)),errors.collect(cdk.propertyValidator("clientId",cdk.validateString)(properties.clientId)),errors.collect(cdk.propertyValidator("groupsClaim",cdk.validateString)(properties.groupsClaim)),errors.collect(cdk.propertyValidator("groupsPrefix",cdk.validateString)(properties.groupsPrefix)),errors.collect(cdk.propertyValidator("issuerUrl",cdk.requiredValidator)(properties.issuerUrl)),errors.collect(cdk.propertyValidator("issuerUrl",cdk.validateString)(properties.issuerUrl)),errors.collect(cdk.propertyValidator("requiredClaims",cdk.listValidator(CfnIdentityProviderConfig_RequiredClaimPropertyValidator))(properties.requiredClaims)),errors.collect(cdk.propertyValidator("usernameClaim",cdk.validateString)(properties.usernameClaim)),errors.collect(cdk.propertyValidator("usernamePrefix",cdk.validateString)(properties.usernamePrefix)),errors.wrap('supplied properties not correct for "OidcIdentityProviderConfigProperty"')}function cfnIdentityProviderConfigOidcIdentityProviderConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnIdentityProviderConfig_OidcIdentityProviderConfigPropertyValidator(properties).assertSuccess(),{ClientId:cdk.stringToCloudFormation(properties.clientId),GroupsClaim:cdk.stringToCloudFormation(properties.groupsClaim),GroupsPrefix:cdk.stringToCloudFormation(properties.groupsPrefix),IssuerUrl:cdk.stringToCloudFormation(properties.issuerUrl),RequiredClaims:cdk.listMapper(cfnIdentityProviderConfigRequiredClaimPropertyToCloudFormation)(properties.requiredClaims),UsernameClaim:cdk.stringToCloudFormation(properties.usernameClaim),UsernamePrefix:cdk.stringToCloudFormation(properties.usernamePrefix)}):properties}function CfnIdentityProviderConfigOidcIdentityProviderConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("clientId","ClientId",cfn_parse.FromCloudFormation.getString(properties.ClientId)),ret.addPropertyResult("groupsClaim","GroupsClaim",properties.GroupsClaim!=null?cfn_parse.FromCloudFormation.getString(properties.GroupsClaim):void 0),ret.addPropertyResult("groupsPrefix","GroupsPrefix",properties.GroupsPrefix!=null?cfn_parse.FromCloudFormation.getString(properties.GroupsPrefix):void 0),ret.addPropertyResult("issuerUrl","IssuerUrl",cfn_parse.FromCloudFormation.getString(properties.IssuerUrl)),ret.addPropertyResult("requiredClaims","RequiredClaims",properties.RequiredClaims!=null?cfn_parse.FromCloudFormation.getArray(CfnIdentityProviderConfigRequiredClaimPropertyFromCloudFormation)(properties.RequiredClaims):void 0),ret.addPropertyResult("usernameClaim","UsernameClaim",properties.UsernameClaim!=null?cfn_parse.FromCloudFormation.getString(properties.UsernameClaim):void 0),ret.addPropertyResult("usernamePrefix","UsernamePrefix",properties.UsernamePrefix!=null?cfn_parse.FromCloudFormation.getString(properties.UsernamePrefix):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnIdentityProviderConfig_RequiredClaimPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("key",cdk.requiredValidator)(properties.key)),errors.collect(cdk.propertyValidator("key",cdk.validateString)(properties.key)),errors.collect(cdk.propertyValidator("value",cdk.requiredValidator)(properties.value)),errors.collect(cdk.propertyValidator("value",cdk.validateString)(properties.value)),errors.wrap('supplied properties not correct for "RequiredClaimProperty"')}function cfnIdentityProviderConfigRequiredClaimPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnIdentityProviderConfig_RequiredClaimPropertyValidator(properties).assertSuccess(),{Key:cdk.stringToCloudFormation(properties.key),Value:cdk.stringToCloudFormation(properties.value)}):properties}function CfnIdentityProviderConfigRequiredClaimPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("key","Key",cfn_parse.FromCloudFormation.getString(properties.Key)),ret.addPropertyResult("value","Value",cfn_parse.FromCloudFormation.getString(properties.Value)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnNodegroupPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("amiType",cdk.validateString)(properties.amiType)),errors.collect(cdk.propertyValidator("capacityType",cdk.validateString)(properties.capacityType)),errors.collect(cdk.propertyValidator("clusterName",cdk.requiredValidator)(properties.clusterName)),errors.collect(cdk.propertyValidator("clusterName",cdk.validateString)(properties.clusterName)),errors.collect(cdk.propertyValidator("diskSize",cdk.validateNumber)(properties.diskSize)),errors.collect(cdk.propertyValidator("forceUpdateEnabled",cdk.validateBoolean)(properties.forceUpdateEnabled)),errors.collect(cdk.propertyValidator("instanceTypes",cdk.listValidator(cdk.validateString))(properties.instanceTypes)),errors.collect(cdk.propertyValidator("labels",cdk.validateObject)(properties.labels)),errors.collect(cdk.propertyValidator("launchTemplate",CfnNodegroup_LaunchTemplateSpecificationPropertyValidator)(properties.launchTemplate)),errors.collect(cdk.propertyValidator("nodeRole",cdk.requiredValidator)(properties.nodeRole)),errors.collect(cdk.propertyValidator("nodeRole",cdk.validateString)(properties.nodeRole)),errors.collect(cdk.propertyValidator("nodegroupName",cdk.validateString)(properties.nodegroupName)),errors.collect(cdk.propertyValidator("releaseVersion",cdk.validateString)(properties.releaseVersion)),errors.collect(cdk.propertyValidator("remoteAccess",CfnNodegroup_RemoteAccessPropertyValidator)(properties.remoteAccess)),errors.collect(cdk.propertyValidator("scalingConfig",CfnNodegroup_ScalingConfigPropertyValidator)(properties.scalingConfig)),errors.collect(cdk.propertyValidator("subnets",cdk.requiredValidator)(properties.subnets)),errors.collect(cdk.propertyValidator("subnets",cdk.listValidator(cdk.validateString))(properties.subnets)),errors.collect(cdk.propertyValidator("tags",cdk.validateObject)(properties.tags)),errors.collect(cdk.propertyValidator("taints",cdk.listValidator(CfnNodegroup_TaintPropertyValidator))(properties.taints)),errors.collect(cdk.propertyValidator("updateConfig",CfnNodegroup_UpdateConfigPropertyValidator)(properties.updateConfig)),errors.collect(cdk.propertyValidator("version",cdk.validateString)(properties.version)),errors.wrap('supplied properties not correct for "CfnNodegroupProps"')}function cfnNodegroupPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnNodegroupPropsValidator(properties).assertSuccess(),{ClusterName:cdk.stringToCloudFormation(properties.clusterName),NodeRole:cdk.stringToCloudFormation(properties.nodeRole),Subnets:cdk.listMapper(cdk.stringToCloudFormation)(properties.subnets),AmiType:cdk.stringToCloudFormation(properties.amiType),CapacityType:cdk.stringToCloudFormation(properties.capacityType),DiskSize:cdk.numberToCloudFormation(properties.diskSize),ForceUpdateEnabled:cdk.booleanToCloudFormation(properties.forceUpdateEnabled),InstanceTypes:cdk.listMapper(cdk.stringToCloudFormation)(properties.instanceTypes),Labels:cdk.objectToCloudFormation(properties.labels),LaunchTemplate:cfnNodegroupLaunchTemplateSpecificationPropertyToCloudFormation(properties.launchTemplate),NodegroupName:cdk.stringToCloudFormation(properties.nodegroupName),ReleaseVersion:cdk.stringToCloudFormation(properties.releaseVersion),RemoteAccess:cfnNodegroupRemoteAccessPropertyToCloudFormation(properties.remoteAccess),ScalingConfig:cfnNodegroupScalingConfigPropertyToCloudFormation(properties.scalingConfig),Tags:cdk.objectToCloudFormation(properties.tags),Taints:cdk.listMapper(cfnNodegroupTaintPropertyToCloudFormation)(properties.taints),UpdateConfig:cfnNodegroupUpdateConfigPropertyToCloudFormation(properties.updateConfig),Version:cdk.stringToCloudFormation(properties.version)}):properties}function CfnNodegroupPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("clusterName","ClusterName",cfn_parse.FromCloudFormation.getString(properties.ClusterName)),ret.addPropertyResult("nodeRole","NodeRole",cfn_parse.FromCloudFormation.getString(properties.NodeRole)),ret.addPropertyResult("subnets","Subnets",cfn_parse.FromCloudFormation.getStringArray(properties.Subnets)),ret.addPropertyResult("amiType","AmiType",properties.AmiType!=null?cfn_parse.FromCloudFormation.getString(properties.AmiType):void 0),ret.addPropertyResult("capacityType","CapacityType",properties.CapacityType!=null?cfn_parse.FromCloudFormation.getString(properties.CapacityType):void 0),ret.addPropertyResult("diskSize","DiskSize",properties.DiskSize!=null?cfn_parse.FromCloudFormation.getNumber(properties.DiskSize):void 0),ret.addPropertyResult("forceUpdateEnabled","ForceUpdateEnabled",properties.ForceUpdateEnabled!=null?cfn_parse.FromCloudFormation.getBoolean(properties.ForceUpdateEnabled):void 0),ret.addPropertyResult("instanceTypes","InstanceTypes",properties.InstanceTypes!=null?cfn_parse.FromCloudFormation.getStringArray(properties.InstanceTypes):void 0),ret.addPropertyResult("labels","Labels",properties.Labels!=null?cfn_parse.FromCloudFormation.getAny(properties.Labels):void 0),ret.addPropertyResult("launchTemplate","LaunchTemplate",properties.LaunchTemplate!=null?CfnNodegroupLaunchTemplateSpecificationPropertyFromCloudFormation(properties.LaunchTemplate):void 0),ret.addPropertyResult("nodegroupName","NodegroupName",properties.NodegroupName!=null?cfn_parse.FromCloudFormation.getString(properties.NodegroupName):void 0),ret.addPropertyResult("releaseVersion","ReleaseVersion",properties.ReleaseVersion!=null?cfn_parse.FromCloudFormation.getString(properties.ReleaseVersion):void 0),ret.addPropertyResult("remoteAccess","RemoteAccess",properties.RemoteAccess!=null?CfnNodegroupRemoteAccessPropertyFromCloudFormation(properties.RemoteAccess):void 0),ret.addPropertyResult("scalingConfig","ScalingConfig",properties.ScalingConfig!=null?CfnNodegroupScalingConfigPropertyFromCloudFormation(properties.ScalingConfig):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getAny(properties.Tags):void 0),ret.addPropertyResult("taints","Taints",properties.Taints!=null?cfn_parse.FromCloudFormation.getArray(CfnNodegroupTaintPropertyFromCloudFormation)(properties.Taints):void 0),ret.addPropertyResult("updateConfig","UpdateConfig",properties.UpdateConfig!=null?CfnNodegroupUpdateConfigPropertyFromCloudFormation(properties.UpdateConfig):void 0),ret.addPropertyResult("version","Version",properties.Version!=null?cfn_parse.FromCloudFormation.getString(properties.Version):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnNodegroup extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnNodegroup.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_eks_CfnNodegroupProps(props),cdk.requireProperty(props,"clusterName",this),cdk.requireProperty(props,"nodeRole",this),cdk.requireProperty(props,"subnets",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn")),this.attrClusterName=cdk.Token.asString(this.getAtt("ClusterName")),this.attrId=cdk.Token.asString(this.getAtt("Id")),this.attrNodegroupName=cdk.Token.asString(this.getAtt("NodegroupName")),this.clusterName=props.clusterName,this.nodeRole=props.nodeRole,this.subnets=props.subnets,this.amiType=props.amiType,this.capacityType=props.capacityType,this.diskSize=props.diskSize,this.forceUpdateEnabled=props.forceUpdateEnabled,this.instanceTypes=props.instanceTypes,this.labels=props.labels,this.launchTemplate=props.launchTemplate,this.nodegroupName=props.nodegroupName,this.releaseVersion=props.releaseVersion,this.remoteAccess=props.remoteAccess,this.scalingConfig=props.scalingConfig,this.tags=new cdk.TagManager(cdk.TagType.MAP,"AWS::EKS::Nodegroup",props.tags,{tagPropertyName:"tags"}),this.taints=props.taints,this.updateConfig=props.updateConfig,this.version=props.version}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnNodegroupPropsFromCloudFormation(resourceProperties),ret=new CfnNodegroup(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnNodegroup.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{clusterName:this.clusterName,nodeRole:this.nodeRole,subnets:this.subnets,amiType:this.amiType,capacityType:this.capacityType,diskSize:this.diskSize,forceUpdateEnabled:this.forceUpdateEnabled,instanceTypes:this.instanceTypes,labels:this.labels,launchTemplate:this.launchTemplate,nodegroupName:this.nodegroupName,releaseVersion:this.releaseVersion,remoteAccess:this.remoteAccess,scalingConfig:this.scalingConfig,tags:this.tags.renderTags(),taints:this.taints,updateConfig:this.updateConfig,version:this.version}}renderProperties(props){return cfnNodegroupPropsToCloudFormation(props)}}exports.CfnNodegroup=CfnNodegroup,_e=JSII_RTTI_SYMBOL_1,CfnNodegroup[_e]={fqn:"aws-cdk-lib.aws_eks.CfnNodegroup",version:"2.20.0"},CfnNodegroup.CFN_RESOURCE_TYPE_NAME="AWS::EKS::Nodegroup";function CfnNodegroup_LaunchTemplateSpecificationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("id",cdk.validateString)(properties.id)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("version",cdk.validateString)(properties.version)),errors.wrap('supplied properties not correct for "LaunchTemplateSpecificationProperty"')}function cfnNodegroupLaunchTemplateSpecificationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnNodegroup_LaunchTemplateSpecificationPropertyValidator(properties).assertSuccess(),{Id:cdk.stringToCloudFormation(properties.id),Name:cdk.stringToCloudFormation(properties.name),Version:cdk.stringToCloudFormation(properties.version)}):properties}function CfnNodegroupLaunchTemplateSpecificationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("id","Id",properties.Id!=null?cfn_parse.FromCloudFormation.getString(properties.Id):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("version","Version",properties.Version!=null?cfn_parse.FromCloudFormation.getString(properties.Version):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnNodegroup_RemoteAccessPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("ec2SshKey",cdk.requiredValidator)(properties.ec2SshKey)),errors.collect(cdk.propertyValidator("ec2SshKey",cdk.validateString)(properties.ec2SshKey)),errors.collect(cdk.propertyValidator("sourceSecurityGroups",cdk.listValidator(cdk.validateString))(properties.sourceSecurityGroups)),errors.wrap('supplied properties not correct for "RemoteAccessProperty"')}function cfnNodegroupRemoteAccessPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnNodegroup_RemoteAccessPropertyValidator(properties).assertSuccess(),{Ec2SshKey:cdk.stringToCloudFormation(properties.ec2SshKey),SourceSecurityGroups:cdk.listMapper(cdk.stringToCloudFormation)(properties.sourceSecurityGroups)}):properties}function CfnNodegroupRemoteAccessPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("ec2SshKey","Ec2SshKey",cfn_parse.FromCloudFormation.getString(properties.Ec2SshKey)),ret.addPropertyResult("sourceSecurityGroups","SourceSecurityGroups",properties.SourceSecurityGroups!=null?cfn_parse.FromCloudFormation.getStringArray(properties.SourceSecurityGroups):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnNodegroup_ScalingConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("desiredSize",cdk.validateNumber)(properties.desiredSize)),errors.collect(cdk.propertyValidator("maxSize",cdk.validateNumber)(properties.maxSize)),errors.collect(cdk.propertyValidator("minSize",cdk.validateNumber)(properties.minSize)),errors.wrap('supplied properties not correct for "ScalingConfigProperty"')}function cfnNodegroupScalingConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnNodegroup_ScalingConfigPropertyValidator(properties).assertSuccess(),{DesiredSize:cdk.numberToCloudFormation(properties.desiredSize),MaxSize:cdk.numberToCloudFormation(properties.maxSize),MinSize:cdk.numberToCloudFormation(properties.minSize)}):properties}function CfnNodegroupScalingConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("desiredSize","DesiredSize",properties.DesiredSize!=null?cfn_parse.FromCloudFormation.getNumber(properties.DesiredSize):void 0),ret.addPropertyResult("maxSize","MaxSize",properties.MaxSize!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxSize):void 0),ret.addPropertyResult("minSize","MinSize",properties.MinSize!=null?cfn_parse.FromCloudFormation.getNumber(properties.MinSize):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnNodegroup_TaintPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("effect",cdk.validateString)(properties.effect)),errors.collect(cdk.propertyValidator("key",cdk.validateString)(properties.key)),errors.collect(cdk.propertyValidator("value",cdk.validateString)(properties.value)),errors.wrap('supplied properties not correct for "TaintProperty"')}function cfnNodegroupTaintPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnNodegroup_TaintPropertyValidator(properties).assertSuccess(),{Effect:cdk.stringToCloudFormation(properties.effect),Key:cdk.stringToCloudFormation(properties.key),Value:cdk.stringToCloudFormation(properties.value)}):properties}function CfnNodegroupTaintPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("effect","Effect",properties.Effect!=null?cfn_parse.FromCloudFormation.getString(properties.Effect):void 0),ret.addPropertyResult("key","Key",properties.Key!=null?cfn_parse.FromCloudFormation.getString(properties.Key):void 0),ret.addPropertyResult("value","Value",properties.Value!=null?cfn_parse.FromCloudFormation.getString(properties.Value):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnNodegroup_UpdateConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("maxUnavailable",cdk.validateNumber)(properties.maxUnavailable)),errors.collect(cdk.propertyValidator("maxUnavailablePercentage",cdk.validateNumber)(properties.maxUnavailablePercentage)),errors.wrap('supplied properties not correct for "UpdateConfigProperty"')}function cfnNodegroupUpdateConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnNodegroup_UpdateConfigPropertyValidator(properties).assertSuccess(),{MaxUnavailable:cdk.numberToCloudFormation(properties.maxUnavailable),MaxUnavailablePercentage:cdk.numberToCloudFormation(properties.maxUnavailablePercentage)}):properties}function CfnNodegroupUpdateConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("maxUnavailable","MaxUnavailable",properties.MaxUnavailable!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxUnavailable):void 0),ret.addPropertyResult("maxUnavailablePercentage","MaxUnavailablePercentage",properties.MaxUnavailablePercentage!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxUnavailablePercentage):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
//# sourceMappingURL=eks.generated.js.map
