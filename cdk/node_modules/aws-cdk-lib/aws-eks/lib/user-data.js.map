{
  "version": 3,
  "sources": ["user-data.ts"],
  "sourcesContent": ["import * as autoscaling from '../../aws-autoscaling';\nimport { Stack } from '../../core';\nimport { BootstrapOptions, ICluster } from './cluster';\n\n// eslint-disable-next-line max-len\nexport function renderAmazonLinuxUserData(cluster: ICluster, autoScalingGroup: autoscaling.AutoScalingGroup, options: BootstrapOptions = {}): string[] {\n\n  const stack = Stack.of(autoScalingGroup);\n\n  // determine logical id of ASG so we can signal cloudformation\n  const cfn = autoScalingGroup.node.defaultChild as autoscaling.CfnAutoScalingGroup;\n  const asgLogicalId = cfn.logicalId;\n\n  const extraArgs = new Array<string>();\n\n  try {\n    const clusterEndpoint = cluster.clusterEndpoint;\n    const clusterCertificateAuthorityData =\n      cluster.clusterCertificateAuthorityData;\n    extraArgs.push(`--apiserver-endpoint '${clusterEndpoint}'`);\n    extraArgs.push(`--b64-cluster-ca '${clusterCertificateAuthorityData}'`);\n  } catch (e) {\n    /**\n     * Errors are ignored here.\n     * apiserver-endpoint and b64-cluster-ca arguments are added in #12659 to make nodes join the cluster faster.\n     * As these are not necessary arguments, we don't need to pass these arguments when they don't exist.\n     *\n     * @see https://github.com/aws/aws-cdk/pull/12659\n     */\n  }\n\n  extraArgs.push(`--use-max-pods ${options.useMaxPods ?? true}`);\n\n  if (options.awsApiRetryAttempts) {\n    extraArgs.push(`--aws-api-retry-attempts ${options.awsApiRetryAttempts}`);\n  }\n\n  if (options.enableDockerBridge) {\n    extraArgs.push('--enable-docker-bridge true');\n  }\n\n  if (options.dockerConfigJson) {\n    extraArgs.push(`--docker-config-json '${options.dockerConfigJson}'`);\n  }\n\n  if (options.dnsClusterIp) {\n    extraArgs.push(`--dns-cluster-ip ${options.dnsClusterIp}`);\n  }\n\n  if (options.additionalArgs) {\n    extraArgs.push(options.additionalArgs);\n  }\n\n  const commandLineSuffix = extraArgs.join(' ');\n  const kubeletExtraArgsSuffix = options.kubeletExtraArgs || '';\n\n  // determine lifecycle label based on whether the ASG has a spot price.\n  const lifecycleLabel = autoScalingGroup.spotPrice ? LifecycleLabel.SPOT : LifecycleLabel.ON_DEMAND;\n  const withTaints = autoScalingGroup.spotPrice ? '--register-with-taints=spotInstance=true:PreferNoSchedule' : '';\n  const kubeletExtraArgs = `--node-labels lifecycle=${lifecycleLabel} ${withTaints} ${kubeletExtraArgsSuffix}`.trim();\n\n  return [\n    'set -o xtrace',\n    `/etc/eks/bootstrap.sh ${cluster.clusterName} --kubelet-extra-args \"${kubeletExtraArgs}\" ${commandLineSuffix}`.trim(),\n    `/opt/aws/bin/cfn-signal --exit-code $? --stack ${stack.stackName} --resource ${asgLogicalId} --region ${stack.region}`,\n  ];\n}\n\nexport function renderBottlerocketUserData(cluster: ICluster): string[] {\n  return [\n    '[settings.kubernetes]',\n    `api-server=\"${cluster.clusterEndpoint}\"`,\n    `cluster-certificate=\"${cluster.clusterCertificateAuthorityData}\"`,\n    `cluster-name=\"${cluster.clusterName}\"`,\n  ];\n}\n\n/**\n * The lifecycle label for node selector\n */\nexport enum LifecycleLabel {\n  /**\n   * on-demand instances\n   */\n  ON_DEMAND = 'OnDemand',\n  /**\n   * spot instances\n   */\n  SPOT = 'Ec2Spot'\n}\n"],
  "mappings": "uKACA,KAAA,QAAA,QAAA,YAAA,EAIA,mCAA0C,QAAmB,iBAAgD,QAA4B,CAAA,EAAE,QAEzI,KAAM,OAAQ,OAAA,MAAM,GAAG,gBAAgB,EAIjC,aAAe,AADT,iBAAiB,KAAK,aACT,UAEnB,UAAY,GAAI,OAEtB,GAAI,CACF,KAAM,iBAAkB,QAAQ,gBAC1B,gCACJ,QAAQ,gCACV,UAAU,KAAK,yBAAyB,kBAAkB,EAC1D,UAAU,KAAK,qBAAqB,kCAAkC,OACtE,EAUF,UAAU,KAAK,kBAAkB,IAAA,QAAQ,cAAU,MAAA,KAAA,OAAA,GAAI,IAAM,EAEzD,QAAQ,qBACV,UAAU,KAAK,4BAA4B,QAAQ,qBAAqB,EAGtE,QAAQ,oBACV,UAAU,KAAK,6BAA6B,EAG1C,QAAQ,kBACV,UAAU,KAAK,yBAAyB,QAAQ,mBAAmB,EAGjE,QAAQ,cACV,UAAU,KAAK,oBAAoB,QAAQ,cAAc,EAGvD,QAAQ,gBACV,UAAU,KAAK,QAAQ,cAAc,EAGvC,KAAM,mBAAoB,UAAU,KAAK,GAAG,EACtC,uBAAyB,QAAQ,kBAAoB,GAGrD,eAAiB,iBAAiB,UAAY,eAAe,KAAO,eAAe,UACnF,WAAa,iBAAiB,UAAY,4DAA8D,GACxG,iBAAmB,2BAA2B,kBAAkB,cAAc,yBAAyB,KAAI,EAEjH,MAAO,CACL,gBACA,yBAAyB,QAAQ,qCAAqC,qBAAqB,oBAAoB,KAAI,EACnH,kDAAkD,MAAM,wBAAwB,yBAAyB,MAAM,SAEnH,CA7DA,QAAA,0BAAA,0BA+DA,oCAA2C,QAAiB,CAC1D,MAAO,CACL,wBACA,eAAe,QAAQ,mBACvB,wBAAwB,QAAQ,mCAChC,iBAAiB,QAAQ,eAE7B,CAPA,QAAA,2BAAA,2BAYA,GAAY,gBAAZ,AAAA,UAAY,gBAAc,CAIxB,gBAAA,UAAA,WAIA,gBAAA,KAAA,SACF,GATY,eAAA,QAAA,gBAAA,SAAA,eAAc,CAAA,EAAA",
  "names": []
}
