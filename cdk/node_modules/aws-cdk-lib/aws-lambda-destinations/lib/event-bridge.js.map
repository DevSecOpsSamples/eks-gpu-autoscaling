{
  "version": 3,
  "sources": ["event-bridge.ts"],
  "sourcesContent": ["import * as events from '../../aws-events';\nimport * as lambda from '../../aws-lambda';\nimport { Stack } from '../../core';\n\n// keep this import separate from other imports to reduce chance for merge conflicts with v2-main\n// eslint-disable-next-line no-duplicate-imports, import/order\nimport { Construct } from 'constructs';\n\n/**\n * Use an Event Bridge event bus as a Lambda destination.\n *\n * If no event bus is specified, the default event bus is used.\n */\nexport class EventBridgeDestination implements lambda.IDestination {\n  /**\n   * @default - use the default event bus\n   */\n  constructor(private readonly eventBus?: events.IEventBus) {\n  }\n\n  /**\n   * Returns a destination configuration\n   */\n  public bind(_scope: Construct, fn: lambda.IFunction, _options?: lambda.DestinationOptions): lambda.DestinationConfig {\n    if (this.eventBus) {\n      this.eventBus.grantPutEventsTo(fn);\n\n      return {\n        destination: this.eventBus.eventBusArn,\n      };\n    }\n\n    const existingDefaultEventBus = _scope.node.tryFindChild('DefaultEventBus');\n    let eventBus = (existingDefaultEventBus as events.EventBus) || events.EventBus.fromEventBusArn(_scope, 'DefaultEventBus', Stack.of(fn).formatArn({\n      service: 'events',\n      resource: 'event-bus',\n      resourceName: 'default',\n    }));\n\n    eventBus.grantPutEventsTo(fn);\n\n    return {\n      destination: eventBus.eventBusArn,\n    };\n  }\n}\n"],
  "mappings": "6NAAA,OAAA,QAAA,kBAAA,EAEA,OAAA,QAAA,YAAA,EAWA,MAAa,sBAAsB,CAIjC,YAA6B,SAA2B,CAA3B,KAAA,SAAA,4EAMtB,KAAK,OAAmB,GAAsB,SAAoC,CACvF,4IAAI,KAAK,SACP,YAAK,SAAS,iBAAiB,EAAE,EAE1B,CACL,YAAa,KAAK,SAAS,aAK/B,GAAI,UAAY,AADgB,OAAO,KAAK,aAAa,iBAAiB,GACX,OAAO,SAAS,gBAAgB,OAAQ,kBAAmB,OAAA,MAAM,GAAG,EAAE,EAAE,UAAU,CAC/I,QAAS,SACT,SAAU,YACV,aAAc,UACf,CAAC,EAEF,gBAAS,iBAAiB,EAAE,EAErB,CACL,YAAa,SAAS,cA7B5B,QAAA,uBAAA",
  "names": []
}
