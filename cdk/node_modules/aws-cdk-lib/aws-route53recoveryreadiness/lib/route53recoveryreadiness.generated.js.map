{
  "version": 3,
  "sources": ["route53recoveryreadiness.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-04-07T10:53:58.726Z\",\"fingerprint\":\"ysgMD3wFibZ7eQ6BV2Y5EmwCelr6pcJqU7UztMMaHkA=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n/**\n * Properties for defining a `CfnCell`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-cell.html\n */\nexport interface CfnCellProps {\n\n    /**\n     * The name of the cell to create.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-cell.html#cfn-route53recoveryreadiness-cell-cellname\n     */\n    readonly cellName: string;\n\n    /**\n     * A list of cell Amazon Resource Names (ARNs) contained within this cell, for use in nested cells. For example, Availability Zones within specific AWS Regions .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-cell.html#cfn-route53recoveryreadiness-cell-cells\n     */\n    readonly cells?: string[];\n\n    /**\n     * A collection of tags associated with a resource.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-cell.html#cfn-route53recoveryreadiness-cell-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnCellProps`\n *\n * @param properties - the TypeScript properties of a `CfnCellProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnCellPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('cellName', cdk.requiredValidator)(properties.cellName));\n    errors.collect(cdk.propertyValidator('cellName', cdk.validateString)(properties.cellName));\n    errors.collect(cdk.propertyValidator('cells', cdk.listValidator(cdk.validateString))(properties.cells));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnCellProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Route53RecoveryReadiness::Cell` resource\n *\n * @param properties - the TypeScript properties of a `CfnCellProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Route53RecoveryReadiness::Cell` resource.\n */\n// @ts-ignore TS6133\nfunction cfnCellPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnCellPropsValidator(properties).assertSuccess();\n    return {\n        CellName: cdk.stringToCloudFormation(properties.cellName),\n        Cells: cdk.listMapper(cdk.stringToCloudFormation)(properties.cells),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnCellPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnCellProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnCellProps>();\n    ret.addPropertyResult('cellName', 'CellName', cfn_parse.FromCloudFormation.getString(properties.CellName));\n    ret.addPropertyResult('cells', 'Cells', properties.Cells != null ? cfn_parse.FromCloudFormation.getStringArray(properties.Cells) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::Route53RecoveryReadiness::Cell`\n *\n * Creates a cell in an account.\n *\n * @cloudformationResource AWS::Route53RecoveryReadiness::Cell\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-cell.html\n */\nexport class CfnCell extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Route53RecoveryReadiness::Cell\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnCell {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnCellPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnCell(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The Amazon Resource Name (ARN) of the cell.\n     * @cloudformationAttribute CellArn\n     */\n    public readonly attrCellArn: string;\n\n    /**\n     * The readiness scope for the cell, which can be a cell Amazon Resource Name (ARN) or a recovery group ARN. This is a list but currently can have only one element.\n     * @cloudformationAttribute ParentReadinessScopes\n     */\n    public readonly attrParentReadinessScopes: string[];\n\n    /**\n     * The name of the cell to create.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-cell.html#cfn-route53recoveryreadiness-cell-cellname\n     */\n    public cellName: string;\n\n    /**\n     * A list of cell Amazon Resource Names (ARNs) contained within this cell, for use in nested cells. For example, Availability Zones within specific AWS Regions .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-cell.html#cfn-route53recoveryreadiness-cell-cells\n     */\n    public cells: string[] | undefined;\n\n    /**\n     * A collection of tags associated with a resource.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-cell.html#cfn-route53recoveryreadiness-cell-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::Route53RecoveryReadiness::Cell`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnCellProps) {\n        super(scope, id, { type: CfnCell.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'cellName', this);\n        this.attrCellArn = cdk.Token.asString(this.getAtt('CellArn'));\n        this.attrParentReadinessScopes = cdk.Token.asList(this.getAtt('ParentReadinessScopes'));\n\n        this.cellName = props.cellName;\n        this.cells = props.cells;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::Route53RecoveryReadiness::Cell\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnCell.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            cellName: this.cellName,\n            cells: this.cells,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnCellPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnReadinessCheck`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-readinesscheck.html\n */\nexport interface CfnReadinessCheckProps {\n\n    /**\n     * The name of the readiness check to create.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-readinesscheck.html#cfn-route53recoveryreadiness-readinesscheck-readinesscheckname\n     */\n    readonly readinessCheckName: string;\n\n    /**\n     * The name of the resource set to check.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-readinesscheck.html#cfn-route53recoveryreadiness-readinesscheck-resourcesetname\n     */\n    readonly resourceSetName?: string;\n\n    /**\n     * A collection of tags associated with a resource.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-readinesscheck.html#cfn-route53recoveryreadiness-readinesscheck-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnReadinessCheckProps`\n *\n * @param properties - the TypeScript properties of a `CfnReadinessCheckProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnReadinessCheckPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('readinessCheckName', cdk.requiredValidator)(properties.readinessCheckName));\n    errors.collect(cdk.propertyValidator('readinessCheckName', cdk.validateString)(properties.readinessCheckName));\n    errors.collect(cdk.propertyValidator('resourceSetName', cdk.validateString)(properties.resourceSetName));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnReadinessCheckProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Route53RecoveryReadiness::ReadinessCheck` resource\n *\n * @param properties - the TypeScript properties of a `CfnReadinessCheckProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Route53RecoveryReadiness::ReadinessCheck` resource.\n */\n// @ts-ignore TS6133\nfunction cfnReadinessCheckPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnReadinessCheckPropsValidator(properties).assertSuccess();\n    return {\n        ReadinessCheckName: cdk.stringToCloudFormation(properties.readinessCheckName),\n        ResourceSetName: cdk.stringToCloudFormation(properties.resourceSetName),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnReadinessCheckPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnReadinessCheckProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnReadinessCheckProps>();\n    ret.addPropertyResult('readinessCheckName', 'ReadinessCheckName', cfn_parse.FromCloudFormation.getString(properties.ReadinessCheckName));\n    ret.addPropertyResult('resourceSetName', 'ResourceSetName', properties.ResourceSetName != null ? cfn_parse.FromCloudFormation.getString(properties.ResourceSetName) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::Route53RecoveryReadiness::ReadinessCheck`\n *\n * Creates a readiness check in an account. A readiness check monitors a resource set in your application, such as a set of Amazon Aurora instances, that Application Recovery Controller is auditing recovery readiness for. The audits run once every minute on every resource that's associated with a readiness check.\n *\n * @cloudformationResource AWS::Route53RecoveryReadiness::ReadinessCheck\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-readinesscheck.html\n */\nexport class CfnReadinessCheck extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Route53RecoveryReadiness::ReadinessCheck\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnReadinessCheck {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnReadinessCheckPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnReadinessCheck(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The Amazon Resource Name (ARN) of the readiness check.\n     * @cloudformationAttribute ReadinessCheckArn\n     */\n    public readonly attrReadinessCheckArn: string;\n\n    /**\n     * The name of the readiness check to create.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-readinesscheck.html#cfn-route53recoveryreadiness-readinesscheck-readinesscheckname\n     */\n    public readinessCheckName: string;\n\n    /**\n     * The name of the resource set to check.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-readinesscheck.html#cfn-route53recoveryreadiness-readinesscheck-resourcesetname\n     */\n    public resourceSetName: string | undefined;\n\n    /**\n     * A collection of tags associated with a resource.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-readinesscheck.html#cfn-route53recoveryreadiness-readinesscheck-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::Route53RecoveryReadiness::ReadinessCheck`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnReadinessCheckProps) {\n        super(scope, id, { type: CfnReadinessCheck.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'readinessCheckName', this);\n        this.attrReadinessCheckArn = cdk.Token.asString(this.getAtt('ReadinessCheckArn'));\n\n        this.readinessCheckName = props.readinessCheckName;\n        this.resourceSetName = props.resourceSetName;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::Route53RecoveryReadiness::ReadinessCheck\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnReadinessCheck.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            readinessCheckName: this.readinessCheckName,\n            resourceSetName: this.resourceSetName,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnReadinessCheckPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnRecoveryGroup`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-recoverygroup.html\n */\nexport interface CfnRecoveryGroupProps {\n\n    /**\n     * The name of the recovery group to create.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-recoverygroup.html#cfn-route53recoveryreadiness-recoverygroup-recoverygroupname\n     */\n    readonly recoveryGroupName: string;\n\n    /**\n     * A list of the cell Amazon Resource Names (ARNs) in the recovery group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-recoverygroup.html#cfn-route53recoveryreadiness-recoverygroup-cells\n     */\n    readonly cells?: string[];\n\n    /**\n     * A collection of tags associated with a resource.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-recoverygroup.html#cfn-route53recoveryreadiness-recoverygroup-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnRecoveryGroupProps`\n *\n * @param properties - the TypeScript properties of a `CfnRecoveryGroupProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnRecoveryGroupPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('cells', cdk.listValidator(cdk.validateString))(properties.cells));\n    errors.collect(cdk.propertyValidator('recoveryGroupName', cdk.requiredValidator)(properties.recoveryGroupName));\n    errors.collect(cdk.propertyValidator('recoveryGroupName', cdk.validateString)(properties.recoveryGroupName));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnRecoveryGroupProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Route53RecoveryReadiness::RecoveryGroup` resource\n *\n * @param properties - the TypeScript properties of a `CfnRecoveryGroupProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Route53RecoveryReadiness::RecoveryGroup` resource.\n */\n// @ts-ignore TS6133\nfunction cfnRecoveryGroupPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnRecoveryGroupPropsValidator(properties).assertSuccess();\n    return {\n        RecoveryGroupName: cdk.stringToCloudFormation(properties.recoveryGroupName),\n        Cells: cdk.listMapper(cdk.stringToCloudFormation)(properties.cells),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnRecoveryGroupPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnRecoveryGroupProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnRecoveryGroupProps>();\n    ret.addPropertyResult('recoveryGroupName', 'RecoveryGroupName', cfn_parse.FromCloudFormation.getString(properties.RecoveryGroupName));\n    ret.addPropertyResult('cells', 'Cells', properties.Cells != null ? cfn_parse.FromCloudFormation.getStringArray(properties.Cells) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::Route53RecoveryReadiness::RecoveryGroup`\n *\n * Creates a recovery group in an account. A recovery group corresponds to an application and includes a list of the cells that make up the application.\n *\n * @cloudformationResource AWS::Route53RecoveryReadiness::RecoveryGroup\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-recoverygroup.html\n */\nexport class CfnRecoveryGroup extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Route53RecoveryReadiness::RecoveryGroup\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnRecoveryGroup {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnRecoveryGroupPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnRecoveryGroup(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The Amazon Resource Name (ARN) of the recovery group.\n     * @cloudformationAttribute RecoveryGroupArn\n     */\n    public readonly attrRecoveryGroupArn: string;\n\n    /**\n     * The name of the recovery group to create.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-recoverygroup.html#cfn-route53recoveryreadiness-recoverygroup-recoverygroupname\n     */\n    public recoveryGroupName: string;\n\n    /**\n     * A list of the cell Amazon Resource Names (ARNs) in the recovery group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-recoverygroup.html#cfn-route53recoveryreadiness-recoverygroup-cells\n     */\n    public cells: string[] | undefined;\n\n    /**\n     * A collection of tags associated with a resource.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-recoverygroup.html#cfn-route53recoveryreadiness-recoverygroup-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::Route53RecoveryReadiness::RecoveryGroup`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnRecoveryGroupProps) {\n        super(scope, id, { type: CfnRecoveryGroup.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'recoveryGroupName', this);\n        this.attrRecoveryGroupArn = cdk.Token.asString(this.getAtt('RecoveryGroupArn'));\n\n        this.recoveryGroupName = props.recoveryGroupName;\n        this.cells = props.cells;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::Route53RecoveryReadiness::RecoveryGroup\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnRecoveryGroup.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            recoveryGroupName: this.recoveryGroupName,\n            cells: this.cells,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnRecoveryGroupPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnResourceSet`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-resourceset.html\n */\nexport interface CfnResourceSetProps {\n\n    /**\n     * A list of resource objects in the resource set.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-resourceset.html#cfn-route53recoveryreadiness-resourceset-resources\n     */\n    readonly resources: Array<CfnResourceSet.ResourceProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * The name of the resource set to create.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-resourceset.html#cfn-route53recoveryreadiness-resourceset-resourcesetname\n     */\n    readonly resourceSetName: string;\n\n    /**\n     * The resource type of the resources in the resource set. Enter one of the following values for resource type:\n     *\n     * AWS::AutoScaling::AutoScalingGroup, AWS::CloudWatch::Alarm, AWS::EC2::CustomerGateway, AWS::DynamoDB::Table, AWS::EC2::Volume, AWS::ElasticLoadBalancing::LoadBalancer, AWS::ElasticLoadBalancingV2::LoadBalancer, AWS::MSK::Cluster, AWS::RDS::DBCluster, AWS::Route53::HealthCheck, AWS::SQS::Queue, AWS::SNS::Topic, AWS::SNS::Subscription, AWS::EC2::VPC, AWS::EC2::VPNConnection, AWS::EC2::VPNGateway, AWS::Route53RecoveryReadiness::DNSTargetResource.\n     *\n     * Note that AWS::Route53RecoveryReadiness::DNSTargetResource is only used for this setting. It isn't an actual AWS CloudFormation resource type.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-resourceset.html#cfn-route53recoveryreadiness-resourceset-resourcesettype\n     */\n    readonly resourceSetType: string;\n\n    /**\n     * A tag to associate with the parameters for a resource set.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-resourceset.html#cfn-route53recoveryreadiness-resourceset-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnResourceSetProps`\n *\n * @param properties - the TypeScript properties of a `CfnResourceSetProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnResourceSetPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('resourceSetName', cdk.requiredValidator)(properties.resourceSetName));\n    errors.collect(cdk.propertyValidator('resourceSetName', cdk.validateString)(properties.resourceSetName));\n    errors.collect(cdk.propertyValidator('resourceSetType', cdk.requiredValidator)(properties.resourceSetType));\n    errors.collect(cdk.propertyValidator('resourceSetType', cdk.validateString)(properties.resourceSetType));\n    errors.collect(cdk.propertyValidator('resources', cdk.requiredValidator)(properties.resources));\n    errors.collect(cdk.propertyValidator('resources', cdk.listValidator(CfnResourceSet_ResourcePropertyValidator))(properties.resources));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnResourceSetProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Route53RecoveryReadiness::ResourceSet` resource\n *\n * @param properties - the TypeScript properties of a `CfnResourceSetProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Route53RecoveryReadiness::ResourceSet` resource.\n */\n// @ts-ignore TS6133\nfunction cfnResourceSetPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnResourceSetPropsValidator(properties).assertSuccess();\n    return {\n        Resources: cdk.listMapper(cfnResourceSetResourcePropertyToCloudFormation)(properties.resources),\n        ResourceSetName: cdk.stringToCloudFormation(properties.resourceSetName),\n        ResourceSetType: cdk.stringToCloudFormation(properties.resourceSetType),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnResourceSetPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnResourceSetProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnResourceSetProps>();\n    ret.addPropertyResult('resources', 'Resources', cfn_parse.FromCloudFormation.getArray(CfnResourceSetResourcePropertyFromCloudFormation)(properties.Resources));\n    ret.addPropertyResult('resourceSetName', 'ResourceSetName', cfn_parse.FromCloudFormation.getString(properties.ResourceSetName));\n    ret.addPropertyResult('resourceSetType', 'ResourceSetType', cfn_parse.FromCloudFormation.getString(properties.ResourceSetType));\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::Route53RecoveryReadiness::ResourceSet`\n *\n * Creates a resource set. A resource set is a set of resources of one type that span multiple cells. You can associate a resource set with a readiness check to monitor the resources for failover readiness.\n *\n * @cloudformationResource AWS::Route53RecoveryReadiness::ResourceSet\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-resourceset.html\n */\nexport class CfnResourceSet extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Route53RecoveryReadiness::ResourceSet\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnResourceSet {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnResourceSetPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnResourceSet(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The Amazon Resource Name (ARN) of the resource set.\n     * @cloudformationAttribute ResourceSetArn\n     */\n    public readonly attrResourceSetArn: string;\n\n    /**\n     * A list of resource objects in the resource set.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-resourceset.html#cfn-route53recoveryreadiness-resourceset-resources\n     */\n    public resources: Array<CfnResourceSet.ResourceProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * The name of the resource set to create.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-resourceset.html#cfn-route53recoveryreadiness-resourceset-resourcesetname\n     */\n    public resourceSetName: string;\n\n    /**\n     * The resource type of the resources in the resource set. Enter one of the following values for resource type:\n     *\n     * AWS::AutoScaling::AutoScalingGroup, AWS::CloudWatch::Alarm, AWS::EC2::CustomerGateway, AWS::DynamoDB::Table, AWS::EC2::Volume, AWS::ElasticLoadBalancing::LoadBalancer, AWS::ElasticLoadBalancingV2::LoadBalancer, AWS::MSK::Cluster, AWS::RDS::DBCluster, AWS::Route53::HealthCheck, AWS::SQS::Queue, AWS::SNS::Topic, AWS::SNS::Subscription, AWS::EC2::VPC, AWS::EC2::VPNConnection, AWS::EC2::VPNGateway, AWS::Route53RecoveryReadiness::DNSTargetResource.\n     *\n     * Note that AWS::Route53RecoveryReadiness::DNSTargetResource is only used for this setting. It isn't an actual AWS CloudFormation resource type.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-resourceset.html#cfn-route53recoveryreadiness-resourceset-resourcesettype\n     */\n    public resourceSetType: string;\n\n    /**\n     * A tag to associate with the parameters for a resource set.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-resourceset.html#cfn-route53recoveryreadiness-resourceset-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::Route53RecoveryReadiness::ResourceSet`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnResourceSetProps) {\n        super(scope, id, { type: CfnResourceSet.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'resourceSetName', this);\n        cdk.requireProperty(props, 'resourceSetType', this);\n        cdk.requireProperty(props, 'resources', this);\n        this.attrResourceSetArn = cdk.Token.asString(this.getAtt('ResourceSetArn'));\n\n        this.resources = props.resources;\n        this.resourceSetName = props.resourceSetName;\n        this.resourceSetType = props.resourceSetType;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::Route53RecoveryReadiness::ResourceSet\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnResourceSet.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            resources: this.resources,\n            resourceSetName: this.resourceSetName,\n            resourceSetType: this.resourceSetType,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnResourceSetPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnResourceSet {\n    /**\n     * A component for DNS/routing control readiness checks and architecture checks.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53recoveryreadiness-resourceset-dnstargetresource.html\n     */\n    export interface DNSTargetResourceProperty {\n        /**\n         * The domain name that acts as an ingress point to a portion of the customer application.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53recoveryreadiness-resourceset-dnstargetresource.html#cfn-route53recoveryreadiness-resourceset-dnstargetresource-domainname\n         */\n        readonly domainName?: string;\n        /**\n         * The hosted zone Amazon Resource Name (ARN) that contains the DNS record with the provided name of the target resource.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53recoveryreadiness-resourceset-dnstargetresource.html#cfn-route53recoveryreadiness-resourceset-dnstargetresource-hostedzonearn\n         */\n        readonly hostedZoneArn?: string;\n        /**\n         * The Route 53 record set ID that uniquely identifies a DNS record, given a name and a type.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53recoveryreadiness-resourceset-dnstargetresource.html#cfn-route53recoveryreadiness-resourceset-dnstargetresource-recordsetid\n         */\n        readonly recordSetId?: string;\n        /**\n         * The type of DNS record of the target resource.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53recoveryreadiness-resourceset-dnstargetresource.html#cfn-route53recoveryreadiness-resourceset-dnstargetresource-recordtype\n         */\n        readonly recordType?: string;\n        /**\n         * The target resource that the Route 53 record points to.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53recoveryreadiness-resourceset-dnstargetresource.html#cfn-route53recoveryreadiness-resourceset-dnstargetresource-targetresource\n         */\n        readonly targetResource?: CfnResourceSet.TargetResourceProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `DNSTargetResourceProperty`\n *\n * @param properties - the TypeScript properties of a `DNSTargetResourceProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnResourceSet_DNSTargetResourcePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('domainName', cdk.validateString)(properties.domainName));\n    errors.collect(cdk.propertyValidator('hostedZoneArn', cdk.validateString)(properties.hostedZoneArn));\n    errors.collect(cdk.propertyValidator('recordSetId', cdk.validateString)(properties.recordSetId));\n    errors.collect(cdk.propertyValidator('recordType', cdk.validateString)(properties.recordType));\n    errors.collect(cdk.propertyValidator('targetResource', CfnResourceSet_TargetResourcePropertyValidator)(properties.targetResource));\n    return errors.wrap('supplied properties not correct for \"DNSTargetResourceProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Route53RecoveryReadiness::ResourceSet.DNSTargetResource` resource\n *\n * @param properties - the TypeScript properties of a `DNSTargetResourceProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Route53RecoveryReadiness::ResourceSet.DNSTargetResource` resource.\n */\n// @ts-ignore TS6133\nfunction cfnResourceSetDNSTargetResourcePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnResourceSet_DNSTargetResourcePropertyValidator(properties).assertSuccess();\n    return {\n        DomainName: cdk.stringToCloudFormation(properties.domainName),\n        HostedZoneArn: cdk.stringToCloudFormation(properties.hostedZoneArn),\n        RecordSetId: cdk.stringToCloudFormation(properties.recordSetId),\n        RecordType: cdk.stringToCloudFormation(properties.recordType),\n        TargetResource: cfnResourceSetTargetResourcePropertyToCloudFormation(properties.targetResource),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnResourceSetDNSTargetResourcePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnResourceSet.DNSTargetResourceProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnResourceSet.DNSTargetResourceProperty>();\n    ret.addPropertyResult('domainName', 'DomainName', properties.DomainName != null ? cfn_parse.FromCloudFormation.getString(properties.DomainName) : undefined);\n    ret.addPropertyResult('hostedZoneArn', 'HostedZoneArn', properties.HostedZoneArn != null ? cfn_parse.FromCloudFormation.getString(properties.HostedZoneArn) : undefined);\n    ret.addPropertyResult('recordSetId', 'RecordSetId', properties.RecordSetId != null ? cfn_parse.FromCloudFormation.getString(properties.RecordSetId) : undefined);\n    ret.addPropertyResult('recordType', 'RecordType', properties.RecordType != null ? cfn_parse.FromCloudFormation.getString(properties.RecordType) : undefined);\n    ret.addPropertyResult('targetResource', 'TargetResource', properties.TargetResource != null ? CfnResourceSetTargetResourcePropertyFromCloudFormation(properties.TargetResource) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnResourceSet {\n    /**\n     * The Network Load Balancer resource that a DNS target resource points to.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53recoveryreadiness-resourceset-nlbresource.html\n     */\n    export interface NLBResourceProperty {\n        /**\n         * The Network Load Balancer resource Amazon Resource Name (ARN).\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53recoveryreadiness-resourceset-nlbresource.html#cfn-route53recoveryreadiness-resourceset-nlbresource-arn\n         */\n        readonly arn?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `NLBResourceProperty`\n *\n * @param properties - the TypeScript properties of a `NLBResourceProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnResourceSet_NLBResourcePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('arn', cdk.validateString)(properties.arn));\n    return errors.wrap('supplied properties not correct for \"NLBResourceProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Route53RecoveryReadiness::ResourceSet.NLBResource` resource\n *\n * @param properties - the TypeScript properties of a `NLBResourceProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Route53RecoveryReadiness::ResourceSet.NLBResource` resource.\n */\n// @ts-ignore TS6133\nfunction cfnResourceSetNLBResourcePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnResourceSet_NLBResourcePropertyValidator(properties).assertSuccess();\n    return {\n        Arn: cdk.stringToCloudFormation(properties.arn),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnResourceSetNLBResourcePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnResourceSet.NLBResourceProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnResourceSet.NLBResourceProperty>();\n    ret.addPropertyResult('arn', 'Arn', properties.Arn != null ? cfn_parse.FromCloudFormation.getString(properties.Arn) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnResourceSet {\n    /**\n     * The Route 53 resource that a DNS target resource record points to.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53recoveryreadiness-resourceset-r53resourcerecord.html\n     */\n    export interface R53ResourceRecordProperty {\n        /**\n         * The DNS target domain name.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53recoveryreadiness-resourceset-r53resourcerecord.html#cfn-route53recoveryreadiness-resourceset-r53resourcerecord-domainname\n         */\n        readonly domainName?: string;\n        /**\n         * The Route 53 Resource Record Set ID.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53recoveryreadiness-resourceset-r53resourcerecord.html#cfn-route53recoveryreadiness-resourceset-r53resourcerecord-recordsetid\n         */\n        readonly recordSetId?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `R53ResourceRecordProperty`\n *\n * @param properties - the TypeScript properties of a `R53ResourceRecordProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnResourceSet_R53ResourceRecordPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('domainName', cdk.validateString)(properties.domainName));\n    errors.collect(cdk.propertyValidator('recordSetId', cdk.validateString)(properties.recordSetId));\n    return errors.wrap('supplied properties not correct for \"R53ResourceRecordProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Route53RecoveryReadiness::ResourceSet.R53ResourceRecord` resource\n *\n * @param properties - the TypeScript properties of a `R53ResourceRecordProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Route53RecoveryReadiness::ResourceSet.R53ResourceRecord` resource.\n */\n// @ts-ignore TS6133\nfunction cfnResourceSetR53ResourceRecordPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnResourceSet_R53ResourceRecordPropertyValidator(properties).assertSuccess();\n    return {\n        DomainName: cdk.stringToCloudFormation(properties.domainName),\n        RecordSetId: cdk.stringToCloudFormation(properties.recordSetId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnResourceSetR53ResourceRecordPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnResourceSet.R53ResourceRecordProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnResourceSet.R53ResourceRecordProperty>();\n    ret.addPropertyResult('domainName', 'DomainName', properties.DomainName != null ? cfn_parse.FromCloudFormation.getString(properties.DomainName) : undefined);\n    ret.addPropertyResult('recordSetId', 'RecordSetId', properties.RecordSetId != null ? cfn_parse.FromCloudFormation.getString(properties.RecordSetId) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnResourceSet {\n    /**\n     * The resource element of a resource set.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53recoveryreadiness-resourceset-resource.html\n     */\n    export interface ResourceProperty {\n        /**\n         * The component identifier of the resource, generated when DNS target resource is used.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53recoveryreadiness-resourceset-resource.html#cfn-route53recoveryreadiness-resourceset-resource-componentid\n         */\n        readonly componentId?: string;\n        /**\n         * A component for DNS/routing control readiness checks. This is a required setting when `ResourceSet` `ResourceSetType` is set to `AWS::Route53RecoveryReadiness::DNSTargetResource` . Do not set it for any other `ResourceSetType` setting.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53recoveryreadiness-resourceset-resource.html#cfn-route53recoveryreadiness-resourceset-resource-dnstargetresource\n         */\n        readonly dnsTargetResource?: CfnResourceSet.DNSTargetResourceProperty | cdk.IResolvable;\n        /**\n         * The recovery group Amazon Resource Name (ARN) or the cell ARN that the readiness checks for this resource set are scoped to.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53recoveryreadiness-resourceset-resource.html#cfn-route53recoveryreadiness-resourceset-resource-readinessscopes\n         */\n        readonly readinessScopes?: string[];\n        /**\n         * The Amazon Resource Name (ARN) of the AWS resource. This is a required setting for all `ResourceSet` `ResourceSetType` settings except `AWS::Route53RecoveryReadiness::DNSTargetResource` . Do not set this when `ResourceSetType` is set to `AWS::Route53RecoveryReadiness::DNSTargetResource` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53recoveryreadiness-resourceset-resource.html#cfn-route53recoveryreadiness-resourceset-resource-resourcearn\n         */\n        readonly resourceArn?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ResourceProperty`\n *\n * @param properties - the TypeScript properties of a `ResourceProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnResourceSet_ResourcePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('componentId', cdk.validateString)(properties.componentId));\n    errors.collect(cdk.propertyValidator('dnsTargetResource', CfnResourceSet_DNSTargetResourcePropertyValidator)(properties.dnsTargetResource));\n    errors.collect(cdk.propertyValidator('readinessScopes', cdk.listValidator(cdk.validateString))(properties.readinessScopes));\n    errors.collect(cdk.propertyValidator('resourceArn', cdk.validateString)(properties.resourceArn));\n    return errors.wrap('supplied properties not correct for \"ResourceProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Route53RecoveryReadiness::ResourceSet.Resource` resource\n *\n * @param properties - the TypeScript properties of a `ResourceProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Route53RecoveryReadiness::ResourceSet.Resource` resource.\n */\n// @ts-ignore TS6133\nfunction cfnResourceSetResourcePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnResourceSet_ResourcePropertyValidator(properties).assertSuccess();\n    return {\n        ComponentId: cdk.stringToCloudFormation(properties.componentId),\n        DnsTargetResource: cfnResourceSetDNSTargetResourcePropertyToCloudFormation(properties.dnsTargetResource),\n        ReadinessScopes: cdk.listMapper(cdk.stringToCloudFormation)(properties.readinessScopes),\n        ResourceArn: cdk.stringToCloudFormation(properties.resourceArn),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnResourceSetResourcePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnResourceSet.ResourceProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnResourceSet.ResourceProperty>();\n    ret.addPropertyResult('componentId', 'ComponentId', properties.ComponentId != null ? cfn_parse.FromCloudFormation.getString(properties.ComponentId) : undefined);\n    ret.addPropertyResult('dnsTargetResource', 'DnsTargetResource', properties.DnsTargetResource != null ? CfnResourceSetDNSTargetResourcePropertyFromCloudFormation(properties.DnsTargetResource) : undefined);\n    ret.addPropertyResult('readinessScopes', 'ReadinessScopes', properties.ReadinessScopes != null ? cfn_parse.FromCloudFormation.getStringArray(properties.ReadinessScopes) : undefined);\n    ret.addPropertyResult('resourceArn', 'ResourceArn', properties.ResourceArn != null ? cfn_parse.FromCloudFormation.getString(properties.ResourceArn) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnResourceSet {\n    /**\n     * The target resource that the Route 53 record points to.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53recoveryreadiness-resourceset-targetresource.html\n     */\n    export interface TargetResourceProperty {\n        /**\n         * The Network Load Balancer resource that a DNS target resource points to.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53recoveryreadiness-resourceset-targetresource.html#cfn-route53recoveryreadiness-resourceset-targetresource-nlbresource\n         */\n        readonly nlbResource?: CfnResourceSet.NLBResourceProperty | cdk.IResolvable;\n        /**\n         * The Route 53 resource that a DNS target resource record points to.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53recoveryreadiness-resourceset-targetresource.html#cfn-route53recoveryreadiness-resourceset-targetresource-r53resource\n         */\n        readonly r53Resource?: CfnResourceSet.R53ResourceRecordProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `TargetResourceProperty`\n *\n * @param properties - the TypeScript properties of a `TargetResourceProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnResourceSet_TargetResourcePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('nlbResource', CfnResourceSet_NLBResourcePropertyValidator)(properties.nlbResource));\n    errors.collect(cdk.propertyValidator('r53Resource', CfnResourceSet_R53ResourceRecordPropertyValidator)(properties.r53Resource));\n    return errors.wrap('supplied properties not correct for \"TargetResourceProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Route53RecoveryReadiness::ResourceSet.TargetResource` resource\n *\n * @param properties - the TypeScript properties of a `TargetResourceProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Route53RecoveryReadiness::ResourceSet.TargetResource` resource.\n */\n// @ts-ignore TS6133\nfunction cfnResourceSetTargetResourcePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnResourceSet_TargetResourcePropertyValidator(properties).assertSuccess();\n    return {\n        NLBResource: cfnResourceSetNLBResourcePropertyToCloudFormation(properties.nlbResource),\n        R53Resource: cfnResourceSetR53ResourceRecordPropertyToCloudFormation(properties.r53Resource),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnResourceSetTargetResourcePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnResourceSet.TargetResourceProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnResourceSet.TargetResourceProperty>();\n    ret.addPropertyResult('nlbResource', 'NLBResource', properties.NLBResource != null ? CfnResourceSetNLBResourcePropertyFromCloudFormation(properties.NLBResource) : undefined);\n    ret.addPropertyResult('r53Resource', 'R53Resource', properties.R53Resource != null ? CfnResourceSetR53ResourceRecordPropertyFromCloudFormation(properties.R53Resource) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n"],
  "mappings": "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",
  "names": []
}
