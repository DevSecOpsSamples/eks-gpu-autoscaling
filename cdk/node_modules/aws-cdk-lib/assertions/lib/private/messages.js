"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.hasNoMessage=exports.hasMessage=exports.findMessage=void 0;const section_1=require("./section");function findMessage(messages,constructPath,props={}){const section=messages,result=section_1.matchSection(filterPath(section,constructPath),props);return result.match?result.matches:{}}exports.findMessage=findMessage;function hasMessage(messages,constructPath,props){const section=messages,result=section_1.matchSection(filterPath(section,constructPath),props);if(!result.match)return result.closestResult===void 0?"No messages found in the stack":(handleTrace(result.closestResult.target),[`Stack has ${result.analyzedCount} messages, but none match as expected.`,section_1.formatFailure(result.closestResult)].join(`
`))}exports.hasMessage=hasMessage;function hasNoMessage(messages,constructPath,props){const section=messages,result=section_1.matchSection(filterPath(section,constructPath),props);if(!!result.match)return[`Expected no matches, but stack has ${Object.keys(result.matches).length} messages as follows:`,section_1.formatAllMatches(result.matches)].join(`
`)}exports.hasNoMessage=hasNoMessage;function handleTrace(match,redact=!0){var _a;redact&&((_a=match.entry)===null||_a===void 0?void 0:_a.trace)!==void 0&&(match.entry.trace="redacted")}function filterPath(section,path){return path==="*"?section:Object.entries(section!=null?section:{}).filter(([_,v])=>v.id===path).reduce((agg,[k,v])=>({...agg,[k]:v}),{})}
//# sourceMappingURL=messages.js.map
