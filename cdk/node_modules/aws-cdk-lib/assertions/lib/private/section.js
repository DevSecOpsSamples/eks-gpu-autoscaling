"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.filterLogicalId=exports.formatFailure=exports.formatAllMatches=exports.matchSection=void 0;const match_1=require("../match"),matcher_1=require("../matcher");function matchSection(section,props){const matcher=matcher_1.Matcher.isMatcher(props)?props:match_1.Match.objectLike(props);let closestResult,matching={},count=0;return eachEntryInSection(section,(logicalId,entry)=>{const result=matcher.test(entry);result.finished(),result.hasFailed()?(count++,(closestResult===void 0||closestResult.failCount>result.failCount)&&(closestResult=result)):matching[logicalId]=entry}),Object.keys(matching).length>0?{match:!0,matches:matching}:{match:!1,closestResult,analyzedCount:count}}exports.matchSection=matchSection;function eachEntryInSection(section,cb){for(const logicalId of Object.keys(section!=null?section:{})){const resource=section[logicalId];cb(logicalId,resource)}}function formatAllMatches(matches){return[leftPad(JSON.stringify(matches,void 0,2))].join(`
`)}exports.formatAllMatches=formatAllMatches;function formatFailure(closestResult){return["The closest result is:",leftPad(JSON.stringify(closestResult.target,void 0,2)),"with the following mismatches:",...closestResult.toHumanStrings().map(s=>`	${s}`)].join(`
`)}exports.formatFailure=formatFailure;function leftPad(x,indent=2){const pad=" ".repeat(indent);return pad+x.split(`
`).join(`
${pad}`)}function filterLogicalId(section,logicalId){return logicalId==="*"?section:Object.entries(section!=null?section:{}).filter(([k,_])=>k===logicalId).reduce((agg,[k,v])=>({...agg,[k]:v}),{})}exports.filterLogicalId=filterLogicalId;
//# sourceMappingURL=section.js.map
