{
  "version": 3,
  "sources": ["signer.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-04-07T10:40:12.637Z\",\"fingerprint\":\"vdh+/a/LtCT7tXxi3pKC7fmJkoaIRhIrM2U2GOLqdWA=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n/**\n * Properties for defining a `CfnProfilePermission`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-profilepermission.html\n */\nexport interface CfnProfilePermissionProps {\n\n    /**\n     * The AWS Signer action permitted as part of cross-account permissions.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-profilepermission.html#cfn-signer-profilepermission-action\n     */\n    readonly action: string;\n\n    /**\n     * The AWS principal receiving cross-account permissions. This may be an IAM role or another AWS account ID.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-profilepermission.html#cfn-signer-profilepermission-principal\n     */\n    readonly principal: string;\n\n    /**\n     * The human-readable name of the signing profile.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-profilepermission.html#cfn-signer-profilepermission-profilename\n     */\n    readonly profileName: string;\n\n    /**\n     * A unique identifier for the cross-account permission statement.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-profilepermission.html#cfn-signer-profilepermission-statementid\n     */\n    readonly statementId: string;\n\n    /**\n     * The version of the signing profile.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-profilepermission.html#cfn-signer-profilepermission-profileversion\n     */\n    readonly profileVersion?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnProfilePermissionProps`\n *\n * @param properties - the TypeScript properties of a `CfnProfilePermissionProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnProfilePermissionPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('action', cdk.requiredValidator)(properties.action));\n    errors.collect(cdk.propertyValidator('action', cdk.validateString)(properties.action));\n    errors.collect(cdk.propertyValidator('principal', cdk.requiredValidator)(properties.principal));\n    errors.collect(cdk.propertyValidator('principal', cdk.validateString)(properties.principal));\n    errors.collect(cdk.propertyValidator('profileName', cdk.requiredValidator)(properties.profileName));\n    errors.collect(cdk.propertyValidator('profileName', cdk.validateString)(properties.profileName));\n    errors.collect(cdk.propertyValidator('profileVersion', cdk.validateString)(properties.profileVersion));\n    errors.collect(cdk.propertyValidator('statementId', cdk.requiredValidator)(properties.statementId));\n    errors.collect(cdk.propertyValidator('statementId', cdk.validateString)(properties.statementId));\n    return errors.wrap('supplied properties not correct for \"CfnProfilePermissionProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Signer::ProfilePermission` resource\n *\n * @param properties - the TypeScript properties of a `CfnProfilePermissionProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Signer::ProfilePermission` resource.\n */\n// @ts-ignore TS6133\nfunction cfnProfilePermissionPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnProfilePermissionPropsValidator(properties).assertSuccess();\n    return {\n        Action: cdk.stringToCloudFormation(properties.action),\n        Principal: cdk.stringToCloudFormation(properties.principal),\n        ProfileName: cdk.stringToCloudFormation(properties.profileName),\n        StatementId: cdk.stringToCloudFormation(properties.statementId),\n        ProfileVersion: cdk.stringToCloudFormation(properties.profileVersion),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnProfilePermissionPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnProfilePermissionProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnProfilePermissionProps>();\n    ret.addPropertyResult('action', 'Action', cfn_parse.FromCloudFormation.getString(properties.Action));\n    ret.addPropertyResult('principal', 'Principal', cfn_parse.FromCloudFormation.getString(properties.Principal));\n    ret.addPropertyResult('profileName', 'ProfileName', cfn_parse.FromCloudFormation.getString(properties.ProfileName));\n    ret.addPropertyResult('statementId', 'StatementId', cfn_parse.FromCloudFormation.getString(properties.StatementId));\n    ret.addPropertyResult('profileVersion', 'ProfileVersion', properties.ProfileVersion != null ? cfn_parse.FromCloudFormation.getString(properties.ProfileVersion) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::Signer::ProfilePermission`\n *\n * Adds cross-account permissions to a signing profile.\n *\n * @cloudformationResource AWS::Signer::ProfilePermission\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-profilepermission.html\n */\nexport class CfnProfilePermission extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Signer::ProfilePermission\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnProfilePermission {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnProfilePermissionPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnProfilePermission(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The AWS Signer action permitted as part of cross-account permissions.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-profilepermission.html#cfn-signer-profilepermission-action\n     */\n    public action: string;\n\n    /**\n     * The AWS principal receiving cross-account permissions. This may be an IAM role or another AWS account ID.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-profilepermission.html#cfn-signer-profilepermission-principal\n     */\n    public principal: string;\n\n    /**\n     * The human-readable name of the signing profile.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-profilepermission.html#cfn-signer-profilepermission-profilename\n     */\n    public profileName: string;\n\n    /**\n     * A unique identifier for the cross-account permission statement.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-profilepermission.html#cfn-signer-profilepermission-statementid\n     */\n    public statementId: string;\n\n    /**\n     * The version of the signing profile.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-profilepermission.html#cfn-signer-profilepermission-profileversion\n     */\n    public profileVersion: string | undefined;\n\n    /**\n     * Create a new `AWS::Signer::ProfilePermission`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnProfilePermissionProps) {\n        super(scope, id, { type: CfnProfilePermission.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'action', this);\n        cdk.requireProperty(props, 'principal', this);\n        cdk.requireProperty(props, 'profileName', this);\n        cdk.requireProperty(props, 'statementId', this);\n\n        this.action = props.action;\n        this.principal = props.principal;\n        this.profileName = props.profileName;\n        this.statementId = props.statementId;\n        this.profileVersion = props.profileVersion;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnProfilePermission.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            action: this.action,\n            principal: this.principal,\n            profileName: this.profileName,\n            statementId: this.statementId,\n            profileVersion: this.profileVersion,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnProfilePermissionPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnSigningProfile`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-signingprofile.html\n */\nexport interface CfnSigningProfileProps {\n\n    /**\n     * The ID of a platform that is available for use by a signing profile.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-signingprofile.html#cfn-signer-signingprofile-platformid\n     */\n    readonly platformId: string;\n\n    /**\n     * The validity period override for any signature generated using this signing profile. If unspecified, the default is 135 months.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-signingprofile.html#cfn-signer-signingprofile-signaturevalidityperiod\n     */\n    readonly signatureValidityPeriod?: CfnSigningProfile.SignatureValidityPeriodProperty | cdk.IResolvable;\n\n    /**\n     * A list of tags associated with the signing profile.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-signingprofile.html#cfn-signer-signingprofile-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnSigningProfileProps`\n *\n * @param properties - the TypeScript properties of a `CfnSigningProfileProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnSigningProfilePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('platformId', cdk.requiredValidator)(properties.platformId));\n    errors.collect(cdk.propertyValidator('platformId', cdk.validateString)(properties.platformId));\n    errors.collect(cdk.propertyValidator('signatureValidityPeriod', CfnSigningProfile_SignatureValidityPeriodPropertyValidator)(properties.signatureValidityPeriod));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnSigningProfileProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Signer::SigningProfile` resource\n *\n * @param properties - the TypeScript properties of a `CfnSigningProfileProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Signer::SigningProfile` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSigningProfilePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSigningProfilePropsValidator(properties).assertSuccess();\n    return {\n        PlatformId: cdk.stringToCloudFormation(properties.platformId),\n        SignatureValidityPeriod: cfnSigningProfileSignatureValidityPeriodPropertyToCloudFormation(properties.signatureValidityPeriod),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSigningProfilePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSigningProfileProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSigningProfileProps>();\n    ret.addPropertyResult('platformId', 'PlatformId', cfn_parse.FromCloudFormation.getString(properties.PlatformId));\n    ret.addPropertyResult('signatureValidityPeriod', 'SignatureValidityPeriod', properties.SignatureValidityPeriod != null ? CfnSigningProfileSignatureValidityPeriodPropertyFromCloudFormation(properties.SignatureValidityPeriod) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::Signer::SigningProfile`\n *\n * Creates a signing profile. A signing profile is a code signing template that can be used to carry out a pre-defined signing job.\n *\n * @cloudformationResource AWS::Signer::SigningProfile\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-signingprofile.html\n */\nexport class CfnSigningProfile extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Signer::SigningProfile\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnSigningProfile {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnSigningProfilePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnSigningProfile(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     *\n     * @cloudformationAttribute Arn\n     */\n    public readonly attrArn: string;\n\n    /**\n     *\n     * @cloudformationAttribute ProfileName\n     */\n    public readonly attrProfileName: string;\n\n    /**\n     *\n     * @cloudformationAttribute ProfileVersion\n     */\n    public readonly attrProfileVersion: string;\n\n    /**\n     *\n     * @cloudformationAttribute ProfileVersionArn\n     */\n    public readonly attrProfileVersionArn: string;\n\n    /**\n     * The ID of a platform that is available for use by a signing profile.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-signingprofile.html#cfn-signer-signingprofile-platformid\n     */\n    public platformId: string;\n\n    /**\n     * The validity period override for any signature generated using this signing profile. If unspecified, the default is 135 months.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-signingprofile.html#cfn-signer-signingprofile-signaturevalidityperiod\n     */\n    public signatureValidityPeriod: CfnSigningProfile.SignatureValidityPeriodProperty | cdk.IResolvable | undefined;\n\n    /**\n     * A list of tags associated with the signing profile.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-signingprofile.html#cfn-signer-signingprofile-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::Signer::SigningProfile`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnSigningProfileProps) {\n        super(scope, id, { type: CfnSigningProfile.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'platformId', this);\n        this.attrArn = cdk.Token.asString(this.getAtt('Arn'));\n        this.attrProfileName = cdk.Token.asString(this.getAtt('ProfileName'));\n        this.attrProfileVersion = cdk.Token.asString(this.getAtt('ProfileVersion'));\n        this.attrProfileVersionArn = cdk.Token.asString(this.getAtt('ProfileVersionArn'));\n\n        this.platformId = props.platformId;\n        this.signatureValidityPeriod = props.signatureValidityPeriod;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::Signer::SigningProfile\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnSigningProfile.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            platformId: this.platformId,\n            signatureValidityPeriod: this.signatureValidityPeriod,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnSigningProfilePropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnSigningProfile {\n    /**\n     * The validity period for the signing job.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-signer-signingprofile-signaturevalidityperiod.html\n     */\n    export interface SignatureValidityPeriodProperty {\n        /**\n         * The time unit for signature validity: DAYS | MONTHS | YEARS.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-signer-signingprofile-signaturevalidityperiod.html#cfn-signer-signingprofile-signaturevalidityperiod-type\n         */\n        readonly type?: string;\n        /**\n         * The numerical value of the time unit for signature validity.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-signer-signingprofile-signaturevalidityperiod.html#cfn-signer-signingprofile-signaturevalidityperiod-value\n         */\n        readonly value?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `SignatureValidityPeriodProperty`\n *\n * @param properties - the TypeScript properties of a `SignatureValidityPeriodProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSigningProfile_SignatureValidityPeriodPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('type', cdk.validateString)(properties.type));\n    errors.collect(cdk.propertyValidator('value', cdk.validateNumber)(properties.value));\n    return errors.wrap('supplied properties not correct for \"SignatureValidityPeriodProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Signer::SigningProfile.SignatureValidityPeriod` resource\n *\n * @param properties - the TypeScript properties of a `SignatureValidityPeriodProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Signer::SigningProfile.SignatureValidityPeriod` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSigningProfileSignatureValidityPeriodPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSigningProfile_SignatureValidityPeriodPropertyValidator(properties).assertSuccess();\n    return {\n        Type: cdk.stringToCloudFormation(properties.type),\n        Value: cdk.numberToCloudFormation(properties.value),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSigningProfileSignatureValidityPeriodPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSigningProfile.SignatureValidityPeriodProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSigningProfile.SignatureValidityPeriodProperty>();\n    ret.addPropertyResult('type', 'Type', properties.Type != null ? cfn_parse.FromCloudFormation.getString(properties.Type) : undefined);\n    ret.addPropertyResult('value', 'Value', properties.Value != null ? cfn_parse.FromCloudFormation.getNumber(properties.Value) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n"],
  "mappings": "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",
  "names": []
}
