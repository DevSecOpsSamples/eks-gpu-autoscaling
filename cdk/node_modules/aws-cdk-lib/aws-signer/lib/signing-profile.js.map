{
  "version": 3,
  "sources": ["signing-profile.ts"],
  "sourcesContent": ["import { Duration, IResource, Resource, Stack } from '../../core';\nimport { Construct } from 'constructs';\nimport { CfnSigningProfile } from './signer.generated';\n\n/**\n * Platforms that are allowed with signing config.\n * @see https://docs.aws.amazon.com/signer/latest/developerguide/gs-platform.html\n */\nexport class Platform {\n  /**\n   * Specification of signature format and signing algorithms for AWS IoT Device.\n   */\n  public static readonly AWS_IOT_DEVICE_MANAGEMENT_SHA256_ECDSA = new Platform('AWSIoTDeviceManagement-SHA256-ECDSA');\n\n  /**\n   * Specification of signature format and signing algorithms for AWS Lambda.\n   */\n  public static readonly AWS_LAMBDA_SHA384_ECDSA = new Platform('AWSLambda-SHA384-ECDSA');\n\n  /**\n   * Specification of signature format and signing algorithms with\n   * SHA1 hash and RSA encryption for Amazon FreeRTOS.\n   */\n  public static readonly AMAZON_FREE_RTOS_TI_CC3220SF = new Platform('AmazonFreeRTOS-TI-CC3220SF');\n\n  /**\n   * Specification of signature format and signing algorithms with\n   * SHA256 hash and ECDSA encryption for Amazon FreeRTOS.\n   */\n  public static readonly AMAZON_FREE_RTOS_DEFAULT = new Platform('AmazonFreeRTOS-Default');\n\n  /**\n   * The id of signing platform.\n   * @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-signingprofile.html#cfn-signer-signingprofile-platformid\n   */\n  public readonly platformId: string;\n\n  private constructor(platformId: string) {\n    this.platformId = platformId;\n  }\n}\n\n/**\n * A Signer Profile\n */\nexport interface ISigningProfile extends IResource {\n  /**\n   * The ARN of the signing profile.\n   * @attribute\n   */\n  readonly signingProfileArn: string;\n\n  /**\n   * The name of signing profile.\n   * @attribute ProfileName\n   */\n  readonly signingProfileName: string;\n\n  /**\n   * The version of signing profile.\n   * @attribute ProfileVersion\n   */\n  readonly signingProfileVersion: string;\n\n  /**\n   * The ARN of signing profile version.\n   * @attribute ProfileVersionArn\n   */\n  readonly signingProfileVersionArn: string;\n}\n\n/**\n * Construction properties for a Signing Profile object\n */\nexport interface SigningProfileProps {\n  /**\n   * The Signing Platform available for signing profile.\n   * @see https://docs.aws.amazon.com/signer/latest/developerguide/gs-platform.html\n   */\n  readonly platform: Platform;\n\n  /**\n   * The validity period for signatures generated using\n   * this signing profile.\n   *\n   * @default - 135 months\n   */\n  readonly signatureValidity?: Duration;\n\n  /**\n   * Physical name of this Signing Profile.\n   *\n   * @default - Assigned by CloudFormation (recommended).\n   */\n  readonly signingProfileName?: string;\n}\n\n/**\n * A reference to a Signing Profile\n */\nexport interface SigningProfileAttributes {\n  /**\n   * The name of signing profile.\n   */\n  readonly signingProfileName: string;\n\n  /**\n   * The version of signing profile.\n   */\n  readonly signingProfileVersion: string;\n}\n\n/**\n * Defines a Signing Profile.\n *\n * @resource AWS::Signer::SigningProfile\n */\nexport class SigningProfile extends Resource implements ISigningProfile {\n  /**\n   * Creates a Signing Profile construct that represents an external Signing Profile.\n   *\n   * @param scope The parent creating construct (usually `this`).\n   * @param id The construct's name.\n   * @param attrs A `SigningProfileAttributes` object.\n   */\n  public static fromSigningProfileAttributes( scope: Construct, id: string, attrs: SigningProfileAttributes): ISigningProfile {\n    class Import extends Resource implements ISigningProfile {\n      public readonly signingProfileArn: string;\n      public readonly signingProfileName = attrs.signingProfileName;\n      public readonly signingProfileVersion = attrs.signingProfileVersion;\n      public readonly signingProfileVersionArn: string;\n\n      constructor(signingProfileArn: string, signingProfileProfileVersionArn: string) {\n        super(scope, id);\n        this.signingProfileArn = signingProfileArn;\n        this.signingProfileVersionArn = signingProfileProfileVersionArn;\n      }\n    }\n    const signingProfileArn = Stack.of(scope).formatArn({\n      service: 'signer',\n      resource: '',\n      resourceName: `/signing-profiles/${attrs.signingProfileName}`,\n    });\n    const SigningProfileVersionArn = Stack.of(scope).formatArn({\n      service: 'signer',\n      resource: '',\n      resourceName: `/signing-profiles/${attrs.signingProfileName}/${attrs.signingProfileVersion}`,\n    });\n    return new Import(signingProfileArn, SigningProfileVersionArn);\n  }\n\n  public readonly signingProfileArn: string;\n  public readonly signingProfileName: string;\n  public readonly signingProfileVersion: string;\n  public readonly signingProfileVersionArn: string;\n\n  constructor(scope: Construct, id: string, props: SigningProfileProps) {\n    super(scope, id, {\n      physicalName: props.signingProfileName,\n    });\n\n    const resource = new CfnSigningProfile( this, 'Resource', {\n      platformId: props.platform.platformId,\n      signatureValidityPeriod: props.signatureValidity ? {\n        type: 'DAYS',\n        value: props.signatureValidity?.toDays(),\n      } : {\n        type: 'MONTHS',\n        value: 135,\n      },\n    } );\n\n    this.signingProfileArn = resource.attrArn;\n    this.signingProfileName = resource.attrProfileName;\n    this.signingProfileVersion = resource.attrProfileVersion;\n    this.signingProfileVersionArn = resource.attrProfileVersionArn;\n  }\n}\n"],
  "mappings": "yOAAA,OAAA,QAAA,YAAA,EAEA,mBAAA,QAAA,oBAAA,EAMA,MAAa,QAAQ,CA6BnB,YAAoB,WAAkB,CACpC,KAAK,WAAa,YA9BtB,QAAA,SAAA,qGAIyB,SAAA,uCAAyC,GAAI,UAAS,qCAAqC,EAK3F,SAAA,wBAA0B,GAAI,UAAS,wBAAwB,EAM/D,SAAA,6BAA+B,GAAI,UAAS,4BAA4B,EAMxE,SAAA,yBAA2B,GAAI,UAAS,wBAAwB,EAwFzF,MAAa,sBAAuB,QAAA,QAAQ,CAuC1C,YAAY,MAAkB,GAAY,MAA0B,QAClE,MAAM,MAAO,GAAI,CACf,aAAc,MAAM,mBACrB,4EAED,KAAM,UAAW,GAAI,oBAAA,kBAAmB,KAAM,WAAY,CACxD,WAAY,MAAM,SAAS,WAC3B,wBAAyB,MAAM,kBAAoB,CACjD,KAAM,OACN,MAAK,IAAE,MAAM,qBAAiB,MAAA,KAAA,OAAA,OAAA,GAAE,OAAM,GACpC,CACF,KAAM,SACN,MAAO,KAEV,EAED,KAAK,kBAAoB,SAAS,QAClC,KAAK,mBAAqB,SAAS,gBACnC,KAAK,sBAAwB,SAAS,mBACtC,KAAK,yBAA2B,SAAS,4BAlD7B,8BAA8B,MAAkB,GAAY,MAA+B,gFACvG,MAAM,cAAe,QAAA,QAAQ,CAM3B,YAAY,mBAA2B,gCAAuC,CAC5E,MAAM,MAAO,EAAE,EALD,KAAA,mBAAqB,MAAM,mBAC3B,KAAA,sBAAwB,MAAM,sBAK5C,KAAK,kBAAoB,mBACzB,KAAK,yBAA2B,+BAClC,EAEF,KAAM,mBAAoB,OAAA,MAAM,GAAG,KAAK,EAAE,UAAU,CAClD,QAAS,SACT,SAAU,GACV,aAAc,qBAAqB,MAAM,qBAC1C,EACK,yBAA2B,OAAA,MAAM,GAAG,KAAK,EAAE,UAAU,CACzD,QAAS,SACT,SAAU,GACV,aAAc,qBAAqB,MAAM,sBAAsB,MAAM,wBACtE,EACD,MAAO,IAAI,QAAO,kBAAmB,wBAAwB,GA/BjE,QAAA,eAAA",
  "names": []
}
