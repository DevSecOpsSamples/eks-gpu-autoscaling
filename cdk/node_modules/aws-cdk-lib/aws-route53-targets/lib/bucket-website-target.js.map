{
  "version": 3,
  "sources": ["bucket-website-target.ts"],
  "sourcesContent": ["import * as route53 from '../../aws-route53';\nimport * as s3 from '../../aws-s3';\nimport { Stack, Token } from '../../core';\nimport { RegionInfo } from '../../region-info';\n\n/**\n * Use a S3 as an alias record target\n */\nexport class BucketWebsiteTarget implements route53.IAliasRecordTarget {\n  constructor(private readonly bucket: s3.IBucket) {\n  }\n\n  public bind(_record: route53.IRecordSet, _zone?: route53.IHostedZone): route53.AliasRecordTargetConfig {\n    const { region } = Stack.of(this.bucket.stack);\n\n    if (Token.isUnresolved(region)) {\n      throw new Error([\n        'Cannot use an S3 record alias in region-agnostic stacks.',\n        'You must specify a specific region when you define the stack',\n        '(see https://docs.aws.amazon.com/cdk/latest/guide/environments.html)',\n      ].join(' '));\n    }\n\n    const { s3StaticWebsiteHostedZoneId: hostedZoneId, s3StaticWebsiteEndpoint: dnsName } = RegionInfo.get(region);\n\n    if (!hostedZoneId || !dnsName) {\n      throw new Error(`Bucket website target is not supported for the \"${region}\" region`);\n    }\n\n    return { hostedZoneId, dnsName };\n  }\n}\n"],
  "mappings": "0NAEA,OAAA,QAAA,YAAA,EACA,cAAA,QAAA,mBAAA,EAKA,MAAa,mBAAmB,CAC9B,YAA6B,OAAkB,CAAlB,KAAA,OAAA,kEAGtB,KAAK,QAA6B,MAA2B,wIAClE,KAAM,CAAE,QAAW,OAAA,MAAM,GAAG,KAAK,OAAO,KAAK,EAE7C,GAAI,OAAA,MAAM,aAAa,MAAM,EAC3B,KAAM,IAAI,OAAM,CACd,2DACA,+DACA,wEACA,KAAK,GAAG,CAAC,EAGb,KAAM,CAAE,4BAA6B,aAAc,wBAAyB,SAAY,cAAA,WAAW,IAAI,MAAM,EAE7G,GAAI,CAAC,cAAgB,CAAC,QACpB,KAAM,IAAI,OAAM,mDAAmD,gBAAgB,EAGrF,MAAO,CAAE,aAAc,OAAO,GArBlC,QAAA,oBAAA",
  "names": []
}
