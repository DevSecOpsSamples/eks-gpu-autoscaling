"use strict";var _a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnTrail=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/cfn-parse");function CfnTrailPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("cloudWatchLogsLogGroupArn",cdk.validateString)(properties.cloudWatchLogsLogGroupArn)),errors.collect(cdk.propertyValidator("cloudWatchLogsRoleArn",cdk.validateString)(properties.cloudWatchLogsRoleArn)),errors.collect(cdk.propertyValidator("enableLogFileValidation",cdk.validateBoolean)(properties.enableLogFileValidation)),errors.collect(cdk.propertyValidator("eventSelectors",cdk.listValidator(CfnTrail_EventSelectorPropertyValidator))(properties.eventSelectors)),errors.collect(cdk.propertyValidator("includeGlobalServiceEvents",cdk.validateBoolean)(properties.includeGlobalServiceEvents)),errors.collect(cdk.propertyValidator("insightSelectors",cdk.listValidator(CfnTrail_InsightSelectorPropertyValidator))(properties.insightSelectors)),errors.collect(cdk.propertyValidator("isLogging",cdk.requiredValidator)(properties.isLogging)),errors.collect(cdk.propertyValidator("isLogging",cdk.validateBoolean)(properties.isLogging)),errors.collect(cdk.propertyValidator("isMultiRegionTrail",cdk.validateBoolean)(properties.isMultiRegionTrail)),errors.collect(cdk.propertyValidator("isOrganizationTrail",cdk.validateBoolean)(properties.isOrganizationTrail)),errors.collect(cdk.propertyValidator("kmsKeyId",cdk.validateString)(properties.kmsKeyId)),errors.collect(cdk.propertyValidator("s3BucketName",cdk.requiredValidator)(properties.s3BucketName)),errors.collect(cdk.propertyValidator("s3BucketName",cdk.validateString)(properties.s3BucketName)),errors.collect(cdk.propertyValidator("s3KeyPrefix",cdk.validateString)(properties.s3KeyPrefix)),errors.collect(cdk.propertyValidator("snsTopicName",cdk.validateString)(properties.snsTopicName)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("trailName",cdk.validateString)(properties.trailName)),errors.wrap('supplied properties not correct for "CfnTrailProps"')}function cfnTrailPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnTrailPropsValidator(properties).assertSuccess(),{IsLogging:cdk.booleanToCloudFormation(properties.isLogging),S3BucketName:cdk.stringToCloudFormation(properties.s3BucketName),CloudWatchLogsLogGroupArn:cdk.stringToCloudFormation(properties.cloudWatchLogsLogGroupArn),CloudWatchLogsRoleArn:cdk.stringToCloudFormation(properties.cloudWatchLogsRoleArn),EnableLogFileValidation:cdk.booleanToCloudFormation(properties.enableLogFileValidation),EventSelectors:cdk.listMapper(cfnTrailEventSelectorPropertyToCloudFormation)(properties.eventSelectors),IncludeGlobalServiceEvents:cdk.booleanToCloudFormation(properties.includeGlobalServiceEvents),InsightSelectors:cdk.listMapper(cfnTrailInsightSelectorPropertyToCloudFormation)(properties.insightSelectors),IsMultiRegionTrail:cdk.booleanToCloudFormation(properties.isMultiRegionTrail),IsOrganizationTrail:cdk.booleanToCloudFormation(properties.isOrganizationTrail),KMSKeyId:cdk.stringToCloudFormation(properties.kmsKeyId),S3KeyPrefix:cdk.stringToCloudFormation(properties.s3KeyPrefix),SnsTopicName:cdk.stringToCloudFormation(properties.snsTopicName),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),TrailName:cdk.stringToCloudFormation(properties.trailName)}):properties}function CfnTrailPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("isLogging","IsLogging",cfn_parse.FromCloudFormation.getBoolean(properties.IsLogging)),ret.addPropertyResult("s3BucketName","S3BucketName",cfn_parse.FromCloudFormation.getString(properties.S3BucketName)),ret.addPropertyResult("cloudWatchLogsLogGroupArn","CloudWatchLogsLogGroupArn",properties.CloudWatchLogsLogGroupArn!=null?cfn_parse.FromCloudFormation.getString(properties.CloudWatchLogsLogGroupArn):void 0),ret.addPropertyResult("cloudWatchLogsRoleArn","CloudWatchLogsRoleArn",properties.CloudWatchLogsRoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.CloudWatchLogsRoleArn):void 0),ret.addPropertyResult("enableLogFileValidation","EnableLogFileValidation",properties.EnableLogFileValidation!=null?cfn_parse.FromCloudFormation.getBoolean(properties.EnableLogFileValidation):void 0),ret.addPropertyResult("eventSelectors","EventSelectors",properties.EventSelectors!=null?cfn_parse.FromCloudFormation.getArray(CfnTrailEventSelectorPropertyFromCloudFormation)(properties.EventSelectors):void 0),ret.addPropertyResult("includeGlobalServiceEvents","IncludeGlobalServiceEvents",properties.IncludeGlobalServiceEvents!=null?cfn_parse.FromCloudFormation.getBoolean(properties.IncludeGlobalServiceEvents):void 0),ret.addPropertyResult("insightSelectors","InsightSelectors",properties.InsightSelectors!=null?cfn_parse.FromCloudFormation.getArray(CfnTrailInsightSelectorPropertyFromCloudFormation)(properties.InsightSelectors):void 0),ret.addPropertyResult("isMultiRegionTrail","IsMultiRegionTrail",properties.IsMultiRegionTrail!=null?cfn_parse.FromCloudFormation.getBoolean(properties.IsMultiRegionTrail):void 0),ret.addPropertyResult("isOrganizationTrail","IsOrganizationTrail",properties.IsOrganizationTrail!=null?cfn_parse.FromCloudFormation.getBoolean(properties.IsOrganizationTrail):void 0),ret.addPropertyResult("kmsKeyId","KMSKeyId",properties.KMSKeyId!=null?cfn_parse.FromCloudFormation.getString(properties.KMSKeyId):void 0),ret.addPropertyResult("s3KeyPrefix","S3KeyPrefix",properties.S3KeyPrefix!=null?cfn_parse.FromCloudFormation.getString(properties.S3KeyPrefix):void 0),ret.addPropertyResult("snsTopicName","SnsTopicName",properties.SnsTopicName!=null?cfn_parse.FromCloudFormation.getString(properties.SnsTopicName):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("trailName","TrailName",properties.TrailName!=null?cfn_parse.FromCloudFormation.getString(properties.TrailName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnTrail extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnTrail.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_cloudtrail_CfnTrailProps(props),cdk.requireProperty(props,"isLogging",this),cdk.requireProperty(props,"s3BucketName",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn")),this.attrSnsTopicArn=cdk.Token.asString(this.getAtt("SnsTopicArn")),this.isLogging=props.isLogging,this.s3BucketName=props.s3BucketName,this.cloudWatchLogsLogGroupArn=props.cloudWatchLogsLogGroupArn,this.cloudWatchLogsRoleArn=props.cloudWatchLogsRoleArn,this.enableLogFileValidation=props.enableLogFileValidation,this.eventSelectors=props.eventSelectors,this.includeGlobalServiceEvents=props.includeGlobalServiceEvents,this.insightSelectors=props.insightSelectors,this.isMultiRegionTrail=props.isMultiRegionTrail,this.isOrganizationTrail=props.isOrganizationTrail,this.kmsKeyId=props.kmsKeyId,this.s3KeyPrefix=props.s3KeyPrefix,this.snsTopicName=props.snsTopicName,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::CloudTrail::Trail",props.tags,{tagPropertyName:"tags"}),this.trailName=props.trailName}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnTrailPropsFromCloudFormation(resourceProperties),ret=new CfnTrail(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnTrail.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{isLogging:this.isLogging,s3BucketName:this.s3BucketName,cloudWatchLogsLogGroupArn:this.cloudWatchLogsLogGroupArn,cloudWatchLogsRoleArn:this.cloudWatchLogsRoleArn,enableLogFileValidation:this.enableLogFileValidation,eventSelectors:this.eventSelectors,includeGlobalServiceEvents:this.includeGlobalServiceEvents,insightSelectors:this.insightSelectors,isMultiRegionTrail:this.isMultiRegionTrail,isOrganizationTrail:this.isOrganizationTrail,kmsKeyId:this.kmsKeyId,s3KeyPrefix:this.s3KeyPrefix,snsTopicName:this.snsTopicName,tags:this.tags.renderTags(),trailName:this.trailName}}renderProperties(props){return cfnTrailPropsToCloudFormation(props)}}exports.CfnTrail=CfnTrail,_a=JSII_RTTI_SYMBOL_1,CfnTrail[_a]={fqn:"aws-cdk-lib.aws_cloudtrail.CfnTrail",version:"2.20.0"},CfnTrail.CFN_RESOURCE_TYPE_NAME="AWS::CloudTrail::Trail";function CfnTrail_DataResourcePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("type",cdk.requiredValidator)(properties.type)),errors.collect(cdk.propertyValidator("type",cdk.validateString)(properties.type)),errors.collect(cdk.propertyValidator("values",cdk.listValidator(cdk.validateString))(properties.values)),errors.wrap('supplied properties not correct for "DataResourceProperty"')}function cfnTrailDataResourcePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnTrail_DataResourcePropertyValidator(properties).assertSuccess(),{Type:cdk.stringToCloudFormation(properties.type),Values:cdk.listMapper(cdk.stringToCloudFormation)(properties.values)}):properties}function CfnTrailDataResourcePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("type","Type",cfn_parse.FromCloudFormation.getString(properties.Type)),ret.addPropertyResult("values","Values",properties.Values!=null?cfn_parse.FromCloudFormation.getStringArray(properties.Values):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTrail_EventSelectorPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("dataResources",cdk.listValidator(CfnTrail_DataResourcePropertyValidator))(properties.dataResources)),errors.collect(cdk.propertyValidator("excludeManagementEventSources",cdk.listValidator(cdk.validateString))(properties.excludeManagementEventSources)),errors.collect(cdk.propertyValidator("includeManagementEvents",cdk.validateBoolean)(properties.includeManagementEvents)),errors.collect(cdk.propertyValidator("readWriteType",cdk.validateString)(properties.readWriteType)),errors.wrap('supplied properties not correct for "EventSelectorProperty"')}function cfnTrailEventSelectorPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnTrail_EventSelectorPropertyValidator(properties).assertSuccess(),{DataResources:cdk.listMapper(cfnTrailDataResourcePropertyToCloudFormation)(properties.dataResources),ExcludeManagementEventSources:cdk.listMapper(cdk.stringToCloudFormation)(properties.excludeManagementEventSources),IncludeManagementEvents:cdk.booleanToCloudFormation(properties.includeManagementEvents),ReadWriteType:cdk.stringToCloudFormation(properties.readWriteType)}):properties}function CfnTrailEventSelectorPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("dataResources","DataResources",properties.DataResources!=null?cfn_parse.FromCloudFormation.getArray(CfnTrailDataResourcePropertyFromCloudFormation)(properties.DataResources):void 0),ret.addPropertyResult("excludeManagementEventSources","ExcludeManagementEventSources",properties.ExcludeManagementEventSources!=null?cfn_parse.FromCloudFormation.getStringArray(properties.ExcludeManagementEventSources):void 0),ret.addPropertyResult("includeManagementEvents","IncludeManagementEvents",properties.IncludeManagementEvents!=null?cfn_parse.FromCloudFormation.getBoolean(properties.IncludeManagementEvents):void 0),ret.addPropertyResult("readWriteType","ReadWriteType",properties.ReadWriteType!=null?cfn_parse.FromCloudFormation.getString(properties.ReadWriteType):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTrail_InsightSelectorPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("insightType",cdk.validateString)(properties.insightType)),errors.wrap('supplied properties not correct for "InsightSelectorProperty"')}function cfnTrailInsightSelectorPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnTrail_InsightSelectorPropertyValidator(properties).assertSuccess(),{InsightType:cdk.stringToCloudFormation(properties.insightType)}):properties}function CfnTrailInsightSelectorPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("insightType","InsightType",properties.InsightType!=null?cfn_parse.FromCloudFormation.getString(properties.InsightType):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
//# sourceMappingURL=cloudtrail.generated.js.map
