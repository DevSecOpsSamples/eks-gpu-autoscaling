"use strict";var _a,_b;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnVpcConnector=exports.CfnService=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/cfn-parse");function CfnServicePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("autoScalingConfigurationArn",cdk.validateString)(properties.autoScalingConfigurationArn)),errors.collect(cdk.propertyValidator("encryptionConfiguration",CfnService_EncryptionConfigurationPropertyValidator)(properties.encryptionConfiguration)),errors.collect(cdk.propertyValidator("healthCheckConfiguration",CfnService_HealthCheckConfigurationPropertyValidator)(properties.healthCheckConfiguration)),errors.collect(cdk.propertyValidator("instanceConfiguration",CfnService_InstanceConfigurationPropertyValidator)(properties.instanceConfiguration)),errors.collect(cdk.propertyValidator("networkConfiguration",CfnService_NetworkConfigurationPropertyValidator)(properties.networkConfiguration)),errors.collect(cdk.propertyValidator("serviceName",cdk.validateString)(properties.serviceName)),errors.collect(cdk.propertyValidator("sourceConfiguration",cdk.requiredValidator)(properties.sourceConfiguration)),errors.collect(cdk.propertyValidator("sourceConfiguration",CfnService_SourceConfigurationPropertyValidator)(properties.sourceConfiguration)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnServiceProps"')}function cfnServicePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnServicePropsValidator(properties).assertSuccess(),{SourceConfiguration:cfnServiceSourceConfigurationPropertyToCloudFormation(properties.sourceConfiguration),AutoScalingConfigurationArn:cdk.stringToCloudFormation(properties.autoScalingConfigurationArn),EncryptionConfiguration:cfnServiceEncryptionConfigurationPropertyToCloudFormation(properties.encryptionConfiguration),HealthCheckConfiguration:cfnServiceHealthCheckConfigurationPropertyToCloudFormation(properties.healthCheckConfiguration),InstanceConfiguration:cfnServiceInstanceConfigurationPropertyToCloudFormation(properties.instanceConfiguration),NetworkConfiguration:cfnServiceNetworkConfigurationPropertyToCloudFormation(properties.networkConfiguration),ServiceName:cdk.stringToCloudFormation(properties.serviceName),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnServicePropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("sourceConfiguration","SourceConfiguration",CfnServiceSourceConfigurationPropertyFromCloudFormation(properties.SourceConfiguration)),ret.addPropertyResult("autoScalingConfigurationArn","AutoScalingConfigurationArn",properties.AutoScalingConfigurationArn!=null?cfn_parse.FromCloudFormation.getString(properties.AutoScalingConfigurationArn):void 0),ret.addPropertyResult("encryptionConfiguration","EncryptionConfiguration",properties.EncryptionConfiguration!=null?CfnServiceEncryptionConfigurationPropertyFromCloudFormation(properties.EncryptionConfiguration):void 0),ret.addPropertyResult("healthCheckConfiguration","HealthCheckConfiguration",properties.HealthCheckConfiguration!=null?CfnServiceHealthCheckConfigurationPropertyFromCloudFormation(properties.HealthCheckConfiguration):void 0),ret.addPropertyResult("instanceConfiguration","InstanceConfiguration",properties.InstanceConfiguration!=null?CfnServiceInstanceConfigurationPropertyFromCloudFormation(properties.InstanceConfiguration):void 0),ret.addPropertyResult("networkConfiguration","NetworkConfiguration",properties.NetworkConfiguration!=null?CfnServiceNetworkConfigurationPropertyFromCloudFormation(properties.NetworkConfiguration):void 0),ret.addPropertyResult("serviceName","ServiceName",properties.ServiceName!=null?cfn_parse.FromCloudFormation.getString(properties.ServiceName):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnService extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnService.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_apprunner_CfnServiceProps(props),cdk.requireProperty(props,"sourceConfiguration",this),this.attrServiceArn=cdk.Token.asString(this.getAtt("ServiceArn")),this.attrServiceId=cdk.Token.asString(this.getAtt("ServiceId")),this.attrServiceUrl=cdk.Token.asString(this.getAtt("ServiceUrl")),this.attrStatus=cdk.Token.asString(this.getAtt("Status")),this.sourceConfiguration=props.sourceConfiguration,this.autoScalingConfigurationArn=props.autoScalingConfigurationArn,this.encryptionConfiguration=props.encryptionConfiguration,this.healthCheckConfiguration=props.healthCheckConfiguration,this.instanceConfiguration=props.instanceConfiguration,this.networkConfiguration=props.networkConfiguration,this.serviceName=props.serviceName,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::AppRunner::Service",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnServicePropsFromCloudFormation(resourceProperties),ret=new CfnService(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnService.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{sourceConfiguration:this.sourceConfiguration,autoScalingConfigurationArn:this.autoScalingConfigurationArn,encryptionConfiguration:this.encryptionConfiguration,healthCheckConfiguration:this.healthCheckConfiguration,instanceConfiguration:this.instanceConfiguration,networkConfiguration:this.networkConfiguration,serviceName:this.serviceName,tags:this.tags.renderTags()}}renderProperties(props){return cfnServicePropsToCloudFormation(props)}}exports.CfnService=CfnService,_a=JSII_RTTI_SYMBOL_1,CfnService[_a]={fqn:"aws-cdk-lib.aws_apprunner.CfnService",version:"2.20.0"},CfnService.CFN_RESOURCE_TYPE_NAME="AWS::AppRunner::Service";function CfnService_AuthenticationConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("accessRoleArn",cdk.validateString)(properties.accessRoleArn)),errors.collect(cdk.propertyValidator("connectionArn",cdk.validateString)(properties.connectionArn)),errors.wrap('supplied properties not correct for "AuthenticationConfigurationProperty"')}function cfnServiceAuthenticationConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnService_AuthenticationConfigurationPropertyValidator(properties).assertSuccess(),{AccessRoleArn:cdk.stringToCloudFormation(properties.accessRoleArn),ConnectionArn:cdk.stringToCloudFormation(properties.connectionArn)}):properties}function CfnServiceAuthenticationConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("accessRoleArn","AccessRoleArn",properties.AccessRoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.AccessRoleArn):void 0),ret.addPropertyResult("connectionArn","ConnectionArn",properties.ConnectionArn!=null?cfn_parse.FromCloudFormation.getString(properties.ConnectionArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnService_CodeConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("codeConfigurationValues",CfnService_CodeConfigurationValuesPropertyValidator)(properties.codeConfigurationValues)),errors.collect(cdk.propertyValidator("configurationSource",cdk.requiredValidator)(properties.configurationSource)),errors.collect(cdk.propertyValidator("configurationSource",cdk.validateString)(properties.configurationSource)),errors.wrap('supplied properties not correct for "CodeConfigurationProperty"')}function cfnServiceCodeConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnService_CodeConfigurationPropertyValidator(properties).assertSuccess(),{CodeConfigurationValues:cfnServiceCodeConfigurationValuesPropertyToCloudFormation(properties.codeConfigurationValues),ConfigurationSource:cdk.stringToCloudFormation(properties.configurationSource)}):properties}function CfnServiceCodeConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("codeConfigurationValues","CodeConfigurationValues",properties.CodeConfigurationValues!=null?CfnServiceCodeConfigurationValuesPropertyFromCloudFormation(properties.CodeConfigurationValues):void 0),ret.addPropertyResult("configurationSource","ConfigurationSource",cfn_parse.FromCloudFormation.getString(properties.ConfigurationSource)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnService_CodeConfigurationValuesPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("buildCommand",cdk.validateString)(properties.buildCommand)),errors.collect(cdk.propertyValidator("port",cdk.validateString)(properties.port)),errors.collect(cdk.propertyValidator("runtime",cdk.requiredValidator)(properties.runtime)),errors.collect(cdk.propertyValidator("runtime",cdk.validateString)(properties.runtime)),errors.collect(cdk.propertyValidator("runtimeEnvironmentVariables",cdk.listValidator(CfnService_KeyValuePairPropertyValidator))(properties.runtimeEnvironmentVariables)),errors.collect(cdk.propertyValidator("startCommand",cdk.validateString)(properties.startCommand)),errors.wrap('supplied properties not correct for "CodeConfigurationValuesProperty"')}function cfnServiceCodeConfigurationValuesPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnService_CodeConfigurationValuesPropertyValidator(properties).assertSuccess(),{BuildCommand:cdk.stringToCloudFormation(properties.buildCommand),Port:cdk.stringToCloudFormation(properties.port),Runtime:cdk.stringToCloudFormation(properties.runtime),RuntimeEnvironmentVariables:cdk.listMapper(cfnServiceKeyValuePairPropertyToCloudFormation)(properties.runtimeEnvironmentVariables),StartCommand:cdk.stringToCloudFormation(properties.startCommand)}):properties}function CfnServiceCodeConfigurationValuesPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("buildCommand","BuildCommand",properties.BuildCommand!=null?cfn_parse.FromCloudFormation.getString(properties.BuildCommand):void 0),ret.addPropertyResult("port","Port",properties.Port!=null?cfn_parse.FromCloudFormation.getString(properties.Port):void 0),ret.addPropertyResult("runtime","Runtime",cfn_parse.FromCloudFormation.getString(properties.Runtime)),ret.addPropertyResult("runtimeEnvironmentVariables","RuntimeEnvironmentVariables",properties.RuntimeEnvironmentVariables!=null?cfn_parse.FromCloudFormation.getArray(CfnServiceKeyValuePairPropertyFromCloudFormation)(properties.RuntimeEnvironmentVariables):void 0),ret.addPropertyResult("startCommand","StartCommand",properties.StartCommand!=null?cfn_parse.FromCloudFormation.getString(properties.StartCommand):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnService_CodeRepositoryPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("codeConfiguration",CfnService_CodeConfigurationPropertyValidator)(properties.codeConfiguration)),errors.collect(cdk.propertyValidator("repositoryUrl",cdk.requiredValidator)(properties.repositoryUrl)),errors.collect(cdk.propertyValidator("repositoryUrl",cdk.validateString)(properties.repositoryUrl)),errors.collect(cdk.propertyValidator("sourceCodeVersion",cdk.requiredValidator)(properties.sourceCodeVersion)),errors.collect(cdk.propertyValidator("sourceCodeVersion",CfnService_SourceCodeVersionPropertyValidator)(properties.sourceCodeVersion)),errors.wrap('supplied properties not correct for "CodeRepositoryProperty"')}function cfnServiceCodeRepositoryPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnService_CodeRepositoryPropertyValidator(properties).assertSuccess(),{CodeConfiguration:cfnServiceCodeConfigurationPropertyToCloudFormation(properties.codeConfiguration),RepositoryUrl:cdk.stringToCloudFormation(properties.repositoryUrl),SourceCodeVersion:cfnServiceSourceCodeVersionPropertyToCloudFormation(properties.sourceCodeVersion)}):properties}function CfnServiceCodeRepositoryPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("codeConfiguration","CodeConfiguration",properties.CodeConfiguration!=null?CfnServiceCodeConfigurationPropertyFromCloudFormation(properties.CodeConfiguration):void 0),ret.addPropertyResult("repositoryUrl","RepositoryUrl",cfn_parse.FromCloudFormation.getString(properties.RepositoryUrl)),ret.addPropertyResult("sourceCodeVersion","SourceCodeVersion",CfnServiceSourceCodeVersionPropertyFromCloudFormation(properties.SourceCodeVersion)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnService_EgressConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("egressType",cdk.requiredValidator)(properties.egressType)),errors.collect(cdk.propertyValidator("egressType",cdk.validateString)(properties.egressType)),errors.collect(cdk.propertyValidator("vpcConnectorArn",cdk.validateString)(properties.vpcConnectorArn)),errors.wrap('supplied properties not correct for "EgressConfigurationProperty"')}function cfnServiceEgressConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnService_EgressConfigurationPropertyValidator(properties).assertSuccess(),{EgressType:cdk.stringToCloudFormation(properties.egressType),VpcConnectorArn:cdk.stringToCloudFormation(properties.vpcConnectorArn)}):properties}function CfnServiceEgressConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("egressType","EgressType",cfn_parse.FromCloudFormation.getString(properties.EgressType)),ret.addPropertyResult("vpcConnectorArn","VpcConnectorArn",properties.VpcConnectorArn!=null?cfn_parse.FromCloudFormation.getString(properties.VpcConnectorArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnService_EncryptionConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("kmsKey",cdk.requiredValidator)(properties.kmsKey)),errors.collect(cdk.propertyValidator("kmsKey",cdk.validateString)(properties.kmsKey)),errors.wrap('supplied properties not correct for "EncryptionConfigurationProperty"')}function cfnServiceEncryptionConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnService_EncryptionConfigurationPropertyValidator(properties).assertSuccess(),{KmsKey:cdk.stringToCloudFormation(properties.kmsKey)}):properties}function CfnServiceEncryptionConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("kmsKey","KmsKey",cfn_parse.FromCloudFormation.getString(properties.KmsKey)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnService_HealthCheckConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("healthyThreshold",cdk.validateNumber)(properties.healthyThreshold)),errors.collect(cdk.propertyValidator("interval",cdk.validateNumber)(properties.interval)),errors.collect(cdk.propertyValidator("path",cdk.validateString)(properties.path)),errors.collect(cdk.propertyValidator("protocol",cdk.validateString)(properties.protocol)),errors.collect(cdk.propertyValidator("timeout",cdk.validateNumber)(properties.timeout)),errors.collect(cdk.propertyValidator("unhealthyThreshold",cdk.validateNumber)(properties.unhealthyThreshold)),errors.wrap('supplied properties not correct for "HealthCheckConfigurationProperty"')}function cfnServiceHealthCheckConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnService_HealthCheckConfigurationPropertyValidator(properties).assertSuccess(),{HealthyThreshold:cdk.numberToCloudFormation(properties.healthyThreshold),Interval:cdk.numberToCloudFormation(properties.interval),Path:cdk.stringToCloudFormation(properties.path),Protocol:cdk.stringToCloudFormation(properties.protocol),Timeout:cdk.numberToCloudFormation(properties.timeout),UnhealthyThreshold:cdk.numberToCloudFormation(properties.unhealthyThreshold)}):properties}function CfnServiceHealthCheckConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("healthyThreshold","HealthyThreshold",properties.HealthyThreshold!=null?cfn_parse.FromCloudFormation.getNumber(properties.HealthyThreshold):void 0),ret.addPropertyResult("interval","Interval",properties.Interval!=null?cfn_parse.FromCloudFormation.getNumber(properties.Interval):void 0),ret.addPropertyResult("path","Path",properties.Path!=null?cfn_parse.FromCloudFormation.getString(properties.Path):void 0),ret.addPropertyResult("protocol","Protocol",properties.Protocol!=null?cfn_parse.FromCloudFormation.getString(properties.Protocol):void 0),ret.addPropertyResult("timeout","Timeout",properties.Timeout!=null?cfn_parse.FromCloudFormation.getNumber(properties.Timeout):void 0),ret.addPropertyResult("unhealthyThreshold","UnhealthyThreshold",properties.UnhealthyThreshold!=null?cfn_parse.FromCloudFormation.getNumber(properties.UnhealthyThreshold):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnService_ImageConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("port",cdk.validateString)(properties.port)),errors.collect(cdk.propertyValidator("runtimeEnvironmentVariables",cdk.listValidator(CfnService_KeyValuePairPropertyValidator))(properties.runtimeEnvironmentVariables)),errors.collect(cdk.propertyValidator("startCommand",cdk.validateString)(properties.startCommand)),errors.wrap('supplied properties not correct for "ImageConfigurationProperty"')}function cfnServiceImageConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnService_ImageConfigurationPropertyValidator(properties).assertSuccess(),{Port:cdk.stringToCloudFormation(properties.port),RuntimeEnvironmentVariables:cdk.listMapper(cfnServiceKeyValuePairPropertyToCloudFormation)(properties.runtimeEnvironmentVariables),StartCommand:cdk.stringToCloudFormation(properties.startCommand)}):properties}function CfnServiceImageConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("port","Port",properties.Port!=null?cfn_parse.FromCloudFormation.getString(properties.Port):void 0),ret.addPropertyResult("runtimeEnvironmentVariables","RuntimeEnvironmentVariables",properties.RuntimeEnvironmentVariables!=null?cfn_parse.FromCloudFormation.getArray(CfnServiceKeyValuePairPropertyFromCloudFormation)(properties.RuntimeEnvironmentVariables):void 0),ret.addPropertyResult("startCommand","StartCommand",properties.StartCommand!=null?cfn_parse.FromCloudFormation.getString(properties.StartCommand):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnService_ImageRepositoryPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("imageConfiguration",CfnService_ImageConfigurationPropertyValidator)(properties.imageConfiguration)),errors.collect(cdk.propertyValidator("imageIdentifier",cdk.requiredValidator)(properties.imageIdentifier)),errors.collect(cdk.propertyValidator("imageIdentifier",cdk.validateString)(properties.imageIdentifier)),errors.collect(cdk.propertyValidator("imageRepositoryType",cdk.requiredValidator)(properties.imageRepositoryType)),errors.collect(cdk.propertyValidator("imageRepositoryType",cdk.validateString)(properties.imageRepositoryType)),errors.wrap('supplied properties not correct for "ImageRepositoryProperty"')}function cfnServiceImageRepositoryPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnService_ImageRepositoryPropertyValidator(properties).assertSuccess(),{ImageConfiguration:cfnServiceImageConfigurationPropertyToCloudFormation(properties.imageConfiguration),ImageIdentifier:cdk.stringToCloudFormation(properties.imageIdentifier),ImageRepositoryType:cdk.stringToCloudFormation(properties.imageRepositoryType)}):properties}function CfnServiceImageRepositoryPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("imageConfiguration","ImageConfiguration",properties.ImageConfiguration!=null?CfnServiceImageConfigurationPropertyFromCloudFormation(properties.ImageConfiguration):void 0),ret.addPropertyResult("imageIdentifier","ImageIdentifier",cfn_parse.FromCloudFormation.getString(properties.ImageIdentifier)),ret.addPropertyResult("imageRepositoryType","ImageRepositoryType",cfn_parse.FromCloudFormation.getString(properties.ImageRepositoryType)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnService_InstanceConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("cpu",cdk.validateString)(properties.cpu)),errors.collect(cdk.propertyValidator("instanceRoleArn",cdk.validateString)(properties.instanceRoleArn)),errors.collect(cdk.propertyValidator("memory",cdk.validateString)(properties.memory)),errors.wrap('supplied properties not correct for "InstanceConfigurationProperty"')}function cfnServiceInstanceConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnService_InstanceConfigurationPropertyValidator(properties).assertSuccess(),{Cpu:cdk.stringToCloudFormation(properties.cpu),InstanceRoleArn:cdk.stringToCloudFormation(properties.instanceRoleArn),Memory:cdk.stringToCloudFormation(properties.memory)}):properties}function CfnServiceInstanceConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("cpu","Cpu",properties.Cpu!=null?cfn_parse.FromCloudFormation.getString(properties.Cpu):void 0),ret.addPropertyResult("instanceRoleArn","InstanceRoleArn",properties.InstanceRoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.InstanceRoleArn):void 0),ret.addPropertyResult("memory","Memory",properties.Memory!=null?cfn_parse.FromCloudFormation.getString(properties.Memory):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnService_KeyValuePairPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("value",cdk.validateString)(properties.value)),errors.wrap('supplied properties not correct for "KeyValuePairProperty"')}function cfnServiceKeyValuePairPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnService_KeyValuePairPropertyValidator(properties).assertSuccess(),{Name:cdk.stringToCloudFormation(properties.name),Value:cdk.stringToCloudFormation(properties.value)}):properties}function CfnServiceKeyValuePairPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("value","Value",properties.Value!=null?cfn_parse.FromCloudFormation.getString(properties.Value):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnService_NetworkConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("egressConfiguration",cdk.requiredValidator)(properties.egressConfiguration)),errors.collect(cdk.propertyValidator("egressConfiguration",CfnService_EgressConfigurationPropertyValidator)(properties.egressConfiguration)),errors.wrap('supplied properties not correct for "NetworkConfigurationProperty"')}function cfnServiceNetworkConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnService_NetworkConfigurationPropertyValidator(properties).assertSuccess(),{EgressConfiguration:cfnServiceEgressConfigurationPropertyToCloudFormation(properties.egressConfiguration)}):properties}function CfnServiceNetworkConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("egressConfiguration","EgressConfiguration",CfnServiceEgressConfigurationPropertyFromCloudFormation(properties.EgressConfiguration)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnService_SourceCodeVersionPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("type",cdk.requiredValidator)(properties.type)),errors.collect(cdk.propertyValidator("type",cdk.validateString)(properties.type)),errors.collect(cdk.propertyValidator("value",cdk.requiredValidator)(properties.value)),errors.collect(cdk.propertyValidator("value",cdk.validateString)(properties.value)),errors.wrap('supplied properties not correct for "SourceCodeVersionProperty"')}function cfnServiceSourceCodeVersionPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnService_SourceCodeVersionPropertyValidator(properties).assertSuccess(),{Type:cdk.stringToCloudFormation(properties.type),Value:cdk.stringToCloudFormation(properties.value)}):properties}function CfnServiceSourceCodeVersionPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("type","Type",cfn_parse.FromCloudFormation.getString(properties.Type)),ret.addPropertyResult("value","Value",cfn_parse.FromCloudFormation.getString(properties.Value)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnService_SourceConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("authenticationConfiguration",CfnService_AuthenticationConfigurationPropertyValidator)(properties.authenticationConfiguration)),errors.collect(cdk.propertyValidator("autoDeploymentsEnabled",cdk.validateBoolean)(properties.autoDeploymentsEnabled)),errors.collect(cdk.propertyValidator("codeRepository",CfnService_CodeRepositoryPropertyValidator)(properties.codeRepository)),errors.collect(cdk.propertyValidator("imageRepository",CfnService_ImageRepositoryPropertyValidator)(properties.imageRepository)),errors.wrap('supplied properties not correct for "SourceConfigurationProperty"')}function cfnServiceSourceConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnService_SourceConfigurationPropertyValidator(properties).assertSuccess(),{AuthenticationConfiguration:cfnServiceAuthenticationConfigurationPropertyToCloudFormation(properties.authenticationConfiguration),AutoDeploymentsEnabled:cdk.booleanToCloudFormation(properties.autoDeploymentsEnabled),CodeRepository:cfnServiceCodeRepositoryPropertyToCloudFormation(properties.codeRepository),ImageRepository:cfnServiceImageRepositoryPropertyToCloudFormation(properties.imageRepository)}):properties}function CfnServiceSourceConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("authenticationConfiguration","AuthenticationConfiguration",properties.AuthenticationConfiguration!=null?CfnServiceAuthenticationConfigurationPropertyFromCloudFormation(properties.AuthenticationConfiguration):void 0),ret.addPropertyResult("autoDeploymentsEnabled","AutoDeploymentsEnabled",properties.AutoDeploymentsEnabled!=null?cfn_parse.FromCloudFormation.getBoolean(properties.AutoDeploymentsEnabled):void 0),ret.addPropertyResult("codeRepository","CodeRepository",properties.CodeRepository!=null?CfnServiceCodeRepositoryPropertyFromCloudFormation(properties.CodeRepository):void 0),ret.addPropertyResult("imageRepository","ImageRepository",properties.ImageRepository!=null?CfnServiceImageRepositoryPropertyFromCloudFormation(properties.ImageRepository):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnVpcConnectorPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("securityGroups",cdk.listValidator(cdk.validateString))(properties.securityGroups)),errors.collect(cdk.propertyValidator("subnets",cdk.requiredValidator)(properties.subnets)),errors.collect(cdk.propertyValidator("subnets",cdk.listValidator(cdk.validateString))(properties.subnets)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("vpcConnectorName",cdk.validateString)(properties.vpcConnectorName)),errors.wrap('supplied properties not correct for "CfnVpcConnectorProps"')}function cfnVpcConnectorPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnVpcConnectorPropsValidator(properties).assertSuccess(),{Subnets:cdk.listMapper(cdk.stringToCloudFormation)(properties.subnets),SecurityGroups:cdk.listMapper(cdk.stringToCloudFormation)(properties.securityGroups),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),VpcConnectorName:cdk.stringToCloudFormation(properties.vpcConnectorName)}):properties}function CfnVpcConnectorPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("subnets","Subnets",cfn_parse.FromCloudFormation.getStringArray(properties.Subnets)),ret.addPropertyResult("securityGroups","SecurityGroups",properties.SecurityGroups!=null?cfn_parse.FromCloudFormation.getStringArray(properties.SecurityGroups):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("vpcConnectorName","VpcConnectorName",properties.VpcConnectorName!=null?cfn_parse.FromCloudFormation.getString(properties.VpcConnectorName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnVpcConnector extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnVpcConnector.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_apprunner_CfnVpcConnectorProps(props),cdk.requireProperty(props,"subnets",this),this.attrVpcConnectorArn=cdk.Token.asString(this.getAtt("VpcConnectorArn")),this.attrVpcConnectorRevision=cdk.Token.asNumber(this.getAtt("VpcConnectorRevision")),this.subnets=props.subnets,this.securityGroups=props.securityGroups,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::AppRunner::VpcConnector",props.tags,{tagPropertyName:"tags"}),this.vpcConnectorName=props.vpcConnectorName}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnVpcConnectorPropsFromCloudFormation(resourceProperties),ret=new CfnVpcConnector(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnVpcConnector.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{subnets:this.subnets,securityGroups:this.securityGroups,tags:this.tags.renderTags(),vpcConnectorName:this.vpcConnectorName}}renderProperties(props){return cfnVpcConnectorPropsToCloudFormation(props)}}exports.CfnVpcConnector=CfnVpcConnector,_b=JSII_RTTI_SYMBOL_1,CfnVpcConnector[_b]={fqn:"aws-cdk-lib.aws_apprunner.CfnVpcConnector",version:"2.20.0"},CfnVpcConnector.CFN_RESOURCE_TYPE_NAME="AWS::AppRunner::VpcConnector";
//# sourceMappingURL=apprunner.generated.js.map
