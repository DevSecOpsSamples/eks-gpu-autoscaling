{
  "version": 3,
  "sources": ["apprunner.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-04-07T10:53:53.097Z\",\"fingerprint\":\"Z7sLiAE/QiU5CY0DQU1I3NNGxxYuf0FNv+Jqr7y/IuA=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n/**\n * Properties for defining a `CfnService`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html\n */\nexport interface CfnServiceProps {\n\n    /**\n     * The source to deploy to the App Runner service. It can be a code or an image repository.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-sourceconfiguration\n     */\n    readonly sourceConfiguration: CfnService.SourceConfigurationProperty | cdk.IResolvable;\n\n    /**\n     * The Amazon Resource Name (ARN) of an App Runner automatic scaling configuration resource that you want to associate with the App Runner service. If not provided, App Runner associates the latest revision of a default auto scaling configuration.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-autoscalingconfigurationarn\n     */\n    readonly autoScalingConfigurationArn?: string;\n\n    /**\n     * An optional custom encryption key that App Runner uses to encrypt the copy of your source repository that it maintains and your service logs. By default, App Runner uses an AWS managed key .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-encryptionconfiguration\n     */\n    readonly encryptionConfiguration?: CfnService.EncryptionConfigurationProperty | cdk.IResolvable;\n\n    /**\n     * The settings for the health check that AWS App Runner performs to monitor the health of the App Runner service.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-healthcheckconfiguration\n     */\n    readonly healthCheckConfiguration?: CfnService.HealthCheckConfigurationProperty | cdk.IResolvable;\n\n    /**\n     * The runtime configuration of instances (scaling units) of the App Runner service.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-instanceconfiguration\n     */\n    readonly instanceConfiguration?: CfnService.InstanceConfigurationProperty | cdk.IResolvable;\n\n    /**\n     * Configuration settings related to network traffic of the web application that the App Runner service runs.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-networkconfiguration\n     */\n    readonly networkConfiguration?: CfnService.NetworkConfigurationProperty | cdk.IResolvable;\n\n    /**\n     * A name for the App Runner service. It must be unique across all the running App Runner services in your AWS account in the AWS Region .\n     *\n     * If you don't specify a name, AWS CloudFormation generates a name for your Service.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-servicename\n     */\n    readonly serviceName?: string;\n\n    /**\n     * An optional list of metadata items that you can associate with the App Runner service resource. A tag is a key-value pair.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnServiceProps`\n *\n * @param properties - the TypeScript properties of a `CfnServiceProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnServicePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('autoScalingConfigurationArn', cdk.validateString)(properties.autoScalingConfigurationArn));\n    errors.collect(cdk.propertyValidator('encryptionConfiguration', CfnService_EncryptionConfigurationPropertyValidator)(properties.encryptionConfiguration));\n    errors.collect(cdk.propertyValidator('healthCheckConfiguration', CfnService_HealthCheckConfigurationPropertyValidator)(properties.healthCheckConfiguration));\n    errors.collect(cdk.propertyValidator('instanceConfiguration', CfnService_InstanceConfigurationPropertyValidator)(properties.instanceConfiguration));\n    errors.collect(cdk.propertyValidator('networkConfiguration', CfnService_NetworkConfigurationPropertyValidator)(properties.networkConfiguration));\n    errors.collect(cdk.propertyValidator('serviceName', cdk.validateString)(properties.serviceName));\n    errors.collect(cdk.propertyValidator('sourceConfiguration', cdk.requiredValidator)(properties.sourceConfiguration));\n    errors.collect(cdk.propertyValidator('sourceConfiguration', CfnService_SourceConfigurationPropertyValidator)(properties.sourceConfiguration));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnServiceProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AppRunner::Service` resource\n *\n * @param properties - the TypeScript properties of a `CfnServiceProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AppRunner::Service` resource.\n */\n// @ts-ignore TS6133\nfunction cfnServicePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnServicePropsValidator(properties).assertSuccess();\n    return {\n        SourceConfiguration: cfnServiceSourceConfigurationPropertyToCloudFormation(properties.sourceConfiguration),\n        AutoScalingConfigurationArn: cdk.stringToCloudFormation(properties.autoScalingConfigurationArn),\n        EncryptionConfiguration: cfnServiceEncryptionConfigurationPropertyToCloudFormation(properties.encryptionConfiguration),\n        HealthCheckConfiguration: cfnServiceHealthCheckConfigurationPropertyToCloudFormation(properties.healthCheckConfiguration),\n        InstanceConfiguration: cfnServiceInstanceConfigurationPropertyToCloudFormation(properties.instanceConfiguration),\n        NetworkConfiguration: cfnServiceNetworkConfigurationPropertyToCloudFormation(properties.networkConfiguration),\n        ServiceName: cdk.stringToCloudFormation(properties.serviceName),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnServicePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnServiceProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnServiceProps>();\n    ret.addPropertyResult('sourceConfiguration', 'SourceConfiguration', CfnServiceSourceConfigurationPropertyFromCloudFormation(properties.SourceConfiguration));\n    ret.addPropertyResult('autoScalingConfigurationArn', 'AutoScalingConfigurationArn', properties.AutoScalingConfigurationArn != null ? cfn_parse.FromCloudFormation.getString(properties.AutoScalingConfigurationArn) : undefined);\n    ret.addPropertyResult('encryptionConfiguration', 'EncryptionConfiguration', properties.EncryptionConfiguration != null ? CfnServiceEncryptionConfigurationPropertyFromCloudFormation(properties.EncryptionConfiguration) : undefined);\n    ret.addPropertyResult('healthCheckConfiguration', 'HealthCheckConfiguration', properties.HealthCheckConfiguration != null ? CfnServiceHealthCheckConfigurationPropertyFromCloudFormation(properties.HealthCheckConfiguration) : undefined);\n    ret.addPropertyResult('instanceConfiguration', 'InstanceConfiguration', properties.InstanceConfiguration != null ? CfnServiceInstanceConfigurationPropertyFromCloudFormation(properties.InstanceConfiguration) : undefined);\n    ret.addPropertyResult('networkConfiguration', 'NetworkConfiguration', properties.NetworkConfiguration != null ? CfnServiceNetworkConfigurationPropertyFromCloudFormation(properties.NetworkConfiguration) : undefined);\n    ret.addPropertyResult('serviceName', 'ServiceName', properties.ServiceName != null ? cfn_parse.FromCloudFormation.getString(properties.ServiceName) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::AppRunner::Service`\n *\n * Specify an AWS App Runner service by using the `AWS::AppRunner::Service` resource in an AWS CloudFormation template.\n *\n * The `AWS::AppRunner::Service` resource is an AWS App Runner resource type that specifies an App Runner service.\n *\n * @cloudformationResource AWS::AppRunner::Service\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html\n */\nexport class CfnService extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::AppRunner::Service\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnService {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnServicePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnService(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The Amazon Resource Name (ARN) of this service.\n     * @cloudformationAttribute ServiceArn\n     */\n    public readonly attrServiceArn: string;\n\n    /**\n     * An ID that App Runner generated for this service. It's unique within the AWS Region .\n     * @cloudformationAttribute ServiceId\n     */\n    public readonly attrServiceId: string;\n\n    /**\n     * A subdomain URL that App Runner generated for this service. You can use this URL to access your service web application.\n     * @cloudformationAttribute ServiceUrl\n     */\n    public readonly attrServiceUrl: string;\n\n    /**\n     * The current state of the App Runner service. These particular values mean the following.\n     *\n     * - `CREATE_FAILED` \u2013 The service failed to create. To troubleshoot this failure, read the failure events and logs, change any parameters that need to be fixed, and retry the call to create the service.\n     *\n     * The failed service isn't usable, and still counts towards your service quota. When you're done analyzing the failure, delete the service.\n     * - `DELETE_FAILED` \u2013 The service failed to delete and can't be successfully recovered. Retry the service deletion call to ensure that all related resources are removed.\n     * @cloudformationAttribute Status\n     */\n    public readonly attrStatus: string;\n\n    /**\n     * The source to deploy to the App Runner service. It can be a code or an image repository.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-sourceconfiguration\n     */\n    public sourceConfiguration: CfnService.SourceConfigurationProperty | cdk.IResolvable;\n\n    /**\n     * The Amazon Resource Name (ARN) of an App Runner automatic scaling configuration resource that you want to associate with the App Runner service. If not provided, App Runner associates the latest revision of a default auto scaling configuration.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-autoscalingconfigurationarn\n     */\n    public autoScalingConfigurationArn: string | undefined;\n\n    /**\n     * An optional custom encryption key that App Runner uses to encrypt the copy of your source repository that it maintains and your service logs. By default, App Runner uses an AWS managed key .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-encryptionconfiguration\n     */\n    public encryptionConfiguration: CfnService.EncryptionConfigurationProperty | cdk.IResolvable | undefined;\n\n    /**\n     * The settings for the health check that AWS App Runner performs to monitor the health of the App Runner service.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-healthcheckconfiguration\n     */\n    public healthCheckConfiguration: CfnService.HealthCheckConfigurationProperty | cdk.IResolvable | undefined;\n\n    /**\n     * The runtime configuration of instances (scaling units) of the App Runner service.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-instanceconfiguration\n     */\n    public instanceConfiguration: CfnService.InstanceConfigurationProperty | cdk.IResolvable | undefined;\n\n    /**\n     * Configuration settings related to network traffic of the web application that the App Runner service runs.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-networkconfiguration\n     */\n    public networkConfiguration: CfnService.NetworkConfigurationProperty | cdk.IResolvable | undefined;\n\n    /**\n     * A name for the App Runner service. It must be unique across all the running App Runner services in your AWS account in the AWS Region .\n     *\n     * If you don't specify a name, AWS CloudFormation generates a name for your Service.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-servicename\n     */\n    public serviceName: string | undefined;\n\n    /**\n     * An optional list of metadata items that you can associate with the App Runner service resource. A tag is a key-value pair.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::AppRunner::Service`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnServiceProps) {\n        super(scope, id, { type: CfnService.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'sourceConfiguration', this);\n        this.attrServiceArn = cdk.Token.asString(this.getAtt('ServiceArn'));\n        this.attrServiceId = cdk.Token.asString(this.getAtt('ServiceId'));\n        this.attrServiceUrl = cdk.Token.asString(this.getAtt('ServiceUrl'));\n        this.attrStatus = cdk.Token.asString(this.getAtt('Status'));\n\n        this.sourceConfiguration = props.sourceConfiguration;\n        this.autoScalingConfigurationArn = props.autoScalingConfigurationArn;\n        this.encryptionConfiguration = props.encryptionConfiguration;\n        this.healthCheckConfiguration = props.healthCheckConfiguration;\n        this.instanceConfiguration = props.instanceConfiguration;\n        this.networkConfiguration = props.networkConfiguration;\n        this.serviceName = props.serviceName;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::AppRunner::Service\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnService.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            sourceConfiguration: this.sourceConfiguration,\n            autoScalingConfigurationArn: this.autoScalingConfigurationArn,\n            encryptionConfiguration: this.encryptionConfiguration,\n            healthCheckConfiguration: this.healthCheckConfiguration,\n            instanceConfiguration: this.instanceConfiguration,\n            networkConfiguration: this.networkConfiguration,\n            serviceName: this.serviceName,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnServicePropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnService {\n    /**\n     * Describes resources needed to authenticate access to some source repositories. The specific resource depends on the repository provider.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-authenticationconfiguration.html\n     */\n    export interface AuthenticationConfigurationProperty {\n        /**\n         * The Amazon Resource Name (ARN) of the IAM role that grants the App Runner service access to a source repository. It's required for ECR image repositories (but not for ECR Public repositories).\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-authenticationconfiguration.html#cfn-apprunner-service-authenticationconfiguration-accessrolearn\n         */\n        readonly accessRoleArn?: string;\n        /**\n         * The Amazon Resource Name (ARN) of the App Runner connection that enables the App Runner service to connect to a source repository. It's required for GitHub code repositories.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-authenticationconfiguration.html#cfn-apprunner-service-authenticationconfiguration-connectionarn\n         */\n        readonly connectionArn?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AuthenticationConfigurationProperty`\n *\n * @param properties - the TypeScript properties of a `AuthenticationConfigurationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnService_AuthenticationConfigurationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('accessRoleArn', cdk.validateString)(properties.accessRoleArn));\n    errors.collect(cdk.propertyValidator('connectionArn', cdk.validateString)(properties.connectionArn));\n    return errors.wrap('supplied properties not correct for \"AuthenticationConfigurationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AppRunner::Service.AuthenticationConfiguration` resource\n *\n * @param properties - the TypeScript properties of a `AuthenticationConfigurationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AppRunner::Service.AuthenticationConfiguration` resource.\n */\n// @ts-ignore TS6133\nfunction cfnServiceAuthenticationConfigurationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnService_AuthenticationConfigurationPropertyValidator(properties).assertSuccess();\n    return {\n        AccessRoleArn: cdk.stringToCloudFormation(properties.accessRoleArn),\n        ConnectionArn: cdk.stringToCloudFormation(properties.connectionArn),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnServiceAuthenticationConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnService.AuthenticationConfigurationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnService.AuthenticationConfigurationProperty>();\n    ret.addPropertyResult('accessRoleArn', 'AccessRoleArn', properties.AccessRoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.AccessRoleArn) : undefined);\n    ret.addPropertyResult('connectionArn', 'ConnectionArn', properties.ConnectionArn != null ? cfn_parse.FromCloudFormation.getString(properties.ConnectionArn) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnService {\n    /**\n     * Describes the configuration that AWS App Runner uses to build and run an App Runner service from a source code repository.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-codeconfiguration.html\n     */\n    export interface CodeConfigurationProperty {\n        /**\n         * The basic configuration for building and running the App Runner service. Use it to quickly launch an App Runner service without providing a `apprunner.yaml` file in the source code repository (or ignoring the file if it exists).\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-codeconfiguration.html#cfn-apprunner-service-codeconfiguration-codeconfigurationvalues\n         */\n        readonly codeConfigurationValues?: CfnService.CodeConfigurationValuesProperty | cdk.IResolvable;\n        /**\n         * The source of the App Runner configuration. Values are interpreted as follows:\n         *\n         * - `REPOSITORY` \u2013 App Runner reads configuration values from the `apprunner.yaml` file in the source code repository and ignores `CodeConfigurationValues` .\n         * - `API` \u2013 App Runner uses configuration values provided in `CodeConfigurationValues` and ignores the `apprunner.yaml` file in the source code repository.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-codeconfiguration.html#cfn-apprunner-service-codeconfiguration-configurationsource\n         */\n        readonly configurationSource: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `CodeConfigurationProperty`\n *\n * @param properties - the TypeScript properties of a `CodeConfigurationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnService_CodeConfigurationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('codeConfigurationValues', CfnService_CodeConfigurationValuesPropertyValidator)(properties.codeConfigurationValues));\n    errors.collect(cdk.propertyValidator('configurationSource', cdk.requiredValidator)(properties.configurationSource));\n    errors.collect(cdk.propertyValidator('configurationSource', cdk.validateString)(properties.configurationSource));\n    return errors.wrap('supplied properties not correct for \"CodeConfigurationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AppRunner::Service.CodeConfiguration` resource\n *\n * @param properties - the TypeScript properties of a `CodeConfigurationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AppRunner::Service.CodeConfiguration` resource.\n */\n// @ts-ignore TS6133\nfunction cfnServiceCodeConfigurationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnService_CodeConfigurationPropertyValidator(properties).assertSuccess();\n    return {\n        CodeConfigurationValues: cfnServiceCodeConfigurationValuesPropertyToCloudFormation(properties.codeConfigurationValues),\n        ConfigurationSource: cdk.stringToCloudFormation(properties.configurationSource),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnServiceCodeConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnService.CodeConfigurationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnService.CodeConfigurationProperty>();\n    ret.addPropertyResult('codeConfigurationValues', 'CodeConfigurationValues', properties.CodeConfigurationValues != null ? CfnServiceCodeConfigurationValuesPropertyFromCloudFormation(properties.CodeConfigurationValues) : undefined);\n    ret.addPropertyResult('configurationSource', 'ConfigurationSource', cfn_parse.FromCloudFormation.getString(properties.ConfigurationSource));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnService {\n    /**\n     * Describes the basic configuration needed for building and running an AWS App Runner service. This type doesn't support the full set of possible configuration options. Fur full configuration capabilities, use a `apprunner.yaml` file in the source code repository.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-codeconfigurationvalues.html\n     */\n    export interface CodeConfigurationValuesProperty {\n        /**\n         * The command App Runner runs to build your application.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-codeconfigurationvalues.html#cfn-apprunner-service-codeconfigurationvalues-buildcommand\n         */\n        readonly buildCommand?: string;\n        /**\n         * The port that your application listens to in the container.\n         *\n         * Default: `8080`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-codeconfigurationvalues.html#cfn-apprunner-service-codeconfigurationvalues-port\n         */\n        readonly port?: string;\n        /**\n         * A runtime environment type for building and running an App Runner service. It represents a programming language runtime.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-codeconfigurationvalues.html#cfn-apprunner-service-codeconfigurationvalues-runtime\n         */\n        readonly runtime: string;\n        /**\n         * The environment variables that are available to your running App Runner service. An array of key-value pairs. Keys with a prefix of `AWSAPPRUNNER` are reserved for system use and aren't valid.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-codeconfigurationvalues.html#cfn-apprunner-service-codeconfigurationvalues-runtimeenvironmentvariables\n         */\n        readonly runtimeEnvironmentVariables?: Array<CfnService.KeyValuePairProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * The command App Runner runs to start your application.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-codeconfigurationvalues.html#cfn-apprunner-service-codeconfigurationvalues-startcommand\n         */\n        readonly startCommand?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `CodeConfigurationValuesProperty`\n *\n * @param properties - the TypeScript properties of a `CodeConfigurationValuesProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnService_CodeConfigurationValuesPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('buildCommand', cdk.validateString)(properties.buildCommand));\n    errors.collect(cdk.propertyValidator('port', cdk.validateString)(properties.port));\n    errors.collect(cdk.propertyValidator('runtime', cdk.requiredValidator)(properties.runtime));\n    errors.collect(cdk.propertyValidator('runtime', cdk.validateString)(properties.runtime));\n    errors.collect(cdk.propertyValidator('runtimeEnvironmentVariables', cdk.listValidator(CfnService_KeyValuePairPropertyValidator))(properties.runtimeEnvironmentVariables));\n    errors.collect(cdk.propertyValidator('startCommand', cdk.validateString)(properties.startCommand));\n    return errors.wrap('supplied properties not correct for \"CodeConfigurationValuesProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AppRunner::Service.CodeConfigurationValues` resource\n *\n * @param properties - the TypeScript properties of a `CodeConfigurationValuesProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AppRunner::Service.CodeConfigurationValues` resource.\n */\n// @ts-ignore TS6133\nfunction cfnServiceCodeConfigurationValuesPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnService_CodeConfigurationValuesPropertyValidator(properties).assertSuccess();\n    return {\n        BuildCommand: cdk.stringToCloudFormation(properties.buildCommand),\n        Port: cdk.stringToCloudFormation(properties.port),\n        Runtime: cdk.stringToCloudFormation(properties.runtime),\n        RuntimeEnvironmentVariables: cdk.listMapper(cfnServiceKeyValuePairPropertyToCloudFormation)(properties.runtimeEnvironmentVariables),\n        StartCommand: cdk.stringToCloudFormation(properties.startCommand),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnServiceCodeConfigurationValuesPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnService.CodeConfigurationValuesProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnService.CodeConfigurationValuesProperty>();\n    ret.addPropertyResult('buildCommand', 'BuildCommand', properties.BuildCommand != null ? cfn_parse.FromCloudFormation.getString(properties.BuildCommand) : undefined);\n    ret.addPropertyResult('port', 'Port', properties.Port != null ? cfn_parse.FromCloudFormation.getString(properties.Port) : undefined);\n    ret.addPropertyResult('runtime', 'Runtime', cfn_parse.FromCloudFormation.getString(properties.Runtime));\n    ret.addPropertyResult('runtimeEnvironmentVariables', 'RuntimeEnvironmentVariables', properties.RuntimeEnvironmentVariables != null ? cfn_parse.FromCloudFormation.getArray(CfnServiceKeyValuePairPropertyFromCloudFormation)(properties.RuntimeEnvironmentVariables) : undefined);\n    ret.addPropertyResult('startCommand', 'StartCommand', properties.StartCommand != null ? cfn_parse.FromCloudFormation.getString(properties.StartCommand) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnService {\n    /**\n     * Describes a source code repository.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-coderepository.html\n     */\n    export interface CodeRepositoryProperty {\n        /**\n         * Configuration for building and running the service from a source code repository.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-coderepository.html#cfn-apprunner-service-coderepository-codeconfiguration\n         */\n        readonly codeConfiguration?: CfnService.CodeConfigurationProperty | cdk.IResolvable;\n        /**\n         * The location of the repository that contains the source code.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-coderepository.html#cfn-apprunner-service-coderepository-repositoryurl\n         */\n        readonly repositoryUrl: string;\n        /**\n         * The version that should be used within the source code repository.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-coderepository.html#cfn-apprunner-service-coderepository-sourcecodeversion\n         */\n        readonly sourceCodeVersion: CfnService.SourceCodeVersionProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `CodeRepositoryProperty`\n *\n * @param properties - the TypeScript properties of a `CodeRepositoryProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnService_CodeRepositoryPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('codeConfiguration', CfnService_CodeConfigurationPropertyValidator)(properties.codeConfiguration));\n    errors.collect(cdk.propertyValidator('repositoryUrl', cdk.requiredValidator)(properties.repositoryUrl));\n    errors.collect(cdk.propertyValidator('repositoryUrl', cdk.validateString)(properties.repositoryUrl));\n    errors.collect(cdk.propertyValidator('sourceCodeVersion', cdk.requiredValidator)(properties.sourceCodeVersion));\n    errors.collect(cdk.propertyValidator('sourceCodeVersion', CfnService_SourceCodeVersionPropertyValidator)(properties.sourceCodeVersion));\n    return errors.wrap('supplied properties not correct for \"CodeRepositoryProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AppRunner::Service.CodeRepository` resource\n *\n * @param properties - the TypeScript properties of a `CodeRepositoryProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AppRunner::Service.CodeRepository` resource.\n */\n// @ts-ignore TS6133\nfunction cfnServiceCodeRepositoryPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnService_CodeRepositoryPropertyValidator(properties).assertSuccess();\n    return {\n        CodeConfiguration: cfnServiceCodeConfigurationPropertyToCloudFormation(properties.codeConfiguration),\n        RepositoryUrl: cdk.stringToCloudFormation(properties.repositoryUrl),\n        SourceCodeVersion: cfnServiceSourceCodeVersionPropertyToCloudFormation(properties.sourceCodeVersion),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnServiceCodeRepositoryPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnService.CodeRepositoryProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnService.CodeRepositoryProperty>();\n    ret.addPropertyResult('codeConfiguration', 'CodeConfiguration', properties.CodeConfiguration != null ? CfnServiceCodeConfigurationPropertyFromCloudFormation(properties.CodeConfiguration) : undefined);\n    ret.addPropertyResult('repositoryUrl', 'RepositoryUrl', cfn_parse.FromCloudFormation.getString(properties.RepositoryUrl));\n    ret.addPropertyResult('sourceCodeVersion', 'SourceCodeVersion', CfnServiceSourceCodeVersionPropertyFromCloudFormation(properties.SourceCodeVersion));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnService {\n    /**\n     * Describes configuration settings related to outbound network traffic of an AWS App Runner service.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-egressconfiguration.html\n     */\n    export interface EgressConfigurationProperty {\n        /**\n         * The type of egress configuration.\n         *\n         * Set to `DEFAULT` for access to resources hosted on public networks.\n         *\n         * Set to `VPC` to associate your service to a custom VPC specified by `VpcConnectorArn` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-egressconfiguration.html#cfn-apprunner-service-egressconfiguration-egresstype\n         */\n        readonly egressType: string;\n        /**\n         * The Amazon Resource Name (ARN) of the App Runner VPC connector that you want to associate with your App Runner service. Only valid when `EgressType = VPC` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-egressconfiguration.html#cfn-apprunner-service-egressconfiguration-vpcconnectorarn\n         */\n        readonly vpcConnectorArn?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `EgressConfigurationProperty`\n *\n * @param properties - the TypeScript properties of a `EgressConfigurationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnService_EgressConfigurationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('egressType', cdk.requiredValidator)(properties.egressType));\n    errors.collect(cdk.propertyValidator('egressType', cdk.validateString)(properties.egressType));\n    errors.collect(cdk.propertyValidator('vpcConnectorArn', cdk.validateString)(properties.vpcConnectorArn));\n    return errors.wrap('supplied properties not correct for \"EgressConfigurationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AppRunner::Service.EgressConfiguration` resource\n *\n * @param properties - the TypeScript properties of a `EgressConfigurationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AppRunner::Service.EgressConfiguration` resource.\n */\n// @ts-ignore TS6133\nfunction cfnServiceEgressConfigurationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnService_EgressConfigurationPropertyValidator(properties).assertSuccess();\n    return {\n        EgressType: cdk.stringToCloudFormation(properties.egressType),\n        VpcConnectorArn: cdk.stringToCloudFormation(properties.vpcConnectorArn),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnServiceEgressConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnService.EgressConfigurationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnService.EgressConfigurationProperty>();\n    ret.addPropertyResult('egressType', 'EgressType', cfn_parse.FromCloudFormation.getString(properties.EgressType));\n    ret.addPropertyResult('vpcConnectorArn', 'VpcConnectorArn', properties.VpcConnectorArn != null ? cfn_parse.FromCloudFormation.getString(properties.VpcConnectorArn) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnService {\n    /**\n     * Describes a custom encryption key that AWS App Runner uses to encrypt copies of the source repository and service logs.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-encryptionconfiguration.html\n     */\n    export interface EncryptionConfigurationProperty {\n        /**\n         * The ARN of the KMS key that's used for encryption.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-encryptionconfiguration.html#cfn-apprunner-service-encryptionconfiguration-kmskey\n         */\n        readonly kmsKey: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `EncryptionConfigurationProperty`\n *\n * @param properties - the TypeScript properties of a `EncryptionConfigurationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnService_EncryptionConfigurationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('kmsKey', cdk.requiredValidator)(properties.kmsKey));\n    errors.collect(cdk.propertyValidator('kmsKey', cdk.validateString)(properties.kmsKey));\n    return errors.wrap('supplied properties not correct for \"EncryptionConfigurationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AppRunner::Service.EncryptionConfiguration` resource\n *\n * @param properties - the TypeScript properties of a `EncryptionConfigurationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AppRunner::Service.EncryptionConfiguration` resource.\n */\n// @ts-ignore TS6133\nfunction cfnServiceEncryptionConfigurationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnService_EncryptionConfigurationPropertyValidator(properties).assertSuccess();\n    return {\n        KmsKey: cdk.stringToCloudFormation(properties.kmsKey),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnServiceEncryptionConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnService.EncryptionConfigurationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnService.EncryptionConfigurationProperty>();\n    ret.addPropertyResult('kmsKey', 'KmsKey', cfn_parse.FromCloudFormation.getString(properties.KmsKey));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnService {\n    /**\n     * Describes the settings for the health check that AWS App Runner performs to monitor the health of a service.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-healthcheckconfiguration.html\n     */\n    export interface HealthCheckConfigurationProperty {\n        /**\n         * The number of consecutive checks that must succeed before App Runner decides that the service is healthy.\n         *\n         * Default: `1`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-healthcheckconfiguration.html#cfn-apprunner-service-healthcheckconfiguration-healthythreshold\n         */\n        readonly healthyThreshold?: number;\n        /**\n         * The time interval, in seconds, between health checks.\n         *\n         * Default: `5`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-healthcheckconfiguration.html#cfn-apprunner-service-healthcheckconfiguration-interval\n         */\n        readonly interval?: number;\n        /**\n         * The URL that health check requests are sent to.\n         *\n         * `Path` is only applicable when you set `Protocol` to `HTTP` .\n         *\n         * Default: `\"/\"`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-healthcheckconfiguration.html#cfn-apprunner-service-healthcheckconfiguration-path\n         */\n        readonly path?: string;\n        /**\n         * The IP protocol that App Runner uses to perform health checks for your service.\n         *\n         * If you set `Protocol` to `HTTP` , App Runner sends health check requests to the HTTP path specified by `Path` .\n         *\n         * Default: `TCP`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-healthcheckconfiguration.html#cfn-apprunner-service-healthcheckconfiguration-protocol\n         */\n        readonly protocol?: string;\n        /**\n         * The time, in seconds, to wait for a health check response before deciding it failed.\n         *\n         * Default: `2`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-healthcheckconfiguration.html#cfn-apprunner-service-healthcheckconfiguration-timeout\n         */\n        readonly timeout?: number;\n        /**\n         * The number of consecutive checks that must fail before App Runner decides that the service is unhealthy.\n         *\n         * Default: `5`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-healthcheckconfiguration.html#cfn-apprunner-service-healthcheckconfiguration-unhealthythreshold\n         */\n        readonly unhealthyThreshold?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `HealthCheckConfigurationProperty`\n *\n * @param properties - the TypeScript properties of a `HealthCheckConfigurationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnService_HealthCheckConfigurationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('healthyThreshold', cdk.validateNumber)(properties.healthyThreshold));\n    errors.collect(cdk.propertyValidator('interval', cdk.validateNumber)(properties.interval));\n    errors.collect(cdk.propertyValidator('path', cdk.validateString)(properties.path));\n    errors.collect(cdk.propertyValidator('protocol', cdk.validateString)(properties.protocol));\n    errors.collect(cdk.propertyValidator('timeout', cdk.validateNumber)(properties.timeout));\n    errors.collect(cdk.propertyValidator('unhealthyThreshold', cdk.validateNumber)(properties.unhealthyThreshold));\n    return errors.wrap('supplied properties not correct for \"HealthCheckConfigurationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AppRunner::Service.HealthCheckConfiguration` resource\n *\n * @param properties - the TypeScript properties of a `HealthCheckConfigurationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AppRunner::Service.HealthCheckConfiguration` resource.\n */\n// @ts-ignore TS6133\nfunction cfnServiceHealthCheckConfigurationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnService_HealthCheckConfigurationPropertyValidator(properties).assertSuccess();\n    return {\n        HealthyThreshold: cdk.numberToCloudFormation(properties.healthyThreshold),\n        Interval: cdk.numberToCloudFormation(properties.interval),\n        Path: cdk.stringToCloudFormation(properties.path),\n        Protocol: cdk.stringToCloudFormation(properties.protocol),\n        Timeout: cdk.numberToCloudFormation(properties.timeout),\n        UnhealthyThreshold: cdk.numberToCloudFormation(properties.unhealthyThreshold),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnServiceHealthCheckConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnService.HealthCheckConfigurationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnService.HealthCheckConfigurationProperty>();\n    ret.addPropertyResult('healthyThreshold', 'HealthyThreshold', properties.HealthyThreshold != null ? cfn_parse.FromCloudFormation.getNumber(properties.HealthyThreshold) : undefined);\n    ret.addPropertyResult('interval', 'Interval', properties.Interval != null ? cfn_parse.FromCloudFormation.getNumber(properties.Interval) : undefined);\n    ret.addPropertyResult('path', 'Path', properties.Path != null ? cfn_parse.FromCloudFormation.getString(properties.Path) : undefined);\n    ret.addPropertyResult('protocol', 'Protocol', properties.Protocol != null ? cfn_parse.FromCloudFormation.getString(properties.Protocol) : undefined);\n    ret.addPropertyResult('timeout', 'Timeout', properties.Timeout != null ? cfn_parse.FromCloudFormation.getNumber(properties.Timeout) : undefined);\n    ret.addPropertyResult('unhealthyThreshold', 'UnhealthyThreshold', properties.UnhealthyThreshold != null ? cfn_parse.FromCloudFormation.getNumber(properties.UnhealthyThreshold) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnService {\n    /**\n     * Describes the configuration that AWS App Runner uses to run an App Runner service using an image pulled from a source image repository.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-imageconfiguration.html\n     */\n    export interface ImageConfigurationProperty {\n        /**\n         * The port that your application listens to in the container.\n         *\n         * Default: `8080`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-imageconfiguration.html#cfn-apprunner-service-imageconfiguration-port\n         */\n        readonly port?: string;\n        /**\n         * Environment variables that are available to your running App Runner service. An array of key-value pairs. Keys with a prefix of `AWSAPPRUNNER` are reserved for system use and aren't valid.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-imageconfiguration.html#cfn-apprunner-service-imageconfiguration-runtimeenvironmentvariables\n         */\n        readonly runtimeEnvironmentVariables?: Array<CfnService.KeyValuePairProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * An optional command that App Runner runs to start the application in the source image. If specified, this command overrides the Docker image\u2019s default start command.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-imageconfiguration.html#cfn-apprunner-service-imageconfiguration-startcommand\n         */\n        readonly startCommand?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ImageConfigurationProperty`\n *\n * @param properties - the TypeScript properties of a `ImageConfigurationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnService_ImageConfigurationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('port', cdk.validateString)(properties.port));\n    errors.collect(cdk.propertyValidator('runtimeEnvironmentVariables', cdk.listValidator(CfnService_KeyValuePairPropertyValidator))(properties.runtimeEnvironmentVariables));\n    errors.collect(cdk.propertyValidator('startCommand', cdk.validateString)(properties.startCommand));\n    return errors.wrap('supplied properties not correct for \"ImageConfigurationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AppRunner::Service.ImageConfiguration` resource\n *\n * @param properties - the TypeScript properties of a `ImageConfigurationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AppRunner::Service.ImageConfiguration` resource.\n */\n// @ts-ignore TS6133\nfunction cfnServiceImageConfigurationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnService_ImageConfigurationPropertyValidator(properties).assertSuccess();\n    return {\n        Port: cdk.stringToCloudFormation(properties.port),\n        RuntimeEnvironmentVariables: cdk.listMapper(cfnServiceKeyValuePairPropertyToCloudFormation)(properties.runtimeEnvironmentVariables),\n        StartCommand: cdk.stringToCloudFormation(properties.startCommand),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnServiceImageConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnService.ImageConfigurationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnService.ImageConfigurationProperty>();\n    ret.addPropertyResult('port', 'Port', properties.Port != null ? cfn_parse.FromCloudFormation.getString(properties.Port) : undefined);\n    ret.addPropertyResult('runtimeEnvironmentVariables', 'RuntimeEnvironmentVariables', properties.RuntimeEnvironmentVariables != null ? cfn_parse.FromCloudFormation.getArray(CfnServiceKeyValuePairPropertyFromCloudFormation)(properties.RuntimeEnvironmentVariables) : undefined);\n    ret.addPropertyResult('startCommand', 'StartCommand', properties.StartCommand != null ? cfn_parse.FromCloudFormation.getString(properties.StartCommand) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnService {\n    /**\n     * Describes a source image repository.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-imagerepository.html\n     */\n    export interface ImageRepositoryProperty {\n        /**\n         * Configuration for running the identified image.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-imagerepository.html#cfn-apprunner-service-imagerepository-imageconfiguration\n         */\n        readonly imageConfiguration?: CfnService.ImageConfigurationProperty | cdk.IResolvable;\n        /**\n         * The identifier of an image.\n         *\n         * For an image in Amazon Elastic Container Registry (Amazon ECR), this is an image name. For the image name format, see [Pulling an image](https://docs.aws.amazon.com/AmazonECR/latest/userguide/docker-pull-ecr-image.html) in the *Amazon ECR User Guide* .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-imagerepository.html#cfn-apprunner-service-imagerepository-imageidentifier\n         */\n        readonly imageIdentifier: string;\n        /**\n         * The type of the image repository. This reflects the repository provider and whether the repository is private or public.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-imagerepository.html#cfn-apprunner-service-imagerepository-imagerepositorytype\n         */\n        readonly imageRepositoryType: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ImageRepositoryProperty`\n *\n * @param properties - the TypeScript properties of a `ImageRepositoryProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnService_ImageRepositoryPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('imageConfiguration', CfnService_ImageConfigurationPropertyValidator)(properties.imageConfiguration));\n    errors.collect(cdk.propertyValidator('imageIdentifier', cdk.requiredValidator)(properties.imageIdentifier));\n    errors.collect(cdk.propertyValidator('imageIdentifier', cdk.validateString)(properties.imageIdentifier));\n    errors.collect(cdk.propertyValidator('imageRepositoryType', cdk.requiredValidator)(properties.imageRepositoryType));\n    errors.collect(cdk.propertyValidator('imageRepositoryType', cdk.validateString)(properties.imageRepositoryType));\n    return errors.wrap('supplied properties not correct for \"ImageRepositoryProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AppRunner::Service.ImageRepository` resource\n *\n * @param properties - the TypeScript properties of a `ImageRepositoryProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AppRunner::Service.ImageRepository` resource.\n */\n// @ts-ignore TS6133\nfunction cfnServiceImageRepositoryPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnService_ImageRepositoryPropertyValidator(properties).assertSuccess();\n    return {\n        ImageConfiguration: cfnServiceImageConfigurationPropertyToCloudFormation(properties.imageConfiguration),\n        ImageIdentifier: cdk.stringToCloudFormation(properties.imageIdentifier),\n        ImageRepositoryType: cdk.stringToCloudFormation(properties.imageRepositoryType),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnServiceImageRepositoryPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnService.ImageRepositoryProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnService.ImageRepositoryProperty>();\n    ret.addPropertyResult('imageConfiguration', 'ImageConfiguration', properties.ImageConfiguration != null ? CfnServiceImageConfigurationPropertyFromCloudFormation(properties.ImageConfiguration) : undefined);\n    ret.addPropertyResult('imageIdentifier', 'ImageIdentifier', cfn_parse.FromCloudFormation.getString(properties.ImageIdentifier));\n    ret.addPropertyResult('imageRepositoryType', 'ImageRepositoryType', cfn_parse.FromCloudFormation.getString(properties.ImageRepositoryType));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnService {\n    /**\n     * Describes the runtime configuration of an AWS App Runner service instance (scaling unit).\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-instanceconfiguration.html\n     */\n    export interface InstanceConfigurationProperty {\n        /**\n         * The number of CPU units reserved for each instance of your App Runner service.\n         *\n         * Default: `1 vCPU`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-instanceconfiguration.html#cfn-apprunner-service-instanceconfiguration-cpu\n         */\n        readonly cpu?: string;\n        /**\n         * The Amazon Resource Name (ARN) of an IAM role that provides permissions to your App Runner service. These are permissions that your code needs when it calls any AWS APIs.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-instanceconfiguration.html#cfn-apprunner-service-instanceconfiguration-instancerolearn\n         */\n        readonly instanceRoleArn?: string;\n        /**\n         * The amount of memory, in MB or GB, reserved for each instance of your App Runner service.\n         *\n         * Default: `2 GB`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-instanceconfiguration.html#cfn-apprunner-service-instanceconfiguration-memory\n         */\n        readonly memory?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `InstanceConfigurationProperty`\n *\n * @param properties - the TypeScript properties of a `InstanceConfigurationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnService_InstanceConfigurationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('cpu', cdk.validateString)(properties.cpu));\n    errors.collect(cdk.propertyValidator('instanceRoleArn', cdk.validateString)(properties.instanceRoleArn));\n    errors.collect(cdk.propertyValidator('memory', cdk.validateString)(properties.memory));\n    return errors.wrap('supplied properties not correct for \"InstanceConfigurationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AppRunner::Service.InstanceConfiguration` resource\n *\n * @param properties - the TypeScript properties of a `InstanceConfigurationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AppRunner::Service.InstanceConfiguration` resource.\n */\n// @ts-ignore TS6133\nfunction cfnServiceInstanceConfigurationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnService_InstanceConfigurationPropertyValidator(properties).assertSuccess();\n    return {\n        Cpu: cdk.stringToCloudFormation(properties.cpu),\n        InstanceRoleArn: cdk.stringToCloudFormation(properties.instanceRoleArn),\n        Memory: cdk.stringToCloudFormation(properties.memory),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnServiceInstanceConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnService.InstanceConfigurationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnService.InstanceConfigurationProperty>();\n    ret.addPropertyResult('cpu', 'Cpu', properties.Cpu != null ? cfn_parse.FromCloudFormation.getString(properties.Cpu) : undefined);\n    ret.addPropertyResult('instanceRoleArn', 'InstanceRoleArn', properties.InstanceRoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.InstanceRoleArn) : undefined);\n    ret.addPropertyResult('memory', 'Memory', properties.Memory != null ? cfn_parse.FromCloudFormation.getString(properties.Memory) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnService {\n    /**\n     * Describes a key-value pair, which is a string-to-string mapping.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-keyvaluepair.html\n     */\n    export interface KeyValuePairProperty {\n        /**\n         * The key name string to map to a value.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-keyvaluepair.html#cfn-apprunner-service-keyvaluepair-name\n         */\n        readonly name?: string;\n        /**\n         * The value string to which the key name is mapped.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-keyvaluepair.html#cfn-apprunner-service-keyvaluepair-value\n         */\n        readonly value?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `KeyValuePairProperty`\n *\n * @param properties - the TypeScript properties of a `KeyValuePairProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnService_KeyValuePairPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('value', cdk.validateString)(properties.value));\n    return errors.wrap('supplied properties not correct for \"KeyValuePairProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AppRunner::Service.KeyValuePair` resource\n *\n * @param properties - the TypeScript properties of a `KeyValuePairProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AppRunner::Service.KeyValuePair` resource.\n */\n// @ts-ignore TS6133\nfunction cfnServiceKeyValuePairPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnService_KeyValuePairPropertyValidator(properties).assertSuccess();\n    return {\n        Name: cdk.stringToCloudFormation(properties.name),\n        Value: cdk.stringToCloudFormation(properties.value),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnServiceKeyValuePairPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnService.KeyValuePairProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnService.KeyValuePairProperty>();\n    ret.addPropertyResult('name', 'Name', properties.Name != null ? cfn_parse.FromCloudFormation.getString(properties.Name) : undefined);\n    ret.addPropertyResult('value', 'Value', properties.Value != null ? cfn_parse.FromCloudFormation.getString(properties.Value) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnService {\n    /**\n     * Describes configuration settings related to network traffic of an AWS App Runner service. Consists of embedded objects for each configurable network feature.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-networkconfiguration.html\n     */\n    export interface NetworkConfigurationProperty {\n        /**\n         * Network configuration settings for outbound message traffic.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-networkconfiguration.html#cfn-apprunner-service-networkconfiguration-egressconfiguration\n         */\n        readonly egressConfiguration: CfnService.EgressConfigurationProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `NetworkConfigurationProperty`\n *\n * @param properties - the TypeScript properties of a `NetworkConfigurationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnService_NetworkConfigurationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('egressConfiguration', cdk.requiredValidator)(properties.egressConfiguration));\n    errors.collect(cdk.propertyValidator('egressConfiguration', CfnService_EgressConfigurationPropertyValidator)(properties.egressConfiguration));\n    return errors.wrap('supplied properties not correct for \"NetworkConfigurationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AppRunner::Service.NetworkConfiguration` resource\n *\n * @param properties - the TypeScript properties of a `NetworkConfigurationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AppRunner::Service.NetworkConfiguration` resource.\n */\n// @ts-ignore TS6133\nfunction cfnServiceNetworkConfigurationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnService_NetworkConfigurationPropertyValidator(properties).assertSuccess();\n    return {\n        EgressConfiguration: cfnServiceEgressConfigurationPropertyToCloudFormation(properties.egressConfiguration),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnServiceNetworkConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnService.NetworkConfigurationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnService.NetworkConfigurationProperty>();\n    ret.addPropertyResult('egressConfiguration', 'EgressConfiguration', CfnServiceEgressConfigurationPropertyFromCloudFormation(properties.EgressConfiguration));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnService {\n    /**\n     * Identifies a version of code that AWS App Runner refers to within a source code repository.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-sourcecodeversion.html\n     */\n    export interface SourceCodeVersionProperty {\n        /**\n         * The type of version identifier.\n         *\n         * For a git-based repository, branches represent versions.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-sourcecodeversion.html#cfn-apprunner-service-sourcecodeversion-type\n         */\n        readonly type: string;\n        /**\n         * A source code version.\n         *\n         * For a git-based repository, a branch name maps to a specific version. App Runner uses the most recent commit to the branch.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-sourcecodeversion.html#cfn-apprunner-service-sourcecodeversion-value\n         */\n        readonly value: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `SourceCodeVersionProperty`\n *\n * @param properties - the TypeScript properties of a `SourceCodeVersionProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnService_SourceCodeVersionPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('type', cdk.requiredValidator)(properties.type));\n    errors.collect(cdk.propertyValidator('type', cdk.validateString)(properties.type));\n    errors.collect(cdk.propertyValidator('value', cdk.requiredValidator)(properties.value));\n    errors.collect(cdk.propertyValidator('value', cdk.validateString)(properties.value));\n    return errors.wrap('supplied properties not correct for \"SourceCodeVersionProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AppRunner::Service.SourceCodeVersion` resource\n *\n * @param properties - the TypeScript properties of a `SourceCodeVersionProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AppRunner::Service.SourceCodeVersion` resource.\n */\n// @ts-ignore TS6133\nfunction cfnServiceSourceCodeVersionPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnService_SourceCodeVersionPropertyValidator(properties).assertSuccess();\n    return {\n        Type: cdk.stringToCloudFormation(properties.type),\n        Value: cdk.stringToCloudFormation(properties.value),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnServiceSourceCodeVersionPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnService.SourceCodeVersionProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnService.SourceCodeVersionProperty>();\n    ret.addPropertyResult('type', 'Type', cfn_parse.FromCloudFormation.getString(properties.Type));\n    ret.addPropertyResult('value', 'Value', cfn_parse.FromCloudFormation.getString(properties.Value));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnService {\n    /**\n     * Describes the source deployed to an AWS App Runner service. It can be a code or an image repository.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-sourceconfiguration.html\n     */\n    export interface SourceConfigurationProperty {\n        /**\n         * Describes the resources that are needed to authenticate access to some source repositories.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-sourceconfiguration.html#cfn-apprunner-service-sourceconfiguration-authenticationconfiguration\n         */\n        readonly authenticationConfiguration?: CfnService.AuthenticationConfigurationProperty | cdk.IResolvable;\n        /**\n         * If `true` , continuous integration from the source repository is enabled for the App Runner service. Each repository change (including any source code commit or new image version) starts a deployment.\n         *\n         * Default: App Runner sets to `false` for a source image that uses an ECR Public repository or an ECR repository that's in an AWS account other than the one that the service is in. App Runner sets to `true` in all other cases (which currently include a source code repository or a source image using a same-account ECR repository).\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-sourceconfiguration.html#cfn-apprunner-service-sourceconfiguration-autodeploymentsenabled\n         */\n        readonly autoDeploymentsEnabled?: boolean | cdk.IResolvable;\n        /**\n         * The description of a source code repository.\n         *\n         * You must provide either this member or `ImageRepository` (but not both).\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-sourceconfiguration.html#cfn-apprunner-service-sourceconfiguration-coderepository\n         */\n        readonly codeRepository?: CfnService.CodeRepositoryProperty | cdk.IResolvable;\n        /**\n         * The description of a source image repository.\n         *\n         * You must provide either this member or `CodeRepository` (but not both).\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-sourceconfiguration.html#cfn-apprunner-service-sourceconfiguration-imagerepository\n         */\n        readonly imageRepository?: CfnService.ImageRepositoryProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `SourceConfigurationProperty`\n *\n * @param properties - the TypeScript properties of a `SourceConfigurationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnService_SourceConfigurationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('authenticationConfiguration', CfnService_AuthenticationConfigurationPropertyValidator)(properties.authenticationConfiguration));\n    errors.collect(cdk.propertyValidator('autoDeploymentsEnabled', cdk.validateBoolean)(properties.autoDeploymentsEnabled));\n    errors.collect(cdk.propertyValidator('codeRepository', CfnService_CodeRepositoryPropertyValidator)(properties.codeRepository));\n    errors.collect(cdk.propertyValidator('imageRepository', CfnService_ImageRepositoryPropertyValidator)(properties.imageRepository));\n    return errors.wrap('supplied properties not correct for \"SourceConfigurationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AppRunner::Service.SourceConfiguration` resource\n *\n * @param properties - the TypeScript properties of a `SourceConfigurationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AppRunner::Service.SourceConfiguration` resource.\n */\n// @ts-ignore TS6133\nfunction cfnServiceSourceConfigurationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnService_SourceConfigurationPropertyValidator(properties).assertSuccess();\n    return {\n        AuthenticationConfiguration: cfnServiceAuthenticationConfigurationPropertyToCloudFormation(properties.authenticationConfiguration),\n        AutoDeploymentsEnabled: cdk.booleanToCloudFormation(properties.autoDeploymentsEnabled),\n        CodeRepository: cfnServiceCodeRepositoryPropertyToCloudFormation(properties.codeRepository),\n        ImageRepository: cfnServiceImageRepositoryPropertyToCloudFormation(properties.imageRepository),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnServiceSourceConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnService.SourceConfigurationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnService.SourceConfigurationProperty>();\n    ret.addPropertyResult('authenticationConfiguration', 'AuthenticationConfiguration', properties.AuthenticationConfiguration != null ? CfnServiceAuthenticationConfigurationPropertyFromCloudFormation(properties.AuthenticationConfiguration) : undefined);\n    ret.addPropertyResult('autoDeploymentsEnabled', 'AutoDeploymentsEnabled', properties.AutoDeploymentsEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.AutoDeploymentsEnabled) : undefined);\n    ret.addPropertyResult('codeRepository', 'CodeRepository', properties.CodeRepository != null ? CfnServiceCodeRepositoryPropertyFromCloudFormation(properties.CodeRepository) : undefined);\n    ret.addPropertyResult('imageRepository', 'ImageRepository', properties.ImageRepository != null ? CfnServiceImageRepositoryPropertyFromCloudFormation(properties.ImageRepository) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnVpcConnector`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-vpcconnector.html\n */\nexport interface CfnVpcConnectorProps {\n\n    /**\n     * A list of IDs of subnets that App Runner should use when it associates your service with a custom Amazon VPC. Specify IDs of subnets of a single Amazon VPC. App Runner determines the Amazon VPC from the subnets you specify.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-vpcconnector.html#cfn-apprunner-vpcconnector-subnets\n     */\n    readonly subnets: string[];\n\n    /**\n     * A list of IDs of security groups that App Runner should use for access to AWS resources under the specified subnets. If not specified, App Runner uses the default security group of the Amazon VPC. The default security group allows all outbound traffic.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-vpcconnector.html#cfn-apprunner-vpcconnector-securitygroups\n     */\n    readonly securityGroups?: string[];\n\n    /**\n     * A list of metadata items that you can associate with your VPC connector resource. A tag is a key-value pair.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-vpcconnector.html#cfn-apprunner-vpcconnector-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n\n    /**\n     * A name for the VPC connector.\n     *\n     * If you don't specify a name, AWS CloudFormation generates a name for your VPC connector.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-vpcconnector.html#cfn-apprunner-vpcconnector-vpcconnectorname\n     */\n    readonly vpcConnectorName?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnVpcConnectorProps`\n *\n * @param properties - the TypeScript properties of a `CfnVpcConnectorProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnVpcConnectorPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('securityGroups', cdk.listValidator(cdk.validateString))(properties.securityGroups));\n    errors.collect(cdk.propertyValidator('subnets', cdk.requiredValidator)(properties.subnets));\n    errors.collect(cdk.propertyValidator('subnets', cdk.listValidator(cdk.validateString))(properties.subnets));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('vpcConnectorName', cdk.validateString)(properties.vpcConnectorName));\n    return errors.wrap('supplied properties not correct for \"CfnVpcConnectorProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::AppRunner::VpcConnector` resource\n *\n * @param properties - the TypeScript properties of a `CfnVpcConnectorProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::AppRunner::VpcConnector` resource.\n */\n// @ts-ignore TS6133\nfunction cfnVpcConnectorPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnVpcConnectorPropsValidator(properties).assertSuccess();\n    return {\n        Subnets: cdk.listMapper(cdk.stringToCloudFormation)(properties.subnets),\n        SecurityGroups: cdk.listMapper(cdk.stringToCloudFormation)(properties.securityGroups),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n        VpcConnectorName: cdk.stringToCloudFormation(properties.vpcConnectorName),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnVpcConnectorPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnVpcConnectorProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnVpcConnectorProps>();\n    ret.addPropertyResult('subnets', 'Subnets', cfn_parse.FromCloudFormation.getStringArray(properties.Subnets));\n    ret.addPropertyResult('securityGroups', 'SecurityGroups', properties.SecurityGroups != null ? cfn_parse.FromCloudFormation.getStringArray(properties.SecurityGroups) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addPropertyResult('vpcConnectorName', 'VpcConnectorName', properties.VpcConnectorName != null ? cfn_parse.FromCloudFormation.getString(properties.VpcConnectorName) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::AppRunner::VpcConnector`\n *\n * Specify an AWS App Runner VPC connector by using the `AWS::AppRunner::VpcConnector` resource in an AWS CloudFormation template.\n *\n * The `AWS::AppRunner::VpcConnector` resource is an AWS App Runner resource type that specifies an App Runner VPC connector.\n *\n * App Runner requires this resource when you want to associate your App Runner service to a custom Amazon Virtual Private Cloud ( Amazon VPC ).\n *\n * @cloudformationResource AWS::AppRunner::VpcConnector\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-vpcconnector.html\n */\nexport class CfnVpcConnector extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::AppRunner::VpcConnector\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnVpcConnector {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnVpcConnectorPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnVpcConnector(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The Amazon Resource Name (ARN) of this VPC connector.\n     * @cloudformationAttribute VpcConnectorArn\n     */\n    public readonly attrVpcConnectorArn: string;\n\n    /**\n     * The revision of this VPC connector. It's unique among all the active connectors ( `\"Status\": \"ACTIVE\"` ) that share the same `Name` .\n     *\n     * > At this time, App Runner supports only one revision per name.\n     * @cloudformationAttribute VpcConnectorRevision\n     */\n    public readonly attrVpcConnectorRevision: number;\n\n    /**\n     * A list of IDs of subnets that App Runner should use when it associates your service with a custom Amazon VPC. Specify IDs of subnets of a single Amazon VPC. App Runner determines the Amazon VPC from the subnets you specify.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-vpcconnector.html#cfn-apprunner-vpcconnector-subnets\n     */\n    public subnets: string[];\n\n    /**\n     * A list of IDs of security groups that App Runner should use for access to AWS resources under the specified subnets. If not specified, App Runner uses the default security group of the Amazon VPC. The default security group allows all outbound traffic.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-vpcconnector.html#cfn-apprunner-vpcconnector-securitygroups\n     */\n    public securityGroups: string[] | undefined;\n\n    /**\n     * A list of metadata items that you can associate with your VPC connector resource. A tag is a key-value pair.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-vpcconnector.html#cfn-apprunner-vpcconnector-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * A name for the VPC connector.\n     *\n     * If you don't specify a name, AWS CloudFormation generates a name for your VPC connector.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-vpcconnector.html#cfn-apprunner-vpcconnector-vpcconnectorname\n     */\n    public vpcConnectorName: string | undefined;\n\n    /**\n     * Create a new `AWS::AppRunner::VpcConnector`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnVpcConnectorProps) {\n        super(scope, id, { type: CfnVpcConnector.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'subnets', this);\n        this.attrVpcConnectorArn = cdk.Token.asString(this.getAtt('VpcConnectorArn'));\n        this.attrVpcConnectorRevision = cdk.Token.asNumber(this.getAtt('VpcConnectorRevision'));\n\n        this.subnets = props.subnets;\n        this.securityGroups = props.securityGroups;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::AppRunner::VpcConnector\", props.tags, { tagPropertyName: 'tags' });\n        this.vpcConnectorName = props.vpcConnectorName;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnVpcConnector.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            subnets: this.subnets,\n            securityGroups: this.securityGroups,\n            tags: this.tags.renderTags(),\n            vpcConnectorName: this.vpcConnectorName,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnVpcConnectorPropsToCloudFormation(props);\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
