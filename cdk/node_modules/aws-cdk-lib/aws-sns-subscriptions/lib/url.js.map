{
  "version": 3,
  "sources": ["url.ts"],
  "sourcesContent": ["import * as sns from '../../aws-sns';\nimport { Token } from '../../core';\nimport { SubscriptionProps } from './subscription';\n\n/**\n * Options for URL subscriptions.\n */\nexport interface UrlSubscriptionProps extends SubscriptionProps {\n  /**\n   * The message to the queue is the same as it was sent to the topic\n   *\n   * If false, the message will be wrapped in an SNS envelope.\n   *\n   * @default false\n   */\n  readonly rawMessageDelivery?: boolean;\n\n  /**\n   * The subscription's protocol.\n   *\n   * @default - Protocol is derived from url\n   */\n  readonly protocol?: sns.SubscriptionProtocol;\n}\n\n/**\n * Use a URL as a subscription target\n *\n * The message will be POSTed to the given URL.\n *\n * @see https://docs.aws.amazon.com/sns/latest/dg/sns-http-https-endpoint-as-subscriber.html\n */\nexport class UrlSubscription implements sns.ITopicSubscription {\n  private readonly protocol: sns.SubscriptionProtocol;\n  private readonly unresolvedUrl: boolean;\n\n  constructor(private readonly url: string, private readonly props: UrlSubscriptionProps = {}) {\n    this.unresolvedUrl = Token.isUnresolved(url);\n    if (!this.unresolvedUrl && !url.startsWith('http://') && !url.startsWith('https://')) {\n      throw new Error('URL must start with either http:// or https://');\n    }\n\n    if (this.unresolvedUrl && props.protocol === undefined) {\n      throw new Error('Must provide protocol if url is unresolved');\n    }\n\n    if (this.unresolvedUrl) {\n      this.protocol = props.protocol!;\n    } else {\n      this.protocol = this.url.startsWith('https:') ? sns.SubscriptionProtocol.HTTPS : sns.SubscriptionProtocol.HTTP;\n    }\n  }\n\n  /**\n   * Returns a configuration for a URL to subscribe to an SNS topic\n   */\n  public bind(_topic: sns.ITopic): sns.TopicSubscriptionConfig {\n    return {\n      subscriberId: this.url,\n      endpoint: this.url,\n      protocol: this.protocol,\n      rawMessageDelivery: this.props.rawMessageDelivery,\n      filterPolicy: this.props.filterPolicy,\n      deadLetterQueue: this.props.deadLetterQueue,\n    };\n  }\n}\n"],
  "mappings": "sNAAA,IAAA,QAAA,eAAA,EACA,OAAA,QAAA,YAAA,EA+BA,MAAa,eAAe,CAI1B,YAA6B,IAA8B,MAA8B,CAAA,EAAE,CAEzF,GAF2B,KAAA,IAAA,IAA8B,KAAA,MAAA,4FACzD,KAAK,cAAgB,OAAA,MAAM,aAAa,GAAG,EACvC,CAAC,KAAK,eAAiB,CAAC,IAAI,WAAW,SAAS,GAAK,CAAC,IAAI,WAAW,UAAU,EACjF,KAAM,IAAI,OAAM,gDAAgD,EAGlE,GAAI,KAAK,eAAiB,MAAM,WAAa,OAC3C,KAAM,IAAI,OAAM,4CAA4C,EAG9D,AAAI,KAAK,cACP,KAAK,SAAW,MAAM,SAEtB,KAAK,SAAW,KAAK,IAAI,WAAW,QAAQ,EAAI,IAAI,qBAAqB,MAAQ,IAAI,qBAAqB,KAOvG,KAAK,OAAkB,mEACrB,CACL,aAAc,KAAK,IACnB,SAAU,KAAK,IACf,SAAU,KAAK,SACf,mBAAoB,KAAK,MAAM,mBAC/B,aAAc,KAAK,MAAM,aACzB,gBAAiB,KAAK,MAAM,kBA/BlC,QAAA,gBAAA",
  "names": []
}
