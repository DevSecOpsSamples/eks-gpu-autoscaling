{
  "version": 3,
  "sources": ["email.ts"],
  "sourcesContent": ["import * as sns from '../../aws-sns';\nimport { SubscriptionProps } from './subscription';\n\n/**\n * Options for email subscriptions.\n */\nexport interface EmailSubscriptionProps extends SubscriptionProps {\n  /**\n   * Indicates if the full notification JSON should be sent to the email\n   * address or just the message text.\n   *\n   * @default false (Message text)\n   */\n  readonly json?: boolean;\n}\n\n/**\n * Use an email address as a subscription target\n *\n * Email subscriptions require confirmation.\n */\nexport class EmailSubscription implements sns.ITopicSubscription {\n  constructor(private readonly emailAddress: string, private readonly props: EmailSubscriptionProps = {}) {\n  }\n\n  /**\n   * Returns a configuration for an email address to subscribe to an SNS topic\n   */\n  public bind(_topic: sns.ITopic): sns.TopicSubscriptionConfig {\n    return {\n      subscriberId: this.emailAddress,\n      endpoint: this.emailAddress,\n      protocol: this.props.json ? sns.SubscriptionProtocol.EMAIL_JSON : sns.SubscriptionProtocol.EMAIL,\n      filterPolicy: this.props.filterPolicy,\n      deadLetterQueue: this.props.deadLetterQueue,\n    };\n  }\n}\n"],
  "mappings": "wNAAA,IAAA,QAAA,eAAA,EAqBA,MAAa,iBAAiB,CAC5B,YAA6B,aAAuC,MAAgC,CAAA,EAAE,CAAzE,KAAA,aAAA,aAAuC,KAAA,MAAA,8FAM7D,KAAK,OAAkB,mEACrB,CACL,aAAc,KAAK,aACnB,SAAU,KAAK,aACf,SAAU,KAAK,MAAM,KAAO,IAAI,qBAAqB,WAAa,IAAI,qBAAqB,MAC3F,aAAc,KAAK,MAAM,aACzB,gBAAiB,KAAK,MAAM,kBAblC,QAAA,kBAAA",
  "names": []
}
