{
  "version": 3,
  "sources": ["response-headers-policy.ts"],
  "sourcesContent": ["import { Duration, Names, Resource } from '../../core';\nimport { Construct } from 'constructs';\nimport { CfnResponseHeadersPolicy } from './cloudfront.generated';\n\n/**\n * Represents a response headers policy.\n */\nexport interface IResponseHeadersPolicy {\n  /**\n   * The ID of the response headers policy\n   * @attribute\n   **/\n  readonly responseHeadersPolicyId: string;\n}\n\n/**\n * Properties for creating a Response Headers Policy\n */\nexport interface ResponseHeadersPolicyProps {\n  /**\n   * A unique name to identify the response headers policy.\n   *\n   * @default - generated from the `id`\n   */\n  readonly responseHeadersPolicyName?: string;\n\n  /**\n   * A comment to describe the response headers policy.\n   *\n   * @default - no comment\n   */\n  readonly comment?: string;\n\n  /**\n   * A configuration for a set of HTTP response headers that are used for cross-origin resource sharing (CORS).\n   *\n   * @default - no cors behavior\n   */\n  readonly corsBehavior?: ResponseHeadersCorsBehavior;\n\n  /**\n   * A configuration for a set of custom HTTP response headers.\n   *\n   * @default - no custom headers behavior\n   */\n  readonly customHeadersBehavior?: ResponseCustomHeadersBehavior;\n\n  /**\n   * A configuration for a set of security-related HTTP response headers.\n   *\n   * @default - no security headers behavior\n   */\n  readonly securityHeadersBehavior?: ResponseSecurityHeadersBehavior;\n}\n\n/**\n * A Response Headers Policy configuration\n *\n * @resource AWS::CloudFront::ResponseHeadersPolicy\n */\nexport class ResponseHeadersPolicy extends Resource implements IResponseHeadersPolicy {\n\n  /** Use this managed policy to allow simple CORS requests from any origin. */\n  public static readonly CORS_ALLOW_ALL_ORIGINS = ResponseHeadersPolicy.fromManagedResponseHeadersPolicy('60669652-455b-4ae9-85a4-c4c02393f86c');\n  /** Use this managed policy to allow CORS requests from any origin, including preflight requests. */\n  public static readonly CORS_ALLOW_ALL_ORIGINS_WITH_PREFLIGHT = ResponseHeadersPolicy.fromManagedResponseHeadersPolicy('5cc3b908-e619-4b99-88e5-2cf7f45965bd');\n  /** Use this managed policy to add a set of security headers to all responses that CloudFront sends to viewers. */\n  public static readonly SECURITY_HEADERS = ResponseHeadersPolicy.fromManagedResponseHeadersPolicy('67f7725c-6f97-4210-82d7-5512b31e9d03');\n  /** Use this managed policy to allow simple CORS requests from any origin and add a set of security headers to all responses that CloudFront sends to viewers. */\n  public static readonly CORS_ALLOW_ALL_ORIGINS_AND_SECURITY_HEADERS = ResponseHeadersPolicy.fromManagedResponseHeadersPolicy('e61eb60c-9c35-4d20-a928-2b84e02af89c');\n  /** Use this managed policy to allow CORS requests from any origin, including preflight requests, and add a set of security headers to all responses that CloudFront sends to viewers. */\n  public static readonly CORS_ALLOW_ALL_ORIGINS_WITH_PREFLIGHT_AND_SECURITY_HEADERS = ResponseHeadersPolicy.fromManagedResponseHeadersPolicy('eaab4381-ed33-4a86-88ca-d9558dc6cd63');\n\n  /**\n   * Import an existing Response Headers Policy from its ID.\n   */\n  public static fromResponseHeadersPolicyId(scope: Construct, id: string, responseHeadersPolicyId: string): IResponseHeadersPolicy {\n    class Import extends Resource implements IResponseHeadersPolicy {\n      public readonly responseHeadersPolicyId = responseHeadersPolicyId;\n    }\n    return new Import(scope, id);\n  }\n\n  private static fromManagedResponseHeadersPolicy(managedResponseHeadersPolicyId: string): IResponseHeadersPolicy {\n    return new class implements IResponseHeadersPolicy {\n      public readonly responseHeadersPolicyId = managedResponseHeadersPolicyId;\n    };\n  }\n\n  public readonly responseHeadersPolicyId: string;\n\n  constructor(scope: Construct, id: string, props: ResponseHeadersPolicyProps = {}) {\n    super(scope, id, {\n      physicalName: props.responseHeadersPolicyName,\n    });\n\n    const responseHeadersPolicyName = props.responseHeadersPolicyName ?? Names.uniqueId(this);\n\n    const resource = new CfnResponseHeadersPolicy(this, 'Resource', {\n      responseHeadersPolicyConfig: {\n        name: responseHeadersPolicyName,\n        comment: props.comment,\n        corsConfig: props.corsBehavior ? this._renderCorsConfig(props.corsBehavior) : undefined,\n        customHeadersConfig: props.customHeadersBehavior ? this._renderCustomHeadersConfig(props.customHeadersBehavior) : undefined,\n        securityHeadersConfig: props.securityHeadersBehavior ? this._renderSecurityHeadersConfig(props.securityHeadersBehavior) : undefined,\n      },\n    });\n\n    this.responseHeadersPolicyId = resource.ref;\n  }\n\n  private _renderCorsConfig(behavior: ResponseHeadersCorsBehavior): CfnResponseHeadersPolicy.CorsConfigProperty {\n    return {\n      accessControlAllowCredentials: behavior.accessControlAllowCredentials,\n      accessControlAllowHeaders: { items: behavior.accessControlAllowHeaders },\n      accessControlAllowMethods: { items: behavior.accessControlAllowMethods },\n      accessControlAllowOrigins: { items: behavior.accessControlAllowOrigins },\n      accessControlExposeHeaders: behavior.accessControlExposeHeaders ? { items: behavior.accessControlExposeHeaders } : undefined,\n      accessControlMaxAgeSec: behavior.accessControlMaxAge ? behavior.accessControlMaxAge.toSeconds() : undefined,\n      originOverride: behavior.originOverride,\n    };\n  }\n\n  private _renderCustomHeadersConfig(behavior: ResponseCustomHeadersBehavior): CfnResponseHeadersPolicy.CustomHeadersConfigProperty {\n    return {\n      items: behavior.customHeaders,\n    };\n  }\n\n  private _renderSecurityHeadersConfig(behavior: ResponseSecurityHeadersBehavior): CfnResponseHeadersPolicy.SecurityHeadersConfigProperty {\n    return {\n      contentSecurityPolicy: behavior.contentSecurityPolicy,\n      contentTypeOptions: behavior.contentTypeOptions,\n      frameOptions: behavior.frameOptions,\n      referrerPolicy: behavior.referrerPolicy,\n      strictTransportSecurity: behavior.strictTransportSecurity ? {\n        ...behavior.strictTransportSecurity,\n        accessControlMaxAgeSec: behavior.strictTransportSecurity.accessControlMaxAge.toSeconds(),\n      }: undefined,\n      xssProtection: behavior.xssProtection,\n    };\n  }\n}\n\n/**\n * Configuration for a set of HTTP response headers that are used for cross-origin resource sharing (CORS).\n * CloudFront adds these headers to HTTP responses that it sends for CORS requests that match a cache behavior\n * associated with this response headers policy.\n */\nexport interface ResponseHeadersCorsBehavior {\n  /**\n   * A Boolean that CloudFront uses as the value for the Access-Control-Allow-Credentials HTTP response header.\n   */\n  readonly accessControlAllowCredentials: boolean;\n\n  /**\n   * A list of HTTP header names that CloudFront includes as values for the Access-Control-Allow-Headers HTTP response header.\n   * You can specify `['*']` to allow all headers.\n   */\n  readonly accessControlAllowHeaders: string[];\n\n  /**\n   * A list of HTTP methods that CloudFront includes as values for the Access-Control-Allow-Methods HTTP response header.\n   */\n  readonly accessControlAllowMethods: string[];\n\n  /**\n   * A list of origins (domain names) that CloudFront can use as the value for the Access-Control-Allow-Origin HTTP response header.\n   * You can specify `['*']` to allow all origins.\n   */\n  readonly accessControlAllowOrigins: string[];\n\n  /**\n   * A list of HTTP headers that CloudFront includes as values for the Access-Control-Expose-Headers HTTP response header.\n   * You can specify `['*']` to expose all headers.\n   *\n   * @default - no headers exposed\n   */\n  readonly accessControlExposeHeaders?: string[];\n\n  /**\n   * A number that CloudFront uses as the value for the Access-Control-Max-Age HTTP response header.\n   *\n   * @default - no max age\n   */\n  readonly accessControlMaxAge?: Duration;\n\n  /**\n   * A Boolean that determines whether CloudFront overrides HTTP response headers received from the origin with the ones specified in this response headers policy.\n   */\n  readonly originOverride: boolean;\n}\n\n/**\n * Configuration for a set of HTTP response headers that are sent for requests that match a cache behavior\n * that\u2019s associated with this response headers policy.\n */\nexport interface ResponseCustomHeadersBehavior {\n  /**\n   * The list of HTTP response headers and their values.\n   */\n  readonly customHeaders: ResponseCustomHeader[];\n}\n\n/**\n * An HTTP response header name and its value.\n * CloudFront includes this header in HTTP responses that it sends for requests that match a cache behavior that\u2019s associated with this response headers policy.\n */\nexport interface ResponseCustomHeader {\n  /**\n   * The HTTP response header name.\n   */\n  readonly header: string;\n\n  /**\n   * A Boolean that determines whether CloudFront overrides a response header with the same name\n   * received from the origin with the header specified here.\n   */\n  readonly override: boolean;\n\n  /**\n   * The value for the HTTP response header.\n   */\n  readonly value: string;\n}\n\n/**\n * Configuration for a set of security-related HTTP response headers.\n * CloudFront adds these headers to HTTP responses that it sends for requests that match a cache behavior\n * associated with this response headers policy.\n */\nexport interface ResponseSecurityHeadersBehavior {\n  /**\n   * The policy directives and their values that CloudFront includes as values for the Content-Security-Policy HTTP response header.\n   *\n   * @default - no content security policy\n   */\n  readonly contentSecurityPolicy?: ResponseHeadersContentSecurityPolicy;\n\n  /**\n   * Determines whether CloudFront includes the X-Content-Type-Options HTTP response header with its value set to nosniff.\n   *\n   * @default - no content type options\n   */\n  readonly contentTypeOptions?: ResponseHeadersContentTypeOptions;\n\n  /**\n   * Determines whether CloudFront includes the X-Frame-Options HTTP response header and the header\u2019s value.\n   *\n   * @default - no frame options\n   */\n  readonly frameOptions?: ResponseHeadersFrameOptions;\n\n  /**\n   * Determines whether CloudFront includes the Referrer-Policy HTTP response header and the header\u2019s value.\n   *\n   * @default - no referrer policy\n   */\n  readonly referrerPolicy?: ResponseHeadersReferrerPolicy;\n\n  /**\n   * Determines whether CloudFront includes the Strict-Transport-Security HTTP response header and the header\u2019s value.\n   *\n   * @default - no strict transport security\n   */\n  readonly strictTransportSecurity?: ResponseHeadersStrictTransportSecurity;\n\n  /**\n   * Determines whether CloudFront includes the X-XSS-Protection HTTP response header and the header\u2019s value.\n   *\n   * @default - no xss protection\n   */\n  readonly xssProtection?: ResponseHeadersXSSProtection;\n}\n\n/**\n * The policy directives and their values that CloudFront includes as values for the Content-Security-Policy HTTP response header.\n */\nexport interface ResponseHeadersContentSecurityPolicy {\n  /**\n   * The policy directives and their values that CloudFront includes as values for the Content-Security-Policy HTTP response header.\n   */\n  readonly contentSecurityPolicy: string;\n\n  /**\n   * A Boolean that determines whether CloudFront overrides the Content-Security-Policy HTTP response header\n   * received from the origin with the one specified in this response headers policy.\n   */\n  readonly override: boolean;\n}\n\n/**\n * Determines whether CloudFront includes the X-Content-Type-Options HTTP response header with its value set to nosniff.\n */\nexport interface ResponseHeadersContentTypeOptions {\n  /**\n   * A Boolean that determines whether CloudFront overrides the X-Content-Type-Options HTTP response header\n   * received from the origin with the one specified in this response headers policy.\n   */\n  readonly override: boolean;\n}\n\n/**\n * Determines whether CloudFront includes the X-Frame-Options HTTP response header and the header\u2019s value.\n */\nexport interface ResponseHeadersFrameOptions {\n  /**\n   * The value of the X-Frame-Options HTTP response header.\n   */\n  readonly frameOption: HeadersFrameOption;\n\n  /**\n   * A Boolean that determines whether CloudFront overrides the X-Frame-Options HTTP response header\n   * received from the origin with the one specified in this response headers policy.\n   */\n  readonly override: boolean;\n}\n\n/**\n * Determines whether CloudFront includes the Referrer-Policy HTTP response header and the header\u2019s value.\n */\nexport interface ResponseHeadersReferrerPolicy {\n  /**\n   * The value of the Referrer-Policy HTTP response header.\n   */\n  readonly referrerPolicy: HeadersReferrerPolicy;\n\n  /**\n   * A Boolean that determines whether CloudFront overrides the Referrer-Policy HTTP response header\n   * received from the origin with the one specified in this response headers policy.\n   */\n  readonly override: boolean;\n}\n\n/**\n * Determines whether CloudFront includes the Strict-Transport-Security HTTP response header and the header\u2019s value.\n */\nexport interface ResponseHeadersStrictTransportSecurity {\n  /**\n   * A number that CloudFront uses as the value for the max-age directive in the Strict-Transport-Security HTTP response header.\n   */\n  readonly accessControlMaxAge: Duration;\n\n  /**\n   * A Boolean that determines whether CloudFront includes the includeSubDomains directive in the Strict-Transport-Security HTTP response header.\n   *\n   * @default false\n   */\n  readonly includeSubdomains?: boolean;\n\n  /**\n   * A Boolean that determines whether CloudFront overrides the Strict-Transport-Security HTTP response header\n   * received from the origin with the one specified in this response headers policy.\n   */\n  readonly override: boolean;\n\n  /**\n   * A Boolean that determines whether CloudFront includes the preload directive in the Strict-Transport-Security HTTP response header.\n   *\n   * @default false\n   */\n  readonly preload?: boolean;\n}\n\n/**\n * Determines whether CloudFront includes the X-XSS-Protection HTTP response header and the header\u2019s value.\n */\nexport interface ResponseHeadersXSSProtection {\n  /**\n   * A Boolean that determines whether CloudFront includes the mode=block directive in the X-XSS-Protection header.\n   *\n   * @default false\n   */\n  readonly modeBlock?: boolean;\n\n  /**\n   * A Boolean that determines whether CloudFront overrides the X-XSS-Protection HTTP response header\n   * received from the origin with the one specified in this response headers policy.\n   */\n  readonly override: boolean;\n\n  /**\n   * A Boolean that determines the value of the X-XSS-Protection HTTP response header.\n   * When this setting is true, the value of the X-XSS-Protection header is 1.\n   * When this setting is false, the value of the X-XSS-Protection header is 0.\n   */\n  readonly protection: boolean;\n\n  /**\n   * A reporting URI, which CloudFront uses as the value of the report directive in the X-XSS-Protection header.\n   * You cannot specify a ReportUri when ModeBlock is true.\n   *\n   * @default - no report uri\n   */\n  readonly reportUri?: string;\n}\n\n/**\n * Enum representing possible values of the X-Frame-Options HTTP response header.\n */\nexport enum HeadersFrameOption {\n  /**\n   * The page can only be displayed in a frame on the same origin as the page itself.\n   */\n  DENY = 'DENY',\n\n  /**\n   * The page can only be displayed in a frame on the specified origin.\n   */\n  SAMEORIGIN = 'SAMEORIGIN',\n}\n\n/**\n * Enum representing possible values of the Referrer-Policy HTTP response header.\n */\nexport enum HeadersReferrerPolicy {\n  /**\n   * The referrer policy is not set.\n   */\n  NO_REFERRER = 'no-referrer',\n\n  /**\n   * The referrer policy is no-referrer-when-downgrade.\n   */\n  NO_REFERRER_WHEN_DOWNGRADE = 'no-referrer-when-downgrade',\n\n  /**\n   * The referrer policy is origin.\n   */\n  ORIGIN = 'origin',\n\n  /**\n   * The referrer policy is origin-when-cross-origin.\n   */\n  ORIGIN_WHEN_CROSS_ORIGIN = 'origin-when-cross-origin',\n\n  /**\n   * The referrer policy is same-origin.\n   */\n  SAME_ORIGIN = 'same-origin',\n\n  /**\n   * The referrer policy is strict-origin.\n   */\n  STRICT_ORIGIN = 'strict-origin',\n\n  /**\n   * The referrer policy is strict-origin-when-cross-origin.\n   */\n  STRICT_ORIGIN_WHEN_CROSS_ORIGIN = 'strict-origin-when-cross-origin',\n\n  /**\n   * The referrer policy is unsafe-url.\n   */\n  UNSAFE_URL = 'unsafe-url',\n}\n"],
  "mappings": "qRAAA,OAAA,QAAA,YAAA,EAEA,uBAAA,QAAA,wBAAA,EA0DA,MAAa,6BAA8B,QAAA,QAAQ,CA+BjD,YAAY,MAAkB,GAAY,MAAoC,CAAA,EAAE,QAC9E,MAAM,MAAO,GAAI,CACf,aAAc,MAAM,0BACrB,uFAED,KAAM,2BAAyB,IAAG,MAAM,6BAAyB,MAAA,KAAA,OAAA,GAAI,OAAA,MAAM,SAAS,IAAI,EAElF,SAAW,GAAI,wBAAA,yBAAyB,KAAM,WAAY,CAC9D,4BAA6B,CAC3B,KAAM,0BACN,QAAS,MAAM,QACf,WAAY,MAAM,aAAe,KAAK,kBAAkB,MAAM,YAAY,EAAI,OAC9E,oBAAqB,MAAM,sBAAwB,KAAK,2BAA2B,MAAM,qBAAqB,EAAI,OAClH,sBAAuB,MAAM,wBAA0B,KAAK,6BAA6B,MAAM,uBAAuB,EAAI,QAE7H,EAED,KAAK,wBAA0B,SAAS,UAhC5B,6BAA4B,MAAkB,GAAY,wBAA+B,CACrG,MAAM,cAAe,QAAA,QAAQ,CAA7B,aAAA,qBACkB,KAAA,wBAA0B,uBAC5C,EACA,MAAO,IAAI,QAAO,MAAO,EAAE,QAGd,kCAAiC,+BAAsC,CACpF,MAAO,IAAI,MAAA,CAAA,aAAA,CACO,KAAA,wBAA0B,8BAC5C,GAyBM,kBAAkB,SAAqC,CAC7D,MAAO,CACL,8BAA+B,SAAS,8BACxC,0BAA2B,CAAE,MAAO,SAAS,yBAAyB,EACtE,0BAA2B,CAAE,MAAO,SAAS,yBAAyB,EACtE,0BAA2B,CAAE,MAAO,SAAS,yBAAyB,EACtE,2BAA4B,SAAS,2BAA6B,CAAE,MAAO,SAAS,0BAA0B,EAAK,OACnH,uBAAwB,SAAS,oBAAsB,SAAS,oBAAoB,UAAS,EAAK,OAClG,eAAgB,SAAS,gBAIrB,2BAA2B,SAAuC,CACxE,MAAO,CACL,MAAO,SAAS,eAIZ,6BAA6B,SAAyC,CAC5E,MAAO,CACL,sBAAuB,SAAS,sBAChC,mBAAoB,SAAS,mBAC7B,aAAc,SAAS,aACvB,eAAgB,SAAS,eACzB,wBAAyB,SAAS,wBAA0B,IACvD,SAAS,wBACZ,uBAAwB,SAAS,wBAAwB,oBAAoB,UAAS,GACrF,OACH,cAAe,SAAS,gBA/E9B,QAAA,sBAAA,gJAGyB,sBAAA,uBAAyB,sBAAsB,iCAAiC,sCAAsC,EAEtH,sBAAA,sCAAwC,sBAAsB,iCAAiC,sCAAsC,EAErI,sBAAA,iBAAmB,sBAAsB,iCAAiC,sCAAsC,EAEhH,sBAAA,4CAA8C,sBAAsB,iCAAiC,sCAAsC,EAE3I,sBAAA,2DAA6D,sBAAsB,iCAAiC,sCAAsC,EAyUnL,GAAY,oBAAZ,AAAA,UAAY,oBAAkB,CAI5B,oBAAA,KAAA,OAKA,oBAAA,WAAA,YACF,GAVY,mBAAA,QAAA,oBAAA,SAAA,mBAAkB,CAAA,EAAA,EAe9B,GAAY,uBAAZ,AAAA,UAAY,uBAAqB,CAI/B,uBAAA,YAAA,cAKA,uBAAA,2BAAA,6BAKA,uBAAA,OAAA,SAKA,uBAAA,yBAAA,2BAKA,uBAAA,YAAA,cAKA,uBAAA,cAAA,gBAKA,uBAAA,gCAAA,kCAKA,uBAAA,WAAA,YACF,GAxCY,sBAAA,QAAA,uBAAA,SAAA,sBAAqB,CAAA,EAAA",
  "names": []
}
