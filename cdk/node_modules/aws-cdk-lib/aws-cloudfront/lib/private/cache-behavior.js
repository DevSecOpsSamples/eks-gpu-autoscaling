"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CacheBehavior=void 0;const iam=require("../../../aws-iam"),cache_policy_1=require("../cache-policy"),distribution_1=require("../distribution");class CacheBehavior{constructor(originId,props){this.props=props,this.originId=originId,this.validateEdgeLambdas(props.edgeLambdas),this.grantEdgeLambdaFunctionExecutionRole(props.edgeLambdas)}_renderBehavior(){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k;return{pathPattern:this.props.pathPattern,targetOriginId:this.originId,allowedMethods:(_a=this.props.allowedMethods)===null||_a===void 0?void 0:_a.methods,cachedMethods:(_b=this.props.cachedMethods)===null||_b===void 0?void 0:_b.methods,cachePolicyId:((_c=this.props.cachePolicy)!==null&&_c!==void 0?_c:cache_policy_1.CachePolicy.CACHING_OPTIMIZED).cachePolicyId,compress:(_d=this.props.compress)!==null&&_d!==void 0?_d:!0,originRequestPolicyId:(_e=this.props.originRequestPolicy)===null||_e===void 0?void 0:_e.originRequestPolicyId,responseHeadersPolicyId:(_f=this.props.responseHeadersPolicy)===null||_f===void 0?void 0:_f.responseHeadersPolicyId,smoothStreaming:this.props.smoothStreaming,viewerProtocolPolicy:(_g=this.props.viewerProtocolPolicy)!==null&&_g!==void 0?_g:distribution_1.ViewerProtocolPolicy.ALLOW_ALL,functionAssociations:(_h=this.props.functionAssociations)===null||_h===void 0?void 0:_h.map(association=>({functionArn:association.function.functionArn,eventType:association.eventType.toString()})),lambdaFunctionAssociations:(_j=this.props.edgeLambdas)===null||_j===void 0?void 0:_j.map(edgeLambda=>({lambdaFunctionArn:edgeLambda.functionVersion.edgeArn,eventType:edgeLambda.eventType.toString(),includeBody:edgeLambda.includeBody})),trustedKeyGroups:(_k=this.props.trustedKeyGroups)===null||_k===void 0?void 0:_k.map(keyGroup=>keyGroup.keyGroupId)}}validateEdgeLambdas(edgeLambdas){const includeBodyEventTypes=[distribution_1.LambdaEdgeEventType.ORIGIN_REQUEST,distribution_1.LambdaEdgeEventType.VIEWER_REQUEST];if(edgeLambdas&&edgeLambdas.some(lambda=>lambda.includeBody&&!includeBodyEventTypes.includes(lambda.eventType)))throw new Error("'includeBody' can only be true for ORIGIN_REQUEST or VIEWER_REQUEST event types.")}grantEdgeLambdaFunctionExecutionRole(edgeLambdas){!edgeLambdas||edgeLambdas.length===0||edgeLambdas.forEach(edgeLambda=>{const role=edgeLambda.functionVersion.role;role&&role instanceof iam.Role&&role.assumeRolePolicy&&role.assumeRolePolicy.addStatements(new iam.PolicyStatement({actions:["sts:AssumeRole"],principals:[new iam.ServicePrincipal("edgelambda.amazonaws.com")]}))})}}exports.CacheBehavior=CacheBehavior;
//# sourceMappingURL=cache-behavior.js.map
