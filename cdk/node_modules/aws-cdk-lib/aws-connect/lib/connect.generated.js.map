{
  "version": 3,
  "sources": ["connect.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-04-07T10:53:54.363Z\",\"fingerprint\":\"qRhFvUuvW9lVHY2NpMEby4uVKIt6+zRrrXoQ39Ho4eA=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n/**\n * Properties for defining a `CfnContactFlow`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflow.html\n */\nexport interface CfnContactFlowProps {\n\n    /**\n     * The content of the contact flow.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflow.html#cfn-connect-contactflow-content\n     */\n    readonly content: string;\n\n    /**\n     * The Amazon Resource Name (ARN) of the Amazon Connect instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflow.html#cfn-connect-contactflow-instancearn\n     */\n    readonly instanceArn: string;\n\n    /**\n     * The name of the contact flow.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflow.html#cfn-connect-contactflow-name\n     */\n    readonly name: string;\n\n    /**\n     * The description of the contact flow.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflow.html#cfn-connect-contactflow-description\n     */\n    readonly description?: string;\n\n    /**\n     * The state of the contact flow.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflow.html#cfn-connect-contactflow-state\n     */\n    readonly state?: string;\n\n    /**\n     * An array of key-value pairs to apply to this resource.\n     *\n     * For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflow.html#cfn-connect-contactflow-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n\n    /**\n     * The type of the contact flow. For descriptions of the available types, see [Choose a Contact Flow Type](https://docs.aws.amazon.com/connect/latest/adminguide/create-contact-flow.html#contact-flow-types) in the *Amazon Connect Administrator Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflow.html#cfn-connect-contactflow-type\n     */\n    readonly type?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnContactFlowProps`\n *\n * @param properties - the TypeScript properties of a `CfnContactFlowProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnContactFlowPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('content', cdk.requiredValidator)(properties.content));\n    errors.collect(cdk.propertyValidator('content', cdk.validateString)(properties.content));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('instanceArn', cdk.requiredValidator)(properties.instanceArn));\n    errors.collect(cdk.propertyValidator('instanceArn', cdk.validateString)(properties.instanceArn));\n    errors.collect(cdk.propertyValidator('name', cdk.requiredValidator)(properties.name));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('state', cdk.validateString)(properties.state));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('type', cdk.validateString)(properties.type));\n    return errors.wrap('supplied properties not correct for \"CfnContactFlowProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Connect::ContactFlow` resource\n *\n * @param properties - the TypeScript properties of a `CfnContactFlowProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Connect::ContactFlow` resource.\n */\n// @ts-ignore TS6133\nfunction cfnContactFlowPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnContactFlowPropsValidator(properties).assertSuccess();\n    return {\n        Content: cdk.stringToCloudFormation(properties.content),\n        InstanceArn: cdk.stringToCloudFormation(properties.instanceArn),\n        Name: cdk.stringToCloudFormation(properties.name),\n        Description: cdk.stringToCloudFormation(properties.description),\n        State: cdk.stringToCloudFormation(properties.state),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n        Type: cdk.stringToCloudFormation(properties.type),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnContactFlowPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnContactFlowProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnContactFlowProps>();\n    ret.addPropertyResult('content', 'Content', cfn_parse.FromCloudFormation.getString(properties.Content));\n    ret.addPropertyResult('instanceArn', 'InstanceArn', cfn_parse.FromCloudFormation.getString(properties.InstanceArn));\n    ret.addPropertyResult('name', 'Name', cfn_parse.FromCloudFormation.getString(properties.Name));\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('state', 'State', properties.State != null ? cfn_parse.FromCloudFormation.getString(properties.State) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addPropertyResult('type', 'Type', properties.Type != null ? cfn_parse.FromCloudFormation.getString(properties.Type) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::Connect::ContactFlow`\n *\n * The `AWS::Connect::ContactFlow` resource specifies a contact flow for the specified Amazon Connect instance.\n *\n * @cloudformationResource AWS::Connect::ContactFlow\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflow.html\n */\nexport class CfnContactFlow extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Connect::ContactFlow\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnContactFlow {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnContactFlowPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnContactFlow(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * `Ref` returns the contact flow Amazon Resource Name (ARN). For example:\n     *\n     * `{ \"Ref\": \"myContactFlowArn\" }`\n     * @cloudformationAttribute ContactFlowArn\n     */\n    public readonly attrContactFlowArn: string;\n\n    /**\n     * The content of the contact flow.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflow.html#cfn-connect-contactflow-content\n     */\n    public content: string;\n\n    /**\n     * The Amazon Resource Name (ARN) of the Amazon Connect instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflow.html#cfn-connect-contactflow-instancearn\n     */\n    public instanceArn: string;\n\n    /**\n     * The name of the contact flow.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflow.html#cfn-connect-contactflow-name\n     */\n    public name: string;\n\n    /**\n     * The description of the contact flow.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflow.html#cfn-connect-contactflow-description\n     */\n    public description: string | undefined;\n\n    /**\n     * The state of the contact flow.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflow.html#cfn-connect-contactflow-state\n     */\n    public state: string | undefined;\n\n    /**\n     * An array of key-value pairs to apply to this resource.\n     *\n     * For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflow.html#cfn-connect-contactflow-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * The type of the contact flow. For descriptions of the available types, see [Choose a Contact Flow Type](https://docs.aws.amazon.com/connect/latest/adminguide/create-contact-flow.html#contact-flow-types) in the *Amazon Connect Administrator Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflow.html#cfn-connect-contactflow-type\n     */\n    public type: string | undefined;\n\n    /**\n     * Create a new `AWS::Connect::ContactFlow`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnContactFlowProps) {\n        super(scope, id, { type: CfnContactFlow.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'content', this);\n        cdk.requireProperty(props, 'instanceArn', this);\n        cdk.requireProperty(props, 'name', this);\n        this.attrContactFlowArn = cdk.Token.asString(this.getAtt('ContactFlowArn'));\n\n        this.content = props.content;\n        this.instanceArn = props.instanceArn;\n        this.name = props.name;\n        this.description = props.description;\n        this.state = props.state;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::Connect::ContactFlow\", props.tags, { tagPropertyName: 'tags' });\n        this.type = props.type;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnContactFlow.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            content: this.content,\n            instanceArn: this.instanceArn,\n            name: this.name,\n            description: this.description,\n            state: this.state,\n            tags: this.tags.renderTags(),\n            type: this.type,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnContactFlowPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnContactFlowModule`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflowmodule.html\n */\nexport interface CfnContactFlowModuleProps {\n\n    /**\n     * The content of the contact flow module.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflowmodule.html#cfn-connect-contactflowmodule-content\n     */\n    readonly content: string;\n\n    /**\n     * The Amazon Resource Name (ARN) of the Amazon Connect instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflowmodule.html#cfn-connect-contactflowmodule-instancearn\n     */\n    readonly instanceArn: string;\n\n    /**\n     * The name of the contact flow module.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflowmodule.html#cfn-connect-contactflowmodule-name\n     */\n    readonly name: string;\n\n    /**\n     * The description of the contact flow module.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflowmodule.html#cfn-connect-contactflowmodule-description\n     */\n    readonly description?: string;\n\n    /**\n     * The state of the contact flow module.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflowmodule.html#cfn-connect-contactflowmodule-state\n     */\n    readonly state?: string;\n\n    /**\n     * An array of key-value pairs to apply to this resource.\n     *\n     * For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflowmodule.html#cfn-connect-contactflowmodule-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnContactFlowModuleProps`\n *\n * @param properties - the TypeScript properties of a `CfnContactFlowModuleProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnContactFlowModulePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('content', cdk.requiredValidator)(properties.content));\n    errors.collect(cdk.propertyValidator('content', cdk.validateString)(properties.content));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('instanceArn', cdk.requiredValidator)(properties.instanceArn));\n    errors.collect(cdk.propertyValidator('instanceArn', cdk.validateString)(properties.instanceArn));\n    errors.collect(cdk.propertyValidator('name', cdk.requiredValidator)(properties.name));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('state', cdk.validateString)(properties.state));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnContactFlowModuleProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Connect::ContactFlowModule` resource\n *\n * @param properties - the TypeScript properties of a `CfnContactFlowModuleProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Connect::ContactFlowModule` resource.\n */\n// @ts-ignore TS6133\nfunction cfnContactFlowModulePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnContactFlowModulePropsValidator(properties).assertSuccess();\n    return {\n        Content: cdk.stringToCloudFormation(properties.content),\n        InstanceArn: cdk.stringToCloudFormation(properties.instanceArn),\n        Name: cdk.stringToCloudFormation(properties.name),\n        Description: cdk.stringToCloudFormation(properties.description),\n        State: cdk.stringToCloudFormation(properties.state),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnContactFlowModulePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnContactFlowModuleProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnContactFlowModuleProps>();\n    ret.addPropertyResult('content', 'Content', cfn_parse.FromCloudFormation.getString(properties.Content));\n    ret.addPropertyResult('instanceArn', 'InstanceArn', cfn_parse.FromCloudFormation.getString(properties.InstanceArn));\n    ret.addPropertyResult('name', 'Name', cfn_parse.FromCloudFormation.getString(properties.Name));\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('state', 'State', properties.State != null ? cfn_parse.FromCloudFormation.getString(properties.State) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::Connect::ContactFlowModule`\n *\n * The `AWS::Connect::ContactFlowModule` resource specifies a contact flow module for the specified Amazon Connect instance.\n *\n * @cloudformationResource AWS::Connect::ContactFlowModule\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflowmodule.html\n */\nexport class CfnContactFlowModule extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Connect::ContactFlowModule\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnContactFlowModule {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnContactFlowModulePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnContactFlowModule(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * `Ref` returns the contact flow module Amazon Resource Name (ARN). For example:\n     *\n     * `{ \"Ref\": \"myContactFlowModuleArn\" }`\n     * @cloudformationAttribute ContactFlowModuleArn\n     */\n    public readonly attrContactFlowModuleArn: string;\n\n    /**\n     *\n     * @cloudformationAttribute Status\n     */\n    public readonly attrStatus: string;\n\n    /**\n     * The content of the contact flow module.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflowmodule.html#cfn-connect-contactflowmodule-content\n     */\n    public content: string;\n\n    /**\n     * The Amazon Resource Name (ARN) of the Amazon Connect instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflowmodule.html#cfn-connect-contactflowmodule-instancearn\n     */\n    public instanceArn: string;\n\n    /**\n     * The name of the contact flow module.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflowmodule.html#cfn-connect-contactflowmodule-name\n     */\n    public name: string;\n\n    /**\n     * The description of the contact flow module.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflowmodule.html#cfn-connect-contactflowmodule-description\n     */\n    public description: string | undefined;\n\n    /**\n     * The state of the contact flow module.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflowmodule.html#cfn-connect-contactflowmodule-state\n     */\n    public state: string | undefined;\n\n    /**\n     * An array of key-value pairs to apply to this resource.\n     *\n     * For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflowmodule.html#cfn-connect-contactflowmodule-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::Connect::ContactFlowModule`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnContactFlowModuleProps) {\n        super(scope, id, { type: CfnContactFlowModule.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'content', this);\n        cdk.requireProperty(props, 'instanceArn', this);\n        cdk.requireProperty(props, 'name', this);\n        this.attrContactFlowModuleArn = cdk.Token.asString(this.getAtt('ContactFlowModuleArn'));\n        this.attrStatus = cdk.Token.asString(this.getAtt('Status'));\n\n        this.content = props.content;\n        this.instanceArn = props.instanceArn;\n        this.name = props.name;\n        this.description = props.description;\n        this.state = props.state;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::Connect::ContactFlowModule\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnContactFlowModule.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            content: this.content,\n            instanceArn: this.instanceArn,\n            name: this.name,\n            description: this.description,\n            state: this.state,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnContactFlowModulePropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnHoursOfOperation`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-hoursofoperation.html\n */\nexport interface CfnHoursOfOperationProps {\n\n    /**\n     * Configuration information for the hours of operation.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-hoursofoperation.html#cfn-connect-hoursofoperation-config\n     */\n    readonly config: Array<CfnHoursOfOperation.HoursOfOperationConfigProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * The Amazon Resource Name (ARN) for the instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-hoursofoperation.html#cfn-connect-hoursofoperation-instancearn\n     */\n    readonly instanceArn: string;\n\n    /**\n     * The name for the hours of operation.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-hoursofoperation.html#cfn-connect-hoursofoperation-name\n     */\n    readonly name: string;\n\n    /**\n     * The time zone for the hours of operation.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-hoursofoperation.html#cfn-connect-hoursofoperation-timezone\n     */\n    readonly timeZone: string;\n\n    /**\n     * The description for the hours of operation.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-hoursofoperation.html#cfn-connect-hoursofoperation-description\n     */\n    readonly description?: string;\n\n    /**\n     * The tags used to organize, track, or control access for this resource.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-hoursofoperation.html#cfn-connect-hoursofoperation-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnHoursOfOperationProps`\n *\n * @param properties - the TypeScript properties of a `CfnHoursOfOperationProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnHoursOfOperationPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('config', cdk.requiredValidator)(properties.config));\n    errors.collect(cdk.propertyValidator('config', cdk.listValidator(CfnHoursOfOperation_HoursOfOperationConfigPropertyValidator))(properties.config));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('instanceArn', cdk.requiredValidator)(properties.instanceArn));\n    errors.collect(cdk.propertyValidator('instanceArn', cdk.validateString)(properties.instanceArn));\n    errors.collect(cdk.propertyValidator('name', cdk.requiredValidator)(properties.name));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('timeZone', cdk.requiredValidator)(properties.timeZone));\n    errors.collect(cdk.propertyValidator('timeZone', cdk.validateString)(properties.timeZone));\n    return errors.wrap('supplied properties not correct for \"CfnHoursOfOperationProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Connect::HoursOfOperation` resource\n *\n * @param properties - the TypeScript properties of a `CfnHoursOfOperationProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Connect::HoursOfOperation` resource.\n */\n// @ts-ignore TS6133\nfunction cfnHoursOfOperationPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnHoursOfOperationPropsValidator(properties).assertSuccess();\n    return {\n        Config: cdk.listMapper(cfnHoursOfOperationHoursOfOperationConfigPropertyToCloudFormation)(properties.config),\n        InstanceArn: cdk.stringToCloudFormation(properties.instanceArn),\n        Name: cdk.stringToCloudFormation(properties.name),\n        TimeZone: cdk.stringToCloudFormation(properties.timeZone),\n        Description: cdk.stringToCloudFormation(properties.description),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnHoursOfOperationPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnHoursOfOperationProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnHoursOfOperationProps>();\n    ret.addPropertyResult('config', 'Config', cfn_parse.FromCloudFormation.getArray(CfnHoursOfOperationHoursOfOperationConfigPropertyFromCloudFormation)(properties.Config));\n    ret.addPropertyResult('instanceArn', 'InstanceArn', cfn_parse.FromCloudFormation.getString(properties.InstanceArn));\n    ret.addPropertyResult('name', 'Name', cfn_parse.FromCloudFormation.getString(properties.Name));\n    ret.addPropertyResult('timeZone', 'TimeZone', cfn_parse.FromCloudFormation.getString(properties.TimeZone));\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::Connect::HoursOfOperation`\n *\n * Creates hours of operation.\n *\n * @cloudformationResource AWS::Connect::HoursOfOperation\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-hoursofoperation.html\n */\nexport class CfnHoursOfOperation extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Connect::HoursOfOperation\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnHoursOfOperation {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnHoursOfOperationPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnHoursOfOperation(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The Amazon Resource Name (ARN) for the hours of operation.\n     * @cloudformationAttribute HoursOfOperationArn\n     */\n    public readonly attrHoursOfOperationArn: string;\n\n    /**\n     * Configuration information for the hours of operation.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-hoursofoperation.html#cfn-connect-hoursofoperation-config\n     */\n    public config: Array<CfnHoursOfOperation.HoursOfOperationConfigProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * The Amazon Resource Name (ARN) for the instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-hoursofoperation.html#cfn-connect-hoursofoperation-instancearn\n     */\n    public instanceArn: string;\n\n    /**\n     * The name for the hours of operation.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-hoursofoperation.html#cfn-connect-hoursofoperation-name\n     */\n    public name: string;\n\n    /**\n     * The time zone for the hours of operation.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-hoursofoperation.html#cfn-connect-hoursofoperation-timezone\n     */\n    public timeZone: string;\n\n    /**\n     * The description for the hours of operation.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-hoursofoperation.html#cfn-connect-hoursofoperation-description\n     */\n    public description: string | undefined;\n\n    /**\n     * The tags used to organize, track, or control access for this resource.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-hoursofoperation.html#cfn-connect-hoursofoperation-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::Connect::HoursOfOperation`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnHoursOfOperationProps) {\n        super(scope, id, { type: CfnHoursOfOperation.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'config', this);\n        cdk.requireProperty(props, 'instanceArn', this);\n        cdk.requireProperty(props, 'name', this);\n        cdk.requireProperty(props, 'timeZone', this);\n        this.attrHoursOfOperationArn = cdk.Token.asString(this.getAtt('HoursOfOperationArn'));\n\n        this.config = props.config;\n        this.instanceArn = props.instanceArn;\n        this.name = props.name;\n        this.timeZone = props.timeZone;\n        this.description = props.description;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::Connect::HoursOfOperation\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnHoursOfOperation.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            config: this.config,\n            instanceArn: this.instanceArn,\n            name: this.name,\n            timeZone: this.timeZone,\n            description: this.description,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnHoursOfOperationPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnHoursOfOperation {\n    /**\n     * Contains information about the hours of operation.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-hoursofoperation-hoursofoperationconfig.html\n     */\n    export interface HoursOfOperationConfigProperty {\n        /**\n         * The day that the hours of operation applies to.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-hoursofoperation-hoursofoperationconfig.html#cfn-connect-hoursofoperation-hoursofoperationconfig-day\n         */\n        readonly day: string;\n        /**\n         * The end time that your contact center closes.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-hoursofoperation-hoursofoperationconfig.html#cfn-connect-hoursofoperation-hoursofoperationconfig-endtime\n         */\n        readonly endTime: CfnHoursOfOperation.HoursOfOperationTimeSliceProperty | cdk.IResolvable;\n        /**\n         * The start time that your contact center opens.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-hoursofoperation-hoursofoperationconfig.html#cfn-connect-hoursofoperation-hoursofoperationconfig-starttime\n         */\n        readonly startTime: CfnHoursOfOperation.HoursOfOperationTimeSliceProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `HoursOfOperationConfigProperty`\n *\n * @param properties - the TypeScript properties of a `HoursOfOperationConfigProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnHoursOfOperation_HoursOfOperationConfigPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('day', cdk.requiredValidator)(properties.day));\n    errors.collect(cdk.propertyValidator('day', cdk.validateString)(properties.day));\n    errors.collect(cdk.propertyValidator('endTime', cdk.requiredValidator)(properties.endTime));\n    errors.collect(cdk.propertyValidator('endTime', CfnHoursOfOperation_HoursOfOperationTimeSlicePropertyValidator)(properties.endTime));\n    errors.collect(cdk.propertyValidator('startTime', cdk.requiredValidator)(properties.startTime));\n    errors.collect(cdk.propertyValidator('startTime', CfnHoursOfOperation_HoursOfOperationTimeSlicePropertyValidator)(properties.startTime));\n    return errors.wrap('supplied properties not correct for \"HoursOfOperationConfigProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Connect::HoursOfOperation.HoursOfOperationConfig` resource\n *\n * @param properties - the TypeScript properties of a `HoursOfOperationConfigProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Connect::HoursOfOperation.HoursOfOperationConfig` resource.\n */\n// @ts-ignore TS6133\nfunction cfnHoursOfOperationHoursOfOperationConfigPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnHoursOfOperation_HoursOfOperationConfigPropertyValidator(properties).assertSuccess();\n    return {\n        Day: cdk.stringToCloudFormation(properties.day),\n        EndTime: cfnHoursOfOperationHoursOfOperationTimeSlicePropertyToCloudFormation(properties.endTime),\n        StartTime: cfnHoursOfOperationHoursOfOperationTimeSlicePropertyToCloudFormation(properties.startTime),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnHoursOfOperationHoursOfOperationConfigPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnHoursOfOperation.HoursOfOperationConfigProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnHoursOfOperation.HoursOfOperationConfigProperty>();\n    ret.addPropertyResult('day', 'Day', cfn_parse.FromCloudFormation.getString(properties.Day));\n    ret.addPropertyResult('endTime', 'EndTime', CfnHoursOfOperationHoursOfOperationTimeSlicePropertyFromCloudFormation(properties.EndTime));\n    ret.addPropertyResult('startTime', 'StartTime', CfnHoursOfOperationHoursOfOperationTimeSlicePropertyFromCloudFormation(properties.StartTime));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnHoursOfOperation {\n    /**\n     * The start time or end time for an hours of operation.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-hoursofoperation-hoursofoperationtimeslice.html\n     */\n    export interface HoursOfOperationTimeSliceProperty {\n        /**\n         * The hours.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-hoursofoperation-hoursofoperationtimeslice.html#cfn-connect-hoursofoperation-hoursofoperationtimeslice-hours\n         */\n        readonly hours: number;\n        /**\n         * The minutes.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-hoursofoperation-hoursofoperationtimeslice.html#cfn-connect-hoursofoperation-hoursofoperationtimeslice-minutes\n         */\n        readonly minutes: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `HoursOfOperationTimeSliceProperty`\n *\n * @param properties - the TypeScript properties of a `HoursOfOperationTimeSliceProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnHoursOfOperation_HoursOfOperationTimeSlicePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('hours', cdk.requiredValidator)(properties.hours));\n    errors.collect(cdk.propertyValidator('hours', cdk.validateNumber)(properties.hours));\n    errors.collect(cdk.propertyValidator('minutes', cdk.requiredValidator)(properties.minutes));\n    errors.collect(cdk.propertyValidator('minutes', cdk.validateNumber)(properties.minutes));\n    return errors.wrap('supplied properties not correct for \"HoursOfOperationTimeSliceProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Connect::HoursOfOperation.HoursOfOperationTimeSlice` resource\n *\n * @param properties - the TypeScript properties of a `HoursOfOperationTimeSliceProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Connect::HoursOfOperation.HoursOfOperationTimeSlice` resource.\n */\n// @ts-ignore TS6133\nfunction cfnHoursOfOperationHoursOfOperationTimeSlicePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnHoursOfOperation_HoursOfOperationTimeSlicePropertyValidator(properties).assertSuccess();\n    return {\n        Hours: cdk.numberToCloudFormation(properties.hours),\n        Minutes: cdk.numberToCloudFormation(properties.minutes),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnHoursOfOperationHoursOfOperationTimeSlicePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnHoursOfOperation.HoursOfOperationTimeSliceProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnHoursOfOperation.HoursOfOperationTimeSliceProperty>();\n    ret.addPropertyResult('hours', 'Hours', cfn_parse.FromCloudFormation.getNumber(properties.Hours));\n    ret.addPropertyResult('minutes', 'Minutes', cfn_parse.FromCloudFormation.getNumber(properties.Minutes));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnQuickConnect`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html\n */\nexport interface CfnQuickConnectProps {\n\n    /**\n     * The Amazon Resource Name (ARN) of the instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-instancearn\n     */\n    readonly instanceArn: string;\n\n    /**\n     * The name of the quick connect.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-name\n     */\n    readonly name: string;\n\n    /**\n     * Contains information about the quick connect.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-quickconnectconfig\n     */\n    readonly quickConnectConfig: CfnQuickConnect.QuickConnectConfigProperty | cdk.IResolvable;\n\n    /**\n     * The description of the quick connect.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-description\n     */\n    readonly description?: string;\n\n    /**\n     * The tags used to organize, track, or control access for this resource.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnQuickConnectProps`\n *\n * @param properties - the TypeScript properties of a `CfnQuickConnectProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnQuickConnectPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('instanceArn', cdk.requiredValidator)(properties.instanceArn));\n    errors.collect(cdk.propertyValidator('instanceArn', cdk.validateString)(properties.instanceArn));\n    errors.collect(cdk.propertyValidator('name', cdk.requiredValidator)(properties.name));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('quickConnectConfig', cdk.requiredValidator)(properties.quickConnectConfig));\n    errors.collect(cdk.propertyValidator('quickConnectConfig', CfnQuickConnect_QuickConnectConfigPropertyValidator)(properties.quickConnectConfig));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnQuickConnectProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Connect::QuickConnect` resource\n *\n * @param properties - the TypeScript properties of a `CfnQuickConnectProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Connect::QuickConnect` resource.\n */\n// @ts-ignore TS6133\nfunction cfnQuickConnectPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnQuickConnectPropsValidator(properties).assertSuccess();\n    return {\n        InstanceArn: cdk.stringToCloudFormation(properties.instanceArn),\n        Name: cdk.stringToCloudFormation(properties.name),\n        QuickConnectConfig: cfnQuickConnectQuickConnectConfigPropertyToCloudFormation(properties.quickConnectConfig),\n        Description: cdk.stringToCloudFormation(properties.description),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnQuickConnectPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnQuickConnectProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnQuickConnectProps>();\n    ret.addPropertyResult('instanceArn', 'InstanceArn', cfn_parse.FromCloudFormation.getString(properties.InstanceArn));\n    ret.addPropertyResult('name', 'Name', cfn_parse.FromCloudFormation.getString(properties.Name));\n    ret.addPropertyResult('quickConnectConfig', 'QuickConnectConfig', CfnQuickConnectQuickConnectConfigPropertyFromCloudFormation(properties.QuickConnectConfig));\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::Connect::QuickConnect`\n *\n * The `AWS::Connect::QuickConnnect` resource specifies a quick connect for the specified Amazon Connect instance.\n *\n * @cloudformationResource AWS::Connect::QuickConnect\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html\n */\nexport class CfnQuickConnect extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Connect::QuickConnect\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnQuickConnect {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnQuickConnectPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnQuickConnect(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The Amazon Resource Name (ARN) of the quick connect.\n     * @cloudformationAttribute QuickConnectArn\n     */\n    public readonly attrQuickConnectArn: string;\n\n    /**\n     * The Amazon Resource Name (ARN) of the instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-instancearn\n     */\n    public instanceArn: string;\n\n    /**\n     * The name of the quick connect.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-name\n     */\n    public name: string;\n\n    /**\n     * Contains information about the quick connect.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-quickconnectconfig\n     */\n    public quickConnectConfig: CfnQuickConnect.QuickConnectConfigProperty | cdk.IResolvable;\n\n    /**\n     * The description of the quick connect.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-description\n     */\n    public description: string | undefined;\n\n    /**\n     * The tags used to organize, track, or control access for this resource.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::Connect::QuickConnect`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnQuickConnectProps) {\n        super(scope, id, { type: CfnQuickConnect.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'instanceArn', this);\n        cdk.requireProperty(props, 'name', this);\n        cdk.requireProperty(props, 'quickConnectConfig', this);\n        this.attrQuickConnectArn = cdk.Token.asString(this.getAtt('QuickConnectArn'));\n\n        this.instanceArn = props.instanceArn;\n        this.name = props.name;\n        this.quickConnectConfig = props.quickConnectConfig;\n        this.description = props.description;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::Connect::QuickConnect\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnQuickConnect.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            instanceArn: this.instanceArn,\n            name: this.name,\n            quickConnectConfig: this.quickConnectConfig,\n            description: this.description,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnQuickConnectPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnQuickConnect {\n    /**\n     * Contains information about a phone number for a quick connect.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-quickconnect-phonenumberquickconnectconfig.html\n     */\n    export interface PhoneNumberQuickConnectConfigProperty {\n        /**\n         * The phone number in E.164 format.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-quickconnect-phonenumberquickconnectconfig.html#cfn-connect-quickconnect-phonenumberquickconnectconfig-phonenumber\n         */\n        readonly phoneNumber: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `PhoneNumberQuickConnectConfigProperty`\n *\n * @param properties - the TypeScript properties of a `PhoneNumberQuickConnectConfigProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnQuickConnect_PhoneNumberQuickConnectConfigPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('phoneNumber', cdk.requiredValidator)(properties.phoneNumber));\n    errors.collect(cdk.propertyValidator('phoneNumber', cdk.validateString)(properties.phoneNumber));\n    return errors.wrap('supplied properties not correct for \"PhoneNumberQuickConnectConfigProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Connect::QuickConnect.PhoneNumberQuickConnectConfig` resource\n *\n * @param properties - the TypeScript properties of a `PhoneNumberQuickConnectConfigProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Connect::QuickConnect.PhoneNumberQuickConnectConfig` resource.\n */\n// @ts-ignore TS6133\nfunction cfnQuickConnectPhoneNumberQuickConnectConfigPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnQuickConnect_PhoneNumberQuickConnectConfigPropertyValidator(properties).assertSuccess();\n    return {\n        PhoneNumber: cdk.stringToCloudFormation(properties.phoneNumber),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnQuickConnectPhoneNumberQuickConnectConfigPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnQuickConnect.PhoneNumberQuickConnectConfigProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnQuickConnect.PhoneNumberQuickConnectConfigProperty>();\n    ret.addPropertyResult('phoneNumber', 'PhoneNumber', cfn_parse.FromCloudFormation.getString(properties.PhoneNumber));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnQuickConnect {\n    /**\n     * Contains information about a queue for a quick connect. The contact flow must be of type Transfer to Queue.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-quickconnect-queuequickconnectconfig.html\n     */\n    export interface QueueQuickConnectConfigProperty {\n        /**\n         * The Amazon Resource Name (ARN) of the contact flow.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-quickconnect-queuequickconnectconfig.html#cfn-connect-quickconnect-queuequickconnectconfig-contactflowarn\n         */\n        readonly contactFlowArn: string;\n        /**\n         * The Amazon Resource Name (ARN) of the queue.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-quickconnect-queuequickconnectconfig.html#cfn-connect-quickconnect-queuequickconnectconfig-queuearn\n         */\n        readonly queueArn: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `QueueQuickConnectConfigProperty`\n *\n * @param properties - the TypeScript properties of a `QueueQuickConnectConfigProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnQuickConnect_QueueQuickConnectConfigPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('contactFlowArn', cdk.requiredValidator)(properties.contactFlowArn));\n    errors.collect(cdk.propertyValidator('contactFlowArn', cdk.validateString)(properties.contactFlowArn));\n    errors.collect(cdk.propertyValidator('queueArn', cdk.requiredValidator)(properties.queueArn));\n    errors.collect(cdk.propertyValidator('queueArn', cdk.validateString)(properties.queueArn));\n    return errors.wrap('supplied properties not correct for \"QueueQuickConnectConfigProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Connect::QuickConnect.QueueQuickConnectConfig` resource\n *\n * @param properties - the TypeScript properties of a `QueueQuickConnectConfigProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Connect::QuickConnect.QueueQuickConnectConfig` resource.\n */\n// @ts-ignore TS6133\nfunction cfnQuickConnectQueueQuickConnectConfigPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnQuickConnect_QueueQuickConnectConfigPropertyValidator(properties).assertSuccess();\n    return {\n        ContactFlowArn: cdk.stringToCloudFormation(properties.contactFlowArn),\n        QueueArn: cdk.stringToCloudFormation(properties.queueArn),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnQuickConnectQueueQuickConnectConfigPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnQuickConnect.QueueQuickConnectConfigProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnQuickConnect.QueueQuickConnectConfigProperty>();\n    ret.addPropertyResult('contactFlowArn', 'ContactFlowArn', cfn_parse.FromCloudFormation.getString(properties.ContactFlowArn));\n    ret.addPropertyResult('queueArn', 'QueueArn', cfn_parse.FromCloudFormation.getString(properties.QueueArn));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnQuickConnect {\n    /**\n     * Contains configuration settings for a quick connect.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-quickconnect-quickconnectconfig.html\n     */\n    export interface QuickConnectConfigProperty {\n        /**\n         * The phone configuration. This is required only if QuickConnectType is PHONE_NUMBER.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-quickconnect-quickconnectconfig.html#cfn-connect-quickconnect-quickconnectconfig-phoneconfig\n         */\n        readonly phoneConfig?: CfnQuickConnect.PhoneNumberQuickConnectConfigProperty | cdk.IResolvable;\n        /**\n         * The queue configuration. This is required only if QuickConnectType is QUEUE.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-quickconnect-quickconnectconfig.html#cfn-connect-quickconnect-quickconnectconfig-queueconfig\n         */\n        readonly queueConfig?: CfnQuickConnect.QueueQuickConnectConfigProperty | cdk.IResolvable;\n        /**\n         * The type of quick connect. In the Amazon Connect console, when you create a quick connect, you are prompted to assign one of the following types: Agent (USER), External (PHONE_NUMBER), or Queue (QUEUE).\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-quickconnect-quickconnectconfig.html#cfn-connect-quickconnect-quickconnectconfig-quickconnecttype\n         */\n        readonly quickConnectType: string;\n        /**\n         * The user configuration. This is required only if QuickConnectType is USER.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-quickconnect-quickconnectconfig.html#cfn-connect-quickconnect-quickconnectconfig-userconfig\n         */\n        readonly userConfig?: CfnQuickConnect.UserQuickConnectConfigProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `QuickConnectConfigProperty`\n *\n * @param properties - the TypeScript properties of a `QuickConnectConfigProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnQuickConnect_QuickConnectConfigPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('phoneConfig', CfnQuickConnect_PhoneNumberQuickConnectConfigPropertyValidator)(properties.phoneConfig));\n    errors.collect(cdk.propertyValidator('queueConfig', CfnQuickConnect_QueueQuickConnectConfigPropertyValidator)(properties.queueConfig));\n    errors.collect(cdk.propertyValidator('quickConnectType', cdk.requiredValidator)(properties.quickConnectType));\n    errors.collect(cdk.propertyValidator('quickConnectType', cdk.validateString)(properties.quickConnectType));\n    errors.collect(cdk.propertyValidator('userConfig', CfnQuickConnect_UserQuickConnectConfigPropertyValidator)(properties.userConfig));\n    return errors.wrap('supplied properties not correct for \"QuickConnectConfigProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Connect::QuickConnect.QuickConnectConfig` resource\n *\n * @param properties - the TypeScript properties of a `QuickConnectConfigProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Connect::QuickConnect.QuickConnectConfig` resource.\n */\n// @ts-ignore TS6133\nfunction cfnQuickConnectQuickConnectConfigPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnQuickConnect_QuickConnectConfigPropertyValidator(properties).assertSuccess();\n    return {\n        PhoneConfig: cfnQuickConnectPhoneNumberQuickConnectConfigPropertyToCloudFormation(properties.phoneConfig),\n        QueueConfig: cfnQuickConnectQueueQuickConnectConfigPropertyToCloudFormation(properties.queueConfig),\n        QuickConnectType: cdk.stringToCloudFormation(properties.quickConnectType),\n        UserConfig: cfnQuickConnectUserQuickConnectConfigPropertyToCloudFormation(properties.userConfig),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnQuickConnectQuickConnectConfigPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnQuickConnect.QuickConnectConfigProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnQuickConnect.QuickConnectConfigProperty>();\n    ret.addPropertyResult('phoneConfig', 'PhoneConfig', properties.PhoneConfig != null ? CfnQuickConnectPhoneNumberQuickConnectConfigPropertyFromCloudFormation(properties.PhoneConfig) : undefined);\n    ret.addPropertyResult('queueConfig', 'QueueConfig', properties.QueueConfig != null ? CfnQuickConnectQueueQuickConnectConfigPropertyFromCloudFormation(properties.QueueConfig) : undefined);\n    ret.addPropertyResult('quickConnectType', 'QuickConnectType', cfn_parse.FromCloudFormation.getString(properties.QuickConnectType));\n    ret.addPropertyResult('userConfig', 'UserConfig', properties.UserConfig != null ? CfnQuickConnectUserQuickConnectConfigPropertyFromCloudFormation(properties.UserConfig) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnQuickConnect {\n    /**\n     * Contains information about the quick connect configuration settings for a user. The contact flow must be of type Transfer to Agent.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-quickconnect-userquickconnectconfig.html\n     */\n    export interface UserQuickConnectConfigProperty {\n        /**\n         * The Amazon Resource Name (ARN) of the contact flow.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-quickconnect-userquickconnectconfig.html#cfn-connect-quickconnect-userquickconnectconfig-contactflowarn\n         */\n        readonly contactFlowArn: string;\n        /**\n         * The Amazon Resource Name (ARN) of the user.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-quickconnect-userquickconnectconfig.html#cfn-connect-quickconnect-userquickconnectconfig-userarn\n         */\n        readonly userArn: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `UserQuickConnectConfigProperty`\n *\n * @param properties - the TypeScript properties of a `UserQuickConnectConfigProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnQuickConnect_UserQuickConnectConfigPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('contactFlowArn', cdk.requiredValidator)(properties.contactFlowArn));\n    errors.collect(cdk.propertyValidator('contactFlowArn', cdk.validateString)(properties.contactFlowArn));\n    errors.collect(cdk.propertyValidator('userArn', cdk.requiredValidator)(properties.userArn));\n    errors.collect(cdk.propertyValidator('userArn', cdk.validateString)(properties.userArn));\n    return errors.wrap('supplied properties not correct for \"UserQuickConnectConfigProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Connect::QuickConnect.UserQuickConnectConfig` resource\n *\n * @param properties - the TypeScript properties of a `UserQuickConnectConfigProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Connect::QuickConnect.UserQuickConnectConfig` resource.\n */\n// @ts-ignore TS6133\nfunction cfnQuickConnectUserQuickConnectConfigPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnQuickConnect_UserQuickConnectConfigPropertyValidator(properties).assertSuccess();\n    return {\n        ContactFlowArn: cdk.stringToCloudFormation(properties.contactFlowArn),\n        UserArn: cdk.stringToCloudFormation(properties.userArn),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnQuickConnectUserQuickConnectConfigPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnQuickConnect.UserQuickConnectConfigProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnQuickConnect.UserQuickConnectConfigProperty>();\n    ret.addPropertyResult('contactFlowArn', 'ContactFlowArn', cfn_parse.FromCloudFormation.getString(properties.ContactFlowArn));\n    ret.addPropertyResult('userArn', 'UserArn', cfn_parse.FromCloudFormation.getString(properties.UserArn));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnUser`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html\n */\nexport interface CfnUserProps {\n\n    /**\n     * The Amazon Resource Name (ARN) of the instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-instancearn\n     */\n    readonly instanceArn: string;\n\n    /**\n     * Information about the phone configuration for the user.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-phoneconfig\n     */\n    readonly phoneConfig: CfnUser.UserPhoneConfigProperty | cdk.IResolvable;\n\n    /**\n     * The Amazon Resource Name (ARN) of the user's routing profile.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-routingprofilearn\n     */\n    readonly routingProfileArn: string;\n\n    /**\n     * The Amazon Resource Name (ARN) of the user's security profile.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-securityprofilearns\n     */\n    readonly securityProfileArns: string[];\n\n    /**\n     * The user name assigned to the user account.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-username\n     */\n    readonly username: string;\n\n    /**\n     * The identifier of the user account in the directory used for identity management.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-directoryuserid\n     */\n    readonly directoryUserId?: string;\n\n    /**\n     * The Amazon Resource Name (ARN) of the user's hierarchy group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-hierarchygrouparn\n     */\n    readonly hierarchyGroupArn?: string;\n\n    /**\n     * Information about the user identity.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-identityinfo\n     */\n    readonly identityInfo?: CfnUser.UserIdentityInfoProperty | cdk.IResolvable;\n\n    /**\n     * The user's password.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-password\n     */\n    readonly password?: string;\n\n    /**\n     * The tags.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnUserProps`\n *\n * @param properties - the TypeScript properties of a `CfnUserProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnUserPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('directoryUserId', cdk.validateString)(properties.directoryUserId));\n    errors.collect(cdk.propertyValidator('hierarchyGroupArn', cdk.validateString)(properties.hierarchyGroupArn));\n    errors.collect(cdk.propertyValidator('identityInfo', CfnUser_UserIdentityInfoPropertyValidator)(properties.identityInfo));\n    errors.collect(cdk.propertyValidator('instanceArn', cdk.requiredValidator)(properties.instanceArn));\n    errors.collect(cdk.propertyValidator('instanceArn', cdk.validateString)(properties.instanceArn));\n    errors.collect(cdk.propertyValidator('password', cdk.validateString)(properties.password));\n    errors.collect(cdk.propertyValidator('phoneConfig', cdk.requiredValidator)(properties.phoneConfig));\n    errors.collect(cdk.propertyValidator('phoneConfig', CfnUser_UserPhoneConfigPropertyValidator)(properties.phoneConfig));\n    errors.collect(cdk.propertyValidator('routingProfileArn', cdk.requiredValidator)(properties.routingProfileArn));\n    errors.collect(cdk.propertyValidator('routingProfileArn', cdk.validateString)(properties.routingProfileArn));\n    errors.collect(cdk.propertyValidator('securityProfileArns', cdk.requiredValidator)(properties.securityProfileArns));\n    errors.collect(cdk.propertyValidator('securityProfileArns', cdk.listValidator(cdk.validateString))(properties.securityProfileArns));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('username', cdk.requiredValidator)(properties.username));\n    errors.collect(cdk.propertyValidator('username', cdk.validateString)(properties.username));\n    return errors.wrap('supplied properties not correct for \"CfnUserProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Connect::User` resource\n *\n * @param properties - the TypeScript properties of a `CfnUserProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Connect::User` resource.\n */\n// @ts-ignore TS6133\nfunction cfnUserPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnUserPropsValidator(properties).assertSuccess();\n    return {\n        InstanceArn: cdk.stringToCloudFormation(properties.instanceArn),\n        PhoneConfig: cfnUserUserPhoneConfigPropertyToCloudFormation(properties.phoneConfig),\n        RoutingProfileArn: cdk.stringToCloudFormation(properties.routingProfileArn),\n        SecurityProfileArns: cdk.listMapper(cdk.stringToCloudFormation)(properties.securityProfileArns),\n        Username: cdk.stringToCloudFormation(properties.username),\n        DirectoryUserId: cdk.stringToCloudFormation(properties.directoryUserId),\n        HierarchyGroupArn: cdk.stringToCloudFormation(properties.hierarchyGroupArn),\n        IdentityInfo: cfnUserUserIdentityInfoPropertyToCloudFormation(properties.identityInfo),\n        Password: cdk.stringToCloudFormation(properties.password),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnUserPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnUserProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnUserProps>();\n    ret.addPropertyResult('instanceArn', 'InstanceArn', cfn_parse.FromCloudFormation.getString(properties.InstanceArn));\n    ret.addPropertyResult('phoneConfig', 'PhoneConfig', CfnUserUserPhoneConfigPropertyFromCloudFormation(properties.PhoneConfig));\n    ret.addPropertyResult('routingProfileArn', 'RoutingProfileArn', cfn_parse.FromCloudFormation.getString(properties.RoutingProfileArn));\n    ret.addPropertyResult('securityProfileArns', 'SecurityProfileArns', cfn_parse.FromCloudFormation.getStringArray(properties.SecurityProfileArns));\n    ret.addPropertyResult('username', 'Username', cfn_parse.FromCloudFormation.getString(properties.Username));\n    ret.addPropertyResult('directoryUserId', 'DirectoryUserId', properties.DirectoryUserId != null ? cfn_parse.FromCloudFormation.getString(properties.DirectoryUserId) : undefined);\n    ret.addPropertyResult('hierarchyGroupArn', 'HierarchyGroupArn', properties.HierarchyGroupArn != null ? cfn_parse.FromCloudFormation.getString(properties.HierarchyGroupArn) : undefined);\n    ret.addPropertyResult('identityInfo', 'IdentityInfo', properties.IdentityInfo != null ? CfnUserUserIdentityInfoPropertyFromCloudFormation(properties.IdentityInfo) : undefined);\n    ret.addPropertyResult('password', 'Password', properties.Password != null ? cfn_parse.FromCloudFormation.getString(properties.Password) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::Connect::User`\n *\n * Creates a user account for the specified Amazon Connect instance.\n *\n * For information about how to create user accounts using the Amazon Connect console, see [Add Users](https://docs.aws.amazon.com/connect/latest/adminguide/user-management.html) in the *Amazon Connect Administrator Guide* .\n *\n * @cloudformationResource AWS::Connect::User\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html\n */\nexport class CfnUser extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Connect::User\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnUser {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnUserPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnUser(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The Amazon Resource Name (ARN) of the user.\n     * @cloudformationAttribute UserArn\n     */\n    public readonly attrUserArn: string;\n\n    /**\n     * The Amazon Resource Name (ARN) of the instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-instancearn\n     */\n    public instanceArn: string;\n\n    /**\n     * Information about the phone configuration for the user.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-phoneconfig\n     */\n    public phoneConfig: CfnUser.UserPhoneConfigProperty | cdk.IResolvable;\n\n    /**\n     * The Amazon Resource Name (ARN) of the user's routing profile.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-routingprofilearn\n     */\n    public routingProfileArn: string;\n\n    /**\n     * The Amazon Resource Name (ARN) of the user's security profile.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-securityprofilearns\n     */\n    public securityProfileArns: string[];\n\n    /**\n     * The user name assigned to the user account.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-username\n     */\n    public username: string;\n\n    /**\n     * The identifier of the user account in the directory used for identity management.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-directoryuserid\n     */\n    public directoryUserId: string | undefined;\n\n    /**\n     * The Amazon Resource Name (ARN) of the user's hierarchy group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-hierarchygrouparn\n     */\n    public hierarchyGroupArn: string | undefined;\n\n    /**\n     * Information about the user identity.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-identityinfo\n     */\n    public identityInfo: CfnUser.UserIdentityInfoProperty | cdk.IResolvable | undefined;\n\n    /**\n     * The user's password.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-password\n     */\n    public password: string | undefined;\n\n    /**\n     * The tags.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::Connect::User`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnUserProps) {\n        super(scope, id, { type: CfnUser.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'instanceArn', this);\n        cdk.requireProperty(props, 'phoneConfig', this);\n        cdk.requireProperty(props, 'routingProfileArn', this);\n        cdk.requireProperty(props, 'securityProfileArns', this);\n        cdk.requireProperty(props, 'username', this);\n        this.attrUserArn = cdk.Token.asString(this.getAtt('UserArn'));\n\n        this.instanceArn = props.instanceArn;\n        this.phoneConfig = props.phoneConfig;\n        this.routingProfileArn = props.routingProfileArn;\n        this.securityProfileArns = props.securityProfileArns;\n        this.username = props.username;\n        this.directoryUserId = props.directoryUserId;\n        this.hierarchyGroupArn = props.hierarchyGroupArn;\n        this.identityInfo = props.identityInfo;\n        this.password = props.password;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::Connect::User\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnUser.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            instanceArn: this.instanceArn,\n            phoneConfig: this.phoneConfig,\n            routingProfileArn: this.routingProfileArn,\n            securityProfileArns: this.securityProfileArns,\n            username: this.username,\n            directoryUserId: this.directoryUserId,\n            hierarchyGroupArn: this.hierarchyGroupArn,\n            identityInfo: this.identityInfo,\n            password: this.password,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnUserPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnUser {\n    /**\n     * Contains information about the identity of a user.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-user-useridentityinfo.html\n     */\n    export interface UserIdentityInfoProperty {\n        /**\n         * The email address. If you are using SAML for identity management and include this parameter, an error is returned.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-user-useridentityinfo.html#cfn-connect-user-useridentityinfo-email\n         */\n        readonly email?: string;\n        /**\n         * The first name. This is required if you are using Amazon Connect or SAML for identity management.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-user-useridentityinfo.html#cfn-connect-user-useridentityinfo-firstname\n         */\n        readonly firstName?: string;\n        /**\n         * The last name. This is required if you are using Amazon Connect or SAML for identity management.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-user-useridentityinfo.html#cfn-connect-user-useridentityinfo-lastname\n         */\n        readonly lastName?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `UserIdentityInfoProperty`\n *\n * @param properties - the TypeScript properties of a `UserIdentityInfoProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnUser_UserIdentityInfoPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('email', cdk.validateString)(properties.email));\n    errors.collect(cdk.propertyValidator('firstName', cdk.validateString)(properties.firstName));\n    errors.collect(cdk.propertyValidator('lastName', cdk.validateString)(properties.lastName));\n    return errors.wrap('supplied properties not correct for \"UserIdentityInfoProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Connect::User.UserIdentityInfo` resource\n *\n * @param properties - the TypeScript properties of a `UserIdentityInfoProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Connect::User.UserIdentityInfo` resource.\n */\n// @ts-ignore TS6133\nfunction cfnUserUserIdentityInfoPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnUser_UserIdentityInfoPropertyValidator(properties).assertSuccess();\n    return {\n        Email: cdk.stringToCloudFormation(properties.email),\n        FirstName: cdk.stringToCloudFormation(properties.firstName),\n        LastName: cdk.stringToCloudFormation(properties.lastName),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnUserUserIdentityInfoPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnUser.UserIdentityInfoProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnUser.UserIdentityInfoProperty>();\n    ret.addPropertyResult('email', 'Email', properties.Email != null ? cfn_parse.FromCloudFormation.getString(properties.Email) : undefined);\n    ret.addPropertyResult('firstName', 'FirstName', properties.FirstName != null ? cfn_parse.FromCloudFormation.getString(properties.FirstName) : undefined);\n    ret.addPropertyResult('lastName', 'LastName', properties.LastName != null ? cfn_parse.FromCloudFormation.getString(properties.LastName) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnUser {\n    /**\n     * Contains information about the phone configuration settings for a user.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-user-userphoneconfig.html\n     */\n    export interface UserPhoneConfigProperty {\n        /**\n         * The After Call Work (ACW) timeout setting, in seconds.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-user-userphoneconfig.html#cfn-connect-user-userphoneconfig-aftercontactworktimelimit\n         */\n        readonly afterContactWorkTimeLimit?: number;\n        /**\n         * The Auto accept setting.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-user-userphoneconfig.html#cfn-connect-user-userphoneconfig-autoaccept\n         */\n        readonly autoAccept?: boolean | cdk.IResolvable;\n        /**\n         * The phone number for the user's desk phone.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-user-userphoneconfig.html#cfn-connect-user-userphoneconfig-deskphonenumber\n         */\n        readonly deskPhoneNumber?: string;\n        /**\n         * The phone type.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-user-userphoneconfig.html#cfn-connect-user-userphoneconfig-phonetype\n         */\n        readonly phoneType: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `UserPhoneConfigProperty`\n *\n * @param properties - the TypeScript properties of a `UserPhoneConfigProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnUser_UserPhoneConfigPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('afterContactWorkTimeLimit', cdk.validateNumber)(properties.afterContactWorkTimeLimit));\n    errors.collect(cdk.propertyValidator('autoAccept', cdk.validateBoolean)(properties.autoAccept));\n    errors.collect(cdk.propertyValidator('deskPhoneNumber', cdk.validateString)(properties.deskPhoneNumber));\n    errors.collect(cdk.propertyValidator('phoneType', cdk.requiredValidator)(properties.phoneType));\n    errors.collect(cdk.propertyValidator('phoneType', cdk.validateString)(properties.phoneType));\n    return errors.wrap('supplied properties not correct for \"UserPhoneConfigProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Connect::User.UserPhoneConfig` resource\n *\n * @param properties - the TypeScript properties of a `UserPhoneConfigProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Connect::User.UserPhoneConfig` resource.\n */\n// @ts-ignore TS6133\nfunction cfnUserUserPhoneConfigPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnUser_UserPhoneConfigPropertyValidator(properties).assertSuccess();\n    return {\n        AfterContactWorkTimeLimit: cdk.numberToCloudFormation(properties.afterContactWorkTimeLimit),\n        AutoAccept: cdk.booleanToCloudFormation(properties.autoAccept),\n        DeskPhoneNumber: cdk.stringToCloudFormation(properties.deskPhoneNumber),\n        PhoneType: cdk.stringToCloudFormation(properties.phoneType),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnUserUserPhoneConfigPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnUser.UserPhoneConfigProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnUser.UserPhoneConfigProperty>();\n    ret.addPropertyResult('afterContactWorkTimeLimit', 'AfterContactWorkTimeLimit', properties.AfterContactWorkTimeLimit != null ? cfn_parse.FromCloudFormation.getNumber(properties.AfterContactWorkTimeLimit) : undefined);\n    ret.addPropertyResult('autoAccept', 'AutoAccept', properties.AutoAccept != null ? cfn_parse.FromCloudFormation.getBoolean(properties.AutoAccept) : undefined);\n    ret.addPropertyResult('deskPhoneNumber', 'DeskPhoneNumber', properties.DeskPhoneNumber != null ? cfn_parse.FromCloudFormation.getString(properties.DeskPhoneNumber) : undefined);\n    ret.addPropertyResult('phoneType', 'PhoneType', cfn_parse.FromCloudFormation.getString(properties.PhoneType));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnUserHierarchyGroup`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-userhierarchygroup.html\n */\nexport interface CfnUserHierarchyGroupProps {\n\n    /**\n     * The Amazon Resource Name (ARN) of the user hierarchy group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-userhierarchygroup.html#cfn-connect-userhierarchygroup-instancearn\n     */\n    readonly instanceArn: string;\n\n    /**\n     * The name of the user hierarchy group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-userhierarchygroup.html#cfn-connect-userhierarchygroup-name\n     */\n    readonly name: string;\n\n    /**\n     * The Amazon Resource Name (ARN) of the parent group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-userhierarchygroup.html#cfn-connect-userhierarchygroup-parentgrouparn\n     */\n    readonly parentGroupArn?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnUserHierarchyGroupProps`\n *\n * @param properties - the TypeScript properties of a `CfnUserHierarchyGroupProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnUserHierarchyGroupPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('instanceArn', cdk.requiredValidator)(properties.instanceArn));\n    errors.collect(cdk.propertyValidator('instanceArn', cdk.validateString)(properties.instanceArn));\n    errors.collect(cdk.propertyValidator('name', cdk.requiredValidator)(properties.name));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('parentGroupArn', cdk.validateString)(properties.parentGroupArn));\n    return errors.wrap('supplied properties not correct for \"CfnUserHierarchyGroupProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Connect::UserHierarchyGroup` resource\n *\n * @param properties - the TypeScript properties of a `CfnUserHierarchyGroupProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Connect::UserHierarchyGroup` resource.\n */\n// @ts-ignore TS6133\nfunction cfnUserHierarchyGroupPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnUserHierarchyGroupPropsValidator(properties).assertSuccess();\n    return {\n        InstanceArn: cdk.stringToCloudFormation(properties.instanceArn),\n        Name: cdk.stringToCloudFormation(properties.name),\n        ParentGroupArn: cdk.stringToCloudFormation(properties.parentGroupArn),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnUserHierarchyGroupPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnUserHierarchyGroupProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnUserHierarchyGroupProps>();\n    ret.addPropertyResult('instanceArn', 'InstanceArn', cfn_parse.FromCloudFormation.getString(properties.InstanceArn));\n    ret.addPropertyResult('name', 'Name', cfn_parse.FromCloudFormation.getString(properties.Name));\n    ret.addPropertyResult('parentGroupArn', 'ParentGroupArn', properties.ParentGroupArn != null ? cfn_parse.FromCloudFormation.getString(properties.ParentGroupArn) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::Connect::UserHierarchyGroup`\n *\n * Creates a new user hierarchy group.\n *\n * @cloudformationResource AWS::Connect::UserHierarchyGroup\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-userhierarchygroup.html\n */\nexport class CfnUserHierarchyGroup extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Connect::UserHierarchyGroup\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnUserHierarchyGroup {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnUserHierarchyGroupPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnUserHierarchyGroup(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The Amazon Resource Name (ARN) for the user hierarchy group.\n     * @cloudformationAttribute UserHierarchyGroupArn\n     */\n    public readonly attrUserHierarchyGroupArn: string;\n\n    /**\n     * The Amazon Resource Name (ARN) of the user hierarchy group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-userhierarchygroup.html#cfn-connect-userhierarchygroup-instancearn\n     */\n    public instanceArn: string;\n\n    /**\n     * The name of the user hierarchy group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-userhierarchygroup.html#cfn-connect-userhierarchygroup-name\n     */\n    public name: string;\n\n    /**\n     * The Amazon Resource Name (ARN) of the parent group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-userhierarchygroup.html#cfn-connect-userhierarchygroup-parentgrouparn\n     */\n    public parentGroupArn: string | undefined;\n\n    /**\n     * Create a new `AWS::Connect::UserHierarchyGroup`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnUserHierarchyGroupProps) {\n        super(scope, id, { type: CfnUserHierarchyGroup.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'instanceArn', this);\n        cdk.requireProperty(props, 'name', this);\n        this.attrUserHierarchyGroupArn = cdk.Token.asString(this.getAtt('UserHierarchyGroupArn'));\n\n        this.instanceArn = props.instanceArn;\n        this.name = props.name;\n        this.parentGroupArn = props.parentGroupArn;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnUserHierarchyGroup.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            instanceArn: this.instanceArn,\n            name: this.name,\n            parentGroupArn: this.parentGroupArn,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnUserHierarchyGroupPropsToCloudFormation(props);\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
