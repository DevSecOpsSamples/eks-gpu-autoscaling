"use strict";var _a,_b,_c,_d,_e,_f;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnUserHierarchyGroup=exports.CfnUser=exports.CfnQuickConnect=exports.CfnHoursOfOperation=exports.CfnContactFlowModule=exports.CfnContactFlow=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/cfn-parse");function CfnContactFlowPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("content",cdk.requiredValidator)(properties.content)),errors.collect(cdk.propertyValidator("content",cdk.validateString)(properties.content)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("instanceArn",cdk.requiredValidator)(properties.instanceArn)),errors.collect(cdk.propertyValidator("instanceArn",cdk.validateString)(properties.instanceArn)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("state",cdk.validateString)(properties.state)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("type",cdk.validateString)(properties.type)),errors.wrap('supplied properties not correct for "CfnContactFlowProps"')}function cfnContactFlowPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnContactFlowPropsValidator(properties).assertSuccess(),{Content:cdk.stringToCloudFormation(properties.content),InstanceArn:cdk.stringToCloudFormation(properties.instanceArn),Name:cdk.stringToCloudFormation(properties.name),Description:cdk.stringToCloudFormation(properties.description),State:cdk.stringToCloudFormation(properties.state),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),Type:cdk.stringToCloudFormation(properties.type)}):properties}function CfnContactFlowPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("content","Content",cfn_parse.FromCloudFormation.getString(properties.Content)),ret.addPropertyResult("instanceArn","InstanceArn",cfn_parse.FromCloudFormation.getString(properties.InstanceArn)),ret.addPropertyResult("name","Name",cfn_parse.FromCloudFormation.getString(properties.Name)),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("state","State",properties.State!=null?cfn_parse.FromCloudFormation.getString(properties.State):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("type","Type",properties.Type!=null?cfn_parse.FromCloudFormation.getString(properties.Type):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnContactFlow extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnContactFlow.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_connect_CfnContactFlowProps(props),cdk.requireProperty(props,"content",this),cdk.requireProperty(props,"instanceArn",this),cdk.requireProperty(props,"name",this),this.attrContactFlowArn=cdk.Token.asString(this.getAtt("ContactFlowArn")),this.content=props.content,this.instanceArn=props.instanceArn,this.name=props.name,this.description=props.description,this.state=props.state,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Connect::ContactFlow",props.tags,{tagPropertyName:"tags"}),this.type=props.type}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnContactFlowPropsFromCloudFormation(resourceProperties),ret=new CfnContactFlow(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnContactFlow.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{content:this.content,instanceArn:this.instanceArn,name:this.name,description:this.description,state:this.state,tags:this.tags.renderTags(),type:this.type}}renderProperties(props){return cfnContactFlowPropsToCloudFormation(props)}}exports.CfnContactFlow=CfnContactFlow,_a=JSII_RTTI_SYMBOL_1,CfnContactFlow[_a]={fqn:"aws-cdk-lib.aws_connect.CfnContactFlow",version:"2.20.0"},CfnContactFlow.CFN_RESOURCE_TYPE_NAME="AWS::Connect::ContactFlow";function CfnContactFlowModulePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("content",cdk.requiredValidator)(properties.content)),errors.collect(cdk.propertyValidator("content",cdk.validateString)(properties.content)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("instanceArn",cdk.requiredValidator)(properties.instanceArn)),errors.collect(cdk.propertyValidator("instanceArn",cdk.validateString)(properties.instanceArn)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("state",cdk.validateString)(properties.state)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnContactFlowModuleProps"')}function cfnContactFlowModulePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnContactFlowModulePropsValidator(properties).assertSuccess(),{Content:cdk.stringToCloudFormation(properties.content),InstanceArn:cdk.stringToCloudFormation(properties.instanceArn),Name:cdk.stringToCloudFormation(properties.name),Description:cdk.stringToCloudFormation(properties.description),State:cdk.stringToCloudFormation(properties.state),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnContactFlowModulePropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("content","Content",cfn_parse.FromCloudFormation.getString(properties.Content)),ret.addPropertyResult("instanceArn","InstanceArn",cfn_parse.FromCloudFormation.getString(properties.InstanceArn)),ret.addPropertyResult("name","Name",cfn_parse.FromCloudFormation.getString(properties.Name)),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("state","State",properties.State!=null?cfn_parse.FromCloudFormation.getString(properties.State):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnContactFlowModule extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnContactFlowModule.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_connect_CfnContactFlowModuleProps(props),cdk.requireProperty(props,"content",this),cdk.requireProperty(props,"instanceArn",this),cdk.requireProperty(props,"name",this),this.attrContactFlowModuleArn=cdk.Token.asString(this.getAtt("ContactFlowModuleArn")),this.attrStatus=cdk.Token.asString(this.getAtt("Status")),this.content=props.content,this.instanceArn=props.instanceArn,this.name=props.name,this.description=props.description,this.state=props.state,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Connect::ContactFlowModule",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnContactFlowModulePropsFromCloudFormation(resourceProperties),ret=new CfnContactFlowModule(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnContactFlowModule.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{content:this.content,instanceArn:this.instanceArn,name:this.name,description:this.description,state:this.state,tags:this.tags.renderTags()}}renderProperties(props){return cfnContactFlowModulePropsToCloudFormation(props)}}exports.CfnContactFlowModule=CfnContactFlowModule,_b=JSII_RTTI_SYMBOL_1,CfnContactFlowModule[_b]={fqn:"aws-cdk-lib.aws_connect.CfnContactFlowModule",version:"2.20.0"},CfnContactFlowModule.CFN_RESOURCE_TYPE_NAME="AWS::Connect::ContactFlowModule";function CfnHoursOfOperationPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("config",cdk.requiredValidator)(properties.config)),errors.collect(cdk.propertyValidator("config",cdk.listValidator(CfnHoursOfOperation_HoursOfOperationConfigPropertyValidator))(properties.config)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("instanceArn",cdk.requiredValidator)(properties.instanceArn)),errors.collect(cdk.propertyValidator("instanceArn",cdk.validateString)(properties.instanceArn)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("timeZone",cdk.requiredValidator)(properties.timeZone)),errors.collect(cdk.propertyValidator("timeZone",cdk.validateString)(properties.timeZone)),errors.wrap('supplied properties not correct for "CfnHoursOfOperationProps"')}function cfnHoursOfOperationPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnHoursOfOperationPropsValidator(properties).assertSuccess(),{Config:cdk.listMapper(cfnHoursOfOperationHoursOfOperationConfigPropertyToCloudFormation)(properties.config),InstanceArn:cdk.stringToCloudFormation(properties.instanceArn),Name:cdk.stringToCloudFormation(properties.name),TimeZone:cdk.stringToCloudFormation(properties.timeZone),Description:cdk.stringToCloudFormation(properties.description),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnHoursOfOperationPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("config","Config",cfn_parse.FromCloudFormation.getArray(CfnHoursOfOperationHoursOfOperationConfigPropertyFromCloudFormation)(properties.Config)),ret.addPropertyResult("instanceArn","InstanceArn",cfn_parse.FromCloudFormation.getString(properties.InstanceArn)),ret.addPropertyResult("name","Name",cfn_parse.FromCloudFormation.getString(properties.Name)),ret.addPropertyResult("timeZone","TimeZone",cfn_parse.FromCloudFormation.getString(properties.TimeZone)),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnHoursOfOperation extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnHoursOfOperation.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_connect_CfnHoursOfOperationProps(props),cdk.requireProperty(props,"config",this),cdk.requireProperty(props,"instanceArn",this),cdk.requireProperty(props,"name",this),cdk.requireProperty(props,"timeZone",this),this.attrHoursOfOperationArn=cdk.Token.asString(this.getAtt("HoursOfOperationArn")),this.config=props.config,this.instanceArn=props.instanceArn,this.name=props.name,this.timeZone=props.timeZone,this.description=props.description,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Connect::HoursOfOperation",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnHoursOfOperationPropsFromCloudFormation(resourceProperties),ret=new CfnHoursOfOperation(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnHoursOfOperation.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{config:this.config,instanceArn:this.instanceArn,name:this.name,timeZone:this.timeZone,description:this.description,tags:this.tags.renderTags()}}renderProperties(props){return cfnHoursOfOperationPropsToCloudFormation(props)}}exports.CfnHoursOfOperation=CfnHoursOfOperation,_c=JSII_RTTI_SYMBOL_1,CfnHoursOfOperation[_c]={fqn:"aws-cdk-lib.aws_connect.CfnHoursOfOperation",version:"2.20.0"},CfnHoursOfOperation.CFN_RESOURCE_TYPE_NAME="AWS::Connect::HoursOfOperation";function CfnHoursOfOperation_HoursOfOperationConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("day",cdk.requiredValidator)(properties.day)),errors.collect(cdk.propertyValidator("day",cdk.validateString)(properties.day)),errors.collect(cdk.propertyValidator("endTime",cdk.requiredValidator)(properties.endTime)),errors.collect(cdk.propertyValidator("endTime",CfnHoursOfOperation_HoursOfOperationTimeSlicePropertyValidator)(properties.endTime)),errors.collect(cdk.propertyValidator("startTime",cdk.requiredValidator)(properties.startTime)),errors.collect(cdk.propertyValidator("startTime",CfnHoursOfOperation_HoursOfOperationTimeSlicePropertyValidator)(properties.startTime)),errors.wrap('supplied properties not correct for "HoursOfOperationConfigProperty"')}function cfnHoursOfOperationHoursOfOperationConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnHoursOfOperation_HoursOfOperationConfigPropertyValidator(properties).assertSuccess(),{Day:cdk.stringToCloudFormation(properties.day),EndTime:cfnHoursOfOperationHoursOfOperationTimeSlicePropertyToCloudFormation(properties.endTime),StartTime:cfnHoursOfOperationHoursOfOperationTimeSlicePropertyToCloudFormation(properties.startTime)}):properties}function CfnHoursOfOperationHoursOfOperationConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("day","Day",cfn_parse.FromCloudFormation.getString(properties.Day)),ret.addPropertyResult("endTime","EndTime",CfnHoursOfOperationHoursOfOperationTimeSlicePropertyFromCloudFormation(properties.EndTime)),ret.addPropertyResult("startTime","StartTime",CfnHoursOfOperationHoursOfOperationTimeSlicePropertyFromCloudFormation(properties.StartTime)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnHoursOfOperation_HoursOfOperationTimeSlicePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("hours",cdk.requiredValidator)(properties.hours)),errors.collect(cdk.propertyValidator("hours",cdk.validateNumber)(properties.hours)),errors.collect(cdk.propertyValidator("minutes",cdk.requiredValidator)(properties.minutes)),errors.collect(cdk.propertyValidator("minutes",cdk.validateNumber)(properties.minutes)),errors.wrap('supplied properties not correct for "HoursOfOperationTimeSliceProperty"')}function cfnHoursOfOperationHoursOfOperationTimeSlicePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnHoursOfOperation_HoursOfOperationTimeSlicePropertyValidator(properties).assertSuccess(),{Hours:cdk.numberToCloudFormation(properties.hours),Minutes:cdk.numberToCloudFormation(properties.minutes)}):properties}function CfnHoursOfOperationHoursOfOperationTimeSlicePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("hours","Hours",cfn_parse.FromCloudFormation.getNumber(properties.Hours)),ret.addPropertyResult("minutes","Minutes",cfn_parse.FromCloudFormation.getNumber(properties.Minutes)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnQuickConnectPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("instanceArn",cdk.requiredValidator)(properties.instanceArn)),errors.collect(cdk.propertyValidator("instanceArn",cdk.validateString)(properties.instanceArn)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("quickConnectConfig",cdk.requiredValidator)(properties.quickConnectConfig)),errors.collect(cdk.propertyValidator("quickConnectConfig",CfnQuickConnect_QuickConnectConfigPropertyValidator)(properties.quickConnectConfig)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnQuickConnectProps"')}function cfnQuickConnectPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnQuickConnectPropsValidator(properties).assertSuccess(),{InstanceArn:cdk.stringToCloudFormation(properties.instanceArn),Name:cdk.stringToCloudFormation(properties.name),QuickConnectConfig:cfnQuickConnectQuickConnectConfigPropertyToCloudFormation(properties.quickConnectConfig),Description:cdk.stringToCloudFormation(properties.description),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnQuickConnectPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("instanceArn","InstanceArn",cfn_parse.FromCloudFormation.getString(properties.InstanceArn)),ret.addPropertyResult("name","Name",cfn_parse.FromCloudFormation.getString(properties.Name)),ret.addPropertyResult("quickConnectConfig","QuickConnectConfig",CfnQuickConnectQuickConnectConfigPropertyFromCloudFormation(properties.QuickConnectConfig)),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnQuickConnect extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnQuickConnect.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_connect_CfnQuickConnectProps(props),cdk.requireProperty(props,"instanceArn",this),cdk.requireProperty(props,"name",this),cdk.requireProperty(props,"quickConnectConfig",this),this.attrQuickConnectArn=cdk.Token.asString(this.getAtt("QuickConnectArn")),this.instanceArn=props.instanceArn,this.name=props.name,this.quickConnectConfig=props.quickConnectConfig,this.description=props.description,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Connect::QuickConnect",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnQuickConnectPropsFromCloudFormation(resourceProperties),ret=new CfnQuickConnect(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnQuickConnect.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{instanceArn:this.instanceArn,name:this.name,quickConnectConfig:this.quickConnectConfig,description:this.description,tags:this.tags.renderTags()}}renderProperties(props){return cfnQuickConnectPropsToCloudFormation(props)}}exports.CfnQuickConnect=CfnQuickConnect,_d=JSII_RTTI_SYMBOL_1,CfnQuickConnect[_d]={fqn:"aws-cdk-lib.aws_connect.CfnQuickConnect",version:"2.20.0"},CfnQuickConnect.CFN_RESOURCE_TYPE_NAME="AWS::Connect::QuickConnect";function CfnQuickConnect_PhoneNumberQuickConnectConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("phoneNumber",cdk.requiredValidator)(properties.phoneNumber)),errors.collect(cdk.propertyValidator("phoneNumber",cdk.validateString)(properties.phoneNumber)),errors.wrap('supplied properties not correct for "PhoneNumberQuickConnectConfigProperty"')}function cfnQuickConnectPhoneNumberQuickConnectConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnQuickConnect_PhoneNumberQuickConnectConfigPropertyValidator(properties).assertSuccess(),{PhoneNumber:cdk.stringToCloudFormation(properties.phoneNumber)}):properties}function CfnQuickConnectPhoneNumberQuickConnectConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("phoneNumber","PhoneNumber",cfn_parse.FromCloudFormation.getString(properties.PhoneNumber)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnQuickConnect_QueueQuickConnectConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("contactFlowArn",cdk.requiredValidator)(properties.contactFlowArn)),errors.collect(cdk.propertyValidator("contactFlowArn",cdk.validateString)(properties.contactFlowArn)),errors.collect(cdk.propertyValidator("queueArn",cdk.requiredValidator)(properties.queueArn)),errors.collect(cdk.propertyValidator("queueArn",cdk.validateString)(properties.queueArn)),errors.wrap('supplied properties not correct for "QueueQuickConnectConfigProperty"')}function cfnQuickConnectQueueQuickConnectConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnQuickConnect_QueueQuickConnectConfigPropertyValidator(properties).assertSuccess(),{ContactFlowArn:cdk.stringToCloudFormation(properties.contactFlowArn),QueueArn:cdk.stringToCloudFormation(properties.queueArn)}):properties}function CfnQuickConnectQueueQuickConnectConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("contactFlowArn","ContactFlowArn",cfn_parse.FromCloudFormation.getString(properties.ContactFlowArn)),ret.addPropertyResult("queueArn","QueueArn",cfn_parse.FromCloudFormation.getString(properties.QueueArn)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnQuickConnect_QuickConnectConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("phoneConfig",CfnQuickConnect_PhoneNumberQuickConnectConfigPropertyValidator)(properties.phoneConfig)),errors.collect(cdk.propertyValidator("queueConfig",CfnQuickConnect_QueueQuickConnectConfigPropertyValidator)(properties.queueConfig)),errors.collect(cdk.propertyValidator("quickConnectType",cdk.requiredValidator)(properties.quickConnectType)),errors.collect(cdk.propertyValidator("quickConnectType",cdk.validateString)(properties.quickConnectType)),errors.collect(cdk.propertyValidator("userConfig",CfnQuickConnect_UserQuickConnectConfigPropertyValidator)(properties.userConfig)),errors.wrap('supplied properties not correct for "QuickConnectConfigProperty"')}function cfnQuickConnectQuickConnectConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnQuickConnect_QuickConnectConfigPropertyValidator(properties).assertSuccess(),{PhoneConfig:cfnQuickConnectPhoneNumberQuickConnectConfigPropertyToCloudFormation(properties.phoneConfig),QueueConfig:cfnQuickConnectQueueQuickConnectConfigPropertyToCloudFormation(properties.queueConfig),QuickConnectType:cdk.stringToCloudFormation(properties.quickConnectType),UserConfig:cfnQuickConnectUserQuickConnectConfigPropertyToCloudFormation(properties.userConfig)}):properties}function CfnQuickConnectQuickConnectConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("phoneConfig","PhoneConfig",properties.PhoneConfig!=null?CfnQuickConnectPhoneNumberQuickConnectConfigPropertyFromCloudFormation(properties.PhoneConfig):void 0),ret.addPropertyResult("queueConfig","QueueConfig",properties.QueueConfig!=null?CfnQuickConnectQueueQuickConnectConfigPropertyFromCloudFormation(properties.QueueConfig):void 0),ret.addPropertyResult("quickConnectType","QuickConnectType",cfn_parse.FromCloudFormation.getString(properties.QuickConnectType)),ret.addPropertyResult("userConfig","UserConfig",properties.UserConfig!=null?CfnQuickConnectUserQuickConnectConfigPropertyFromCloudFormation(properties.UserConfig):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnQuickConnect_UserQuickConnectConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("contactFlowArn",cdk.requiredValidator)(properties.contactFlowArn)),errors.collect(cdk.propertyValidator("contactFlowArn",cdk.validateString)(properties.contactFlowArn)),errors.collect(cdk.propertyValidator("userArn",cdk.requiredValidator)(properties.userArn)),errors.collect(cdk.propertyValidator("userArn",cdk.validateString)(properties.userArn)),errors.wrap('supplied properties not correct for "UserQuickConnectConfigProperty"')}function cfnQuickConnectUserQuickConnectConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnQuickConnect_UserQuickConnectConfigPropertyValidator(properties).assertSuccess(),{ContactFlowArn:cdk.stringToCloudFormation(properties.contactFlowArn),UserArn:cdk.stringToCloudFormation(properties.userArn)}):properties}function CfnQuickConnectUserQuickConnectConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("contactFlowArn","ContactFlowArn",cfn_parse.FromCloudFormation.getString(properties.ContactFlowArn)),ret.addPropertyResult("userArn","UserArn",cfn_parse.FromCloudFormation.getString(properties.UserArn)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnUserPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("directoryUserId",cdk.validateString)(properties.directoryUserId)),errors.collect(cdk.propertyValidator("hierarchyGroupArn",cdk.validateString)(properties.hierarchyGroupArn)),errors.collect(cdk.propertyValidator("identityInfo",CfnUser_UserIdentityInfoPropertyValidator)(properties.identityInfo)),errors.collect(cdk.propertyValidator("instanceArn",cdk.requiredValidator)(properties.instanceArn)),errors.collect(cdk.propertyValidator("instanceArn",cdk.validateString)(properties.instanceArn)),errors.collect(cdk.propertyValidator("password",cdk.validateString)(properties.password)),errors.collect(cdk.propertyValidator("phoneConfig",cdk.requiredValidator)(properties.phoneConfig)),errors.collect(cdk.propertyValidator("phoneConfig",CfnUser_UserPhoneConfigPropertyValidator)(properties.phoneConfig)),errors.collect(cdk.propertyValidator("routingProfileArn",cdk.requiredValidator)(properties.routingProfileArn)),errors.collect(cdk.propertyValidator("routingProfileArn",cdk.validateString)(properties.routingProfileArn)),errors.collect(cdk.propertyValidator("securityProfileArns",cdk.requiredValidator)(properties.securityProfileArns)),errors.collect(cdk.propertyValidator("securityProfileArns",cdk.listValidator(cdk.validateString))(properties.securityProfileArns)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("username",cdk.requiredValidator)(properties.username)),errors.collect(cdk.propertyValidator("username",cdk.validateString)(properties.username)),errors.wrap('supplied properties not correct for "CfnUserProps"')}function cfnUserPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnUserPropsValidator(properties).assertSuccess(),{InstanceArn:cdk.stringToCloudFormation(properties.instanceArn),PhoneConfig:cfnUserUserPhoneConfigPropertyToCloudFormation(properties.phoneConfig),RoutingProfileArn:cdk.stringToCloudFormation(properties.routingProfileArn),SecurityProfileArns:cdk.listMapper(cdk.stringToCloudFormation)(properties.securityProfileArns),Username:cdk.stringToCloudFormation(properties.username),DirectoryUserId:cdk.stringToCloudFormation(properties.directoryUserId),HierarchyGroupArn:cdk.stringToCloudFormation(properties.hierarchyGroupArn),IdentityInfo:cfnUserUserIdentityInfoPropertyToCloudFormation(properties.identityInfo),Password:cdk.stringToCloudFormation(properties.password),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnUserPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("instanceArn","InstanceArn",cfn_parse.FromCloudFormation.getString(properties.InstanceArn)),ret.addPropertyResult("phoneConfig","PhoneConfig",CfnUserUserPhoneConfigPropertyFromCloudFormation(properties.PhoneConfig)),ret.addPropertyResult("routingProfileArn","RoutingProfileArn",cfn_parse.FromCloudFormation.getString(properties.RoutingProfileArn)),ret.addPropertyResult("securityProfileArns","SecurityProfileArns",cfn_parse.FromCloudFormation.getStringArray(properties.SecurityProfileArns)),ret.addPropertyResult("username","Username",cfn_parse.FromCloudFormation.getString(properties.Username)),ret.addPropertyResult("directoryUserId","DirectoryUserId",properties.DirectoryUserId!=null?cfn_parse.FromCloudFormation.getString(properties.DirectoryUserId):void 0),ret.addPropertyResult("hierarchyGroupArn","HierarchyGroupArn",properties.HierarchyGroupArn!=null?cfn_parse.FromCloudFormation.getString(properties.HierarchyGroupArn):void 0),ret.addPropertyResult("identityInfo","IdentityInfo",properties.IdentityInfo!=null?CfnUserUserIdentityInfoPropertyFromCloudFormation(properties.IdentityInfo):void 0),ret.addPropertyResult("password","Password",properties.Password!=null?cfn_parse.FromCloudFormation.getString(properties.Password):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnUser extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnUser.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_connect_CfnUserProps(props),cdk.requireProperty(props,"instanceArn",this),cdk.requireProperty(props,"phoneConfig",this),cdk.requireProperty(props,"routingProfileArn",this),cdk.requireProperty(props,"securityProfileArns",this),cdk.requireProperty(props,"username",this),this.attrUserArn=cdk.Token.asString(this.getAtt("UserArn")),this.instanceArn=props.instanceArn,this.phoneConfig=props.phoneConfig,this.routingProfileArn=props.routingProfileArn,this.securityProfileArns=props.securityProfileArns,this.username=props.username,this.directoryUserId=props.directoryUserId,this.hierarchyGroupArn=props.hierarchyGroupArn,this.identityInfo=props.identityInfo,this.password=props.password,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Connect::User",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnUserPropsFromCloudFormation(resourceProperties),ret=new CfnUser(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnUser.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{instanceArn:this.instanceArn,phoneConfig:this.phoneConfig,routingProfileArn:this.routingProfileArn,securityProfileArns:this.securityProfileArns,username:this.username,directoryUserId:this.directoryUserId,hierarchyGroupArn:this.hierarchyGroupArn,identityInfo:this.identityInfo,password:this.password,tags:this.tags.renderTags()}}renderProperties(props){return cfnUserPropsToCloudFormation(props)}}exports.CfnUser=CfnUser,_e=JSII_RTTI_SYMBOL_1,CfnUser[_e]={fqn:"aws-cdk-lib.aws_connect.CfnUser",version:"2.20.0"},CfnUser.CFN_RESOURCE_TYPE_NAME="AWS::Connect::User";function CfnUser_UserIdentityInfoPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("email",cdk.validateString)(properties.email)),errors.collect(cdk.propertyValidator("firstName",cdk.validateString)(properties.firstName)),errors.collect(cdk.propertyValidator("lastName",cdk.validateString)(properties.lastName)),errors.wrap('supplied properties not correct for "UserIdentityInfoProperty"')}function cfnUserUserIdentityInfoPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnUser_UserIdentityInfoPropertyValidator(properties).assertSuccess(),{Email:cdk.stringToCloudFormation(properties.email),FirstName:cdk.stringToCloudFormation(properties.firstName),LastName:cdk.stringToCloudFormation(properties.lastName)}):properties}function CfnUserUserIdentityInfoPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("email","Email",properties.Email!=null?cfn_parse.FromCloudFormation.getString(properties.Email):void 0),ret.addPropertyResult("firstName","FirstName",properties.FirstName!=null?cfn_parse.FromCloudFormation.getString(properties.FirstName):void 0),ret.addPropertyResult("lastName","LastName",properties.LastName!=null?cfn_parse.FromCloudFormation.getString(properties.LastName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnUser_UserPhoneConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("afterContactWorkTimeLimit",cdk.validateNumber)(properties.afterContactWorkTimeLimit)),errors.collect(cdk.propertyValidator("autoAccept",cdk.validateBoolean)(properties.autoAccept)),errors.collect(cdk.propertyValidator("deskPhoneNumber",cdk.validateString)(properties.deskPhoneNumber)),errors.collect(cdk.propertyValidator("phoneType",cdk.requiredValidator)(properties.phoneType)),errors.collect(cdk.propertyValidator("phoneType",cdk.validateString)(properties.phoneType)),errors.wrap('supplied properties not correct for "UserPhoneConfigProperty"')}function cfnUserUserPhoneConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnUser_UserPhoneConfigPropertyValidator(properties).assertSuccess(),{AfterContactWorkTimeLimit:cdk.numberToCloudFormation(properties.afterContactWorkTimeLimit),AutoAccept:cdk.booleanToCloudFormation(properties.autoAccept),DeskPhoneNumber:cdk.stringToCloudFormation(properties.deskPhoneNumber),PhoneType:cdk.stringToCloudFormation(properties.phoneType)}):properties}function CfnUserUserPhoneConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("afterContactWorkTimeLimit","AfterContactWorkTimeLimit",properties.AfterContactWorkTimeLimit!=null?cfn_parse.FromCloudFormation.getNumber(properties.AfterContactWorkTimeLimit):void 0),ret.addPropertyResult("autoAccept","AutoAccept",properties.AutoAccept!=null?cfn_parse.FromCloudFormation.getBoolean(properties.AutoAccept):void 0),ret.addPropertyResult("deskPhoneNumber","DeskPhoneNumber",properties.DeskPhoneNumber!=null?cfn_parse.FromCloudFormation.getString(properties.DeskPhoneNumber):void 0),ret.addPropertyResult("phoneType","PhoneType",cfn_parse.FromCloudFormation.getString(properties.PhoneType)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnUserHierarchyGroupPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("instanceArn",cdk.requiredValidator)(properties.instanceArn)),errors.collect(cdk.propertyValidator("instanceArn",cdk.validateString)(properties.instanceArn)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("parentGroupArn",cdk.validateString)(properties.parentGroupArn)),errors.wrap('supplied properties not correct for "CfnUserHierarchyGroupProps"')}function cfnUserHierarchyGroupPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnUserHierarchyGroupPropsValidator(properties).assertSuccess(),{InstanceArn:cdk.stringToCloudFormation(properties.instanceArn),Name:cdk.stringToCloudFormation(properties.name),ParentGroupArn:cdk.stringToCloudFormation(properties.parentGroupArn)}):properties}function CfnUserHierarchyGroupPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("instanceArn","InstanceArn",cfn_parse.FromCloudFormation.getString(properties.InstanceArn)),ret.addPropertyResult("name","Name",cfn_parse.FromCloudFormation.getString(properties.Name)),ret.addPropertyResult("parentGroupArn","ParentGroupArn",properties.ParentGroupArn!=null?cfn_parse.FromCloudFormation.getString(properties.ParentGroupArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnUserHierarchyGroup extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnUserHierarchyGroup.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_connect_CfnUserHierarchyGroupProps(props),cdk.requireProperty(props,"instanceArn",this),cdk.requireProperty(props,"name",this),this.attrUserHierarchyGroupArn=cdk.Token.asString(this.getAtt("UserHierarchyGroupArn")),this.instanceArn=props.instanceArn,this.name=props.name,this.parentGroupArn=props.parentGroupArn}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnUserHierarchyGroupPropsFromCloudFormation(resourceProperties),ret=new CfnUserHierarchyGroup(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnUserHierarchyGroup.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{instanceArn:this.instanceArn,name:this.name,parentGroupArn:this.parentGroupArn}}renderProperties(props){return cfnUserHierarchyGroupPropsToCloudFormation(props)}}exports.CfnUserHierarchyGroup=CfnUserHierarchyGroup,_f=JSII_RTTI_SYMBOL_1,CfnUserHierarchyGroup[_f]={fqn:"aws-cdk-lib.aws_connect.CfnUserHierarchyGroup",version:"2.20.0"},CfnUserHierarchyGroup.CFN_RESOURCE_TYPE_NAME="AWS::Connect::UserHierarchyGroup";
//# sourceMappingURL=connect.generated.js.map
