{
  "version": 3,
  "sources": ["bounce.ts"],
  "sourcesContent": ["import * as ses from '../../aws-ses';\nimport * as sns from '../../aws-sns';\n\n/**\n * Construction properties for a BounceTemplate.\n */\nexport interface BounceTemplateProps {\n  /**\n   * Human-readable text to include in the bounce message.\n   */\n  readonly message: string;\n\n  /**\n   * The SMTP reply code, as defined by RFC 5321.\n   *\n   * @see https://tools.ietf.org/html/rfc5321\n   */\n  readonly smtpReplyCode: string;\n\n  /**\n   * The SMTP enhanced status code, as defined by RFC 3463.\n   *\n   * @see https://tools.ietf.org/html/rfc3463\n   */\n  readonly statusCode?: string;\n}\n\n/**\n * A bounce template.\n */\nexport class BounceTemplate {\n  public static readonly MAILBOX_DOES_NOT_EXIST = new BounceTemplate({\n    message: 'Mailbox does not exist',\n    smtpReplyCode: '550',\n    statusCode: '5.1.1',\n  });\n\n  public static readonly MESSAGE_TOO_LARGE = new BounceTemplate({\n    message: 'Message too large',\n    smtpReplyCode: '552',\n    statusCode: '5.3.4',\n  });\n\n  public static readonly MAILBOX_FULL = new BounceTemplate({\n    message: 'Mailbox full',\n    smtpReplyCode: '552',\n    statusCode: '5.2.2',\n  });\n\n  public static readonly MESSAGE_CONTENT_REJECTED = new BounceTemplate({\n    message: 'Message content rejected',\n    smtpReplyCode: '500',\n    statusCode: '5.6.1',\n  });\n\n  public static readonly TEMPORARY_FAILURE = new BounceTemplate({\n    message: 'Temporary failure',\n    smtpReplyCode: '450',\n    statusCode: '4.0.0',\n  });\n\n  constructor(public readonly props: BounceTemplateProps) {\n  }\n}\n\n/**\n * Construction properties for a bounce action.\n */\nexport interface BounceProps {\n  /**\n   * The template containing the message, reply code and status code.\n   */\n  readonly template: BounceTemplate;\n\n  /**\n   * The email address of the sender of the bounced email. This is the address\n   * from which the bounce message will be sent.\n   */\n  readonly sender: string;\n\n  /**\n   * The SNS topic to notify when the bounce action is taken.\n   *\n   * @default no notification\n   */\n  readonly topic?: sns.ITopic;\n}\n\n/**\n * Rejects the received email by returning a bounce response to the sender and,\n * optionally, publishes a notification to Amazon SNS.\n */\nexport class Bounce implements ses.IReceiptRuleAction {\n  constructor(private readonly props: BounceProps) {\n  }\n\n  public bind(_rule: ses.IReceiptRule): ses.ReceiptRuleActionConfig {\n    return {\n      bounceAction: {\n        sender: this.props.sender,\n        smtpReplyCode: this.props.template.props.smtpReplyCode,\n        message: this.props.template.props.message,\n        topicArn: this.props.topic?.topicArn,\n        statusCode: this.props.template.props.statusCode,\n      },\n    };\n  }\n}\n"],
  "mappings": "uOA8BA,MAAa,cAAc,CA+BzB,YAA4B,MAA0B,CAA1B,KAAA,MAAA,sFA/B9B,QAAA,eAAA,4HACyB,eAAA,uBAAyB,GAAI,gBAAe,CACjE,QAAS,yBACT,cAAe,MACf,WAAY,QACb,EAEsB,eAAA,kBAAoB,GAAI,gBAAe,CAC5D,QAAS,oBACT,cAAe,MACf,WAAY,QACb,EAEsB,eAAA,aAAe,GAAI,gBAAe,CACvD,QAAS,eACT,cAAe,MACf,WAAY,QACb,EAEsB,eAAA,yBAA2B,GAAI,gBAAe,CACnE,QAAS,2BACT,cAAe,MACf,WAAY,QACb,EAEsB,eAAA,kBAAoB,GAAI,gBAAe,CAC5D,QAAS,oBACT,cAAe,MACf,WAAY,QACb,EAiCH,MAAa,MAAM,CACjB,YAA6B,MAAkB,CAAlB,KAAA,MAAA,6EAGtB,KAAK,MAAuB,+EAC1B,CACL,aAAc,CACZ,OAAQ,KAAK,MAAM,OACnB,cAAe,KAAK,MAAM,SAAS,MAAM,cACzC,QAAS,KAAK,MAAM,SAAS,MAAM,QACnC,SAAQ,IAAE,KAAK,MAAM,SAAK,MAAA,KAAA,OAAA,OAAA,GAAE,SAC5B,WAAY,KAAK,MAAM,SAAS,MAAM,cAX9C,QAAA,OAAA",
  "names": []
}
