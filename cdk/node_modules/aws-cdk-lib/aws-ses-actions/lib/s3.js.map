{
  "version": 3,
  "sources": ["s3.ts"],
  "sourcesContent": ["import * as iam from '../../aws-iam';\nimport * as kms from '../../aws-kms';\nimport * as s3 from '../../aws-s3';\nimport * as ses from '../../aws-ses';\nimport * as sns from '../../aws-sns';\nimport * as cdk from '../../core';\n\n/**\n * Construction properties for a S3 action.\n */\nexport interface S3Props {\n  /**\n   * The S3 bucket that incoming email will be saved to.\n   */\n  readonly bucket: s3.IBucket;\n\n  /**\n   * The master key that SES should use to encrypt your emails before saving\n   * them to the S3 bucket.\n   *\n   * @default no encryption\n   */\n  readonly kmsKey?: kms.IKey;\n\n  /**\n   * The key prefix of the S3 bucket.\n   *\n   * @default no prefix\n   */\n  readonly objectKeyPrefix?: string;\n\n  /**\n   * The SNS topic to notify when the S3 action is taken.\n   *\n   * @default no notification\n   */\n  readonly topic?: sns.ITopic;\n}\n\n/**\n * Saves the received message to an Amazon S3 bucket and, optionally, publishes\n * a notification to Amazon SNS.\n */\nexport class S3 implements ses.IReceiptRuleAction {\n  constructor(private readonly props: S3Props) {\n  }\n\n  public bind(rule: ses.IReceiptRule): ses.ReceiptRuleActionConfig {\n    // Allow SES to write to S3 bucket\n    // See https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-permissions.html#receiving-email-permissions-s3\n    const keyPattern = this.props.objectKeyPrefix || '';\n    const s3Statement = new iam.PolicyStatement({\n      actions: ['s3:PutObject'],\n      principals: [new iam.ServicePrincipal('ses.amazonaws.com')],\n      resources: [this.props.bucket.arnForObjects(`${keyPattern}*`)],\n      conditions: {\n        StringEquals: {\n          'aws:Referer': cdk.Aws.ACCOUNT_ID,\n        },\n      },\n    });\n    this.props.bucket.addToResourcePolicy(s3Statement);\n\n    const policy = this.props.bucket.node.tryFindChild('Policy') as s3.BucketPolicy;\n    if (policy) { // The bucket could be imported\n      rule.node.addDependency(policy);\n    } else {\n      cdk.Annotations.of(rule).addWarning('This rule is using a S3 action with an imported bucket. Ensure permission is given to SES to write to that bucket.');\n    }\n\n    // Allow SES to use KMS master key\n    // See https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-permissions.html#receiving-email-permissions-kms\n    if (this.props.kmsKey && !/alias\\/aws\\/ses$/.test(this.props.kmsKey.keyArn)) {\n      const kmsStatement = new iam.PolicyStatement({\n        actions: ['kms:Encrypt', 'kms:GenerateDataKey'],\n        principals: [new iam.ServicePrincipal('ses.amazonaws.com')],\n        resources: ['*'],\n        conditions: {\n          Null: {\n            'kms:EncryptionContext:aws:ses:rule-name': 'false',\n            'kms:EncryptionContext:aws:ses:message-id': 'false',\n          },\n          StringEquals: {\n            'kms:EncryptionContext:aws:ses:source-account': cdk.Aws.ACCOUNT_ID,\n          },\n        },\n      });\n\n      this.props.kmsKey.addToResourcePolicy(kmsStatement);\n    }\n\n    return {\n      s3Action: {\n        bucketName: this.props.bucket.bucketName,\n        kmsKeyArn: this.props.kmsKey?.keyArn,\n        objectKeyPrefix: this.props.objectKeyPrefix,\n        topicArn: this.props.topic?.topicArn,\n      },\n    };\n  }\n}\n"],
  "mappings": "yMAAA,IAAA,QAAA,eAAA,EAKA,IAAA,QAAA,YAAA,EAsCA,MAAa,EAAE,CACb,YAA6B,MAAc,CAAd,KAAA,MAAA,yEAGtB,KAAK,KAAsB,0EAGhC,KAAM,YAAa,KAAK,MAAM,iBAAmB,GAC3C,YAAc,GAAI,KAAI,gBAAgB,CAC1C,QAAS,CAAC,cAAc,EACxB,WAAY,CAAC,GAAI,KAAI,iBAAiB,mBAAmB,CAAC,EAC1D,UAAW,CAAC,KAAK,MAAM,OAAO,cAAc,GAAG,aAAa,CAAC,EAC7D,WAAY,CACV,aAAc,CACZ,cAAe,IAAI,IAAI,aAG5B,EACD,KAAK,MAAM,OAAO,oBAAoB,WAAW,EAEjD,KAAM,QAAS,KAAK,MAAM,OAAO,KAAK,aAAa,QAAQ,EAS3D,GARA,AAAI,OACF,KAAK,KAAK,cAAc,MAAM,EAE9B,IAAI,YAAY,GAAG,IAAI,EAAE,WAAW,oHAAoH,EAKtJ,KAAK,MAAM,QAAU,CAAC,mBAAmB,KAAK,KAAK,MAAM,OAAO,MAAM,EAAG,CAC3E,KAAM,cAAe,GAAI,KAAI,gBAAgB,CAC3C,QAAS,CAAC,cAAe,qBAAqB,EAC9C,WAAY,CAAC,GAAI,KAAI,iBAAiB,mBAAmB,CAAC,EAC1D,UAAW,CAAC,GAAG,EACf,WAAY,CACV,KAAM,CACJ,0CAA2C,QAC3C,2CAA4C,SAE9C,aAAc,CACZ,+CAAgD,IAAI,IAAI,aAG7D,EAED,KAAK,MAAM,OAAO,oBAAoB,YAAY,EAGpD,MAAO,CACL,SAAU,CACR,WAAY,KAAK,MAAM,OAAO,WAC9B,UAAS,IAAE,KAAK,MAAM,UAAM,MAAA,KAAA,OAAA,OAAA,GAAE,OAC9B,gBAAiB,KAAK,MAAM,gBAC5B,SAAQ,IAAE,KAAK,MAAM,SAAK,MAAA,KAAA,OAAA,OAAA,GAAE,YArDpC,QAAA,GAAA",
  "names": []
}
