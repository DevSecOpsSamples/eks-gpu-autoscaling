{
  "version": 3,
  "sources": ["add-header.ts"],
  "sourcesContent": ["import * as ses from '../../aws-ses';\n\n/**\n * Construction properties for a add header action.\n */\nexport interface AddHeaderProps {\n  /**\n   * The name of the header to add. Must be between 1 and 50 characters,\n   * inclusive, and consist of alphanumeric (a-z, A-Z, 0-9) characters\n   * and dashes only.\n   */\n  readonly name: string;\n\n  /**\n   * The value of the header to add. Must be less than 2048 characters,\n   * and must not contain newline characters (\"\\r\" or \"\\n\").\n   */\n  readonly value: string;\n}\n\n/**\n * Adds a header to the received email\n */\nexport class AddHeader implements ses.IReceiptRuleAction {\n  private readonly name: string;\n  private readonly value: string;\n\n  constructor(props: AddHeaderProps) {\n    if (!/^[a-zA-Z0-9-]{1,50}$/.test(props.name)) {\n      // eslint-disable-next-line max-len\n      throw new Error('Header `name` must be between 1 and 50 characters, inclusive, and consist of alphanumeric (a-z, A-Z, 0-9) characters and dashes only.');\n    }\n\n    if (!/^[^\\n\\r]{0,2047}$/.test(props.value)) {\n      throw new Error('Header `value` must be less than 2048 characters, and must not contain newline characters (\"\\r\" or \"\\n\").');\n    }\n\n    this.name = props.name;\n    this.value = props.value;\n  }\n\n  public bind(_rule: ses.IReceiptRule): ses.ReceiptRuleActionConfig {\n    return {\n      addHeaderAction: {\n        headerName: this.name,\n        headerValue: this.value,\n      },\n    };\n  }\n}\n"],
  "mappings": "gNAuBA,MAAa,SAAS,CAIpB,YAAY,MAAqB,CAC/B,6EAAI,CAAC,uBAAuB,KAAK,MAAM,IAAI,EAEzC,KAAM,IAAI,OAAM,uIAAuI,EAGzJ,GAAI,CAAC,oBAAoB,KAAK,MAAM,KAAK,EACvC,KAAM,IAAI,OAAM,2GAA2G,EAG7H,KAAK,KAAO,MAAM,KAClB,KAAK,MAAQ,MAAM,MAGd,KAAK,MAAuB,wEAC1B,CACL,gBAAiB,CACf,WAAY,KAAK,KACjB,YAAa,KAAK,SAtB1B,QAAA,UAAA",
  "names": []
}
