{
  "version": 3,
  "sources": ["integ.key-sharing.lit.ts"],
  "sourcesContent": ["/// !cdk-integ *\nimport * as cdk from '../../core';\nimport * as kms from '../lib';\n\nconst app = new cdk.App();\n\n/// !show\n\n/**\n * Stack that defines the key\n */\nclass KeyStack extends cdk.Stack {\n  public readonly key: kms.Key;\n\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n    this.key = new kms.Key(this, 'MyKey', { removalPolicy: cdk.RemovalPolicy.DESTROY });\n  }\n}\n\ninterface UseStackProps extends cdk.StackProps {\n  key: kms.IKey; // Use IKey here\n}\n\n/**\n * Stack that uses the key\n */\nclass UseStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props: UseStackProps) {\n    super(scope, id, props);\n\n    // Use the IKey object here.\n    new kms.Alias(this, 'Alias', {\n      aliasName: 'alias/foo',\n      targetKey: props.key,\n    });\n  }\n}\n\nconst keyStack = new KeyStack(app, 'KeyStack');\nnew UseStack(app, 'UseStack', { key: keyStack.key });\n/// !hide\n\napp.synth();\n"],
  "mappings": "oEACA,KAAA,KAAA,QAAA,YAAA,EACA,IAAA,QAAA,QAAA,EAEM,IAAM,GAAI,KAAI,IAOpB,MAAM,gBAAiB,KAAI,KAAK,CAG9B,YAAY,MAAgB,GAAY,MAAsB,CAC5D,MAAM,MAAO,GAAI,KAAK,EACtB,KAAK,IAAM,GAAI,KAAI,IAAI,KAAM,QAAS,CAAE,cAAe,IAAI,cAAc,OAAO,CAAE,GAWtF,MAAM,gBAAiB,KAAI,KAAK,CAC9B,YAAY,MAAgB,GAAY,MAAoB,CAC1D,MAAM,MAAO,GAAI,KAAK,EAGtB,GAAI,KAAI,MAAM,KAAM,QAAS,CAC3B,UAAW,YACX,UAAW,MAAM,IAClB,GAIL,KAAM,UAAW,GAAI,UAAS,IAAK,UAAU,EAC7C,GAAI,UAAS,IAAK,WAAY,CAAE,IAAK,SAAS,GAAG,CAAE,EAGnD,IAAI,MAAK",
  "names": []
}
