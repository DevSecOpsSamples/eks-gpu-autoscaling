"use strict";var _a,_b;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnStreamConsumer=exports.CfnStream=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/cfn-parse");function CfnStreamPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("retentionPeriodHours",cdk.validateNumber)(properties.retentionPeriodHours)),errors.collect(cdk.propertyValidator("shardCount",cdk.validateNumber)(properties.shardCount)),errors.collect(cdk.propertyValidator("streamEncryption",CfnStream_StreamEncryptionPropertyValidator)(properties.streamEncryption)),errors.collect(cdk.propertyValidator("streamModeDetails",CfnStream_StreamModeDetailsPropertyValidator)(properties.streamModeDetails)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnStreamProps"')}function cfnStreamPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnStreamPropsValidator(properties).assertSuccess(),{Name:cdk.stringToCloudFormation(properties.name),RetentionPeriodHours:cdk.numberToCloudFormation(properties.retentionPeriodHours),ShardCount:cdk.numberToCloudFormation(properties.shardCount),StreamEncryption:cfnStreamStreamEncryptionPropertyToCloudFormation(properties.streamEncryption),StreamModeDetails:cfnStreamStreamModeDetailsPropertyToCloudFormation(properties.streamModeDetails),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnStreamPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("retentionPeriodHours","RetentionPeriodHours",properties.RetentionPeriodHours!=null?cfn_parse.FromCloudFormation.getNumber(properties.RetentionPeriodHours):void 0),ret.addPropertyResult("shardCount","ShardCount",properties.ShardCount!=null?cfn_parse.FromCloudFormation.getNumber(properties.ShardCount):void 0),ret.addPropertyResult("streamEncryption","StreamEncryption",properties.StreamEncryption!=null?CfnStreamStreamEncryptionPropertyFromCloudFormation(properties.StreamEncryption):void 0),ret.addPropertyResult("streamModeDetails","StreamModeDetails",properties.StreamModeDetails!=null?CfnStreamStreamModeDetailsPropertyFromCloudFormation(properties.StreamModeDetails):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnStream extends cdk.CfnResource{constructor(scope,id,props={}){super(scope,id,{type:CfnStream.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_kinesis_CfnStreamProps(props),this.attrArn=cdk.Token.asString(this.getAtt("Arn")),this.name=props.name,this.retentionPeriodHours=props.retentionPeriodHours,this.shardCount=props.shardCount,this.streamEncryption=props.streamEncryption,this.streamModeDetails=props.streamModeDetails,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Kinesis::Stream",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnStreamPropsFromCloudFormation(resourceProperties),ret=new CfnStream(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnStream.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{name:this.name,retentionPeriodHours:this.retentionPeriodHours,shardCount:this.shardCount,streamEncryption:this.streamEncryption,streamModeDetails:this.streamModeDetails,tags:this.tags.renderTags()}}renderProperties(props){return cfnStreamPropsToCloudFormation(props)}}exports.CfnStream=CfnStream,_a=JSII_RTTI_SYMBOL_1,CfnStream[_a]={fqn:"aws-cdk-lib.aws_kinesis.CfnStream",version:"2.20.0"},CfnStream.CFN_RESOURCE_TYPE_NAME="AWS::Kinesis::Stream";function CfnStream_StreamEncryptionPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("encryptionType",cdk.requiredValidator)(properties.encryptionType)),errors.collect(cdk.propertyValidator("encryptionType",cdk.validateString)(properties.encryptionType)),errors.collect(cdk.propertyValidator("keyId",cdk.requiredValidator)(properties.keyId)),errors.collect(cdk.propertyValidator("keyId",cdk.validateString)(properties.keyId)),errors.wrap('supplied properties not correct for "StreamEncryptionProperty"')}function cfnStreamStreamEncryptionPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnStream_StreamEncryptionPropertyValidator(properties).assertSuccess(),{EncryptionType:cdk.stringToCloudFormation(properties.encryptionType),KeyId:cdk.stringToCloudFormation(properties.keyId)}):properties}function CfnStreamStreamEncryptionPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("encryptionType","EncryptionType",cfn_parse.FromCloudFormation.getString(properties.EncryptionType)),ret.addPropertyResult("keyId","KeyId",cfn_parse.FromCloudFormation.getString(properties.KeyId)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnStream_StreamModeDetailsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("streamMode",cdk.requiredValidator)(properties.streamMode)),errors.collect(cdk.propertyValidator("streamMode",cdk.validateString)(properties.streamMode)),errors.wrap('supplied properties not correct for "StreamModeDetailsProperty"')}function cfnStreamStreamModeDetailsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnStream_StreamModeDetailsPropertyValidator(properties).assertSuccess(),{StreamMode:cdk.stringToCloudFormation(properties.streamMode)}):properties}function CfnStreamStreamModeDetailsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("streamMode","StreamMode",cfn_parse.FromCloudFormation.getString(properties.StreamMode)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnStreamConsumerPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("consumerName",cdk.requiredValidator)(properties.consumerName)),errors.collect(cdk.propertyValidator("consumerName",cdk.validateString)(properties.consumerName)),errors.collect(cdk.propertyValidator("streamArn",cdk.requiredValidator)(properties.streamArn)),errors.collect(cdk.propertyValidator("streamArn",cdk.validateString)(properties.streamArn)),errors.wrap('supplied properties not correct for "CfnStreamConsumerProps"')}function cfnStreamConsumerPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnStreamConsumerPropsValidator(properties).assertSuccess(),{ConsumerName:cdk.stringToCloudFormation(properties.consumerName),StreamARN:cdk.stringToCloudFormation(properties.streamArn)}):properties}function CfnStreamConsumerPropsFromCloudFormation(properties){if(properties=properties==null?{}:properties,typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("consumerName","ConsumerName",cfn_parse.FromCloudFormation.getString(properties.ConsumerName)),ret.addPropertyResult("streamArn","StreamARN",cfn_parse.FromCloudFormation.getString(properties.StreamARN)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnStreamConsumer extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnStreamConsumer.CFN_RESOURCE_TYPE_NAME,properties:props});jsiiDeprecationWarnings.aws_cdk_lib_aws_kinesis_CfnStreamConsumerProps(props),cdk.requireProperty(props,"consumerName",this),cdk.requireProperty(props,"streamArn",this),this.attrConsumerArn=cdk.Token.asString(this.getAtt("ConsumerARN")),this.attrConsumerCreationTimestamp=cdk.Token.asString(this.getAtt("ConsumerCreationTimestamp")),this.attrConsumerName=cdk.Token.asString(this.getAtt("ConsumerName")),this.attrConsumerStatus=cdk.Token.asString(this.getAtt("ConsumerStatus")),this.attrStreamArn=cdk.Token.asString(this.getAtt("StreamARN")),this.consumerName=props.consumerName,this.streamArn=props.streamArn}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnStreamConsumerPropsFromCloudFormation(resourceProperties),ret=new CfnStreamConsumer(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector),inspector.addAttribute("aws:cdk:cloudformation:type",CfnStreamConsumer.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{consumerName:this.consumerName,streamArn:this.streamArn}}renderProperties(props){return cfnStreamConsumerPropsToCloudFormation(props)}}exports.CfnStreamConsumer=CfnStreamConsumer,_b=JSII_RTTI_SYMBOL_1,CfnStreamConsumer[_b]={fqn:"aws-cdk-lib.aws_kinesis.CfnStreamConsumer",version:"2.20.0"},CfnStreamConsumer.CFN_RESOURCE_TYPE_NAME="AWS::Kinesis::StreamConsumer";
//# sourceMappingURL=kinesis.generated.js.map
