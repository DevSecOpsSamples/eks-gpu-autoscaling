{
  "version": 3,
  "sources": ["custom-state.ts"],
  "sourcesContent": ["import { Construct } from 'constructs';\nimport { Chain } from '..';\nimport { IChainable, INextable } from '../types';\nimport { State } from './state';\n\n/**\n * Properties for defining a custom state definition\n */\nexport interface CustomStateProps {\n  /**\n   * Amazon States Language (JSON-based) definition of the state\n   *\n   * @see https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html\n   */\n  readonly stateJson: { [key: string]: any };\n}\n\n/**\n * State defined by supplying Amazon States Language (ASL) in the state machine.\n *\n */\nexport class CustomState extends State implements IChainable, INextable {\n  public readonly endStates: INextable[];\n\n  /**\n   * Amazon States Language (JSON-based) definition of the state\n   */\n  private readonly stateJson: { [key: string]: any};\n\n  constructor(scope: Construct, id: string, props: CustomStateProps) {\n    super(scope, id, {});\n\n    this.endStates = [this];\n    this.stateJson = props.stateJson;\n  }\n\n  /**\n   * Continue normal execution with the given state\n   */\n  public next(next: IChainable): Chain {\n    super.makeNext(next.startState);\n    return Chain.sequence(this, next);\n  }\n\n  /**\n   * Returns the Amazon States Language object for this state\n   */\n  public toStateJson(): object {\n    return {\n      ...this.renderNextEnd(),\n      ...this.stateJson,\n    };\n  }\n}\n"],
  "mappings": "qNACA,IAAA,QAAA,IAAA,EAEA,QAAA,QAAA,SAAA,EAkBA,MAAa,mBAAoB,SAAA,KAAK,CAQpC,YAAY,MAAkB,GAAY,MAAuB,CAC/D,MAAM,MAAO,GAAI,CAAA,CAAE,gFAEnB,KAAK,UAAY,CAAC,IAAI,EACtB,KAAK,UAAY,MAAM,UAMlB,KAAK,KAAgB,+EAC1B,MAAM,SAAS,KAAK,UAAU,EACvB,IAAA,MAAM,SAAS,KAAM,IAAI,EAM3B,aAAW,CAChB,MAAO,IACF,KAAK,cAAa,KAClB,KAAK,YA7Bd,QAAA,YAAA",
  "names": []
}
