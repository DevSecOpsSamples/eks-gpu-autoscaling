{
  "version": 3,
  "sources": ["fail.ts"],
  "sourcesContent": ["import { Construct } from 'constructs';\nimport { INextable } from '../types';\nimport { StateType } from './private/state-type';\nimport { State } from './state';\n\n/**\n * Properties for defining a Fail state\n */\nexport interface FailProps {\n  /**\n   * An optional description for this state\n   *\n   * @default No comment\n   */\n  readonly comment?: string;\n\n  /**\n   * Error code used to represent this failure\n   *\n   * @default No error code\n   */\n  readonly error?: string;\n\n  /**\n   * A description for the cause of the failure\n   *\n   * @default No description\n   */\n  readonly cause?: string;\n}\n\n/**\n * Define a Fail state in the state machine\n *\n * Reaching a Fail state terminates the state execution in failure.\n */\nexport class Fail extends State {\n  public readonly endStates: INextable[] = [];\n\n  private readonly error?: string;\n  private readonly cause?: string;\n\n  constructor(scope: Construct, id: string, props: FailProps = {}) {\n    super(scope, id, props);\n\n    this.error = props.error;\n    this.cause = props.cause;\n  }\n\n  /**\n   * Return the Amazon States Language object for this state\n   */\n  public toStateJson(): object {\n    return {\n      Type: StateType.FAIL,\n      Comment: this.comment,\n      Error: this.error,\n      Cause: this.cause,\n    };\n  }\n}\n"],
  "mappings": "8MAEA,aAAA,QAAA,sBAAA,EACA,QAAA,QAAA,SAAA,EAiCA,MAAa,YAAa,SAAA,KAAK,CAM7B,YAAY,MAAkB,GAAY,MAAmB,CAAA,EAAE,CAC7D,MAAM,MAAO,GAAI,KAAK,EANR,KAAA,UAAyB,CAAA,yEAQvC,KAAK,MAAQ,MAAM,MACnB,KAAK,MAAQ,MAAM,MAMd,aAAW,CAChB,MAAO,CACL,KAAM,aAAA,UAAU,KAChB,QAAS,KAAK,QACd,MAAO,KAAK,MACZ,MAAO,KAAK,QArBlB,QAAA,KAAA",
  "names": []
}
