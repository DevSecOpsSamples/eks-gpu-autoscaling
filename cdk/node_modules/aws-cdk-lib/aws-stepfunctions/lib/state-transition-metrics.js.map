{
  "version": 3,
  "sources": ["state-transition-metrics.ts"],
  "sourcesContent": ["import * as cloudwatch from '../../aws-cloudwatch';\n\n/**\n * Metrics on the rate limiting performed on state machine execution.\n *\n * These rate limits are shared across all state machines.\n */\nexport class StateTransitionMetric {\n  /**\n   * Return the given named metric for the service's state transition metrics\n   *\n   * @default average over 5 minutes\n   */\n  public static metric(metricName: string, props?: cloudwatch.MetricOptions): cloudwatch.Metric {\n    return new cloudwatch.Metric({\n      namespace: 'AWS/States',\n      metricName,\n      dimensionsMap: { ServiceMetric: 'StateTransition' },\n      ...props,\n    });\n  }\n\n  /**\n   * Metric for the number of available state transitions.\n   *\n   * @default average over 5 minutes\n   */\n  public static metricProvisionedBucketSize(props?: cloudwatch.MetricOptions): cloudwatch.Metric {\n    return StateTransitionMetric.metric('ProvisionedBucketSize', props);\n  }\n\n  /**\n   * Metric for the provisioned steady-state execution rate\n   *\n   * @default average over 5 minutes\n   */\n  public static metricProvisionedRefillRate(props?: cloudwatch.MetricOptions): cloudwatch.Metric {\n    return StateTransitionMetric.metric('ProvisionedRefillRate', props);\n  }\n\n  /**\n   * Metric for the number of available state transitions per second\n   *\n   * @default average over 5 minutes\n   */\n  public static metricConsumedCapacity(props?: cloudwatch.MetricOptions): cloudwatch.Metric {\n    return StateTransitionMetric.metric('ConsumedCapacity', props);\n  }\n\n  /**\n   * Metric for the number of throttled state transitions\n   *\n   * @default sum over 5 minutes\n   */\n  public static metricThrottledEvents(props?: cloudwatch.MetricOptions): cloudwatch.Metric {\n    return StateTransitionMetric.metric('ThrottledEvents', { statistic: 'sum', ...props });\n  }\n}\n"],
  "mappings": "4NAAA,WAAA,QAAA,sBAAA,EAOA,MAAa,qBAAqB,OAMlB,QAAO,WAAoB,MAAgC,gFAChE,GAAI,YAAW,OAAO,CAC3B,UAAW,aACX,WACA,cAAe,CAAE,cAAe,iBAAiB,KAC9C,MACJ,QAQW,6BAA4B,MAAgC,gFACjE,sBAAsB,OAAO,wBAAyB,KAAK,QAQtD,6BAA4B,MAAgC,gFACjE,sBAAsB,OAAO,wBAAyB,KAAK,QAQtD,wBAAuB,MAAgC,gFAC5D,sBAAsB,OAAO,mBAAoB,KAAK,QAQjD,uBAAsB,MAAgC,gFAC3D,sBAAsB,OAAO,kBAAmB,CAAE,UAAW,SAAU,KAAK,CAAE,GAhDzF,QAAA,sBAAA",
  "names": []
}
