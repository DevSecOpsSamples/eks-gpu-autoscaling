{
  "version": 3,
  "sources": ["step-functions-task.ts"],
  "sourcesContent": ["import * as cloudwatch from '../../aws-cloudwatch';\nimport * as iam from '../../aws-iam';\nimport { Duration } from '../../core';\nimport { Task } from './states/task';\n\n/**\n * Interface for resources that can be used as tasks\n * @deprecated replaced by `TaskStateBase`.\n */\nexport interface IStepFunctionsTask {\n  /**\n   * Called when the task object is used in a workflow\n   */\n  bind(task: Task): StepFunctionsTaskConfig;\n}\n\n/**\n * Properties that define what kind of task should be created\n * @deprecated used by `IStepFunctionsTask`. `IStepFunctionsTask` is deprecated and replaced by `TaskStateBase`.\n */\nexport interface StepFunctionsTaskConfig {\n  /**\n   * The resource that represents the work to be executed\n   *\n   * Either the ARN of a Lambda Function or Activity, or a special\n   * ARN.\n   */\n  readonly resourceArn: string;\n\n  /**\n   * Parameters pass a collection of key-value pairs, either static values or JSONPath expressions that select from the input.\n   *\n   * The meaning of these parameters is task-dependent.\n   *\n   * Its values will be merged with the `parameters` property which is configured directly\n   * on the Task state.\n   *\n   * @see\n   * https://docs.aws.amazon.com/step-functions/latest/dg/input-output-inputpath-params.html#input-output-parameters\n   *\n   * @default No parameters\n   */\n  readonly parameters?: { [name: string]: any };\n\n  /**\n   * Maximum time between heart beats\n   *\n   * If the time between heart beats takes longer than this, a 'Timeout' error is raised.\n   *\n   * This is only relevant when using an Activity type as resource.\n   *\n   * @default No heart beat timeout\n   */\n  readonly heartbeat?: Duration;\n\n  /**\n   * Additional policy statements to add to the execution role\n   *\n   * @default No policy roles\n   */\n  readonly policyStatements?: iam.PolicyStatement[];\n\n  /**\n   * Prefix for singular metric names of activity actions\n   *\n   * @default No such metrics\n   */\n  readonly metricPrefixSingular?: string;\n\n  /**\n   * Prefix for plural metric names of activity actions\n   *\n   * @default No such metrics\n   */\n  readonly metricPrefixPlural?: string;\n\n  /**\n   * The dimensions to attach to metrics\n   *\n   * @default No metrics\n   */\n  readonly metricDimensions?: cloudwatch.DimensionHash;\n}\n\n/**\n * Three ways to call an integrated service: Request Response, Run a Job and Wait for a Callback with Task Token.\n * @see https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html\n *\n * Here, they are named as FIRE_AND_FORGET, SYNC and WAIT_FOR_TASK_TOKEN respectfully.\n *\n * @default FIRE_AND_FORGET\n */\nexport enum ServiceIntegrationPattern {\n  /**\n   * Call a service and progress to the next state immediately after the API call completes\n   */\n  FIRE_AND_FORGET = 'FIRE_AND_FORGET',\n\n  /**\n   * Call a service and wait for a job to complete.\n   */\n  SYNC = 'SYNC',\n\n  /**\n   * Call a service with a task token and wait until that token is returned by SendTaskSuccess/SendTaskFailure with payload.\n   */\n  WAIT_FOR_TASK_TOKEN = 'WAIT_FOR_TASK_TOKEN'\n}\n"],
  "mappings": "6GA4FA,GAAY,2BAAZ,AAAA,UAAY,2BAAyB,CAInC,2BAAA,gBAAA,kBAKA,2BAAA,KAAA,OAKA,2BAAA,oBAAA,qBACF,GAfY,0BAAA,QAAA,2BAAA,SAAA,0BAAyB,CAAA,EAAA",
  "names": []
}
