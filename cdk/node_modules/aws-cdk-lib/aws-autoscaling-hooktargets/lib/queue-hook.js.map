{
  "version": 3,
  "sources": ["queue-hook.ts"],
  "sourcesContent": ["import * as autoscaling from '../../aws-autoscaling';\nimport * as sqs from '../../aws-sqs';\nimport { createRole } from './common';\n\n// keep this import separate from other imports to reduce chance for merge conflicts with v2-main\n// eslint-disable-next-line no-duplicate-imports, import/order\nimport { Construct } from 'constructs';\n\n/**\n * Use an SQS queue as a hook target\n */\nexport class QueueHook implements autoscaling.ILifecycleHookTarget {\n  constructor(private readonly queue: sqs.IQueue) {\n  }\n\n  /**\n   * If an `IRole` is found in `options`, grant it access to send messages.\n   * Otherwise, create a new `IRole` and grant it access to send messages.\n   *\n   * @returns the `IRole` with access to send messages and the ARN of the queue it has access to send messages to.\n   */\n  public bind(_scope: Construct, options: autoscaling.BindHookTargetOptions): autoscaling.LifecycleHookTargetConfig {\n    const role = createRole(_scope, options.role);\n    this.queue.grantSendMessages(role);\n\n    return {\n      notificationTargetArn: this.queue.queueArn,\n      createdRole: role,\n    };\n  }\n}\n"],
  "mappings": "gNAEA,SAAA,QAAA,UAAA,EASA,MAAa,SAAS,CACpB,YAA6B,MAAiB,CAAjB,KAAA,MAAA,gEAStB,KAAK,OAAmB,QAA0C,oFACvE,KAAM,MAAO,SAAA,WAAW,OAAQ,QAAQ,IAAI,EAC5C,YAAK,MAAM,kBAAkB,IAAI,EAE1B,CACL,sBAAuB,KAAK,MAAM,SAClC,YAAa,OAhBnB,QAAA,UAAA",
  "names": []
}
