{
  "version": 3,
  "sources": ["package-manager.ts"],
  "sourcesContent": ["import * as os from 'os';\nimport * as path from 'path';\nimport { LogLevel } from './types';\n\ninterface PackageManagerProps {\n  readonly lockFile: string;\n  readonly installCommand: string[];\n  readonly runCommand: string[];\n  readonly argsSeparator?: string;\n}\n\nexport enum LockFile {\n  NPM = 'package-lock.json',\n  YARN = 'yarn.lock',\n  PNPM = 'pnpm-lock.yaml',\n}\n\n/**\n * A node package manager\n */\nexport class PackageManager {\n  /**\n   * Use a lock file path to determine the package manager to use. Optionally, specify a log level to\n   * control its verbosity.\n   * @param lockFilePath Path of the lock file\n   * @param logLevel optional log level @default LogLevel.INFO\n   * @returns the right PackageManager for that lock file\n   */\n  public static fromLockFile(lockFilePath: string, logLevel?: LogLevel): PackageManager {\n    const lockFile = path.basename(lockFilePath);\n\n    switch (lockFile) {\n      case LockFile.YARN:\n        return new PackageManager({\n          lockFile: LockFile.YARN,\n          installCommand: logLevel && logLevel !== LogLevel.INFO ? ['yarn', 'install', '--no-immutable', '--silent'] : ['yarn', 'install', '--no-immutable'],\n          runCommand: ['yarn', 'run'],\n        });\n      case LockFile.PNPM:\n        return new PackageManager({\n          lockFile: LockFile.PNPM,\n          installCommand: logLevel && logLevel !== LogLevel.INFO ? ['pnpm', 'install', '--reporter', 'silent'] : ['pnpm', 'install'],\n          runCommand: ['pnpm', 'exec'],\n          argsSeparator: '--',\n        });\n      default:\n        return new PackageManager({\n          lockFile: LockFile.NPM,\n          installCommand: logLevel ? ['npm', 'ci', '--loglevel', logLevel] : ['npm', 'ci'],\n          runCommand: ['npx', '--no-install'],\n        });\n    }\n  }\n\n  public readonly lockFile: string;\n  public readonly installCommand: string[];\n  public readonly runCommand: string[];\n  public readonly argsSeparator?: string;\n\n  constructor(props: PackageManagerProps) {\n    this.lockFile = props.lockFile;\n    this.installCommand = props.installCommand;\n    this.runCommand = props.runCommand;\n    this.argsSeparator = props.argsSeparator;\n  }\n\n  public runBinCommand(bin: string): string {\n    const [runCommand, ...runArgs] = this.runCommand;\n    return [\n      os.platform() === 'win32' ? `${runCommand}.cmd` : runCommand,\n      ...runArgs,\n      ...(this.argsSeparator ? [this.argsSeparator] : []),\n      bin,\n    ].join(' ');\n  }\n}\n"],
  "mappings": "mHAAA,KAAA,IAAA,QAAA,IAAA,EACA,KAAA,QAAA,MAAA,EACA,QAAA,QAAA,SAAA,EASA,GAAY,UAAZ,AAAA,UAAY,UAAQ,CAClB,UAAA,IAAA,oBACA,UAAA,KAAA,YACA,UAAA,KAAA,gBACF,GAJY,SAAA,QAAA,UAAA,SAAA,SAAQ,CAAA,EAAA,EASpB,MAAa,cAAc,CAuCzB,YAAY,MAA0B,CACpC,KAAK,SAAW,MAAM,SACtB,KAAK,eAAiB,MAAM,eAC5B,KAAK,WAAa,MAAM,WACxB,KAAK,cAAgB,MAAM,oBAnCf,cAAa,aAAsB,SAAmB,CAGlE,OAFiB,KAAK,SAAS,YAAY,OAGpC,UAAS,KACZ,MAAO,IAAI,gBAAe,CACxB,SAAU,SAAS,KACnB,eAAgB,UAAY,WAAa,QAAA,SAAS,KAAO,CAAC,OAAQ,UAAW,iBAAkB,UAAU,EAAI,CAAC,OAAQ,UAAW,gBAAgB,EACjJ,WAAY,CAAC,OAAQ,KAAK,EAC3B,MACE,UAAS,KACZ,MAAO,IAAI,gBAAe,CACxB,SAAU,SAAS,KACnB,eAAgB,UAAY,WAAa,QAAA,SAAS,KAAO,CAAC,OAAQ,UAAW,aAAc,QAAQ,EAAI,CAAC,OAAQ,SAAS,EACzH,WAAY,CAAC,OAAQ,MAAM,EAC3B,cAAe,KAChB,UAED,MAAO,IAAI,gBAAe,CACxB,SAAU,SAAS,IACnB,eAAgB,SAAW,CAAC,MAAO,KAAM,aAAc,QAAQ,EAAI,CAAC,MAAO,IAAI,EAC/E,WAAY,CAAC,MAAO,cAAc,EACnC,GAgBA,cAAc,IAAW,CAC9B,KAAM,CAAC,cAAe,SAAW,KAAK,WACtC,MAAO,CACL,GAAG,SAAQ,IAAO,QAAU,GAAG,iBAAmB,WAClD,GAAG,QACH,GAAI,KAAK,cAAgB,CAAC,KAAK,aAAa,EAAI,CAAA,EAChD,KACA,KAAK,GAAG,GArDd,QAAA,eAAA",
  "names": []
}
