{
  "version": 3,
  "sources": ["parameter-group.ts"],
  "sourcesContent": ["import { IResource, Resource } from '../../core';\nimport { Construct } from 'constructs';\nimport { CfnDBClusterParameterGroup } from './docdb.generated';\n\n/**\n * A parameter group\n */\nexport interface IClusterParameterGroup extends IResource {\n  /**\n   * The name of this parameter group\n   */\n  readonly parameterGroupName: string;\n}\n\n/**\n * A new cluster or instance parameter group\n */\nabstract class ClusterParameterGroupBase extends Resource implements IClusterParameterGroup {\n  /**\n   * Imports a parameter group\n   */\n  public static fromParameterGroupName(scope: Construct, id: string, parameterGroupName: string): IClusterParameterGroup {\n    class Import extends Resource implements IClusterParameterGroup {\n      public readonly parameterGroupName = parameterGroupName;\n    }\n    return new Import(scope, id);\n  }\n\n  /**\n   * The name of the parameter group\n   */\n  public abstract readonly parameterGroupName: string;\n}\n\n/**\n * Properties for a cluster parameter group\n */\nexport interface ClusterParameterGroupProps {\n  /**\n   * Description for this parameter group\n   *\n   * @default a CDK generated description\n   */\n  readonly description?: string;\n\n  /**\n   * Database family of this parameter group\n   */\n  readonly family: string;\n\n  /**\n   * The name of the cluster parameter group\n   *\n   * @default A CDK generated name for the cluster parameter group\n   */\n  readonly dbClusterParameterGroupName?: string;\n\n  /**\n   * The parameters in this parameter group\n   */\n  readonly parameters: { [key: string]: string };\n}\n\n/**\n * A cluster parameter group\n *\n * @resource AWS::DocDB::DBClusterParameterGroup\n */\nexport class ClusterParameterGroup extends ClusterParameterGroupBase implements IClusterParameterGroup {\n  /**\n   * The name of the parameter group\n   */\n  public readonly parameterGroupName: string;\n\n  constructor(scope: Construct, id: string, props: ClusterParameterGroupProps) {\n    super(scope, id);\n\n    const resource = new CfnDBClusterParameterGroup(this, 'Resource', {\n      name: props.dbClusterParameterGroupName,\n      description: props.description || `Cluster parameter group for ${props.family}`,\n      family: props.family,\n      parameters: props.parameters,\n    });\n\n    this.parameterGroupName = resource.ref;\n  }\n}\n"],
  "mappings": "4NAAA,OAAA,QAAA,YAAA,EAEA,kBAAA,QAAA,mBAAA,EAeA,MAAe,iCAAkC,QAAA,QAAQ,OAIzC,wBAAuB,MAAkB,GAAY,mBAA0B,CAC3F,MAAM,cAAe,QAAA,QAAQ,CAA7B,aAAA,qBACkB,KAAA,mBAAqB,kBACvC,EACA,MAAO,IAAI,QAAO,MAAO,EAAE,GA2C/B,MAAa,6BAA8B,0BAAyB,CAMlE,YAAY,MAAkB,GAAY,MAAiC,CACzE,MAAM,MAAO,EAAE,kFAEf,KAAM,UAAW,GAAI,mBAAA,2BAA2B,KAAM,WAAY,CAChE,KAAM,MAAM,4BACZ,YAAa,MAAM,aAAe,+BAA+B,MAAM,SACvE,OAAQ,MAAM,OACd,WAAY,MAAM,WACnB,EAED,KAAK,mBAAqB,SAAS,KAhBvC,QAAA,sBAAA",
  "names": []
}
