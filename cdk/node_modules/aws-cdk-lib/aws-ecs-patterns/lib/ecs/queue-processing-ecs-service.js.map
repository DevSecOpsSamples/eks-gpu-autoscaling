{
  "version": 3,
  "sources": ["queue-processing-ecs-service.ts"],
  "sourcesContent": ["import { Ec2Service, Ec2TaskDefinition, PlacementConstraint, PlacementStrategy } from '../../../aws-ecs';\nimport { FeatureFlags } from '../../../core';\nimport * as cxapi from '../../../cx-api';\nimport { Construct } from 'constructs';\nimport { QueueProcessingServiceBase, QueueProcessingServiceBaseProps } from '../base/queue-processing-service-base';\n\n/**\n * The properties for the QueueProcessingEc2Service service.\n */\nexport interface QueueProcessingEc2ServiceProps extends QueueProcessingServiceBaseProps {\n  /**\n   * The number of cpu units used by the task.\n   *\n   * Valid values, which determines your range of valid values for the memory parameter:\n   *\n   * 256 (.25 vCPU) - Available memory values: 0.5GB, 1GB, 2GB\n   *\n   * 512 (.5 vCPU) - Available memory values: 1GB, 2GB, 3GB, 4GB\n   *\n   * 1024 (1 vCPU) - Available memory values: 2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB\n   *\n   * 2048 (2 vCPU) - Available memory values: Between 4GB and 16GB in 1GB increments\n   *\n   * 4096 (4 vCPU) - Available memory values: Between 8GB and 30GB in 1GB increments\n   *\n   * This default is set in the underlying FargateTaskDefinition construct.\n   *\n   * @default none\n   */\n  readonly cpu?: number;\n\n  /**\n   * The hard limit (in MiB) of memory to present to the container.\n   *\n   * If your container attempts to exceed the allocated memory, the container\n   * is terminated.\n   *\n   * At least one of memoryLimitMiB and memoryReservationMiB is required for non-Fargate services.\n   *\n   * @default - No memory limit.\n   */\n  readonly memoryLimitMiB?: number;\n\n  /**\n   * The soft limit (in MiB) of memory to reserve for the container.\n   *\n   * When system memory is under contention, Docker attempts to keep the\n   * container memory within the limit. If the container requires more memory,\n   * it can consume up to the value specified by the Memory property or all of\n   * the available memory on the container instance\u2014whichever comes first.\n   *\n   * At least one of memoryLimitMiB and memoryReservationMiB is required for non-Fargate services.\n   *\n   * @default - No memory reserved.\n   */\n  readonly memoryReservationMiB?: number;\n\n  /**\n   * Gpu count for container in task definition. Set this if you want to use gpu based instances.\n   *\n   * @default - No GPUs assigned.\n   */\n  readonly gpuCount?: number;\n\n  /**\n   * Optional name for the container added\n   *\n   * @default - QueueProcessingContainer\n   */\n  readonly containerName?: string;\n\n  /**\n   * The placement constraints to use for tasks in the service. For more information, see\n   * [Amazon ECS Task Placement Constraints](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html).\n   *\n   * @default - No constraints.\n   */\n  readonly placementConstraints?: PlacementConstraint[];\n\n  /**\n   * The placement strategies to use for tasks in the service. For more information, see\n   * [Amazon ECS Task Placement Strategies](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html).\n   *\n   * @default - No strategies.\n  */\n  readonly placementStrategies?: PlacementStrategy[];\n}\n\n/**\n * Class to create a queue processing EC2 service.\n */\nexport class QueueProcessingEc2Service extends QueueProcessingServiceBase {\n\n  /**\n   * The EC2 service in this construct.\n   */\n  public readonly service: Ec2Service;\n  /**\n   * The EC2 task definition in this construct\n   */\n  public readonly taskDefinition: Ec2TaskDefinition;\n\n  /**\n   * Constructs a new instance of the QueueProcessingEc2Service class.\n   */\n  constructor(scope: Construct, id: string, props: QueueProcessingEc2ServiceProps) {\n    super(scope, id, props);\n\n    const containerName = props.containerName ?? 'QueueProcessingContainer';\n\n    // Create a Task Definition for the container to start\n    this.taskDefinition = new Ec2TaskDefinition(this, 'QueueProcessingTaskDef', {\n      family: props.family,\n    });\n    this.taskDefinition.addContainer(containerName, {\n      image: props.image,\n      memoryLimitMiB: props.memoryLimitMiB,\n      memoryReservationMiB: props.memoryReservationMiB,\n      cpu: props.cpu,\n      gpuCount: props.gpuCount,\n      command: props.command,\n      environment: this.environment,\n      secrets: this.secrets,\n      logging: this.logDriver,\n    });\n\n    // The desiredCount should be removed from the fargate service when the feature flag is removed.\n    const desiredCount = FeatureFlags.of(this).isEnabled(cxapi.ECS_REMOVE_DEFAULT_DESIRED_COUNT) ? undefined : this.desiredCount;\n\n    // Create an ECS service with the previously defined Task Definition and configure\n    // autoscaling based on cpu utilization and number of messages visible in the SQS queue.\n    this.service = new Ec2Service(this, 'QueueProcessingService', {\n      cluster: this.cluster,\n      desiredCount: desiredCount,\n      taskDefinition: this.taskDefinition,\n      serviceName: props.serviceName,\n      minHealthyPercent: props.minHealthyPercent,\n      maxHealthyPercent: props.maxHealthyPercent,\n      propagateTags: props.propagateTags,\n      enableECSManagedTags: props.enableECSManagedTags,\n      deploymentController: props.deploymentController,\n      circuitBreaker: props.circuitBreaker,\n      capacityProviderStrategies: props.capacityProviderStrategies,\n      placementConstraints: props.placementConstraints,\n      placementStrategies: props.placementStrategies,\n    });\n\n    this.configureAutoscalingForService(this.service);\n    this.grantPermissionsToService(this.service);\n  }\n}\n"],
  "mappings": "mOAAA,UAAA,QAAA,kBAAA,EACA,OAAA,QAAA,eAAA,EACA,MAAA,QAAA,iBAAA,EAEA,gCAAA,QAAA,uCAAA,EAuFA,MAAa,iCAAkC,iCAAA,0BAA0B,CAcvE,YAAY,MAAkB,GAAY,MAAqC,QAC7E,MAAM,MAAO,GAAI,KAAK,6FAEtB,KAAM,eAAa,IAAG,MAAM,iBAAa,MAAA,KAAA,OAAA,GAAI,2BAG7C,KAAK,eAAiB,GAAI,WAAA,kBAAkB,KAAM,yBAA0B,CAC1E,OAAQ,MAAM,OACf,EACD,KAAK,eAAe,aAAa,cAAe,CAC9C,MAAO,MAAM,MACb,eAAgB,MAAM,eACtB,qBAAsB,MAAM,qBAC5B,IAAK,MAAM,IACX,SAAU,MAAM,SAChB,QAAS,MAAM,QACf,YAAa,KAAK,YAClB,QAAS,KAAK,QACd,QAAS,KAAK,UACf,EAGD,KAAM,cAAe,OAAA,aAAa,GAAG,IAAI,EAAE,UAAU,MAAM,gCAAgC,EAAI,OAAY,KAAK,aAIhH,KAAK,QAAU,GAAI,WAAA,WAAW,KAAM,yBAA0B,CAC5D,QAAS,KAAK,QACd,aACA,eAAgB,KAAK,eACrB,YAAa,MAAM,YACnB,kBAAmB,MAAM,kBACzB,kBAAmB,MAAM,kBACzB,cAAe,MAAM,cACrB,qBAAsB,MAAM,qBAC5B,qBAAsB,MAAM,qBAC5B,eAAgB,MAAM,eACtB,2BAA4B,MAAM,2BAClC,qBAAsB,MAAM,qBAC5B,oBAAqB,MAAM,oBAC5B,EAED,KAAK,+BAA+B,KAAK,OAAO,EAChD,KAAK,0BAA0B,KAAK,OAAO,GAzD/C,QAAA,0BAAA",
  "names": []
}
