{
  "version": 3,
  "sources": ["sam.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-04-07T10:53:59.136Z\",\"fingerprint\":\"v4MWtJuzGToktIROJUlAr0ix4SP18NoJFYRBwMP+YWM=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n/**\n * Properties for defining a `CfnApi`\n *\n * @struct\n * @stability external\n *\n * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n */\nexport interface CfnApiProps {\n\n    /**\n     * `AWS::Serverless::Api.StageName`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n     */\n    readonly stageName: string;\n\n    /**\n     * `AWS::Serverless::Api.AccessLogSetting`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n     */\n    readonly accessLogSetting?: CfnApi.AccessLogSettingProperty | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::Api.Auth`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n     */\n    readonly auth?: CfnApi.AuthProperty | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::Api.BinaryMediaTypes`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n     */\n    readonly binaryMediaTypes?: string[];\n\n    /**\n     * `AWS::Serverless::Api.CacheClusterEnabled`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n     */\n    readonly cacheClusterEnabled?: boolean | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::Api.CacheClusterSize`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n     */\n    readonly cacheClusterSize?: string;\n\n    /**\n     * `AWS::Serverless::Api.CanarySetting`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-api.html#sam-api-canarysetting\n     */\n    readonly canarySetting?: CfnApi.CanarySettingProperty | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::Api.Cors`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n     */\n    readonly cors?: CfnApi.CorsConfigurationProperty | string | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::Api.DefinitionBody`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n     */\n    readonly definitionBody?: any | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::Api.DefinitionUri`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n     */\n    readonly definitionUri?: CfnApi.S3LocationProperty | string | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::Api.Description`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-api.html#sam-api-description\n     */\n    readonly description?: string;\n\n    /**\n     * `AWS::Serverless::Api.EndpointConfiguration`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n     */\n    readonly endpointConfiguration?: CfnApi.EndpointConfigurationProperty | string | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::Api.GatewayResponses`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-api.html#sam-api-gatewayresponses\n     */\n    readonly gatewayResponses?: { [key: string]: (string) } | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::Api.MethodSettings`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n     */\n    readonly methodSettings?: Array<any | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::Api.MinimumCompressionSize`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-api.html#sam-api-minimumcompressionsize\n     */\n    readonly minimumCompressionSize?: number;\n\n    /**\n     * `AWS::Serverless::Api.Models`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-api.html#sam-api-models\n     */\n    readonly models?: { [key: string]: (string) } | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::Api.Name`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n     */\n    readonly name?: string;\n\n    /**\n     * `AWS::Serverless::Api.OpenApiVersion`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n     */\n    readonly openApiVersion?: string;\n\n    /**\n     * `AWS::Serverless::Api.Tags`\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesshttpapi\n     */\n    readonly tags?: { [key: string]: (string) };\n\n    /**\n     * `AWS::Serverless::Api.TracingEnabled`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n     */\n    readonly tracingEnabled?: boolean | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::Api.Variables`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n     */\n    readonly variables?: { [key: string]: (string) } | cdk.IResolvable;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnApiProps`\n *\n * @param properties - the TypeScript properties of a `CfnApiProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnApiPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('accessLogSetting', CfnApi_AccessLogSettingPropertyValidator)(properties.accessLogSetting));\n    errors.collect(cdk.propertyValidator('auth', CfnApi_AuthPropertyValidator)(properties.auth));\n    errors.collect(cdk.propertyValidator('binaryMediaTypes', cdk.listValidator(cdk.validateString))(properties.binaryMediaTypes));\n    errors.collect(cdk.propertyValidator('cacheClusterEnabled', cdk.validateBoolean)(properties.cacheClusterEnabled));\n    errors.collect(cdk.propertyValidator('cacheClusterSize', cdk.validateString)(properties.cacheClusterSize));\n    errors.collect(cdk.propertyValidator('canarySetting', CfnApi_CanarySettingPropertyValidator)(properties.canarySetting));\n    errors.collect(cdk.propertyValidator('cors', cdk.unionValidator(CfnApi_CorsConfigurationPropertyValidator, cdk.validateString))(properties.cors));\n    errors.collect(cdk.propertyValidator('definitionBody', cdk.validateObject)(properties.definitionBody));\n    errors.collect(cdk.propertyValidator('definitionUri', cdk.unionValidator(CfnApi_S3LocationPropertyValidator, cdk.validateString))(properties.definitionUri));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('endpointConfiguration', cdk.unionValidator(CfnApi_EndpointConfigurationPropertyValidator, cdk.validateString))(properties.endpointConfiguration));\n    errors.collect(cdk.propertyValidator('gatewayResponses', cdk.hashValidator(cdk.validateString))(properties.gatewayResponses));\n    errors.collect(cdk.propertyValidator('methodSettings', cdk.listValidator(cdk.validateObject))(properties.methodSettings));\n    errors.collect(cdk.propertyValidator('minimumCompressionSize', cdk.validateNumber)(properties.minimumCompressionSize));\n    errors.collect(cdk.propertyValidator('models', cdk.hashValidator(cdk.validateString))(properties.models));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('openApiVersion', cdk.validateString)(properties.openApiVersion));\n    errors.collect(cdk.propertyValidator('stageName', cdk.requiredValidator)(properties.stageName));\n    errors.collect(cdk.propertyValidator('stageName', cdk.validateString)(properties.stageName));\n    errors.collect(cdk.propertyValidator('tags', cdk.hashValidator(cdk.validateString))(properties.tags));\n    errors.collect(cdk.propertyValidator('tracingEnabled', cdk.validateBoolean)(properties.tracingEnabled));\n    errors.collect(cdk.propertyValidator('variables', cdk.hashValidator(cdk.validateString))(properties.variables));\n    return errors.wrap('supplied properties not correct for \"CfnApiProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Api` resource\n *\n * @param properties - the TypeScript properties of a `CfnApiProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Api` resource.\n */\n// @ts-ignore TS6133\nfunction cfnApiPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnApiPropsValidator(properties).assertSuccess();\n    return {\n        StageName: cdk.stringToCloudFormation(properties.stageName),\n        AccessLogSetting: cfnApiAccessLogSettingPropertyToCloudFormation(properties.accessLogSetting),\n        Auth: cfnApiAuthPropertyToCloudFormation(properties.auth),\n        BinaryMediaTypes: cdk.listMapper(cdk.stringToCloudFormation)(properties.binaryMediaTypes),\n        CacheClusterEnabled: cdk.booleanToCloudFormation(properties.cacheClusterEnabled),\n        CacheClusterSize: cdk.stringToCloudFormation(properties.cacheClusterSize),\n        CanarySetting: cfnApiCanarySettingPropertyToCloudFormation(properties.canarySetting),\n        Cors: cdk.unionMapper([CfnApi_CorsConfigurationPropertyValidator, cdk.validateString], [cfnApiCorsConfigurationPropertyToCloudFormation, cdk.stringToCloudFormation])(properties.cors),\n        DefinitionBody: cdk.objectToCloudFormation(properties.definitionBody),\n        DefinitionUri: cdk.unionMapper([CfnApi_S3LocationPropertyValidator, cdk.validateString], [cfnApiS3LocationPropertyToCloudFormation, cdk.stringToCloudFormation])(properties.definitionUri),\n        Description: cdk.stringToCloudFormation(properties.description),\n        EndpointConfiguration: cdk.unionMapper([CfnApi_EndpointConfigurationPropertyValidator, cdk.validateString], [cfnApiEndpointConfigurationPropertyToCloudFormation, cdk.stringToCloudFormation])(properties.endpointConfiguration),\n        GatewayResponses: cdk.hashMapper(cdk.stringToCloudFormation)(properties.gatewayResponses),\n        MethodSettings: cdk.listMapper(cdk.objectToCloudFormation)(properties.methodSettings),\n        MinimumCompressionSize: cdk.numberToCloudFormation(properties.minimumCompressionSize),\n        Models: cdk.hashMapper(cdk.stringToCloudFormation)(properties.models),\n        Name: cdk.stringToCloudFormation(properties.name),\n        OpenApiVersion: cdk.stringToCloudFormation(properties.openApiVersion),\n        Tags: cdk.hashMapper(cdk.stringToCloudFormation)(properties.tags),\n        TracingEnabled: cdk.booleanToCloudFormation(properties.tracingEnabled),\n        Variables: cdk.hashMapper(cdk.stringToCloudFormation)(properties.variables),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnApiPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnApiProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnApiProps>();\n    ret.addPropertyResult('stageName', 'StageName', cfn_parse.FromCloudFormation.getString(properties.StageName));\n    ret.addPropertyResult('accessLogSetting', 'AccessLogSetting', properties.AccessLogSetting != null ? CfnApiAccessLogSettingPropertyFromCloudFormation(properties.AccessLogSetting) : undefined);\n    ret.addPropertyResult('auth', 'Auth', properties.Auth != null ? CfnApiAuthPropertyFromCloudFormation(properties.Auth) : undefined);\n    ret.addPropertyResult('binaryMediaTypes', 'BinaryMediaTypes', properties.BinaryMediaTypes != null ? cfn_parse.FromCloudFormation.getStringArray(properties.BinaryMediaTypes) : undefined);\n    ret.addPropertyResult('cacheClusterEnabled', 'CacheClusterEnabled', properties.CacheClusterEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.CacheClusterEnabled) : undefined);\n    ret.addPropertyResult('cacheClusterSize', 'CacheClusterSize', properties.CacheClusterSize != null ? cfn_parse.FromCloudFormation.getString(properties.CacheClusterSize) : undefined);\n    ret.addPropertyResult('canarySetting', 'CanarySetting', properties.CanarySetting != null ? CfnApiCanarySettingPropertyFromCloudFormation(properties.CanarySetting) : undefined);\n    ret.addPropertyResult('cors', 'Cors', properties.Cors != null ? cfn_parse.FromCloudFormation.getTypeUnion([CfnApi_CorsConfigurationPropertyValidator, cdk.validateString], [CfnApiCorsConfigurationPropertyFromCloudFormation, cfn_parse.FromCloudFormation.getString])(properties.Cors) : undefined);\n    ret.addPropertyResult('definitionBody', 'DefinitionBody', properties.DefinitionBody != null ? cfn_parse.FromCloudFormation.getAny(properties.DefinitionBody) : undefined);\n    ret.addPropertyResult('definitionUri', 'DefinitionUri', properties.DefinitionUri != null ? cfn_parse.FromCloudFormation.getTypeUnion([CfnApi_S3LocationPropertyValidator, cdk.validateString], [CfnApiS3LocationPropertyFromCloudFormation, cfn_parse.FromCloudFormation.getString])(properties.DefinitionUri) : undefined);\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('endpointConfiguration', 'EndpointConfiguration', properties.EndpointConfiguration != null ? cfn_parse.FromCloudFormation.getTypeUnion([CfnApi_EndpointConfigurationPropertyValidator, cdk.validateString], [CfnApiEndpointConfigurationPropertyFromCloudFormation, cfn_parse.FromCloudFormation.getString])(properties.EndpointConfiguration) : undefined);\n    ret.addPropertyResult('gatewayResponses', 'GatewayResponses', properties.GatewayResponses != null ? cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.GatewayResponses) : undefined);\n    ret.addPropertyResult('methodSettings', 'MethodSettings', properties.MethodSettings != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getAny)(properties.MethodSettings) : undefined);\n    ret.addPropertyResult('minimumCompressionSize', 'MinimumCompressionSize', properties.MinimumCompressionSize != null ? cfn_parse.FromCloudFormation.getNumber(properties.MinimumCompressionSize) : undefined);\n    ret.addPropertyResult('models', 'Models', properties.Models != null ? cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Models) : undefined);\n    ret.addPropertyResult('name', 'Name', properties.Name != null ? cfn_parse.FromCloudFormation.getString(properties.Name) : undefined);\n    ret.addPropertyResult('openApiVersion', 'OpenApiVersion', properties.OpenApiVersion != null ? cfn_parse.FromCloudFormation.getString(properties.OpenApiVersion) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Tags) : undefined as any);\n    ret.addPropertyResult('tracingEnabled', 'TracingEnabled', properties.TracingEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.TracingEnabled) : undefined);\n    ret.addPropertyResult('variables', 'Variables', properties.Variables != null ? cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Variables) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::Serverless::Api`\n *\n *\n *\n * @cloudformationResource AWS::Serverless::Api\n * @stability external\n *\n * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n */\nexport class CfnApi extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Serverless::Api\";\n    /**\n     * The `Transform` a template must use in order to use this resource\n     */\n    public static readonly REQUIRED_TRANSFORM = \"AWS::Serverless-2016-10-31\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnApi {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnApiPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnApi(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * `AWS::Serverless::Api.StageName`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n     */\n    public stageName: string;\n\n    /**\n     * `AWS::Serverless::Api.AccessLogSetting`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n     */\n    public accessLogSetting: CfnApi.AccessLogSettingProperty | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::Api.Auth`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n     */\n    public auth: CfnApi.AuthProperty | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::Api.BinaryMediaTypes`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n     */\n    public binaryMediaTypes: string[] | undefined;\n\n    /**\n     * `AWS::Serverless::Api.CacheClusterEnabled`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n     */\n    public cacheClusterEnabled: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::Api.CacheClusterSize`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n     */\n    public cacheClusterSize: string | undefined;\n\n    /**\n     * `AWS::Serverless::Api.CanarySetting`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-api.html#sam-api-canarysetting\n     */\n    public canarySetting: CfnApi.CanarySettingProperty | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::Api.Cors`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n     */\n    public cors: CfnApi.CorsConfigurationProperty | string | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::Api.DefinitionBody`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n     */\n    public definitionBody: any | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::Api.DefinitionUri`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n     */\n    public definitionUri: CfnApi.S3LocationProperty | string | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::Api.Description`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-api.html#sam-api-description\n     */\n    public description: string | undefined;\n\n    /**\n     * `AWS::Serverless::Api.EndpointConfiguration`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n     */\n    public endpointConfiguration: CfnApi.EndpointConfigurationProperty | string | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::Api.GatewayResponses`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-api.html#sam-api-gatewayresponses\n     */\n    public gatewayResponses: { [key: string]: (string) } | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::Api.MethodSettings`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n     */\n    public methodSettings: Array<any | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::Api.MinimumCompressionSize`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-api.html#sam-api-minimumcompressionsize\n     */\n    public minimumCompressionSize: number | undefined;\n\n    /**\n     * `AWS::Serverless::Api.Models`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-api.html#sam-api-models\n     */\n    public models: { [key: string]: (string) } | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::Api.Name`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n     */\n    public name: string | undefined;\n\n    /**\n     * `AWS::Serverless::Api.OpenApiVersion`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n     */\n    public openApiVersion: string | undefined;\n\n    /**\n     * `AWS::Serverless::Api.Tags`\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesshttpapi\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * `AWS::Serverless::Api.TracingEnabled`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n     */\n    public tracingEnabled: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::Api.Variables`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapi\n     */\n    public variables: { [key: string]: (string) } | cdk.IResolvable | undefined;\n\n    /**\n     * Create a new `AWS::Serverless::Api`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnApiProps) {\n        super(scope, id, { type: CfnApi.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'stageName', this);\n        // Automatically add the required transform\n        this.stack.addTransform(CfnApi.REQUIRED_TRANSFORM);\n\n        this.stageName = props.stageName;\n        this.accessLogSetting = props.accessLogSetting;\n        this.auth = props.auth;\n        this.binaryMediaTypes = props.binaryMediaTypes;\n        this.cacheClusterEnabled = props.cacheClusterEnabled;\n        this.cacheClusterSize = props.cacheClusterSize;\n        this.canarySetting = props.canarySetting;\n        this.cors = props.cors;\n        this.definitionBody = props.definitionBody;\n        this.definitionUri = props.definitionUri;\n        this.description = props.description;\n        this.endpointConfiguration = props.endpointConfiguration;\n        this.gatewayResponses = props.gatewayResponses;\n        this.methodSettings = props.methodSettings;\n        this.minimumCompressionSize = props.minimumCompressionSize;\n        this.models = props.models;\n        this.name = props.name;\n        this.openApiVersion = props.openApiVersion;\n        this.tags = new cdk.TagManager(cdk.TagType.MAP, \"AWS::Serverless::Api\", props.tags, { tagPropertyName: 'tags' });\n        this.tracingEnabled = props.tracingEnabled;\n        this.variables = props.variables;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnApi.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            stageName: this.stageName,\n            accessLogSetting: this.accessLogSetting,\n            auth: this.auth,\n            binaryMediaTypes: this.binaryMediaTypes,\n            cacheClusterEnabled: this.cacheClusterEnabled,\n            cacheClusterSize: this.cacheClusterSize,\n            canarySetting: this.canarySetting,\n            cors: this.cors,\n            definitionBody: this.definitionBody,\n            definitionUri: this.definitionUri,\n            description: this.description,\n            endpointConfiguration: this.endpointConfiguration,\n            gatewayResponses: this.gatewayResponses,\n            methodSettings: this.methodSettings,\n            minimumCompressionSize: this.minimumCompressionSize,\n            models: this.models,\n            name: this.name,\n            openApiVersion: this.openApiVersion,\n            tags: this.tags.renderTags(),\n            tracingEnabled: this.tracingEnabled,\n            variables: this.variables,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnApiPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnApi {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-stage-accesslogsetting.html\n     */\n    export interface AccessLogSettingProperty {\n        /**\n         * `CfnApi.AccessLogSettingProperty.DestinationArn`\n         *\n         * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-stage-accesslogsetting.html#cfn-apigateway-stage-accesslogsetting-destinationarn\n         */\n        readonly destinationArn?: string;\n        /**\n         * `CfnApi.AccessLogSettingProperty.Format`\n         *\n         * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-stage-accesslogsetting.html#cfn-apigateway-stage-accesslogsetting-format\n         */\n        readonly format?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AccessLogSettingProperty`\n *\n * @param properties - the TypeScript properties of a `AccessLogSettingProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnApi_AccessLogSettingPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('destinationArn', cdk.validateString)(properties.destinationArn));\n    errors.collect(cdk.propertyValidator('format', cdk.validateString)(properties.format));\n    return errors.wrap('supplied properties not correct for \"AccessLogSettingProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Api.AccessLogSetting` resource\n *\n * @param properties - the TypeScript properties of a `AccessLogSettingProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Api.AccessLogSetting` resource.\n */\n// @ts-ignore TS6133\nfunction cfnApiAccessLogSettingPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnApi_AccessLogSettingPropertyValidator(properties).assertSuccess();\n    return {\n        DestinationArn: cdk.stringToCloudFormation(properties.destinationArn),\n        Format: cdk.stringToCloudFormation(properties.format),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnApiAccessLogSettingPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnApi.AccessLogSettingProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnApi.AccessLogSettingProperty>();\n    ret.addPropertyResult('destinationArn', 'DestinationArn', properties.DestinationArn != null ? cfn_parse.FromCloudFormation.getString(properties.DestinationArn) : undefined);\n    ret.addPropertyResult('format', 'Format', properties.Format != null ? cfn_parse.FromCloudFormation.getString(properties.Format) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnApi {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api-auth-object\n     */\n    export interface AuthProperty {\n        /**\n         * `CfnApi.AuthProperty.Authorizers`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api-auth-object\n         */\n        readonly authorizers?: any | cdk.IResolvable;\n        /**\n         * `CfnApi.AuthProperty.DefaultAuthorizer`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api-auth-object\n         */\n        readonly defaultAuthorizer?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AuthProperty`\n *\n * @param properties - the TypeScript properties of a `AuthProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnApi_AuthPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('authorizers', cdk.validateObject)(properties.authorizers));\n    errors.collect(cdk.propertyValidator('defaultAuthorizer', cdk.validateString)(properties.defaultAuthorizer));\n    return errors.wrap('supplied properties not correct for \"AuthProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Api.Auth` resource\n *\n * @param properties - the TypeScript properties of a `AuthProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Api.Auth` resource.\n */\n// @ts-ignore TS6133\nfunction cfnApiAuthPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnApi_AuthPropertyValidator(properties).assertSuccess();\n    return {\n        Authorizers: cdk.objectToCloudFormation(properties.authorizers),\n        DefaultAuthorizer: cdk.stringToCloudFormation(properties.defaultAuthorizer),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnApiAuthPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnApi.AuthProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnApi.AuthProperty>();\n    ret.addPropertyResult('authorizers', 'Authorizers', properties.Authorizers != null ? cfn_parse.FromCloudFormation.getAny(properties.Authorizers) : undefined);\n    ret.addPropertyResult('defaultAuthorizer', 'DefaultAuthorizer', properties.DefaultAuthorizer != null ? cfn_parse.FromCloudFormation.getString(properties.DefaultAuthorizer) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnApi {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-stage-canarysetting.html\n     */\n    export interface CanarySettingProperty {\n        /**\n         * `CfnApi.CanarySettingProperty.DeploymentId`\n         *\n         * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-stage-canarysetting.html#cfn-apigateway-stage-canarysetting-deploymentid\n         */\n        readonly deploymentId?: string;\n        /**\n         * `CfnApi.CanarySettingProperty.PercentTraffic`\n         *\n         * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-stage-canarysetting.html#cfn-apigateway-stage-canarysetting-percenttraffic\n         */\n        readonly percentTraffic?: number;\n        /**\n         * `CfnApi.CanarySettingProperty.StageVariableOverrides`\n         *\n         * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-stage-canarysetting.html#cfn-apigateway-stage-canarysetting-stagevariableoverrides\n         */\n        readonly stageVariableOverrides?: { [key: string]: (string) } | cdk.IResolvable;\n        /**\n         * `CfnApi.CanarySettingProperty.UseStageCache`\n         *\n         * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-stage-canarysetting.html#cfn-apigateway-stage-canarysetting-usestagecache\n         */\n        readonly useStageCache?: boolean | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `CanarySettingProperty`\n *\n * @param properties - the TypeScript properties of a `CanarySettingProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnApi_CanarySettingPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('deploymentId', cdk.validateString)(properties.deploymentId));\n    errors.collect(cdk.propertyValidator('percentTraffic', cdk.validateNumber)(properties.percentTraffic));\n    errors.collect(cdk.propertyValidator('stageVariableOverrides', cdk.hashValidator(cdk.validateString))(properties.stageVariableOverrides));\n    errors.collect(cdk.propertyValidator('useStageCache', cdk.validateBoolean)(properties.useStageCache));\n    return errors.wrap('supplied properties not correct for \"CanarySettingProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Api.CanarySetting` resource\n *\n * @param properties - the TypeScript properties of a `CanarySettingProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Api.CanarySetting` resource.\n */\n// @ts-ignore TS6133\nfunction cfnApiCanarySettingPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnApi_CanarySettingPropertyValidator(properties).assertSuccess();\n    return {\n        DeploymentId: cdk.stringToCloudFormation(properties.deploymentId),\n        PercentTraffic: cdk.numberToCloudFormation(properties.percentTraffic),\n        StageVariableOverrides: cdk.hashMapper(cdk.stringToCloudFormation)(properties.stageVariableOverrides),\n        UseStageCache: cdk.booleanToCloudFormation(properties.useStageCache),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnApiCanarySettingPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnApi.CanarySettingProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnApi.CanarySettingProperty>();\n    ret.addPropertyResult('deploymentId', 'DeploymentId', properties.DeploymentId != null ? cfn_parse.FromCloudFormation.getString(properties.DeploymentId) : undefined);\n    ret.addPropertyResult('percentTraffic', 'PercentTraffic', properties.PercentTraffic != null ? cfn_parse.FromCloudFormation.getNumber(properties.PercentTraffic) : undefined);\n    ret.addPropertyResult('stageVariableOverrides', 'StageVariableOverrides', properties.StageVariableOverrides != null ? cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.StageVariableOverrides) : undefined);\n    ret.addPropertyResult('useStageCache', 'UseStageCache', properties.UseStageCache != null ? cfn_parse.FromCloudFormation.getBoolean(properties.UseStageCache) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnApi {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#cors-configuration\n     */\n    export interface CorsConfigurationProperty {\n        /**\n         * `CfnApi.CorsConfigurationProperty.AllowCredentials`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#cors-configuration\n         */\n        readonly allowCredentials?: boolean | cdk.IResolvable;\n        /**\n         * `CfnApi.CorsConfigurationProperty.AllowHeaders`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#cors-configuration\n         */\n        readonly allowHeaders?: string;\n        /**\n         * `CfnApi.CorsConfigurationProperty.AllowMethods`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#cors-configuration\n         */\n        readonly allowMethods?: string;\n        /**\n         * `CfnApi.CorsConfigurationProperty.AllowOrigin`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#cors-configuration\n         */\n        readonly allowOrigin: string;\n        /**\n         * `CfnApi.CorsConfigurationProperty.MaxAge`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#cors-configuration\n         */\n        readonly maxAge?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `CorsConfigurationProperty`\n *\n * @param properties - the TypeScript properties of a `CorsConfigurationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnApi_CorsConfigurationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('allowCredentials', cdk.validateBoolean)(properties.allowCredentials));\n    errors.collect(cdk.propertyValidator('allowHeaders', cdk.validateString)(properties.allowHeaders));\n    errors.collect(cdk.propertyValidator('allowMethods', cdk.validateString)(properties.allowMethods));\n    errors.collect(cdk.propertyValidator('allowOrigin', cdk.requiredValidator)(properties.allowOrigin));\n    errors.collect(cdk.propertyValidator('allowOrigin', cdk.validateString)(properties.allowOrigin));\n    errors.collect(cdk.propertyValidator('maxAge', cdk.validateString)(properties.maxAge));\n    return errors.wrap('supplied properties not correct for \"CorsConfigurationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Api.CorsConfiguration` resource\n *\n * @param properties - the TypeScript properties of a `CorsConfigurationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Api.CorsConfiguration` resource.\n */\n// @ts-ignore TS6133\nfunction cfnApiCorsConfigurationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnApi_CorsConfigurationPropertyValidator(properties).assertSuccess();\n    return {\n        AllowCredentials: cdk.booleanToCloudFormation(properties.allowCredentials),\n        AllowHeaders: cdk.stringToCloudFormation(properties.allowHeaders),\n        AllowMethods: cdk.stringToCloudFormation(properties.allowMethods),\n        AllowOrigin: cdk.stringToCloudFormation(properties.allowOrigin),\n        MaxAge: cdk.stringToCloudFormation(properties.maxAge),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnApiCorsConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnApi.CorsConfigurationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnApi.CorsConfigurationProperty>();\n    ret.addPropertyResult('allowCredentials', 'AllowCredentials', properties.AllowCredentials != null ? cfn_parse.FromCloudFormation.getBoolean(properties.AllowCredentials) : undefined);\n    ret.addPropertyResult('allowHeaders', 'AllowHeaders', properties.AllowHeaders != null ? cfn_parse.FromCloudFormation.getString(properties.AllowHeaders) : undefined);\n    ret.addPropertyResult('allowMethods', 'AllowMethods', properties.AllowMethods != null ? cfn_parse.FromCloudFormation.getString(properties.AllowMethods) : undefined);\n    ret.addPropertyResult('allowOrigin', 'AllowOrigin', cfn_parse.FromCloudFormation.getString(properties.AllowOrigin));\n    ret.addPropertyResult('maxAge', 'MaxAge', properties.MaxAge != null ? cfn_parse.FromCloudFormation.getString(properties.MaxAge) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnApi {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-api-endpointconfiguration.html\n     */\n    export interface EndpointConfigurationProperty {\n        /**\n         * `CfnApi.EndpointConfigurationProperty.Type`\n         *\n         * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-api-endpointconfiguration.html#sam-api-endpointconfiguration-type\n         */\n        readonly type?: string;\n        /**\n         * `CfnApi.EndpointConfigurationProperty.VpcEndpointIds`\n         *\n         * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-api-endpointconfiguration.html#sam-api-endpointconfiguration-vpcendpointids\n         */\n        readonly vpcEndpointIds?: string[];\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `EndpointConfigurationProperty`\n *\n * @param properties - the TypeScript properties of a `EndpointConfigurationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnApi_EndpointConfigurationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('type', cdk.validateString)(properties.type));\n    errors.collect(cdk.propertyValidator('vpcEndpointIds', cdk.listValidator(cdk.validateString))(properties.vpcEndpointIds));\n    return errors.wrap('supplied properties not correct for \"EndpointConfigurationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Api.EndpointConfiguration` resource\n *\n * @param properties - the TypeScript properties of a `EndpointConfigurationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Api.EndpointConfiguration` resource.\n */\n// @ts-ignore TS6133\nfunction cfnApiEndpointConfigurationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnApi_EndpointConfigurationPropertyValidator(properties).assertSuccess();\n    return {\n        Type: cdk.stringToCloudFormation(properties.type),\n        VpcEndpointIds: cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcEndpointIds),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnApiEndpointConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnApi.EndpointConfigurationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnApi.EndpointConfigurationProperty>();\n    ret.addPropertyResult('type', 'Type', properties.Type != null ? cfn_parse.FromCloudFormation.getString(properties.Type) : undefined);\n    ret.addPropertyResult('vpcEndpointIds', 'VpcEndpointIds', properties.VpcEndpointIds != null ? cfn_parse.FromCloudFormation.getStringArray(properties.VpcEndpointIds) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnApi {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#s3-location-object\n     */\n    export interface S3LocationProperty {\n        /**\n         * `CfnApi.S3LocationProperty.Bucket`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#s3-location-object\n         */\n        readonly bucket: string;\n        /**\n         * `CfnApi.S3LocationProperty.Key`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#s3-location-object\n         */\n        readonly key: string;\n        /**\n         * `CfnApi.S3LocationProperty.Version`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#s3-location-object\n         */\n        readonly version: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `S3LocationProperty`\n *\n * @param properties - the TypeScript properties of a `S3LocationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnApi_S3LocationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('bucket', cdk.requiredValidator)(properties.bucket));\n    errors.collect(cdk.propertyValidator('bucket', cdk.validateString)(properties.bucket));\n    errors.collect(cdk.propertyValidator('key', cdk.requiredValidator)(properties.key));\n    errors.collect(cdk.propertyValidator('key', cdk.validateString)(properties.key));\n    errors.collect(cdk.propertyValidator('version', cdk.requiredValidator)(properties.version));\n    errors.collect(cdk.propertyValidator('version', cdk.validateNumber)(properties.version));\n    return errors.wrap('supplied properties not correct for \"S3LocationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Api.S3Location` resource\n *\n * @param properties - the TypeScript properties of a `S3LocationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Api.S3Location` resource.\n */\n// @ts-ignore TS6133\nfunction cfnApiS3LocationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnApi_S3LocationPropertyValidator(properties).assertSuccess();\n    return {\n        Bucket: cdk.stringToCloudFormation(properties.bucket),\n        Key: cdk.stringToCloudFormation(properties.key),\n        Version: cdk.numberToCloudFormation(properties.version),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnApiS3LocationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnApi.S3LocationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnApi.S3LocationProperty>();\n    ret.addPropertyResult('bucket', 'Bucket', cfn_parse.FromCloudFormation.getString(properties.Bucket));\n    ret.addPropertyResult('key', 'Key', cfn_parse.FromCloudFormation.getString(properties.Key));\n    ret.addPropertyResult('version', 'Version', cfn_parse.FromCloudFormation.getNumber(properties.Version));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnApplication`\n *\n * @struct\n * @stability external\n *\n * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapplication\n */\nexport interface CfnApplicationProps {\n\n    /**\n     * `AWS::Serverless::Application.Location`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapplication\n     */\n    readonly location: CfnApplication.ApplicationLocationProperty | string | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::Application.NotificationArns`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapplication\n     */\n    readonly notificationArns?: string[];\n\n    /**\n     * `AWS::Serverless::Application.Parameters`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapplication\n     */\n    readonly parameters?: { [key: string]: (string) } | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::Application.Tags`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapplication\n     */\n    readonly tags?: { [key: string]: (string) };\n\n    /**\n     * `AWS::Serverless::Application.TimeoutInMinutes`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapplication\n     */\n    readonly timeoutInMinutes?: number;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnApplicationProps`\n *\n * @param properties - the TypeScript properties of a `CfnApplicationProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnApplicationPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('location', cdk.requiredValidator)(properties.location));\n    errors.collect(cdk.propertyValidator('location', cdk.unionValidator(CfnApplication_ApplicationLocationPropertyValidator, cdk.validateString))(properties.location));\n    errors.collect(cdk.propertyValidator('notificationArns', cdk.listValidator(cdk.validateString))(properties.notificationArns));\n    errors.collect(cdk.propertyValidator('parameters', cdk.hashValidator(cdk.validateString))(properties.parameters));\n    errors.collect(cdk.propertyValidator('tags', cdk.hashValidator(cdk.validateString))(properties.tags));\n    errors.collect(cdk.propertyValidator('timeoutInMinutes', cdk.validateNumber)(properties.timeoutInMinutes));\n    return errors.wrap('supplied properties not correct for \"CfnApplicationProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Application` resource\n *\n * @param properties - the TypeScript properties of a `CfnApplicationProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Application` resource.\n */\n// @ts-ignore TS6133\nfunction cfnApplicationPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnApplicationPropsValidator(properties).assertSuccess();\n    return {\n        Location: cdk.unionMapper([CfnApplication_ApplicationLocationPropertyValidator, cdk.validateString], [cfnApplicationApplicationLocationPropertyToCloudFormation, cdk.stringToCloudFormation])(properties.location),\n        NotificationArns: cdk.listMapper(cdk.stringToCloudFormation)(properties.notificationArns),\n        Parameters: cdk.hashMapper(cdk.stringToCloudFormation)(properties.parameters),\n        Tags: cdk.hashMapper(cdk.stringToCloudFormation)(properties.tags),\n        TimeoutInMinutes: cdk.numberToCloudFormation(properties.timeoutInMinutes),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnApplicationPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnApplicationProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnApplicationProps>();\n    ret.addPropertyResult('location', 'Location', cfn_parse.FromCloudFormation.getTypeUnion([CfnApplication_ApplicationLocationPropertyValidator, cdk.validateString], [CfnApplicationApplicationLocationPropertyFromCloudFormation, cfn_parse.FromCloudFormation.getString])(properties.Location));\n    ret.addPropertyResult('notificationArns', 'NotificationArns', properties.NotificationArns != null ? cfn_parse.FromCloudFormation.getStringArray(properties.NotificationArns) : undefined);\n    ret.addPropertyResult('parameters', 'Parameters', properties.Parameters != null ? cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Parameters) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Tags) : undefined as any);\n    ret.addPropertyResult('timeoutInMinutes', 'TimeoutInMinutes', properties.TimeoutInMinutes != null ? cfn_parse.FromCloudFormation.getNumber(properties.TimeoutInMinutes) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::Serverless::Application`\n *\n *\n *\n * @cloudformationResource AWS::Serverless::Application\n * @stability external\n *\n * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapplication\n */\nexport class CfnApplication extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Serverless::Application\";\n    /**\n     * The `Transform` a template must use in order to use this resource\n     */\n    public static readonly REQUIRED_TRANSFORM = \"AWS::Serverless-2016-10-31\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnApplication {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnApplicationPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnApplication(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * `AWS::Serverless::Application.Location`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapplication\n     */\n    public location: CfnApplication.ApplicationLocationProperty | string | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::Application.NotificationArns`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapplication\n     */\n    public notificationArns: string[] | undefined;\n\n    /**\n     * `AWS::Serverless::Application.Parameters`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapplication\n     */\n    public parameters: { [key: string]: (string) } | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::Application.Tags`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapplication\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * `AWS::Serverless::Application.TimeoutInMinutes`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapplication\n     */\n    public timeoutInMinutes: number | undefined;\n\n    /**\n     * Create a new `AWS::Serverless::Application`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnApplicationProps) {\n        super(scope, id, { type: CfnApplication.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'location', this);\n        // Automatically add the required transform\n        this.stack.addTransform(CfnApplication.REQUIRED_TRANSFORM);\n\n        this.location = props.location;\n        this.notificationArns = props.notificationArns;\n        this.parameters = props.parameters;\n        this.tags = new cdk.TagManager(cdk.TagType.MAP, \"AWS::Serverless::Application\", props.tags, { tagPropertyName: 'tags' });\n        this.timeoutInMinutes = props.timeoutInMinutes;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnApplication.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            location: this.location,\n            notificationArns: this.notificationArns,\n            parameters: this.parameters,\n            tags: this.tags.renderTags(),\n            timeoutInMinutes: this.timeoutInMinutes,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnApplicationPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnApplication {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapplication\n     */\n    export interface ApplicationLocationProperty {\n        /**\n         * `CfnApplication.ApplicationLocationProperty.ApplicationId`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapplication\n         */\n        readonly applicationId: string;\n        /**\n         * `CfnApplication.ApplicationLocationProperty.SemanticVersion`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessapplication\n         */\n        readonly semanticVersion: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ApplicationLocationProperty`\n *\n * @param properties - the TypeScript properties of a `ApplicationLocationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnApplication_ApplicationLocationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('applicationId', cdk.requiredValidator)(properties.applicationId));\n    errors.collect(cdk.propertyValidator('applicationId', cdk.validateString)(properties.applicationId));\n    errors.collect(cdk.propertyValidator('semanticVersion', cdk.requiredValidator)(properties.semanticVersion));\n    errors.collect(cdk.propertyValidator('semanticVersion', cdk.validateString)(properties.semanticVersion));\n    return errors.wrap('supplied properties not correct for \"ApplicationLocationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Application.ApplicationLocation` resource\n *\n * @param properties - the TypeScript properties of a `ApplicationLocationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Application.ApplicationLocation` resource.\n */\n// @ts-ignore TS6133\nfunction cfnApplicationApplicationLocationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnApplication_ApplicationLocationPropertyValidator(properties).assertSuccess();\n    return {\n        ApplicationId: cdk.stringToCloudFormation(properties.applicationId),\n        SemanticVersion: cdk.stringToCloudFormation(properties.semanticVersion),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnApplicationApplicationLocationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnApplication.ApplicationLocationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnApplication.ApplicationLocationProperty>();\n    ret.addPropertyResult('applicationId', 'ApplicationId', cfn_parse.FromCloudFormation.getString(properties.ApplicationId));\n    ret.addPropertyResult('semanticVersion', 'SemanticVersion', cfn_parse.FromCloudFormation.getString(properties.SemanticVersion));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnFunction`\n *\n * @struct\n * @stability external\n *\n * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n */\nexport interface CfnFunctionProps {\n\n    /**\n     * `AWS::Serverless::Function.Architectures`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-architectures\n     */\n    readonly architectures?: string[];\n\n    /**\n     * `AWS::Serverless::Function.AssumeRolePolicyDocument`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-assumerolepolicydocument\n     */\n    readonly assumeRolePolicyDocument?: any | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::Function.AutoPublishAlias`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    readonly autoPublishAlias?: string;\n\n    /**\n     * `AWS::Serverless::Function.AutoPublishCodeSha256`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-autopublishcodesha256\n     */\n    readonly autoPublishCodeSha256?: string;\n\n    /**\n     * `AWS::Serverless::Function.CodeSigningConfigArn`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-codesigningconfigarn\n     */\n    readonly codeSigningConfigArn?: string;\n\n    /**\n     * `AWS::Serverless::Function.CodeUri`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    readonly codeUri?: CfnFunction.S3LocationProperty | string | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::Function.DeadLetterQueue`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    readonly deadLetterQueue?: CfnFunction.DeadLetterQueueProperty | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::Function.DeploymentPreference`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#deploymentpreference-object\n     */\n    readonly deploymentPreference?: CfnFunction.DeploymentPreferenceProperty | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::Function.Description`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    readonly description?: string;\n\n    /**\n     * `AWS::Serverless::Function.Environment`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    readonly environment?: CfnFunction.FunctionEnvironmentProperty | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::Function.EventInvokeConfig`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    readonly eventInvokeConfig?: CfnFunction.EventInvokeConfigProperty | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::Function.Events`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    readonly events?: { [key: string]: (CfnFunction.EventSourceProperty | cdk.IResolvable) } | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::Function.FileSystemConfigs`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html\n     */\n    readonly fileSystemConfigs?: Array<CfnFunction.FileSystemConfigProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::Function.FunctionName`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    readonly functionName?: string;\n\n    /**\n     * `AWS::Serverless::Function.Handler`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    readonly handler?: string;\n\n    /**\n     * `AWS::Serverless::Function.ImageConfig`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-imageconfig\n     */\n    readonly imageConfig?: CfnFunction.ImageConfigProperty | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::Function.ImageUri`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-imageuri\n     */\n    readonly imageUri?: string;\n\n    /**\n     * `AWS::Serverless::Function.InlineCode`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    readonly inlineCode?: string;\n\n    /**\n     * `AWS::Serverless::Function.KmsKeyArn`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    readonly kmsKeyArn?: string;\n\n    /**\n     * `AWS::Serverless::Function.Layers`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    readonly layers?: string[];\n\n    /**\n     * `AWS::Serverless::Function.MemorySize`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    readonly memorySize?: number;\n\n    /**\n     * `AWS::Serverless::Function.PackageType`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-packagetype\n     */\n    readonly packageType?: string;\n\n    /**\n     * `AWS::Serverless::Function.PermissionsBoundary`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    readonly permissionsBoundary?: string;\n\n    /**\n     * `AWS::Serverless::Function.Policies`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    readonly policies?: Array<CfnFunction.IAMPolicyDocumentProperty | CfnFunction.SAMPolicyTemplateProperty | string | cdk.IResolvable> | CfnFunction.IAMPolicyDocumentProperty | string | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::Function.ProvisionedConcurrencyConfig`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    readonly provisionedConcurrencyConfig?: CfnFunction.ProvisionedConcurrencyConfigProperty | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::Function.ReservedConcurrentExecutions`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    readonly reservedConcurrentExecutions?: number;\n\n    /**\n     * `AWS::Serverless::Function.Role`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    readonly role?: string;\n\n    /**\n     * `AWS::Serverless::Function.Runtime`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    readonly runtime?: string;\n\n    /**\n     * `AWS::Serverless::Function.Tags`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    readonly tags?: { [key: string]: (string) };\n\n    /**\n     * `AWS::Serverless::Function.Timeout`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    readonly timeout?: number;\n\n    /**\n     * `AWS::Serverless::Function.Tracing`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    readonly tracing?: string;\n\n    /**\n     * `AWS::Serverless::Function.VersionDescription`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    readonly versionDescription?: string;\n\n    /**\n     * `AWS::Serverless::Function.VpcConfig`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    readonly vpcConfig?: CfnFunction.VpcConfigProperty | cdk.IResolvable;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnFunctionProps`\n *\n * @param properties - the TypeScript properties of a `CfnFunctionProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunctionPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('architectures', cdk.listValidator(cdk.validateString))(properties.architectures));\n    errors.collect(cdk.propertyValidator('assumeRolePolicyDocument', cdk.validateObject)(properties.assumeRolePolicyDocument));\n    errors.collect(cdk.propertyValidator('autoPublishAlias', cdk.validateString)(properties.autoPublishAlias));\n    errors.collect(cdk.propertyValidator('autoPublishCodeSha256', cdk.validateString)(properties.autoPublishCodeSha256));\n    errors.collect(cdk.propertyValidator('codeSigningConfigArn', cdk.validateString)(properties.codeSigningConfigArn));\n    errors.collect(cdk.propertyValidator('codeUri', cdk.unionValidator(CfnFunction_S3LocationPropertyValidator, cdk.validateString))(properties.codeUri));\n    errors.collect(cdk.propertyValidator('deadLetterQueue', CfnFunction_DeadLetterQueuePropertyValidator)(properties.deadLetterQueue));\n    errors.collect(cdk.propertyValidator('deploymentPreference', CfnFunction_DeploymentPreferencePropertyValidator)(properties.deploymentPreference));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('environment', CfnFunction_FunctionEnvironmentPropertyValidator)(properties.environment));\n    errors.collect(cdk.propertyValidator('eventInvokeConfig', CfnFunction_EventInvokeConfigPropertyValidator)(properties.eventInvokeConfig));\n    errors.collect(cdk.propertyValidator('events', cdk.hashValidator(CfnFunction_EventSourcePropertyValidator))(properties.events));\n    errors.collect(cdk.propertyValidator('fileSystemConfigs', cdk.listValidator(CfnFunction_FileSystemConfigPropertyValidator))(properties.fileSystemConfigs));\n    errors.collect(cdk.propertyValidator('functionName', cdk.validateString)(properties.functionName));\n    errors.collect(cdk.propertyValidator('handler', cdk.validateString)(properties.handler));\n    errors.collect(cdk.propertyValidator('imageConfig', CfnFunction_ImageConfigPropertyValidator)(properties.imageConfig));\n    errors.collect(cdk.propertyValidator('imageUri', cdk.validateString)(properties.imageUri));\n    errors.collect(cdk.propertyValidator('inlineCode', cdk.validateString)(properties.inlineCode));\n    errors.collect(cdk.propertyValidator('kmsKeyArn', cdk.validateString)(properties.kmsKeyArn));\n    errors.collect(cdk.propertyValidator('layers', cdk.listValidator(cdk.validateString))(properties.layers));\n    errors.collect(cdk.propertyValidator('memorySize', cdk.validateNumber)(properties.memorySize));\n    errors.collect(cdk.propertyValidator('packageType', cdk.validateString)(properties.packageType));\n    errors.collect(cdk.propertyValidator('permissionsBoundary', cdk.validateString)(properties.permissionsBoundary));\n    errors.collect(cdk.propertyValidator('policies', cdk.unionValidator(cdk.unionValidator(CfnFunction_IAMPolicyDocumentPropertyValidator, cdk.validateString), cdk.listValidator(cdk.unionValidator(CfnFunction_IAMPolicyDocumentPropertyValidator, CfnFunction_SAMPolicyTemplatePropertyValidator, cdk.validateString))))(properties.policies));\n    errors.collect(cdk.propertyValidator('provisionedConcurrencyConfig', CfnFunction_ProvisionedConcurrencyConfigPropertyValidator)(properties.provisionedConcurrencyConfig));\n    errors.collect(cdk.propertyValidator('reservedConcurrentExecutions', cdk.validateNumber)(properties.reservedConcurrentExecutions));\n    errors.collect(cdk.propertyValidator('role', cdk.validateString)(properties.role));\n    errors.collect(cdk.propertyValidator('runtime', cdk.validateString)(properties.runtime));\n    errors.collect(cdk.propertyValidator('tags', cdk.hashValidator(cdk.validateString))(properties.tags));\n    errors.collect(cdk.propertyValidator('timeout', cdk.validateNumber)(properties.timeout));\n    errors.collect(cdk.propertyValidator('tracing', cdk.validateString)(properties.tracing));\n    errors.collect(cdk.propertyValidator('versionDescription', cdk.validateString)(properties.versionDescription));\n    errors.collect(cdk.propertyValidator('vpcConfig', CfnFunction_VpcConfigPropertyValidator)(properties.vpcConfig));\n    return errors.wrap('supplied properties not correct for \"CfnFunctionProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function` resource\n *\n * @param properties - the TypeScript properties of a `CfnFunctionProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunctionPropsValidator(properties).assertSuccess();\n    return {\n        Architectures: cdk.listMapper(cdk.stringToCloudFormation)(properties.architectures),\n        AssumeRolePolicyDocument: cdk.objectToCloudFormation(properties.assumeRolePolicyDocument),\n        AutoPublishAlias: cdk.stringToCloudFormation(properties.autoPublishAlias),\n        AutoPublishCodeSha256: cdk.stringToCloudFormation(properties.autoPublishCodeSha256),\n        CodeSigningConfigArn: cdk.stringToCloudFormation(properties.codeSigningConfigArn),\n        CodeUri: cdk.unionMapper([CfnFunction_S3LocationPropertyValidator, cdk.validateString], [cfnFunctionS3LocationPropertyToCloudFormation, cdk.stringToCloudFormation])(properties.codeUri),\n        DeadLetterQueue: cfnFunctionDeadLetterQueuePropertyToCloudFormation(properties.deadLetterQueue),\n        DeploymentPreference: cfnFunctionDeploymentPreferencePropertyToCloudFormation(properties.deploymentPreference),\n        Description: cdk.stringToCloudFormation(properties.description),\n        Environment: cfnFunctionFunctionEnvironmentPropertyToCloudFormation(properties.environment),\n        EventInvokeConfig: cfnFunctionEventInvokeConfigPropertyToCloudFormation(properties.eventInvokeConfig),\n        Events: cdk.hashMapper(cfnFunctionEventSourcePropertyToCloudFormation)(properties.events),\n        FileSystemConfigs: cdk.listMapper(cfnFunctionFileSystemConfigPropertyToCloudFormation)(properties.fileSystemConfigs),\n        FunctionName: cdk.stringToCloudFormation(properties.functionName),\n        Handler: cdk.stringToCloudFormation(properties.handler),\n        ImageConfig: cfnFunctionImageConfigPropertyToCloudFormation(properties.imageConfig),\n        ImageUri: cdk.stringToCloudFormation(properties.imageUri),\n        InlineCode: cdk.stringToCloudFormation(properties.inlineCode),\n        KmsKeyArn: cdk.stringToCloudFormation(properties.kmsKeyArn),\n        Layers: cdk.listMapper(cdk.stringToCloudFormation)(properties.layers),\n        MemorySize: cdk.numberToCloudFormation(properties.memorySize),\n        PackageType: cdk.stringToCloudFormation(properties.packageType),\n        PermissionsBoundary: cdk.stringToCloudFormation(properties.permissionsBoundary),\n        Policies: cdk.unionMapper([cdk.unionValidator(CfnFunction_IAMPolicyDocumentPropertyValidator, cdk.validateString), cdk.listValidator(cdk.unionValidator(CfnFunction_IAMPolicyDocumentPropertyValidator, CfnFunction_SAMPolicyTemplatePropertyValidator, cdk.validateString))], [cdk.unionMapper([CfnFunction_IAMPolicyDocumentPropertyValidator, cdk.validateString], [cfnFunctionIAMPolicyDocumentPropertyToCloudFormation, cdk.stringToCloudFormation]), cdk.listMapper(cdk.unionMapper([CfnFunction_IAMPolicyDocumentPropertyValidator, CfnFunction_SAMPolicyTemplatePropertyValidator, cdk.validateString], [cfnFunctionIAMPolicyDocumentPropertyToCloudFormation, cfnFunctionSAMPolicyTemplatePropertyToCloudFormation, cdk.stringToCloudFormation]))])(properties.policies),\n        ProvisionedConcurrencyConfig: cfnFunctionProvisionedConcurrencyConfigPropertyToCloudFormation(properties.provisionedConcurrencyConfig),\n        ReservedConcurrentExecutions: cdk.numberToCloudFormation(properties.reservedConcurrentExecutions),\n        Role: cdk.stringToCloudFormation(properties.role),\n        Runtime: cdk.stringToCloudFormation(properties.runtime),\n        Tags: cdk.hashMapper(cdk.stringToCloudFormation)(properties.tags),\n        Timeout: cdk.numberToCloudFormation(properties.timeout),\n        Tracing: cdk.stringToCloudFormation(properties.tracing),\n        VersionDescription: cdk.stringToCloudFormation(properties.versionDescription),\n        VpcConfig: cfnFunctionVpcConfigPropertyToCloudFormation(properties.vpcConfig),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunctionProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunctionProps>();\n    ret.addPropertyResult('architectures', 'Architectures', properties.Architectures != null ? cfn_parse.FromCloudFormation.getStringArray(properties.Architectures) : undefined);\n    ret.addPropertyResult('assumeRolePolicyDocument', 'AssumeRolePolicyDocument', properties.AssumeRolePolicyDocument != null ? cfn_parse.FromCloudFormation.getAny(properties.AssumeRolePolicyDocument) : undefined);\n    ret.addPropertyResult('autoPublishAlias', 'AutoPublishAlias', properties.AutoPublishAlias != null ? cfn_parse.FromCloudFormation.getString(properties.AutoPublishAlias) : undefined);\n    ret.addPropertyResult('autoPublishCodeSha256', 'AutoPublishCodeSha256', properties.AutoPublishCodeSha256 != null ? cfn_parse.FromCloudFormation.getString(properties.AutoPublishCodeSha256) : undefined);\n    ret.addPropertyResult('codeSigningConfigArn', 'CodeSigningConfigArn', properties.CodeSigningConfigArn != null ? cfn_parse.FromCloudFormation.getString(properties.CodeSigningConfigArn) : undefined);\n    ret.addPropertyResult('codeUri', 'CodeUri', properties.CodeUri != null ? cfn_parse.FromCloudFormation.getTypeUnion([CfnFunction_S3LocationPropertyValidator, cdk.validateString], [CfnFunctionS3LocationPropertyFromCloudFormation, cfn_parse.FromCloudFormation.getString])(properties.CodeUri) : undefined);\n    ret.addPropertyResult('deadLetterQueue', 'DeadLetterQueue', properties.DeadLetterQueue != null ? CfnFunctionDeadLetterQueuePropertyFromCloudFormation(properties.DeadLetterQueue) : undefined);\n    ret.addPropertyResult('deploymentPreference', 'DeploymentPreference', properties.DeploymentPreference != null ? CfnFunctionDeploymentPreferencePropertyFromCloudFormation(properties.DeploymentPreference) : undefined);\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('environment', 'Environment', properties.Environment != null ? CfnFunctionFunctionEnvironmentPropertyFromCloudFormation(properties.Environment) : undefined);\n    ret.addPropertyResult('eventInvokeConfig', 'EventInvokeConfig', properties.EventInvokeConfig != null ? CfnFunctionEventInvokeConfigPropertyFromCloudFormation(properties.EventInvokeConfig) : undefined);\n    ret.addPropertyResult('events', 'Events', properties.Events != null ? cfn_parse.FromCloudFormation.getMap(CfnFunctionEventSourcePropertyFromCloudFormation)(properties.Events) : undefined);\n    ret.addPropertyResult('fileSystemConfigs', 'FileSystemConfigs', properties.FileSystemConfigs != null ? cfn_parse.FromCloudFormation.getArray(CfnFunctionFileSystemConfigPropertyFromCloudFormation)(properties.FileSystemConfigs) : undefined);\n    ret.addPropertyResult('functionName', 'FunctionName', properties.FunctionName != null ? cfn_parse.FromCloudFormation.getString(properties.FunctionName) : undefined);\n    ret.addPropertyResult('handler', 'Handler', properties.Handler != null ? cfn_parse.FromCloudFormation.getString(properties.Handler) : undefined);\n    ret.addPropertyResult('imageConfig', 'ImageConfig', properties.ImageConfig != null ? CfnFunctionImageConfigPropertyFromCloudFormation(properties.ImageConfig) : undefined);\n    ret.addPropertyResult('imageUri', 'ImageUri', properties.ImageUri != null ? cfn_parse.FromCloudFormation.getString(properties.ImageUri) : undefined);\n    ret.addPropertyResult('inlineCode', 'InlineCode', properties.InlineCode != null ? cfn_parse.FromCloudFormation.getString(properties.InlineCode) : undefined);\n    ret.addPropertyResult('kmsKeyArn', 'KmsKeyArn', properties.KmsKeyArn != null ? cfn_parse.FromCloudFormation.getString(properties.KmsKeyArn) : undefined);\n    ret.addPropertyResult('layers', 'Layers', properties.Layers != null ? cfn_parse.FromCloudFormation.getStringArray(properties.Layers) : undefined);\n    ret.addPropertyResult('memorySize', 'MemorySize', properties.MemorySize != null ? cfn_parse.FromCloudFormation.getNumber(properties.MemorySize) : undefined);\n    ret.addPropertyResult('packageType', 'PackageType', properties.PackageType != null ? cfn_parse.FromCloudFormation.getString(properties.PackageType) : undefined);\n    ret.addPropertyResult('permissionsBoundary', 'PermissionsBoundary', properties.PermissionsBoundary != null ? cfn_parse.FromCloudFormation.getString(properties.PermissionsBoundary) : undefined);\n    ret.addPropertyResult('policies', 'Policies', properties.Policies != null ? cfn_parse.FromCloudFormation.getTypeUnion([cdk.unionValidator(CfnFunction_IAMPolicyDocumentPropertyValidator, cdk.validateString), cdk.listValidator(cdk.unionValidator(CfnFunction_IAMPolicyDocumentPropertyValidator, CfnFunction_SAMPolicyTemplatePropertyValidator, cdk.validateString))], [cfn_parse.FromCloudFormation.getTypeUnion([CfnFunction_IAMPolicyDocumentPropertyValidator, cdk.validateString], [CfnFunctionIAMPolicyDocumentPropertyFromCloudFormation, cfn_parse.FromCloudFormation.getString]), cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getTypeUnion([CfnFunction_IAMPolicyDocumentPropertyValidator, CfnFunction_SAMPolicyTemplatePropertyValidator, cdk.validateString], [CfnFunctionIAMPolicyDocumentPropertyFromCloudFormation, CfnFunctionSAMPolicyTemplatePropertyFromCloudFormation, cfn_parse.FromCloudFormation.getString]))])(properties.Policies) : undefined);\n    ret.addPropertyResult('provisionedConcurrencyConfig', 'ProvisionedConcurrencyConfig', properties.ProvisionedConcurrencyConfig != null ? CfnFunctionProvisionedConcurrencyConfigPropertyFromCloudFormation(properties.ProvisionedConcurrencyConfig) : undefined);\n    ret.addPropertyResult('reservedConcurrentExecutions', 'ReservedConcurrentExecutions', properties.ReservedConcurrentExecutions != null ? cfn_parse.FromCloudFormation.getNumber(properties.ReservedConcurrentExecutions) : undefined);\n    ret.addPropertyResult('role', 'Role', properties.Role != null ? cfn_parse.FromCloudFormation.getString(properties.Role) : undefined);\n    ret.addPropertyResult('runtime', 'Runtime', properties.Runtime != null ? cfn_parse.FromCloudFormation.getString(properties.Runtime) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Tags) : undefined as any);\n    ret.addPropertyResult('timeout', 'Timeout', properties.Timeout != null ? cfn_parse.FromCloudFormation.getNumber(properties.Timeout) : undefined);\n    ret.addPropertyResult('tracing', 'Tracing', properties.Tracing != null ? cfn_parse.FromCloudFormation.getString(properties.Tracing) : undefined);\n    ret.addPropertyResult('versionDescription', 'VersionDescription', properties.VersionDescription != null ? cfn_parse.FromCloudFormation.getString(properties.VersionDescription) : undefined);\n    ret.addPropertyResult('vpcConfig', 'VpcConfig', properties.VpcConfig != null ? CfnFunctionVpcConfigPropertyFromCloudFormation(properties.VpcConfig) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::Serverless::Function`\n *\n *\n *\n * @cloudformationResource AWS::Serverless::Function\n * @stability external\n *\n * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n */\nexport class CfnFunction extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Serverless::Function\";\n    /**\n     * The `Transform` a template must use in order to use this resource\n     */\n    public static readonly REQUIRED_TRANSFORM = \"AWS::Serverless-2016-10-31\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnFunction {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnFunctionPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnFunction(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * `AWS::Serverless::Function.Architectures`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-architectures\n     */\n    public architectures: string[] | undefined;\n\n    /**\n     * `AWS::Serverless::Function.AssumeRolePolicyDocument`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-assumerolepolicydocument\n     */\n    public assumeRolePolicyDocument: any | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::Function.AutoPublishAlias`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    public autoPublishAlias: string | undefined;\n\n    /**\n     * `AWS::Serverless::Function.AutoPublishCodeSha256`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-autopublishcodesha256\n     */\n    public autoPublishCodeSha256: string | undefined;\n\n    /**\n     * `AWS::Serverless::Function.CodeSigningConfigArn`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-codesigningconfigarn\n     */\n    public codeSigningConfigArn: string | undefined;\n\n    /**\n     * `AWS::Serverless::Function.CodeUri`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    public codeUri: CfnFunction.S3LocationProperty | string | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::Function.DeadLetterQueue`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    public deadLetterQueue: CfnFunction.DeadLetterQueueProperty | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::Function.DeploymentPreference`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#deploymentpreference-object\n     */\n    public deploymentPreference: CfnFunction.DeploymentPreferenceProperty | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::Function.Description`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    public description: string | undefined;\n\n    /**\n     * `AWS::Serverless::Function.Environment`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    public environment: CfnFunction.FunctionEnvironmentProperty | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::Function.EventInvokeConfig`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    public eventInvokeConfig: CfnFunction.EventInvokeConfigProperty | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::Function.Events`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    public events: { [key: string]: (CfnFunction.EventSourceProperty | cdk.IResolvable) } | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::Function.FileSystemConfigs`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html\n     */\n    public fileSystemConfigs: Array<CfnFunction.FileSystemConfigProperty | cdk.IResolvable> | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::Function.FunctionName`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    public functionName: string | undefined;\n\n    /**\n     * `AWS::Serverless::Function.Handler`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    public handler: string | undefined;\n\n    /**\n     * `AWS::Serverless::Function.ImageConfig`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-imageconfig\n     */\n    public imageConfig: CfnFunction.ImageConfigProperty | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::Function.ImageUri`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-imageuri\n     */\n    public imageUri: string | undefined;\n\n    /**\n     * `AWS::Serverless::Function.InlineCode`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    public inlineCode: string | undefined;\n\n    /**\n     * `AWS::Serverless::Function.KmsKeyArn`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    public kmsKeyArn: string | undefined;\n\n    /**\n     * `AWS::Serverless::Function.Layers`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    public layers: string[] | undefined;\n\n    /**\n     * `AWS::Serverless::Function.MemorySize`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    public memorySize: number | undefined;\n\n    /**\n     * `AWS::Serverless::Function.PackageType`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-packagetype\n     */\n    public packageType: string | undefined;\n\n    /**\n     * `AWS::Serverless::Function.PermissionsBoundary`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    public permissionsBoundary: string | undefined;\n\n    /**\n     * `AWS::Serverless::Function.Policies`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    public policies: Array<CfnFunction.IAMPolicyDocumentProperty | CfnFunction.SAMPolicyTemplateProperty | string | cdk.IResolvable> | CfnFunction.IAMPolicyDocumentProperty | string | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::Function.ProvisionedConcurrencyConfig`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    public provisionedConcurrencyConfig: CfnFunction.ProvisionedConcurrencyConfigProperty | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::Function.ReservedConcurrentExecutions`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    public reservedConcurrentExecutions: number | undefined;\n\n    /**\n     * `AWS::Serverless::Function.Role`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    public role: string | undefined;\n\n    /**\n     * `AWS::Serverless::Function.Runtime`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    public runtime: string | undefined;\n\n    /**\n     * `AWS::Serverless::Function.Tags`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * `AWS::Serverless::Function.Timeout`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    public timeout: number | undefined;\n\n    /**\n     * `AWS::Serverless::Function.Tracing`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    public tracing: string | undefined;\n\n    /**\n     * `AWS::Serverless::Function.VersionDescription`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    public versionDescription: string | undefined;\n\n    /**\n     * `AWS::Serverless::Function.VpcConfig`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n     */\n    public vpcConfig: CfnFunction.VpcConfigProperty | cdk.IResolvable | undefined;\n\n    /**\n     * Create a new `AWS::Serverless::Function`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnFunctionProps = {}) {\n        super(scope, id, { type: CfnFunction.CFN_RESOURCE_TYPE_NAME, properties: props });\n        // Automatically add the required transform\n        this.stack.addTransform(CfnFunction.REQUIRED_TRANSFORM);\n\n        this.architectures = props.architectures;\n        this.assumeRolePolicyDocument = props.assumeRolePolicyDocument;\n        this.autoPublishAlias = props.autoPublishAlias;\n        this.autoPublishCodeSha256 = props.autoPublishCodeSha256;\n        this.codeSigningConfigArn = props.codeSigningConfigArn;\n        this.codeUri = props.codeUri;\n        this.deadLetterQueue = props.deadLetterQueue;\n        this.deploymentPreference = props.deploymentPreference;\n        this.description = props.description;\n        this.environment = props.environment;\n        this.eventInvokeConfig = props.eventInvokeConfig;\n        this.events = props.events;\n        this.fileSystemConfigs = props.fileSystemConfigs;\n        this.functionName = props.functionName;\n        this.handler = props.handler;\n        this.imageConfig = props.imageConfig;\n        this.imageUri = props.imageUri;\n        this.inlineCode = props.inlineCode;\n        this.kmsKeyArn = props.kmsKeyArn;\n        this.layers = props.layers;\n        this.memorySize = props.memorySize;\n        this.packageType = props.packageType;\n        this.permissionsBoundary = props.permissionsBoundary;\n        this.policies = props.policies;\n        this.provisionedConcurrencyConfig = props.provisionedConcurrencyConfig;\n        this.reservedConcurrentExecutions = props.reservedConcurrentExecutions;\n        this.role = props.role;\n        this.runtime = props.runtime;\n        this.tags = new cdk.TagManager(cdk.TagType.MAP, \"AWS::Serverless::Function\", props.tags, { tagPropertyName: 'tags' });\n        this.timeout = props.timeout;\n        this.tracing = props.tracing;\n        this.versionDescription = props.versionDescription;\n        this.vpcConfig = props.vpcConfig;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnFunction.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            architectures: this.architectures,\n            assumeRolePolicyDocument: this.assumeRolePolicyDocument,\n            autoPublishAlias: this.autoPublishAlias,\n            autoPublishCodeSha256: this.autoPublishCodeSha256,\n            codeSigningConfigArn: this.codeSigningConfigArn,\n            codeUri: this.codeUri,\n            deadLetterQueue: this.deadLetterQueue,\n            deploymentPreference: this.deploymentPreference,\n            description: this.description,\n            environment: this.environment,\n            eventInvokeConfig: this.eventInvokeConfig,\n            events: this.events,\n            fileSystemConfigs: this.fileSystemConfigs,\n            functionName: this.functionName,\n            handler: this.handler,\n            imageConfig: this.imageConfig,\n            imageUri: this.imageUri,\n            inlineCode: this.inlineCode,\n            kmsKeyArn: this.kmsKeyArn,\n            layers: this.layers,\n            memorySize: this.memorySize,\n            packageType: this.packageType,\n            permissionsBoundary: this.permissionsBoundary,\n            policies: this.policies,\n            provisionedConcurrencyConfig: this.provisionedConcurrencyConfig,\n            reservedConcurrentExecutions: this.reservedConcurrentExecutions,\n            role: this.role,\n            runtime: this.runtime,\n            tags: this.tags.renderTags(),\n            timeout: this.timeout,\n            tracing: this.tracing,\n            versionDescription: this.versionDescription,\n            vpcConfig: this.vpcConfig,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnFunctionPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#alexaskill\n     */\n    export interface AlexaSkillEventProperty {\n        /**\n         * `CfnFunction.AlexaSkillEventProperty.Variables`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#alexaskill\n         */\n        readonly variables?: { [key: string]: (string) } | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AlexaSkillEventProperty`\n *\n * @param properties - the TypeScript properties of a `AlexaSkillEventProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_AlexaSkillEventPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('variables', cdk.hashValidator(cdk.validateString))(properties.variables));\n    return errors.wrap('supplied properties not correct for \"AlexaSkillEventProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.AlexaSkillEvent` resource\n *\n * @param properties - the TypeScript properties of a `AlexaSkillEventProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.AlexaSkillEvent` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionAlexaSkillEventPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_AlexaSkillEventPropertyValidator(properties).assertSuccess();\n    return {\n        Variables: cdk.hashMapper(cdk.stringToCloudFormation)(properties.variables),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionAlexaSkillEventPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.AlexaSkillEventProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.AlexaSkillEventProperty>();\n    ret.addPropertyResult('variables', 'Variables', properties.Variables != null ? cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Variables) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api\n     */\n    export interface ApiEventProperty {\n        /**\n         * `CfnFunction.ApiEventProperty.Auth`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api\n         */\n        readonly auth?: CfnFunction.AuthProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.ApiEventProperty.Method`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api\n         */\n        readonly method: string;\n        /**\n         * `CfnFunction.ApiEventProperty.Path`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api\n         */\n        readonly path: string;\n        /**\n         * `CfnFunction.ApiEventProperty.RestApiId`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api\n         */\n        readonly restApiId?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ApiEventProperty`\n *\n * @param properties - the TypeScript properties of a `ApiEventProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_ApiEventPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('auth', CfnFunction_AuthPropertyValidator)(properties.auth));\n    errors.collect(cdk.propertyValidator('method', cdk.requiredValidator)(properties.method));\n    errors.collect(cdk.propertyValidator('method', cdk.validateString)(properties.method));\n    errors.collect(cdk.propertyValidator('path', cdk.requiredValidator)(properties.path));\n    errors.collect(cdk.propertyValidator('path', cdk.validateString)(properties.path));\n    errors.collect(cdk.propertyValidator('restApiId', cdk.validateString)(properties.restApiId));\n    return errors.wrap('supplied properties not correct for \"ApiEventProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.ApiEvent` resource\n *\n * @param properties - the TypeScript properties of a `ApiEventProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.ApiEvent` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionApiEventPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_ApiEventPropertyValidator(properties).assertSuccess();\n    return {\n        Auth: cfnFunctionAuthPropertyToCloudFormation(properties.auth),\n        Method: cdk.stringToCloudFormation(properties.method),\n        Path: cdk.stringToCloudFormation(properties.path),\n        RestApiId: cdk.stringToCloudFormation(properties.restApiId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionApiEventPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.ApiEventProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.ApiEventProperty>();\n    ret.addPropertyResult('auth', 'Auth', properties.Auth != null ? CfnFunctionAuthPropertyFromCloudFormation(properties.Auth) : undefined);\n    ret.addPropertyResult('method', 'Method', cfn_parse.FromCloudFormation.getString(properties.Method));\n    ret.addPropertyResult('path', 'Path', cfn_parse.FromCloudFormation.getString(properties.Path));\n    ret.addPropertyResult('restApiId', 'RestApiId', properties.RestApiId != null ? cfn_parse.FromCloudFormation.getString(properties.RestApiId) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#function-auth-object\n     */\n    export interface AuthProperty {\n        /**\n         * `CfnFunction.AuthProperty.ApiKeyRequired`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#function-auth-object\n         */\n        readonly apiKeyRequired?: boolean | cdk.IResolvable;\n        /**\n         * `CfnFunction.AuthProperty.AuthorizationScopes`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#function-auth-object\n         */\n        readonly authorizationScopes?: string[];\n        /**\n         * `CfnFunction.AuthProperty.Authorizer`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#function-auth-object\n         */\n        readonly authorizer?: string;\n        /**\n         * `CfnFunction.AuthProperty.ResourcePolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#function-auth-object\n         */\n        readonly resourcePolicy?: CfnFunction.AuthResourcePolicyProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AuthProperty`\n *\n * @param properties - the TypeScript properties of a `AuthProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_AuthPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('apiKeyRequired', cdk.validateBoolean)(properties.apiKeyRequired));\n    errors.collect(cdk.propertyValidator('authorizationScopes', cdk.listValidator(cdk.validateString))(properties.authorizationScopes));\n    errors.collect(cdk.propertyValidator('authorizer', cdk.validateString)(properties.authorizer));\n    errors.collect(cdk.propertyValidator('resourcePolicy', CfnFunction_AuthResourcePolicyPropertyValidator)(properties.resourcePolicy));\n    return errors.wrap('supplied properties not correct for \"AuthProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.Auth` resource\n *\n * @param properties - the TypeScript properties of a `AuthProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.Auth` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionAuthPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_AuthPropertyValidator(properties).assertSuccess();\n    return {\n        ApiKeyRequired: cdk.booleanToCloudFormation(properties.apiKeyRequired),\n        AuthorizationScopes: cdk.listMapper(cdk.stringToCloudFormation)(properties.authorizationScopes),\n        Authorizer: cdk.stringToCloudFormation(properties.authorizer),\n        ResourcePolicy: cfnFunctionAuthResourcePolicyPropertyToCloudFormation(properties.resourcePolicy),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionAuthPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.AuthProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.AuthProperty>();\n    ret.addPropertyResult('apiKeyRequired', 'ApiKeyRequired', properties.ApiKeyRequired != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ApiKeyRequired) : undefined);\n    ret.addPropertyResult('authorizationScopes', 'AuthorizationScopes', properties.AuthorizationScopes != null ? cfn_parse.FromCloudFormation.getStringArray(properties.AuthorizationScopes) : undefined);\n    ret.addPropertyResult('authorizer', 'Authorizer', properties.Authorizer != null ? cfn_parse.FromCloudFormation.getString(properties.Authorizer) : undefined);\n    ret.addPropertyResult('resourcePolicy', 'ResourcePolicy', properties.ResourcePolicy != null ? CfnFunctionAuthResourcePolicyPropertyFromCloudFormation(properties.ResourcePolicy) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#function-auth-object\n     */\n    export interface AuthResourcePolicyProperty {\n        /**\n         * `CfnFunction.AuthResourcePolicyProperty.AwsAccountBlacklist`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#function-auth-object\n         */\n        readonly awsAccountBlacklist?: string[];\n        /**\n         * `CfnFunction.AuthResourcePolicyProperty.AwsAccountWhitelist`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#function-auth-object\n         */\n        readonly awsAccountWhitelist?: string[];\n        /**\n         * `CfnFunction.AuthResourcePolicyProperty.CustomStatements`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#function-auth-object\n         */\n        readonly customStatements?: Array<any | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * `CfnFunction.AuthResourcePolicyProperty.IntrinsicVpcBlacklist`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#function-auth-object\n         */\n        readonly intrinsicVpcBlacklist?: string[];\n        /**\n         * `CfnFunction.AuthResourcePolicyProperty.IntrinsicVpcWhitelist`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#function-auth-object\n         */\n        readonly intrinsicVpcWhitelist?: string[];\n        /**\n         * `CfnFunction.AuthResourcePolicyProperty.IntrinsicVpceBlacklist`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#function-auth-object\n         */\n        readonly intrinsicVpceBlacklist?: string[];\n        /**\n         * `CfnFunction.AuthResourcePolicyProperty.IntrinsicVpceWhitelist`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#function-auth-object\n         */\n        readonly intrinsicVpceWhitelist?: string[];\n        /**\n         * `CfnFunction.AuthResourcePolicyProperty.IpRangeBlacklist`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#function-auth-object\n         */\n        readonly ipRangeBlacklist?: string[];\n        /**\n         * `CfnFunction.AuthResourcePolicyProperty.IpRangeWhitelist`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#function-auth-object\n         */\n        readonly ipRangeWhitelist?: string[];\n        /**\n         * `CfnFunction.AuthResourcePolicyProperty.SourceVpcBlacklist`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#function-auth-object\n         */\n        readonly sourceVpcBlacklist?: string[];\n        /**\n         * `CfnFunction.AuthResourcePolicyProperty.SourceVpcWhitelist`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#function-auth-object\n         */\n        readonly sourceVpcWhitelist?: string[];\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AuthResourcePolicyProperty`\n *\n * @param properties - the TypeScript properties of a `AuthResourcePolicyProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_AuthResourcePolicyPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('awsAccountBlacklist', cdk.listValidator(cdk.validateString))(properties.awsAccountBlacklist));\n    errors.collect(cdk.propertyValidator('awsAccountWhitelist', cdk.listValidator(cdk.validateString))(properties.awsAccountWhitelist));\n    errors.collect(cdk.propertyValidator('customStatements', cdk.listValidator(cdk.validateObject))(properties.customStatements));\n    errors.collect(cdk.propertyValidator('intrinsicVpcBlacklist', cdk.listValidator(cdk.validateString))(properties.intrinsicVpcBlacklist));\n    errors.collect(cdk.propertyValidator('intrinsicVpcWhitelist', cdk.listValidator(cdk.validateString))(properties.intrinsicVpcWhitelist));\n    errors.collect(cdk.propertyValidator('intrinsicVpceBlacklist', cdk.listValidator(cdk.validateString))(properties.intrinsicVpceBlacklist));\n    errors.collect(cdk.propertyValidator('intrinsicVpceWhitelist', cdk.listValidator(cdk.validateString))(properties.intrinsicVpceWhitelist));\n    errors.collect(cdk.propertyValidator('ipRangeBlacklist', cdk.listValidator(cdk.validateString))(properties.ipRangeBlacklist));\n    errors.collect(cdk.propertyValidator('ipRangeWhitelist', cdk.listValidator(cdk.validateString))(properties.ipRangeWhitelist));\n    errors.collect(cdk.propertyValidator('sourceVpcBlacklist', cdk.listValidator(cdk.validateString))(properties.sourceVpcBlacklist));\n    errors.collect(cdk.propertyValidator('sourceVpcWhitelist', cdk.listValidator(cdk.validateString))(properties.sourceVpcWhitelist));\n    return errors.wrap('supplied properties not correct for \"AuthResourcePolicyProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.AuthResourcePolicy` resource\n *\n * @param properties - the TypeScript properties of a `AuthResourcePolicyProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.AuthResourcePolicy` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionAuthResourcePolicyPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_AuthResourcePolicyPropertyValidator(properties).assertSuccess();\n    return {\n        AwsAccountBlacklist: cdk.listMapper(cdk.stringToCloudFormation)(properties.awsAccountBlacklist),\n        AwsAccountWhitelist: cdk.listMapper(cdk.stringToCloudFormation)(properties.awsAccountWhitelist),\n        CustomStatements: cdk.listMapper(cdk.objectToCloudFormation)(properties.customStatements),\n        IntrinsicVpcBlacklist: cdk.listMapper(cdk.stringToCloudFormation)(properties.intrinsicVpcBlacklist),\n        IntrinsicVpcWhitelist: cdk.listMapper(cdk.stringToCloudFormation)(properties.intrinsicVpcWhitelist),\n        IntrinsicVpceBlacklist: cdk.listMapper(cdk.stringToCloudFormation)(properties.intrinsicVpceBlacklist),\n        IntrinsicVpceWhitelist: cdk.listMapper(cdk.stringToCloudFormation)(properties.intrinsicVpceWhitelist),\n        IpRangeBlacklist: cdk.listMapper(cdk.stringToCloudFormation)(properties.ipRangeBlacklist),\n        IpRangeWhitelist: cdk.listMapper(cdk.stringToCloudFormation)(properties.ipRangeWhitelist),\n        SourceVpcBlacklist: cdk.listMapper(cdk.stringToCloudFormation)(properties.sourceVpcBlacklist),\n        SourceVpcWhitelist: cdk.listMapper(cdk.stringToCloudFormation)(properties.sourceVpcWhitelist),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionAuthResourcePolicyPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.AuthResourcePolicyProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.AuthResourcePolicyProperty>();\n    ret.addPropertyResult('awsAccountBlacklist', 'AwsAccountBlacklist', properties.AwsAccountBlacklist != null ? cfn_parse.FromCloudFormation.getStringArray(properties.AwsAccountBlacklist) : undefined);\n    ret.addPropertyResult('awsAccountWhitelist', 'AwsAccountWhitelist', properties.AwsAccountWhitelist != null ? cfn_parse.FromCloudFormation.getStringArray(properties.AwsAccountWhitelist) : undefined);\n    ret.addPropertyResult('customStatements', 'CustomStatements', properties.CustomStatements != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getAny)(properties.CustomStatements) : undefined);\n    ret.addPropertyResult('intrinsicVpcBlacklist', 'IntrinsicVpcBlacklist', properties.IntrinsicVpcBlacklist != null ? cfn_parse.FromCloudFormation.getStringArray(properties.IntrinsicVpcBlacklist) : undefined);\n    ret.addPropertyResult('intrinsicVpcWhitelist', 'IntrinsicVpcWhitelist', properties.IntrinsicVpcWhitelist != null ? cfn_parse.FromCloudFormation.getStringArray(properties.IntrinsicVpcWhitelist) : undefined);\n    ret.addPropertyResult('intrinsicVpceBlacklist', 'IntrinsicVpceBlacklist', properties.IntrinsicVpceBlacklist != null ? cfn_parse.FromCloudFormation.getStringArray(properties.IntrinsicVpceBlacklist) : undefined);\n    ret.addPropertyResult('intrinsicVpceWhitelist', 'IntrinsicVpceWhitelist', properties.IntrinsicVpceWhitelist != null ? cfn_parse.FromCloudFormation.getStringArray(properties.IntrinsicVpceWhitelist) : undefined);\n    ret.addPropertyResult('ipRangeBlacklist', 'IpRangeBlacklist', properties.IpRangeBlacklist != null ? cfn_parse.FromCloudFormation.getStringArray(properties.IpRangeBlacklist) : undefined);\n    ret.addPropertyResult('ipRangeWhitelist', 'IpRangeWhitelist', properties.IpRangeWhitelist != null ? cfn_parse.FromCloudFormation.getStringArray(properties.IpRangeWhitelist) : undefined);\n    ret.addPropertyResult('sourceVpcBlacklist', 'SourceVpcBlacklist', properties.SourceVpcBlacklist != null ? cfn_parse.FromCloudFormation.getStringArray(properties.SourceVpcBlacklist) : undefined);\n    ret.addPropertyResult('sourceVpcWhitelist', 'SourceVpcWhitelist', properties.SourceVpcWhitelist != null ? cfn_parse.FromCloudFormation.getStringArray(properties.SourceVpcWhitelist) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n     */\n    export interface BucketSAMPTProperty {\n        /**\n         * `CfnFunction.BucketSAMPTProperty.BucketName`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly bucketName: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `BucketSAMPTProperty`\n *\n * @param properties - the TypeScript properties of a `BucketSAMPTProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_BucketSAMPTPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('bucketName', cdk.requiredValidator)(properties.bucketName));\n    errors.collect(cdk.propertyValidator('bucketName', cdk.validateString)(properties.bucketName));\n    return errors.wrap('supplied properties not correct for \"BucketSAMPTProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.BucketSAMPT` resource\n *\n * @param properties - the TypeScript properties of a `BucketSAMPTProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.BucketSAMPT` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionBucketSAMPTPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_BucketSAMPTPropertyValidator(properties).assertSuccess();\n    return {\n        BucketName: cdk.stringToCloudFormation(properties.bucketName),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionBucketSAMPTPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.BucketSAMPTProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.BucketSAMPTProperty>();\n    ret.addPropertyResult('bucketName', 'BucketName', cfn_parse.FromCloudFormation.getString(properties.BucketName));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#cloudwatchevent\n     */\n    export interface CloudWatchEventEventProperty {\n        /**\n         * `CfnFunction.CloudWatchEventEventProperty.Input`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#cloudwatchevent\n         */\n        readonly input?: string;\n        /**\n         * `CfnFunction.CloudWatchEventEventProperty.InputPath`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#cloudwatchevent\n         */\n        readonly inputPath?: string;\n        /**\n         * `CfnFunction.CloudWatchEventEventProperty.Pattern`\n         *\n         * @link http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/CloudWatchEventsandEventPatterns.html\n         */\n        readonly pattern: any | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `CloudWatchEventEventProperty`\n *\n * @param properties - the TypeScript properties of a `CloudWatchEventEventProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_CloudWatchEventEventPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('input', cdk.validateString)(properties.input));\n    errors.collect(cdk.propertyValidator('inputPath', cdk.validateString)(properties.inputPath));\n    errors.collect(cdk.propertyValidator('pattern', cdk.requiredValidator)(properties.pattern));\n    errors.collect(cdk.propertyValidator('pattern', cdk.validateObject)(properties.pattern));\n    return errors.wrap('supplied properties not correct for \"CloudWatchEventEventProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.CloudWatchEventEvent` resource\n *\n * @param properties - the TypeScript properties of a `CloudWatchEventEventProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.CloudWatchEventEvent` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionCloudWatchEventEventPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_CloudWatchEventEventPropertyValidator(properties).assertSuccess();\n    return {\n        Input: cdk.stringToCloudFormation(properties.input),\n        InputPath: cdk.stringToCloudFormation(properties.inputPath),\n        Pattern: cdk.objectToCloudFormation(properties.pattern),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionCloudWatchEventEventPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.CloudWatchEventEventProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.CloudWatchEventEventProperty>();\n    ret.addPropertyResult('input', 'Input', properties.Input != null ? cfn_parse.FromCloudFormation.getString(properties.Input) : undefined);\n    ret.addPropertyResult('inputPath', 'InputPath', properties.InputPath != null ? cfn_parse.FromCloudFormation.getString(properties.InputPath) : undefined);\n    ret.addPropertyResult('pattern', 'Pattern', cfn_parse.FromCloudFormation.getAny(properties.Pattern));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#cloudwatchevent\n     */\n    export interface CloudWatchLogsEventProperty {\n        /**\n         * `CfnFunction.CloudWatchLogsEventProperty.FilterPattern`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#cloudwatchlogs\n         */\n        readonly filterPattern: string;\n        /**\n         * `CfnFunction.CloudWatchLogsEventProperty.LogGroupName`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#cloudwatchlogs\n         */\n        readonly logGroupName: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `CloudWatchLogsEventProperty`\n *\n * @param properties - the TypeScript properties of a `CloudWatchLogsEventProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_CloudWatchLogsEventPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('filterPattern', cdk.requiredValidator)(properties.filterPattern));\n    errors.collect(cdk.propertyValidator('filterPattern', cdk.validateString)(properties.filterPattern));\n    errors.collect(cdk.propertyValidator('logGroupName', cdk.requiredValidator)(properties.logGroupName));\n    errors.collect(cdk.propertyValidator('logGroupName', cdk.validateString)(properties.logGroupName));\n    return errors.wrap('supplied properties not correct for \"CloudWatchLogsEventProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.CloudWatchLogsEvent` resource\n *\n * @param properties - the TypeScript properties of a `CloudWatchLogsEventProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.CloudWatchLogsEvent` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionCloudWatchLogsEventPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_CloudWatchLogsEventPropertyValidator(properties).assertSuccess();\n    return {\n        FilterPattern: cdk.stringToCloudFormation(properties.filterPattern),\n        LogGroupName: cdk.stringToCloudFormation(properties.logGroupName),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionCloudWatchLogsEventPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.CloudWatchLogsEventProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.CloudWatchLogsEventProperty>();\n    ret.addPropertyResult('filterPattern', 'FilterPattern', cfn_parse.FromCloudFormation.getString(properties.FilterPattern));\n    ret.addPropertyResult('logGroupName', 'LogGroupName', cfn_parse.FromCloudFormation.getString(properties.LogGroupName));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n     */\n    export interface CollectionSAMPTProperty {\n        /**\n         * `CfnFunction.CollectionSAMPTProperty.CollectionId`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly collectionId: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `CollectionSAMPTProperty`\n *\n * @param properties - the TypeScript properties of a `CollectionSAMPTProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_CollectionSAMPTPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('collectionId', cdk.requiredValidator)(properties.collectionId));\n    errors.collect(cdk.propertyValidator('collectionId', cdk.validateString)(properties.collectionId));\n    return errors.wrap('supplied properties not correct for \"CollectionSAMPTProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.CollectionSAMPT` resource\n *\n * @param properties - the TypeScript properties of a `CollectionSAMPTProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.CollectionSAMPT` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionCollectionSAMPTPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_CollectionSAMPTPropertyValidator(properties).assertSuccess();\n    return {\n        CollectionId: cdk.stringToCloudFormation(properties.collectionId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionCollectionSAMPTPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.CollectionSAMPTProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.CollectionSAMPTProperty>();\n    ret.addPropertyResult('collectionId', 'CollectionId', cfn_parse.FromCloudFormation.getString(properties.CollectionId));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#deadletterqueue-object\n     */\n    export interface DeadLetterQueueProperty {\n        /**\n         * `CfnFunction.DeadLetterQueueProperty.TargetArn`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n         */\n        readonly targetArn: string;\n        /**\n         * `CfnFunction.DeadLetterQueueProperty.Type`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n         */\n        readonly type: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `DeadLetterQueueProperty`\n *\n * @param properties - the TypeScript properties of a `DeadLetterQueueProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_DeadLetterQueuePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('targetArn', cdk.requiredValidator)(properties.targetArn));\n    errors.collect(cdk.propertyValidator('targetArn', cdk.validateString)(properties.targetArn));\n    errors.collect(cdk.propertyValidator('type', cdk.requiredValidator)(properties.type));\n    errors.collect(cdk.propertyValidator('type', cdk.validateString)(properties.type));\n    return errors.wrap('supplied properties not correct for \"DeadLetterQueueProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.DeadLetterQueue` resource\n *\n * @param properties - the TypeScript properties of a `DeadLetterQueueProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.DeadLetterQueue` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionDeadLetterQueuePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_DeadLetterQueuePropertyValidator(properties).assertSuccess();\n    return {\n        TargetArn: cdk.stringToCloudFormation(properties.targetArn),\n        Type: cdk.stringToCloudFormation(properties.type),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionDeadLetterQueuePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.DeadLetterQueueProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.DeadLetterQueueProperty>();\n    ret.addPropertyResult('targetArn', 'TargetArn', cfn_parse.FromCloudFormation.getString(properties.TargetArn));\n    ret.addPropertyResult('type', 'Type', cfn_parse.FromCloudFormation.getString(properties.Type));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/safe_lambda_deployments.rst\n     */\n    export interface DeploymentPreferenceProperty {\n        /**\n         * `CfnFunction.DeploymentPreferenceProperty.Alarms`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#deploymentpreference-object\n         */\n        readonly alarms?: string[];\n        /**\n         * `CfnFunction.DeploymentPreferenceProperty.Enabled`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#deploymentpreference-object\n         */\n        readonly enabled: boolean | cdk.IResolvable;\n        /**\n         * `CfnFunction.DeploymentPreferenceProperty.Hooks`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#deploymentpreference-object\n         */\n        readonly hooks?: string[];\n        /**\n         * `CfnFunction.DeploymentPreferenceProperty.Type`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#deploymentpreference-object\n         */\n        readonly type: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `DeploymentPreferenceProperty`\n *\n * @param properties - the TypeScript properties of a `DeploymentPreferenceProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_DeploymentPreferencePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('alarms', cdk.listValidator(cdk.validateString))(properties.alarms));\n    errors.collect(cdk.propertyValidator('enabled', cdk.requiredValidator)(properties.enabled));\n    errors.collect(cdk.propertyValidator('enabled', cdk.validateBoolean)(properties.enabled));\n    errors.collect(cdk.propertyValidator('hooks', cdk.listValidator(cdk.validateString))(properties.hooks));\n    errors.collect(cdk.propertyValidator('type', cdk.requiredValidator)(properties.type));\n    errors.collect(cdk.propertyValidator('type', cdk.validateString)(properties.type));\n    return errors.wrap('supplied properties not correct for \"DeploymentPreferenceProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.DeploymentPreference` resource\n *\n * @param properties - the TypeScript properties of a `DeploymentPreferenceProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.DeploymentPreference` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionDeploymentPreferencePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_DeploymentPreferencePropertyValidator(properties).assertSuccess();\n    return {\n        Alarms: cdk.listMapper(cdk.stringToCloudFormation)(properties.alarms),\n        Enabled: cdk.booleanToCloudFormation(properties.enabled),\n        Hooks: cdk.listMapper(cdk.stringToCloudFormation)(properties.hooks),\n        Type: cdk.stringToCloudFormation(properties.type),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionDeploymentPreferencePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.DeploymentPreferenceProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.DeploymentPreferenceProperty>();\n    ret.addPropertyResult('alarms', 'Alarms', properties.Alarms != null ? cfn_parse.FromCloudFormation.getStringArray(properties.Alarms) : undefined);\n    ret.addPropertyResult('enabled', 'Enabled', cfn_parse.FromCloudFormation.getBoolean(properties.Enabled));\n    ret.addPropertyResult('hooks', 'Hooks', properties.Hooks != null ? cfn_parse.FromCloudFormation.getStringArray(properties.Hooks) : undefined);\n    ret.addPropertyResult('type', 'Type', cfn_parse.FromCloudFormation.getString(properties.Type));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#destination-config-object\n     */\n    export interface DestinationProperty {\n        /**\n         * `CfnFunction.DestinationProperty.Destination`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#destination-config-object\n         */\n        readonly destination: string;\n        /**\n         * `CfnFunction.DestinationProperty.Type`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#destination-config-object\n         */\n        readonly type?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `DestinationProperty`\n *\n * @param properties - the TypeScript properties of a `DestinationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_DestinationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('destination', cdk.requiredValidator)(properties.destination));\n    errors.collect(cdk.propertyValidator('destination', cdk.validateString)(properties.destination));\n    errors.collect(cdk.propertyValidator('type', cdk.validateString)(properties.type));\n    return errors.wrap('supplied properties not correct for \"DestinationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.Destination` resource\n *\n * @param properties - the TypeScript properties of a `DestinationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.Destination` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionDestinationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_DestinationPropertyValidator(properties).assertSuccess();\n    return {\n        Destination: cdk.stringToCloudFormation(properties.destination),\n        Type: cdk.stringToCloudFormation(properties.type),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionDestinationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.DestinationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.DestinationProperty>();\n    ret.addPropertyResult('destination', 'Destination', cfn_parse.FromCloudFormation.getString(properties.Destination));\n    ret.addPropertyResult('type', 'Type', properties.Type != null ? cfn_parse.FromCloudFormation.getString(properties.Type) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#destination-config-object\n     */\n    export interface DestinationConfigProperty {\n        /**\n         * `CfnFunction.DestinationConfigProperty.OnFailure`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#destination-config-object\n         */\n        readonly onFailure: CfnFunction.DestinationProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `DestinationConfigProperty`\n *\n * @param properties - the TypeScript properties of a `DestinationConfigProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_DestinationConfigPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('onFailure', cdk.requiredValidator)(properties.onFailure));\n    errors.collect(cdk.propertyValidator('onFailure', CfnFunction_DestinationPropertyValidator)(properties.onFailure));\n    return errors.wrap('supplied properties not correct for \"DestinationConfigProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.DestinationConfig` resource\n *\n * @param properties - the TypeScript properties of a `DestinationConfigProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.DestinationConfig` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionDestinationConfigPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_DestinationConfigPropertyValidator(properties).assertSuccess();\n    return {\n        OnFailure: cfnFunctionDestinationPropertyToCloudFormation(properties.onFailure),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionDestinationConfigPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.DestinationConfigProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.DestinationConfigProperty>();\n    ret.addPropertyResult('onFailure', 'OnFailure', CfnFunctionDestinationPropertyFromCloudFormation(properties.OnFailure));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n     */\n    export interface DomainSAMPTProperty {\n        /**\n         * `CfnFunction.DomainSAMPTProperty.DomainName`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly domainName: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `DomainSAMPTProperty`\n *\n * @param properties - the TypeScript properties of a `DomainSAMPTProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_DomainSAMPTPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('domainName', cdk.requiredValidator)(properties.domainName));\n    errors.collect(cdk.propertyValidator('domainName', cdk.validateString)(properties.domainName));\n    return errors.wrap('supplied properties not correct for \"DomainSAMPTProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.DomainSAMPT` resource\n *\n * @param properties - the TypeScript properties of a `DomainSAMPTProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.DomainSAMPT` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionDomainSAMPTPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_DomainSAMPTPropertyValidator(properties).assertSuccess();\n    return {\n        DomainName: cdk.stringToCloudFormation(properties.domainName),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionDomainSAMPTPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.DomainSAMPTProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.DomainSAMPTProperty>();\n    ret.addPropertyResult('domainName', 'DomainName', cfn_parse.FromCloudFormation.getString(properties.DomainName));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#dynamodb\n     */\n    export interface DynamoDBEventProperty {\n        /**\n         * `CfnFunction.DynamoDBEventProperty.BatchSize`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#dynamodb\n         */\n        readonly batchSize?: number;\n        /**\n         * `CfnFunction.DynamoDBEventProperty.BisectBatchOnFunctionError`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#dynamodb\n         */\n        readonly bisectBatchOnFunctionError?: boolean | cdk.IResolvable;\n        /**\n         * `CfnFunction.DynamoDBEventProperty.DestinationConfig`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#dynamodb\n         */\n        readonly destinationConfig?: CfnFunction.DestinationConfigProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.DynamoDBEventProperty.Enabled`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#dynamodb\n         */\n        readonly enabled?: boolean | cdk.IResolvable;\n        /**\n         * `CfnFunction.DynamoDBEventProperty.MaximumBatchingWindowInSeconds`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#dynamodb\n         */\n        readonly maximumBatchingWindowInSeconds?: number;\n        /**\n         * `CfnFunction.DynamoDBEventProperty.MaximumRecordAgeInSeconds`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#dynamodb\n         */\n        readonly maximumRecordAgeInSeconds?: number;\n        /**\n         * `CfnFunction.DynamoDBEventProperty.MaximumRetryAttempts`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#dynamodb\n         */\n        readonly maximumRetryAttempts?: number;\n        /**\n         * `CfnFunction.DynamoDBEventProperty.ParallelizationFactor`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#dynamodb\n         */\n        readonly parallelizationFactor?: number;\n        /**\n         * `CfnFunction.DynamoDBEventProperty.StartingPosition`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#dynamodb\n         */\n        readonly startingPosition: string;\n        /**\n         * `CfnFunction.DynamoDBEventProperty.Stream`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#dynamodb\n         */\n        readonly stream: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `DynamoDBEventProperty`\n *\n * @param properties - the TypeScript properties of a `DynamoDBEventProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_DynamoDBEventPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('batchSize', cdk.validateNumber)(properties.batchSize));\n    errors.collect(cdk.propertyValidator('bisectBatchOnFunctionError', cdk.validateBoolean)(properties.bisectBatchOnFunctionError));\n    errors.collect(cdk.propertyValidator('destinationConfig', CfnFunction_DestinationConfigPropertyValidator)(properties.destinationConfig));\n    errors.collect(cdk.propertyValidator('enabled', cdk.validateBoolean)(properties.enabled));\n    errors.collect(cdk.propertyValidator('maximumBatchingWindowInSeconds', cdk.validateNumber)(properties.maximumBatchingWindowInSeconds));\n    errors.collect(cdk.propertyValidator('maximumRecordAgeInSeconds', cdk.validateNumber)(properties.maximumRecordAgeInSeconds));\n    errors.collect(cdk.propertyValidator('maximumRetryAttempts', cdk.validateNumber)(properties.maximumRetryAttempts));\n    errors.collect(cdk.propertyValidator('parallelizationFactor', cdk.validateNumber)(properties.parallelizationFactor));\n    errors.collect(cdk.propertyValidator('startingPosition', cdk.requiredValidator)(properties.startingPosition));\n    errors.collect(cdk.propertyValidator('startingPosition', cdk.validateString)(properties.startingPosition));\n    errors.collect(cdk.propertyValidator('stream', cdk.requiredValidator)(properties.stream));\n    errors.collect(cdk.propertyValidator('stream', cdk.validateString)(properties.stream));\n    return errors.wrap('supplied properties not correct for \"DynamoDBEventProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.DynamoDBEvent` resource\n *\n * @param properties - the TypeScript properties of a `DynamoDBEventProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.DynamoDBEvent` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionDynamoDBEventPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_DynamoDBEventPropertyValidator(properties).assertSuccess();\n    return {\n        BatchSize: cdk.numberToCloudFormation(properties.batchSize),\n        BisectBatchOnFunctionError: cdk.booleanToCloudFormation(properties.bisectBatchOnFunctionError),\n        DestinationConfig: cfnFunctionDestinationConfigPropertyToCloudFormation(properties.destinationConfig),\n        Enabled: cdk.booleanToCloudFormation(properties.enabled),\n        MaximumBatchingWindowInSeconds: cdk.numberToCloudFormation(properties.maximumBatchingWindowInSeconds),\n        MaximumRecordAgeInSeconds: cdk.numberToCloudFormation(properties.maximumRecordAgeInSeconds),\n        MaximumRetryAttempts: cdk.numberToCloudFormation(properties.maximumRetryAttempts),\n        ParallelizationFactor: cdk.numberToCloudFormation(properties.parallelizationFactor),\n        StartingPosition: cdk.stringToCloudFormation(properties.startingPosition),\n        Stream: cdk.stringToCloudFormation(properties.stream),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionDynamoDBEventPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.DynamoDBEventProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.DynamoDBEventProperty>();\n    ret.addPropertyResult('batchSize', 'BatchSize', properties.BatchSize != null ? cfn_parse.FromCloudFormation.getNumber(properties.BatchSize) : undefined);\n    ret.addPropertyResult('bisectBatchOnFunctionError', 'BisectBatchOnFunctionError', properties.BisectBatchOnFunctionError != null ? cfn_parse.FromCloudFormation.getBoolean(properties.BisectBatchOnFunctionError) : undefined);\n    ret.addPropertyResult('destinationConfig', 'DestinationConfig', properties.DestinationConfig != null ? CfnFunctionDestinationConfigPropertyFromCloudFormation(properties.DestinationConfig) : undefined);\n    ret.addPropertyResult('enabled', 'Enabled', properties.Enabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.Enabled) : undefined);\n    ret.addPropertyResult('maximumBatchingWindowInSeconds', 'MaximumBatchingWindowInSeconds', properties.MaximumBatchingWindowInSeconds != null ? cfn_parse.FromCloudFormation.getNumber(properties.MaximumBatchingWindowInSeconds) : undefined);\n    ret.addPropertyResult('maximumRecordAgeInSeconds', 'MaximumRecordAgeInSeconds', properties.MaximumRecordAgeInSeconds != null ? cfn_parse.FromCloudFormation.getNumber(properties.MaximumRecordAgeInSeconds) : undefined);\n    ret.addPropertyResult('maximumRetryAttempts', 'MaximumRetryAttempts', properties.MaximumRetryAttempts != null ? cfn_parse.FromCloudFormation.getNumber(properties.MaximumRetryAttempts) : undefined);\n    ret.addPropertyResult('parallelizationFactor', 'ParallelizationFactor', properties.ParallelizationFactor != null ? cfn_parse.FromCloudFormation.getNumber(properties.ParallelizationFactor) : undefined);\n    ret.addPropertyResult('startingPosition', 'StartingPosition', cfn_parse.FromCloudFormation.getString(properties.StartingPosition));\n    ret.addPropertyResult('stream', 'Stream', cfn_parse.FromCloudFormation.getString(properties.Stream));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n     */\n    export interface EmptySAMPTProperty {\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `EmptySAMPTProperty`\n *\n * @param properties - the TypeScript properties of a `EmptySAMPTProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_EmptySAMPTPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    return errors.wrap('supplied properties not correct for \"EmptySAMPTProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.EmptySAMPT` resource\n *\n * @param properties - the TypeScript properties of a `EmptySAMPTProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.EmptySAMPT` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionEmptySAMPTPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_EmptySAMPTPropertyValidator(properties).assertSuccess();\n    return {\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionEmptySAMPTPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.EmptySAMPTProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.EmptySAMPTProperty>();\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#eventbridgerule\n     */\n    export interface EventBridgeRuleEventProperty {\n        /**\n         * `CfnFunction.EventBridgeRuleEventProperty.EventBusName`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#eventbridgerule\n         */\n        readonly eventBusName?: string;\n        /**\n         * `CfnFunction.EventBridgeRuleEventProperty.Input`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#eventbridgerule\n         */\n        readonly input?: string;\n        /**\n         * `CfnFunction.EventBridgeRuleEventProperty.InputPath`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#eventbridgerule\n         */\n        readonly inputPath?: string;\n        /**\n         * `CfnFunction.EventBridgeRuleEventProperty.Pattern`\n         *\n         * @link https://docs.aws.amazon.com/eventbridge/latest/userguide/filtering-examples-structure.html\n         */\n        readonly pattern: any | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `EventBridgeRuleEventProperty`\n *\n * @param properties - the TypeScript properties of a `EventBridgeRuleEventProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_EventBridgeRuleEventPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('eventBusName', cdk.validateString)(properties.eventBusName));\n    errors.collect(cdk.propertyValidator('input', cdk.validateString)(properties.input));\n    errors.collect(cdk.propertyValidator('inputPath', cdk.validateString)(properties.inputPath));\n    errors.collect(cdk.propertyValidator('pattern', cdk.requiredValidator)(properties.pattern));\n    errors.collect(cdk.propertyValidator('pattern', cdk.validateObject)(properties.pattern));\n    return errors.wrap('supplied properties not correct for \"EventBridgeRuleEventProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.EventBridgeRuleEvent` resource\n *\n * @param properties - the TypeScript properties of a `EventBridgeRuleEventProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.EventBridgeRuleEvent` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionEventBridgeRuleEventPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_EventBridgeRuleEventPropertyValidator(properties).assertSuccess();\n    return {\n        EventBusName: cdk.stringToCloudFormation(properties.eventBusName),\n        Input: cdk.stringToCloudFormation(properties.input),\n        InputPath: cdk.stringToCloudFormation(properties.inputPath),\n        Pattern: cdk.objectToCloudFormation(properties.pattern),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionEventBridgeRuleEventPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.EventBridgeRuleEventProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.EventBridgeRuleEventProperty>();\n    ret.addPropertyResult('eventBusName', 'EventBusName', properties.EventBusName != null ? cfn_parse.FromCloudFormation.getString(properties.EventBusName) : undefined);\n    ret.addPropertyResult('input', 'Input', properties.Input != null ? cfn_parse.FromCloudFormation.getString(properties.Input) : undefined);\n    ret.addPropertyResult('inputPath', 'InputPath', properties.InputPath != null ? cfn_parse.FromCloudFormation.getString(properties.InputPath) : undefined);\n    ret.addPropertyResult('pattern', 'Pattern', cfn_parse.FromCloudFormation.getAny(properties.Pattern));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#event-invoke-config-object\n     */\n    export interface EventInvokeConfigProperty {\n        /**\n         * `CfnFunction.EventInvokeConfigProperty.DestinationConfig`\n         *\n         * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#event-invoke-config-object\n         */\n        readonly destinationConfig?: CfnFunction.EventInvokeDestinationConfigProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.EventInvokeConfigProperty.MaximumEventAgeInSeconds`\n         *\n         * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#event-invoke-config-object\n         */\n        readonly maximumEventAgeInSeconds?: number;\n        /**\n         * `CfnFunction.EventInvokeConfigProperty.MaximumRetryAttempts`\n         *\n         * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#event-invoke-config-object\n         */\n        readonly maximumRetryAttempts?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `EventInvokeConfigProperty`\n *\n * @param properties - the TypeScript properties of a `EventInvokeConfigProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_EventInvokeConfigPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('destinationConfig', CfnFunction_EventInvokeDestinationConfigPropertyValidator)(properties.destinationConfig));\n    errors.collect(cdk.propertyValidator('maximumEventAgeInSeconds', cdk.validateNumber)(properties.maximumEventAgeInSeconds));\n    errors.collect(cdk.propertyValidator('maximumRetryAttempts', cdk.validateNumber)(properties.maximumRetryAttempts));\n    return errors.wrap('supplied properties not correct for \"EventInvokeConfigProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.EventInvokeConfig` resource\n *\n * @param properties - the TypeScript properties of a `EventInvokeConfigProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.EventInvokeConfig` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionEventInvokeConfigPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_EventInvokeConfigPropertyValidator(properties).assertSuccess();\n    return {\n        DestinationConfig: cfnFunctionEventInvokeDestinationConfigPropertyToCloudFormation(properties.destinationConfig),\n        MaximumEventAgeInSeconds: cdk.numberToCloudFormation(properties.maximumEventAgeInSeconds),\n        MaximumRetryAttempts: cdk.numberToCloudFormation(properties.maximumRetryAttempts),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionEventInvokeConfigPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.EventInvokeConfigProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.EventInvokeConfigProperty>();\n    ret.addPropertyResult('destinationConfig', 'DestinationConfig', properties.DestinationConfig != null ? CfnFunctionEventInvokeDestinationConfigPropertyFromCloudFormation(properties.DestinationConfig) : undefined);\n    ret.addPropertyResult('maximumEventAgeInSeconds', 'MaximumEventAgeInSeconds', properties.MaximumEventAgeInSeconds != null ? cfn_parse.FromCloudFormation.getNumber(properties.MaximumEventAgeInSeconds) : undefined);\n    ret.addPropertyResult('maximumRetryAttempts', 'MaximumRetryAttempts', properties.MaximumRetryAttempts != null ? cfn_parse.FromCloudFormation.getNumber(properties.MaximumRetryAttempts) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#event-invoke-destination-config-object\n     */\n    export interface EventInvokeDestinationConfigProperty {\n        /**\n         * `CfnFunction.EventInvokeDestinationConfigProperty.OnFailure`\n         *\n         * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#event-invoke-destination-config-object\n         */\n        readonly onFailure: CfnFunction.DestinationProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.EventInvokeDestinationConfigProperty.OnSuccess`\n         *\n         * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#event-invoke-destination-config-object\n         */\n        readonly onSuccess: CfnFunction.DestinationProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `EventInvokeDestinationConfigProperty`\n *\n * @param properties - the TypeScript properties of a `EventInvokeDestinationConfigProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_EventInvokeDestinationConfigPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('onFailure', cdk.requiredValidator)(properties.onFailure));\n    errors.collect(cdk.propertyValidator('onFailure', CfnFunction_DestinationPropertyValidator)(properties.onFailure));\n    errors.collect(cdk.propertyValidator('onSuccess', cdk.requiredValidator)(properties.onSuccess));\n    errors.collect(cdk.propertyValidator('onSuccess', CfnFunction_DestinationPropertyValidator)(properties.onSuccess));\n    return errors.wrap('supplied properties not correct for \"EventInvokeDestinationConfigProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.EventInvokeDestinationConfig` resource\n *\n * @param properties - the TypeScript properties of a `EventInvokeDestinationConfigProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.EventInvokeDestinationConfig` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionEventInvokeDestinationConfigPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_EventInvokeDestinationConfigPropertyValidator(properties).assertSuccess();\n    return {\n        OnFailure: cfnFunctionDestinationPropertyToCloudFormation(properties.onFailure),\n        OnSuccess: cfnFunctionDestinationPropertyToCloudFormation(properties.onSuccess),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionEventInvokeDestinationConfigPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.EventInvokeDestinationConfigProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.EventInvokeDestinationConfigProperty>();\n    ret.addPropertyResult('onFailure', 'OnFailure', CfnFunctionDestinationPropertyFromCloudFormation(properties.OnFailure));\n    ret.addPropertyResult('onSuccess', 'OnSuccess', CfnFunctionDestinationPropertyFromCloudFormation(properties.OnSuccess));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#event-source-object\n     */\n    export interface EventSourceProperty {\n        /**\n         * `CfnFunction.EventSourceProperty.Properties`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#event-source-types\n         */\n        readonly properties: CfnFunction.S3EventProperty | CfnFunction.SNSEventProperty | CfnFunction.SQSEventProperty | CfnFunction.KinesisEventProperty | CfnFunction.DynamoDBEventProperty | CfnFunction.ApiEventProperty | CfnFunction.ScheduleEventProperty | CfnFunction.CloudWatchEventEventProperty | CfnFunction.CloudWatchLogsEventProperty | CfnFunction.IoTRuleEventProperty | CfnFunction.AlexaSkillEventProperty | CfnFunction.EventBridgeRuleEventProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.EventSourceProperty.Type`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#event-source-object\n         */\n        readonly type: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `EventSourceProperty`\n *\n * @param properties - the TypeScript properties of a `EventSourceProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_EventSourcePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('properties', cdk.requiredValidator)(properties.properties));\n    errors.collect(cdk.propertyValidator('properties', cdk.unionValidator(CfnFunction_S3EventPropertyValidator, CfnFunction_SNSEventPropertyValidator, CfnFunction_SQSEventPropertyValidator, CfnFunction_KinesisEventPropertyValidator, CfnFunction_DynamoDBEventPropertyValidator, CfnFunction_ApiEventPropertyValidator, CfnFunction_ScheduleEventPropertyValidator, CfnFunction_CloudWatchEventEventPropertyValidator, CfnFunction_CloudWatchLogsEventPropertyValidator, CfnFunction_IoTRuleEventPropertyValidator, CfnFunction_AlexaSkillEventPropertyValidator, CfnFunction_EventBridgeRuleEventPropertyValidator))(properties.properties));\n    errors.collect(cdk.propertyValidator('type', cdk.requiredValidator)(properties.type));\n    errors.collect(cdk.propertyValidator('type', cdk.validateString)(properties.type));\n    return errors.wrap('supplied properties not correct for \"EventSourceProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.EventSource` resource\n *\n * @param properties - the TypeScript properties of a `EventSourceProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.EventSource` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionEventSourcePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_EventSourcePropertyValidator(properties).assertSuccess();\n    return {\n        Properties: cdk.unionMapper([CfnFunction_S3EventPropertyValidator, CfnFunction_SNSEventPropertyValidator, CfnFunction_SQSEventPropertyValidator, CfnFunction_KinesisEventPropertyValidator, CfnFunction_DynamoDBEventPropertyValidator, CfnFunction_ApiEventPropertyValidator, CfnFunction_ScheduleEventPropertyValidator, CfnFunction_CloudWatchEventEventPropertyValidator, CfnFunction_CloudWatchLogsEventPropertyValidator, CfnFunction_IoTRuleEventPropertyValidator, CfnFunction_AlexaSkillEventPropertyValidator, CfnFunction_EventBridgeRuleEventPropertyValidator], [cfnFunctionS3EventPropertyToCloudFormation, cfnFunctionSNSEventPropertyToCloudFormation, cfnFunctionSQSEventPropertyToCloudFormation, cfnFunctionKinesisEventPropertyToCloudFormation, cfnFunctionDynamoDBEventPropertyToCloudFormation, cfnFunctionApiEventPropertyToCloudFormation, cfnFunctionScheduleEventPropertyToCloudFormation, cfnFunctionCloudWatchEventEventPropertyToCloudFormation, cfnFunctionCloudWatchLogsEventPropertyToCloudFormation, cfnFunctionIoTRuleEventPropertyToCloudFormation, cfnFunctionAlexaSkillEventPropertyToCloudFormation, cfnFunctionEventBridgeRuleEventPropertyToCloudFormation])(properties.properties),\n        Type: cdk.stringToCloudFormation(properties.type),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionEventSourcePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.EventSourceProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.EventSourceProperty>();\n    ret.addPropertyResult('properties', 'Properties', cfn_parse.FromCloudFormation.getTypeUnion([CfnFunction_S3EventPropertyValidator, CfnFunction_SNSEventPropertyValidator, CfnFunction_SQSEventPropertyValidator, CfnFunction_KinesisEventPropertyValidator, CfnFunction_DynamoDBEventPropertyValidator, CfnFunction_ApiEventPropertyValidator, CfnFunction_ScheduleEventPropertyValidator, CfnFunction_CloudWatchEventEventPropertyValidator, CfnFunction_CloudWatchLogsEventPropertyValidator, CfnFunction_IoTRuleEventPropertyValidator, CfnFunction_AlexaSkillEventPropertyValidator, CfnFunction_EventBridgeRuleEventPropertyValidator], [CfnFunctionS3EventPropertyFromCloudFormation, CfnFunctionSNSEventPropertyFromCloudFormation, CfnFunctionSQSEventPropertyFromCloudFormation, CfnFunctionKinesisEventPropertyFromCloudFormation, CfnFunctionDynamoDBEventPropertyFromCloudFormation, CfnFunctionApiEventPropertyFromCloudFormation, CfnFunctionScheduleEventPropertyFromCloudFormation, CfnFunctionCloudWatchEventEventPropertyFromCloudFormation, CfnFunctionCloudWatchLogsEventPropertyFromCloudFormation, CfnFunctionIoTRuleEventPropertyFromCloudFormation, CfnFunctionAlexaSkillEventPropertyFromCloudFormation, CfnFunctionEventBridgeRuleEventPropertyFromCloudFormation])(properties.Properties));\n    ret.addPropertyResult('type', 'Type', cfn_parse.FromCloudFormation.getString(properties.Type));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-filesystemconfig.html#cfn-lambda-function-filesystemconfig-localmountpath\n     */\n    export interface FileSystemConfigProperty {\n        /**\n         * `CfnFunction.FileSystemConfigProperty.Arn`\n         *\n         * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-filesystemconfig.html#cfn-lambda-function-filesystemconfig-localmountpath\n         */\n        readonly arn?: string;\n        /**\n         * `CfnFunction.FileSystemConfigProperty.LocalMountPath`\n         *\n         * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-filesystemconfig.html#cfn-lambda-function-filesystemconfig-localmountpath\n         */\n        readonly localMountPath?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `FileSystemConfigProperty`\n *\n * @param properties - the TypeScript properties of a `FileSystemConfigProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_FileSystemConfigPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('arn', cdk.validateString)(properties.arn));\n    errors.collect(cdk.propertyValidator('localMountPath', cdk.validateString)(properties.localMountPath));\n    return errors.wrap('supplied properties not correct for \"FileSystemConfigProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.FileSystemConfig` resource\n *\n * @param properties - the TypeScript properties of a `FileSystemConfigProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.FileSystemConfig` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionFileSystemConfigPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_FileSystemConfigPropertyValidator(properties).assertSuccess();\n    return {\n        Arn: cdk.stringToCloudFormation(properties.arn),\n        LocalMountPath: cdk.stringToCloudFormation(properties.localMountPath),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionFileSystemConfigPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.FileSystemConfigProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.FileSystemConfigProperty>();\n    ret.addPropertyResult('arn', 'Arn', properties.Arn != null ? cfn_parse.FromCloudFormation.getString(properties.Arn) : undefined);\n    ret.addPropertyResult('localMountPath', 'LocalMountPath', properties.LocalMountPath != null ? cfn_parse.FromCloudFormation.getString(properties.LocalMountPath) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object\n     */\n    export interface FunctionEnvironmentProperty {\n        /**\n         * `CfnFunction.FunctionEnvironmentProperty.Variables`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object\n         */\n        readonly variables: { [key: string]: (string) } | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `FunctionEnvironmentProperty`\n *\n * @param properties - the TypeScript properties of a `FunctionEnvironmentProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_FunctionEnvironmentPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('variables', cdk.requiredValidator)(properties.variables));\n    errors.collect(cdk.propertyValidator('variables', cdk.hashValidator(cdk.validateString))(properties.variables));\n    return errors.wrap('supplied properties not correct for \"FunctionEnvironmentProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.FunctionEnvironment` resource\n *\n * @param properties - the TypeScript properties of a `FunctionEnvironmentProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.FunctionEnvironment` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionFunctionEnvironmentPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_FunctionEnvironmentPropertyValidator(properties).assertSuccess();\n    return {\n        Variables: cdk.hashMapper(cdk.stringToCloudFormation)(properties.variables),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionFunctionEnvironmentPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.FunctionEnvironmentProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.FunctionEnvironmentProperty>();\n    ret.addPropertyResult('variables', 'Variables', cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Variables));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n     */\n    export interface FunctionSAMPTProperty {\n        /**\n         * `CfnFunction.FunctionSAMPTProperty.FunctionName`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly functionName: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `FunctionSAMPTProperty`\n *\n * @param properties - the TypeScript properties of a `FunctionSAMPTProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_FunctionSAMPTPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('functionName', cdk.requiredValidator)(properties.functionName));\n    errors.collect(cdk.propertyValidator('functionName', cdk.validateString)(properties.functionName));\n    return errors.wrap('supplied properties not correct for \"FunctionSAMPTProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.FunctionSAMPT` resource\n *\n * @param properties - the TypeScript properties of a `FunctionSAMPTProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.FunctionSAMPT` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionFunctionSAMPTPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_FunctionSAMPTPropertyValidator(properties).assertSuccess();\n    return {\n        FunctionName: cdk.stringToCloudFormation(properties.functionName),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionFunctionSAMPTPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.FunctionSAMPTProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.FunctionSAMPTProperty>();\n    ret.addPropertyResult('functionName', 'FunctionName', cfn_parse.FromCloudFormation.getString(properties.FunctionName));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies.html\n     */\n    export interface IAMPolicyDocumentProperty {\n        /**\n         * `CfnFunction.IAMPolicyDocumentProperty.Statement`\n         *\n         * @link http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies.html\n         */\n        readonly statement: any | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `IAMPolicyDocumentProperty`\n *\n * @param properties - the TypeScript properties of a `IAMPolicyDocumentProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_IAMPolicyDocumentPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('statement', cdk.requiredValidator)(properties.statement));\n    errors.collect(cdk.propertyValidator('statement', cdk.validateObject)(properties.statement));\n    return errors.wrap('supplied properties not correct for \"IAMPolicyDocumentProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.IAMPolicyDocument` resource\n *\n * @param properties - the TypeScript properties of a `IAMPolicyDocumentProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.IAMPolicyDocument` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionIAMPolicyDocumentPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_IAMPolicyDocumentPropertyValidator(properties).assertSuccess();\n    return {\n        Statement: cdk.objectToCloudFormation(properties.statement),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionIAMPolicyDocumentPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.IAMPolicyDocumentProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.IAMPolicyDocumentProperty>();\n    ret.addPropertyResult('statement', 'Statement', cfn_parse.FromCloudFormation.getAny(properties.Statement));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n     */\n    export interface IdentitySAMPTProperty {\n        /**\n         * `CfnFunction.IdentitySAMPTProperty.IdentityName`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly identityName: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `IdentitySAMPTProperty`\n *\n * @param properties - the TypeScript properties of a `IdentitySAMPTProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_IdentitySAMPTPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('identityName', cdk.requiredValidator)(properties.identityName));\n    errors.collect(cdk.propertyValidator('identityName', cdk.validateString)(properties.identityName));\n    return errors.wrap('supplied properties not correct for \"IdentitySAMPTProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.IdentitySAMPT` resource\n *\n * @param properties - the TypeScript properties of a `IdentitySAMPTProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.IdentitySAMPT` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionIdentitySAMPTPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_IdentitySAMPTPropertyValidator(properties).assertSuccess();\n    return {\n        IdentityName: cdk.stringToCloudFormation(properties.identityName),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionIdentitySAMPTPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.IdentitySAMPTProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.IdentitySAMPTProperty>();\n    ret.addPropertyResult('identityName', 'IdentityName', cfn_parse.FromCloudFormation.getString(properties.IdentityName));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html\n     */\n    export interface ImageConfigProperty {\n        /**\n         * `CfnFunction.ImageConfigProperty.Command`\n         *\n         * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-command\n         */\n        readonly command?: string[];\n        /**\n         * `CfnFunction.ImageConfigProperty.EntryPoint`\n         *\n         * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-entrypoint\n         */\n        readonly entryPoint?: string[];\n        /**\n         * `CfnFunction.ImageConfigProperty.WorkingDirectory`\n         *\n         * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-workingdirectory\n         */\n        readonly workingDirectory?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ImageConfigProperty`\n *\n * @param properties - the TypeScript properties of a `ImageConfigProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_ImageConfigPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('command', cdk.listValidator(cdk.validateString))(properties.command));\n    errors.collect(cdk.propertyValidator('entryPoint', cdk.listValidator(cdk.validateString))(properties.entryPoint));\n    errors.collect(cdk.propertyValidator('workingDirectory', cdk.validateString)(properties.workingDirectory));\n    return errors.wrap('supplied properties not correct for \"ImageConfigProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.ImageConfig` resource\n *\n * @param properties - the TypeScript properties of a `ImageConfigProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.ImageConfig` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionImageConfigPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_ImageConfigPropertyValidator(properties).assertSuccess();\n    return {\n        Command: cdk.listMapper(cdk.stringToCloudFormation)(properties.command),\n        EntryPoint: cdk.listMapper(cdk.stringToCloudFormation)(properties.entryPoint),\n        WorkingDirectory: cdk.stringToCloudFormation(properties.workingDirectory),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionImageConfigPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.ImageConfigProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.ImageConfigProperty>();\n    ret.addPropertyResult('command', 'Command', properties.Command != null ? cfn_parse.FromCloudFormation.getStringArray(properties.Command) : undefined);\n    ret.addPropertyResult('entryPoint', 'EntryPoint', properties.EntryPoint != null ? cfn_parse.FromCloudFormation.getStringArray(properties.EntryPoint) : undefined);\n    ret.addPropertyResult('workingDirectory', 'WorkingDirectory', properties.WorkingDirectory != null ? cfn_parse.FromCloudFormation.getString(properties.WorkingDirectory) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#iotrule\n     */\n    export interface IoTRuleEventProperty {\n        /**\n         * `CfnFunction.IoTRuleEventProperty.AwsIotSqlVersion`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#iotrule\n         */\n        readonly awsIotSqlVersion?: string;\n        /**\n         * `CfnFunction.IoTRuleEventProperty.Sql`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#iotrule\n         */\n        readonly sql: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `IoTRuleEventProperty`\n *\n * @param properties - the TypeScript properties of a `IoTRuleEventProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_IoTRuleEventPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('awsIotSqlVersion', cdk.validateString)(properties.awsIotSqlVersion));\n    errors.collect(cdk.propertyValidator('sql', cdk.requiredValidator)(properties.sql));\n    errors.collect(cdk.propertyValidator('sql', cdk.validateString)(properties.sql));\n    return errors.wrap('supplied properties not correct for \"IoTRuleEventProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.IoTRuleEvent` resource\n *\n * @param properties - the TypeScript properties of a `IoTRuleEventProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.IoTRuleEvent` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionIoTRuleEventPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_IoTRuleEventPropertyValidator(properties).assertSuccess();\n    return {\n        AwsIotSqlVersion: cdk.stringToCloudFormation(properties.awsIotSqlVersion),\n        Sql: cdk.stringToCloudFormation(properties.sql),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionIoTRuleEventPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.IoTRuleEventProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.IoTRuleEventProperty>();\n    ret.addPropertyResult('awsIotSqlVersion', 'AwsIotSqlVersion', properties.AwsIotSqlVersion != null ? cfn_parse.FromCloudFormation.getString(properties.AwsIotSqlVersion) : undefined);\n    ret.addPropertyResult('sql', 'Sql', cfn_parse.FromCloudFormation.getString(properties.Sql));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n     */\n    export interface KeySAMPTProperty {\n        /**\n         * `CfnFunction.KeySAMPTProperty.KeyId`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly keyId: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `KeySAMPTProperty`\n *\n * @param properties - the TypeScript properties of a `KeySAMPTProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_KeySAMPTPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('keyId', cdk.requiredValidator)(properties.keyId));\n    errors.collect(cdk.propertyValidator('keyId', cdk.validateString)(properties.keyId));\n    return errors.wrap('supplied properties not correct for \"KeySAMPTProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.KeySAMPT` resource\n *\n * @param properties - the TypeScript properties of a `KeySAMPTProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.KeySAMPT` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionKeySAMPTPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_KeySAMPTPropertyValidator(properties).assertSuccess();\n    return {\n        KeyId: cdk.stringToCloudFormation(properties.keyId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionKeySAMPTPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.KeySAMPTProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.KeySAMPTProperty>();\n    ret.addPropertyResult('keyId', 'KeyId', cfn_parse.FromCloudFormation.getString(properties.KeyId));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#kinesis\n     */\n    export interface KinesisEventProperty {\n        /**\n         * `CfnFunction.KinesisEventProperty.BatchSize`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#kinesis\n         */\n        readonly batchSize?: number;\n        /**\n         * `CfnFunction.KinesisEventProperty.Enabled`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#kinesis\n         */\n        readonly enabled?: boolean | cdk.IResolvable;\n        /**\n         * `CfnFunction.KinesisEventProperty.StartingPosition`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#kinesis\n         */\n        readonly startingPosition: string;\n        /**\n         * `CfnFunction.KinesisEventProperty.Stream`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#kinesis\n         */\n        readonly stream: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `KinesisEventProperty`\n *\n * @param properties - the TypeScript properties of a `KinesisEventProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_KinesisEventPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('batchSize', cdk.validateNumber)(properties.batchSize));\n    errors.collect(cdk.propertyValidator('enabled', cdk.validateBoolean)(properties.enabled));\n    errors.collect(cdk.propertyValidator('startingPosition', cdk.requiredValidator)(properties.startingPosition));\n    errors.collect(cdk.propertyValidator('startingPosition', cdk.validateString)(properties.startingPosition));\n    errors.collect(cdk.propertyValidator('stream', cdk.requiredValidator)(properties.stream));\n    errors.collect(cdk.propertyValidator('stream', cdk.validateString)(properties.stream));\n    return errors.wrap('supplied properties not correct for \"KinesisEventProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.KinesisEvent` resource\n *\n * @param properties - the TypeScript properties of a `KinesisEventProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.KinesisEvent` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionKinesisEventPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_KinesisEventPropertyValidator(properties).assertSuccess();\n    return {\n        BatchSize: cdk.numberToCloudFormation(properties.batchSize),\n        Enabled: cdk.booleanToCloudFormation(properties.enabled),\n        StartingPosition: cdk.stringToCloudFormation(properties.startingPosition),\n        Stream: cdk.stringToCloudFormation(properties.stream),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionKinesisEventPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.KinesisEventProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.KinesisEventProperty>();\n    ret.addPropertyResult('batchSize', 'BatchSize', properties.BatchSize != null ? cfn_parse.FromCloudFormation.getNumber(properties.BatchSize) : undefined);\n    ret.addPropertyResult('enabled', 'Enabled', properties.Enabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.Enabled) : undefined);\n    ret.addPropertyResult('startingPosition', 'StartingPosition', cfn_parse.FromCloudFormation.getString(properties.StartingPosition));\n    ret.addPropertyResult('stream', 'Stream', cfn_parse.FromCloudFormation.getString(properties.Stream));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n     */\n    export interface LogGroupSAMPTProperty {\n        /**\n         * `CfnFunction.LogGroupSAMPTProperty.LogGroupName`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly logGroupName: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `LogGroupSAMPTProperty`\n *\n * @param properties - the TypeScript properties of a `LogGroupSAMPTProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_LogGroupSAMPTPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('logGroupName', cdk.requiredValidator)(properties.logGroupName));\n    errors.collect(cdk.propertyValidator('logGroupName', cdk.validateString)(properties.logGroupName));\n    return errors.wrap('supplied properties not correct for \"LogGroupSAMPTProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.LogGroupSAMPT` resource\n *\n * @param properties - the TypeScript properties of a `LogGroupSAMPTProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.LogGroupSAMPT` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionLogGroupSAMPTPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_LogGroupSAMPTPropertyValidator(properties).assertSuccess();\n    return {\n        LogGroupName: cdk.stringToCloudFormation(properties.logGroupName),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionLogGroupSAMPTPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.LogGroupSAMPTProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.LogGroupSAMPTProperty>();\n    ret.addPropertyResult('logGroupName', 'LogGroupName', cfn_parse.FromCloudFormation.getString(properties.LogGroupName));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#provisioned-concurrency-config-object\n     */\n    export interface ProvisionedConcurrencyConfigProperty {\n        /**\n         * `CfnFunction.ProvisionedConcurrencyConfigProperty.ProvisionedConcurrentExecutions`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#provisioned-concurrency-config-object\n         */\n        readonly provisionedConcurrentExecutions: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ProvisionedConcurrencyConfigProperty`\n *\n * @param properties - the TypeScript properties of a `ProvisionedConcurrencyConfigProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_ProvisionedConcurrencyConfigPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('provisionedConcurrentExecutions', cdk.requiredValidator)(properties.provisionedConcurrentExecutions));\n    errors.collect(cdk.propertyValidator('provisionedConcurrentExecutions', cdk.validateString)(properties.provisionedConcurrentExecutions));\n    return errors.wrap('supplied properties not correct for \"ProvisionedConcurrencyConfigProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.ProvisionedConcurrencyConfig` resource\n *\n * @param properties - the TypeScript properties of a `ProvisionedConcurrencyConfigProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.ProvisionedConcurrencyConfig` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionProvisionedConcurrencyConfigPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_ProvisionedConcurrencyConfigPropertyValidator(properties).assertSuccess();\n    return {\n        ProvisionedConcurrentExecutions: cdk.stringToCloudFormation(properties.provisionedConcurrentExecutions),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionProvisionedConcurrencyConfigPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.ProvisionedConcurrencyConfigProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.ProvisionedConcurrencyConfigProperty>();\n    ret.addPropertyResult('provisionedConcurrentExecutions', 'ProvisionedConcurrentExecutions', cfn_parse.FromCloudFormation.getString(properties.ProvisionedConcurrentExecutions));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n     */\n    export interface QueueSAMPTProperty {\n        /**\n         * `CfnFunction.QueueSAMPTProperty.QueueName`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly queueName: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `QueueSAMPTProperty`\n *\n * @param properties - the TypeScript properties of a `QueueSAMPTProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_QueueSAMPTPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('queueName', cdk.requiredValidator)(properties.queueName));\n    errors.collect(cdk.propertyValidator('queueName', cdk.validateString)(properties.queueName));\n    return errors.wrap('supplied properties not correct for \"QueueSAMPTProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.QueueSAMPT` resource\n *\n * @param properties - the TypeScript properties of a `QueueSAMPTProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.QueueSAMPT` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionQueueSAMPTPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_QueueSAMPTPropertyValidator(properties).assertSuccess();\n    return {\n        QueueName: cdk.stringToCloudFormation(properties.queueName),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionQueueSAMPTPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.QueueSAMPTProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.QueueSAMPTProperty>();\n    ret.addPropertyResult('queueName', 'QueueName', cfn_parse.FromCloudFormation.getString(properties.QueueName));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#s3\n     */\n    export interface S3EventProperty {\n        /**\n         * `CfnFunction.S3EventProperty.Bucket`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#s3\n         */\n        readonly bucket: string;\n        /**\n         * `CfnFunction.S3EventProperty.Events`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#s3\n         */\n        readonly events: string[] | string | cdk.IResolvable;\n        /**\n         * `CfnFunction.S3EventProperty.Filter`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#s3\n         */\n        readonly filter?: CfnFunction.S3NotificationFilterProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `S3EventProperty`\n *\n * @param properties - the TypeScript properties of a `S3EventProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_S3EventPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('bucket', cdk.requiredValidator)(properties.bucket));\n    errors.collect(cdk.propertyValidator('bucket', cdk.validateString)(properties.bucket));\n    errors.collect(cdk.propertyValidator('events', cdk.requiredValidator)(properties.events));\n    errors.collect(cdk.propertyValidator('events', cdk.unionValidator(cdk.unionValidator(cdk.validateString), cdk.listValidator(cdk.unionValidator(cdk.validateString))))(properties.events));\n    errors.collect(cdk.propertyValidator('filter', CfnFunction_S3NotificationFilterPropertyValidator)(properties.filter));\n    return errors.wrap('supplied properties not correct for \"S3EventProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.S3Event` resource\n *\n * @param properties - the TypeScript properties of a `S3EventProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.S3Event` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionS3EventPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_S3EventPropertyValidator(properties).assertSuccess();\n    return {\n        Bucket: cdk.stringToCloudFormation(properties.bucket),\n        Events: cdk.unionMapper([cdk.unionValidator(cdk.validateString), cdk.listValidator(cdk.unionValidator(cdk.validateString))], [cdk.unionMapper([cdk.validateString], [cdk.stringToCloudFormation]), cdk.listMapper(cdk.unionMapper([cdk.validateString], [cdk.stringToCloudFormation]))])(properties.events),\n        Filter: cfnFunctionS3NotificationFilterPropertyToCloudFormation(properties.filter),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionS3EventPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.S3EventProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.S3EventProperty>();\n    ret.addPropertyResult('bucket', 'Bucket', cfn_parse.FromCloudFormation.getString(properties.Bucket));\n    ret.addPropertyResult('events', 'Events', cfn_parse.FromCloudFormation.getTypeUnion([cdk.unionValidator(cdk.validateString), cdk.listValidator(cdk.unionValidator(cdk.validateString))], [cfn_parse.FromCloudFormation.getTypeUnion([cdk.validateString], [cfn_parse.FromCloudFormation.getString]), cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getTypeUnion([cdk.validateString], [cfn_parse.FromCloudFormation.getString]))])(properties.Events));\n    ret.addPropertyResult('filter', 'Filter', properties.Filter != null ? CfnFunctionS3NotificationFilterPropertyFromCloudFormation(properties.Filter) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter.html\n     */\n    export interface S3KeyFilterProperty {\n        /**\n         * `CfnFunction.S3KeyFilterProperty.Rules`\n         *\n         * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter.html\n         */\n        readonly rules: Array<CfnFunction.S3KeyFilterRuleProperty | cdk.IResolvable> | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `S3KeyFilterProperty`\n *\n * @param properties - the TypeScript properties of a `S3KeyFilterProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_S3KeyFilterPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('rules', cdk.requiredValidator)(properties.rules));\n    errors.collect(cdk.propertyValidator('rules', cdk.listValidator(CfnFunction_S3KeyFilterRulePropertyValidator))(properties.rules));\n    return errors.wrap('supplied properties not correct for \"S3KeyFilterProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.S3KeyFilter` resource\n *\n * @param properties - the TypeScript properties of a `S3KeyFilterProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.S3KeyFilter` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionS3KeyFilterPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_S3KeyFilterPropertyValidator(properties).assertSuccess();\n    return {\n        Rules: cdk.listMapper(cfnFunctionS3KeyFilterRulePropertyToCloudFormation)(properties.rules),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionS3KeyFilterPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.S3KeyFilterProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.S3KeyFilterProperty>();\n    ret.addPropertyResult('rules', 'Rules', cfn_parse.FromCloudFormation.getArray(CfnFunctionS3KeyFilterRulePropertyFromCloudFormation)(properties.Rules));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key-rules.html\n     */\n    export interface S3KeyFilterRuleProperty {\n        /**\n         * `CfnFunction.S3KeyFilterRuleProperty.Name`\n         *\n         * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key-rules.html\n         */\n        readonly name: string;\n        /**\n         * `CfnFunction.S3KeyFilterRuleProperty.Value`\n         *\n         * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key-rules.html\n         */\n        readonly value: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `S3KeyFilterRuleProperty`\n *\n * @param properties - the TypeScript properties of a `S3KeyFilterRuleProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_S3KeyFilterRulePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('name', cdk.requiredValidator)(properties.name));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('value', cdk.requiredValidator)(properties.value));\n    errors.collect(cdk.propertyValidator('value', cdk.validateString)(properties.value));\n    return errors.wrap('supplied properties not correct for \"S3KeyFilterRuleProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.S3KeyFilterRule` resource\n *\n * @param properties - the TypeScript properties of a `S3KeyFilterRuleProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.S3KeyFilterRule` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionS3KeyFilterRulePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_S3KeyFilterRulePropertyValidator(properties).assertSuccess();\n    return {\n        Name: cdk.stringToCloudFormation(properties.name),\n        Value: cdk.stringToCloudFormation(properties.value),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionS3KeyFilterRulePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.S3KeyFilterRuleProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.S3KeyFilterRuleProperty>();\n    ret.addPropertyResult('name', 'Name', cfn_parse.FromCloudFormation.getString(properties.Name));\n    ret.addPropertyResult('value', 'Value', cfn_parse.FromCloudFormation.getString(properties.Value));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#s3-location-object\n     */\n    export interface S3LocationProperty {\n        /**\n         * `CfnFunction.S3LocationProperty.Bucket`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n         */\n        readonly bucket: string;\n        /**\n         * `CfnFunction.S3LocationProperty.Key`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n         */\n        readonly key: string;\n        /**\n         * `CfnFunction.S3LocationProperty.Version`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n         */\n        readonly version?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `S3LocationProperty`\n *\n * @param properties - the TypeScript properties of a `S3LocationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_S3LocationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('bucket', cdk.requiredValidator)(properties.bucket));\n    errors.collect(cdk.propertyValidator('bucket', cdk.validateString)(properties.bucket));\n    errors.collect(cdk.propertyValidator('key', cdk.requiredValidator)(properties.key));\n    errors.collect(cdk.propertyValidator('key', cdk.validateString)(properties.key));\n    errors.collect(cdk.propertyValidator('version', cdk.validateNumber)(properties.version));\n    return errors.wrap('supplied properties not correct for \"S3LocationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.S3Location` resource\n *\n * @param properties - the TypeScript properties of a `S3LocationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.S3Location` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionS3LocationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_S3LocationPropertyValidator(properties).assertSuccess();\n    return {\n        Bucket: cdk.stringToCloudFormation(properties.bucket),\n        Key: cdk.stringToCloudFormation(properties.key),\n        Version: cdk.numberToCloudFormation(properties.version),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionS3LocationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.S3LocationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.S3LocationProperty>();\n    ret.addPropertyResult('bucket', 'Bucket', cfn_parse.FromCloudFormation.getString(properties.Bucket));\n    ret.addPropertyResult('key', 'Key', cfn_parse.FromCloudFormation.getString(properties.Key));\n    ret.addPropertyResult('version', 'Version', properties.Version != null ? cfn_parse.FromCloudFormation.getNumber(properties.Version) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter.html\n     */\n    export interface S3NotificationFilterProperty {\n        /**\n         * `CfnFunction.S3NotificationFilterProperty.S3Key`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter.html\n         */\n        readonly s3Key: CfnFunction.S3KeyFilterProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `S3NotificationFilterProperty`\n *\n * @param properties - the TypeScript properties of a `S3NotificationFilterProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_S3NotificationFilterPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('s3Key', cdk.requiredValidator)(properties.s3Key));\n    errors.collect(cdk.propertyValidator('s3Key', CfnFunction_S3KeyFilterPropertyValidator)(properties.s3Key));\n    return errors.wrap('supplied properties not correct for \"S3NotificationFilterProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.S3NotificationFilter` resource\n *\n * @param properties - the TypeScript properties of a `S3NotificationFilterProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.S3NotificationFilter` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionS3NotificationFilterPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_S3NotificationFilterPropertyValidator(properties).assertSuccess();\n    return {\n        S3Key: cfnFunctionS3KeyFilterPropertyToCloudFormation(properties.s3Key),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionS3NotificationFilterPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.S3NotificationFilterProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.S3NotificationFilterProperty>();\n    ret.addPropertyResult('s3Key', 'S3Key', CfnFunctionS3KeyFilterPropertyFromCloudFormation(properties.S3Key));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n     */\n    export interface SAMPolicyTemplateProperty {\n        /**\n         * `CfnFunction.SAMPolicyTemplateProperty.AMIDescribePolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly amiDescribePolicy?: CfnFunction.EmptySAMPTProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.SAMPolicyTemplateProperty.CloudFormationDescribeStacksPolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly cloudFormationDescribeStacksPolicy?: CfnFunction.EmptySAMPTProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.SAMPolicyTemplateProperty.CloudWatchPutMetricPolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly cloudWatchPutMetricPolicy?: CfnFunction.EmptySAMPTProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.SAMPolicyTemplateProperty.DynamoDBCrudPolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly dynamoDbCrudPolicy?: CfnFunction.TableSAMPTProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.SAMPolicyTemplateProperty.DynamoDBReadPolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly dynamoDbReadPolicy?: CfnFunction.TableSAMPTProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.SAMPolicyTemplateProperty.DynamoDBStreamReadPolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly dynamoDbStreamReadPolicy?: CfnFunction.TableStreamSAMPTProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.SAMPolicyTemplateProperty.EC2DescribePolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly ec2DescribePolicy?: CfnFunction.EmptySAMPTProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.SAMPolicyTemplateProperty.ElasticsearchHttpPostPolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly elasticsearchHttpPostPolicy?: CfnFunction.DomainSAMPTProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.SAMPolicyTemplateProperty.FilterLogEventsPolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly filterLogEventsPolicy?: CfnFunction.LogGroupSAMPTProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.SAMPolicyTemplateProperty.KMSDecryptPolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly kmsDecryptPolicy?: CfnFunction.KeySAMPTProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.SAMPolicyTemplateProperty.KinesisCrudPolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly kinesisCrudPolicy?: CfnFunction.StreamSAMPTProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.SAMPolicyTemplateProperty.KinesisStreamReadPolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly kinesisStreamReadPolicy?: CfnFunction.StreamSAMPTProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.SAMPolicyTemplateProperty.LambdaInvokePolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly lambdaInvokePolicy?: CfnFunction.FunctionSAMPTProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.SAMPolicyTemplateProperty.RekognitionDetectOnlyPolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly rekognitionDetectOnlyPolicy?: CfnFunction.EmptySAMPTProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.SAMPolicyTemplateProperty.RekognitionLabelsPolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly rekognitionLabelsPolicy?: CfnFunction.EmptySAMPTProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.SAMPolicyTemplateProperty.RekognitionNoDataAccessPolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly rekognitionNoDataAccessPolicy?: CfnFunction.CollectionSAMPTProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.SAMPolicyTemplateProperty.RekognitionReadPolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly rekognitionReadPolicy?: CfnFunction.CollectionSAMPTProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.SAMPolicyTemplateProperty.RekognitionWriteOnlyAccessPolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly rekognitionWriteOnlyAccessPolicy?: CfnFunction.CollectionSAMPTProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.SAMPolicyTemplateProperty.S3CrudPolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly s3CrudPolicy?: CfnFunction.BucketSAMPTProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.SAMPolicyTemplateProperty.S3ReadPolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly s3ReadPolicy?: CfnFunction.BucketSAMPTProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.SAMPolicyTemplateProperty.SESBulkTemplatedCrudPolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly sesBulkTemplatedCrudPolicy?: CfnFunction.IdentitySAMPTProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.SAMPolicyTemplateProperty.SESCrudPolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly sesCrudPolicy?: CfnFunction.IdentitySAMPTProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.SAMPolicyTemplateProperty.SESEmailTemplateCrudPolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly sesEmailTemplateCrudPolicy?: CfnFunction.EmptySAMPTProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.SAMPolicyTemplateProperty.SESSendBouncePolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly sesSendBouncePolicy?: CfnFunction.IdentitySAMPTProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.SAMPolicyTemplateProperty.SNSCrudPolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly snsCrudPolicy?: CfnFunction.TopicSAMPTProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.SAMPolicyTemplateProperty.SNSPublishMessagePolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly snsPublishMessagePolicy?: CfnFunction.TopicSAMPTProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.SAMPolicyTemplateProperty.SQSPollerPolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly sqsPollerPolicy?: CfnFunction.QueueSAMPTProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.SAMPolicyTemplateProperty.SQSSendMessagePolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly sqsSendMessagePolicy?: CfnFunction.QueueSAMPTProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.SAMPolicyTemplateProperty.StepFunctionsExecutionPolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly stepFunctionsExecutionPolicy?: CfnFunction.StateMachineSAMPTProperty | cdk.IResolvable;\n        /**\n         * `CfnFunction.SAMPolicyTemplateProperty.VPCAccessPolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly vpcAccessPolicy?: CfnFunction.EmptySAMPTProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `SAMPolicyTemplateProperty`\n *\n * @param properties - the TypeScript properties of a `SAMPolicyTemplateProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_SAMPolicyTemplatePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('amiDescribePolicy', CfnFunction_EmptySAMPTPropertyValidator)(properties.amiDescribePolicy));\n    errors.collect(cdk.propertyValidator('cloudFormationDescribeStacksPolicy', CfnFunction_EmptySAMPTPropertyValidator)(properties.cloudFormationDescribeStacksPolicy));\n    errors.collect(cdk.propertyValidator('cloudWatchPutMetricPolicy', CfnFunction_EmptySAMPTPropertyValidator)(properties.cloudWatchPutMetricPolicy));\n    errors.collect(cdk.propertyValidator('dynamoDbCrudPolicy', CfnFunction_TableSAMPTPropertyValidator)(properties.dynamoDbCrudPolicy));\n    errors.collect(cdk.propertyValidator('dynamoDbReadPolicy', CfnFunction_TableSAMPTPropertyValidator)(properties.dynamoDbReadPolicy));\n    errors.collect(cdk.propertyValidator('dynamoDbStreamReadPolicy', CfnFunction_TableStreamSAMPTPropertyValidator)(properties.dynamoDbStreamReadPolicy));\n    errors.collect(cdk.propertyValidator('ec2DescribePolicy', CfnFunction_EmptySAMPTPropertyValidator)(properties.ec2DescribePolicy));\n    errors.collect(cdk.propertyValidator('elasticsearchHttpPostPolicy', CfnFunction_DomainSAMPTPropertyValidator)(properties.elasticsearchHttpPostPolicy));\n    errors.collect(cdk.propertyValidator('filterLogEventsPolicy', CfnFunction_LogGroupSAMPTPropertyValidator)(properties.filterLogEventsPolicy));\n    errors.collect(cdk.propertyValidator('kmsDecryptPolicy', CfnFunction_KeySAMPTPropertyValidator)(properties.kmsDecryptPolicy));\n    errors.collect(cdk.propertyValidator('kinesisCrudPolicy', CfnFunction_StreamSAMPTPropertyValidator)(properties.kinesisCrudPolicy));\n    errors.collect(cdk.propertyValidator('kinesisStreamReadPolicy', CfnFunction_StreamSAMPTPropertyValidator)(properties.kinesisStreamReadPolicy));\n    errors.collect(cdk.propertyValidator('lambdaInvokePolicy', CfnFunction_FunctionSAMPTPropertyValidator)(properties.lambdaInvokePolicy));\n    errors.collect(cdk.propertyValidator('rekognitionDetectOnlyPolicy', CfnFunction_EmptySAMPTPropertyValidator)(properties.rekognitionDetectOnlyPolicy));\n    errors.collect(cdk.propertyValidator('rekognitionLabelsPolicy', CfnFunction_EmptySAMPTPropertyValidator)(properties.rekognitionLabelsPolicy));\n    errors.collect(cdk.propertyValidator('rekognitionNoDataAccessPolicy', CfnFunction_CollectionSAMPTPropertyValidator)(properties.rekognitionNoDataAccessPolicy));\n    errors.collect(cdk.propertyValidator('rekognitionReadPolicy', CfnFunction_CollectionSAMPTPropertyValidator)(properties.rekognitionReadPolicy));\n    errors.collect(cdk.propertyValidator('rekognitionWriteOnlyAccessPolicy', CfnFunction_CollectionSAMPTPropertyValidator)(properties.rekognitionWriteOnlyAccessPolicy));\n    errors.collect(cdk.propertyValidator('s3CrudPolicy', CfnFunction_BucketSAMPTPropertyValidator)(properties.s3CrudPolicy));\n    errors.collect(cdk.propertyValidator('s3ReadPolicy', CfnFunction_BucketSAMPTPropertyValidator)(properties.s3ReadPolicy));\n    errors.collect(cdk.propertyValidator('sesBulkTemplatedCrudPolicy', CfnFunction_IdentitySAMPTPropertyValidator)(properties.sesBulkTemplatedCrudPolicy));\n    errors.collect(cdk.propertyValidator('sesCrudPolicy', CfnFunction_IdentitySAMPTPropertyValidator)(properties.sesCrudPolicy));\n    errors.collect(cdk.propertyValidator('sesEmailTemplateCrudPolicy', CfnFunction_EmptySAMPTPropertyValidator)(properties.sesEmailTemplateCrudPolicy));\n    errors.collect(cdk.propertyValidator('sesSendBouncePolicy', CfnFunction_IdentitySAMPTPropertyValidator)(properties.sesSendBouncePolicy));\n    errors.collect(cdk.propertyValidator('snsCrudPolicy', CfnFunction_TopicSAMPTPropertyValidator)(properties.snsCrudPolicy));\n    errors.collect(cdk.propertyValidator('snsPublishMessagePolicy', CfnFunction_TopicSAMPTPropertyValidator)(properties.snsPublishMessagePolicy));\n    errors.collect(cdk.propertyValidator('sqsPollerPolicy', CfnFunction_QueueSAMPTPropertyValidator)(properties.sqsPollerPolicy));\n    errors.collect(cdk.propertyValidator('sqsSendMessagePolicy', CfnFunction_QueueSAMPTPropertyValidator)(properties.sqsSendMessagePolicy));\n    errors.collect(cdk.propertyValidator('stepFunctionsExecutionPolicy', CfnFunction_StateMachineSAMPTPropertyValidator)(properties.stepFunctionsExecutionPolicy));\n    errors.collect(cdk.propertyValidator('vpcAccessPolicy', CfnFunction_EmptySAMPTPropertyValidator)(properties.vpcAccessPolicy));\n    return errors.wrap('supplied properties not correct for \"SAMPolicyTemplateProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.SAMPolicyTemplate` resource\n *\n * @param properties - the TypeScript properties of a `SAMPolicyTemplateProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.SAMPolicyTemplate` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionSAMPolicyTemplatePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_SAMPolicyTemplatePropertyValidator(properties).assertSuccess();\n    return {\n        AMIDescribePolicy: cfnFunctionEmptySAMPTPropertyToCloudFormation(properties.amiDescribePolicy),\n        CloudFormationDescribeStacksPolicy: cfnFunctionEmptySAMPTPropertyToCloudFormation(properties.cloudFormationDescribeStacksPolicy),\n        CloudWatchPutMetricPolicy: cfnFunctionEmptySAMPTPropertyToCloudFormation(properties.cloudWatchPutMetricPolicy),\n        DynamoDBCrudPolicy: cfnFunctionTableSAMPTPropertyToCloudFormation(properties.dynamoDbCrudPolicy),\n        DynamoDBReadPolicy: cfnFunctionTableSAMPTPropertyToCloudFormation(properties.dynamoDbReadPolicy),\n        DynamoDBStreamReadPolicy: cfnFunctionTableStreamSAMPTPropertyToCloudFormation(properties.dynamoDbStreamReadPolicy),\n        EC2DescribePolicy: cfnFunctionEmptySAMPTPropertyToCloudFormation(properties.ec2DescribePolicy),\n        ElasticsearchHttpPostPolicy: cfnFunctionDomainSAMPTPropertyToCloudFormation(properties.elasticsearchHttpPostPolicy),\n        FilterLogEventsPolicy: cfnFunctionLogGroupSAMPTPropertyToCloudFormation(properties.filterLogEventsPolicy),\n        KMSDecryptPolicy: cfnFunctionKeySAMPTPropertyToCloudFormation(properties.kmsDecryptPolicy),\n        KinesisCrudPolicy: cfnFunctionStreamSAMPTPropertyToCloudFormation(properties.kinesisCrudPolicy),\n        KinesisStreamReadPolicy: cfnFunctionStreamSAMPTPropertyToCloudFormation(properties.kinesisStreamReadPolicy),\n        LambdaInvokePolicy: cfnFunctionFunctionSAMPTPropertyToCloudFormation(properties.lambdaInvokePolicy),\n        RekognitionDetectOnlyPolicy: cfnFunctionEmptySAMPTPropertyToCloudFormation(properties.rekognitionDetectOnlyPolicy),\n        RekognitionLabelsPolicy: cfnFunctionEmptySAMPTPropertyToCloudFormation(properties.rekognitionLabelsPolicy),\n        RekognitionNoDataAccessPolicy: cfnFunctionCollectionSAMPTPropertyToCloudFormation(properties.rekognitionNoDataAccessPolicy),\n        RekognitionReadPolicy: cfnFunctionCollectionSAMPTPropertyToCloudFormation(properties.rekognitionReadPolicy),\n        RekognitionWriteOnlyAccessPolicy: cfnFunctionCollectionSAMPTPropertyToCloudFormation(properties.rekognitionWriteOnlyAccessPolicy),\n        S3CrudPolicy: cfnFunctionBucketSAMPTPropertyToCloudFormation(properties.s3CrudPolicy),\n        S3ReadPolicy: cfnFunctionBucketSAMPTPropertyToCloudFormation(properties.s3ReadPolicy),\n        SESBulkTemplatedCrudPolicy: cfnFunctionIdentitySAMPTPropertyToCloudFormation(properties.sesBulkTemplatedCrudPolicy),\n        SESCrudPolicy: cfnFunctionIdentitySAMPTPropertyToCloudFormation(properties.sesCrudPolicy),\n        SESEmailTemplateCrudPolicy: cfnFunctionEmptySAMPTPropertyToCloudFormation(properties.sesEmailTemplateCrudPolicy),\n        SESSendBouncePolicy: cfnFunctionIdentitySAMPTPropertyToCloudFormation(properties.sesSendBouncePolicy),\n        SNSCrudPolicy: cfnFunctionTopicSAMPTPropertyToCloudFormation(properties.snsCrudPolicy),\n        SNSPublishMessagePolicy: cfnFunctionTopicSAMPTPropertyToCloudFormation(properties.snsPublishMessagePolicy),\n        SQSPollerPolicy: cfnFunctionQueueSAMPTPropertyToCloudFormation(properties.sqsPollerPolicy),\n        SQSSendMessagePolicy: cfnFunctionQueueSAMPTPropertyToCloudFormation(properties.sqsSendMessagePolicy),\n        StepFunctionsExecutionPolicy: cfnFunctionStateMachineSAMPTPropertyToCloudFormation(properties.stepFunctionsExecutionPolicy),\n        VPCAccessPolicy: cfnFunctionEmptySAMPTPropertyToCloudFormation(properties.vpcAccessPolicy),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionSAMPolicyTemplatePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.SAMPolicyTemplateProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.SAMPolicyTemplateProperty>();\n    ret.addPropertyResult('amiDescribePolicy', 'AMIDescribePolicy', properties.AMIDescribePolicy != null ? CfnFunctionEmptySAMPTPropertyFromCloudFormation(properties.AMIDescribePolicy) : undefined);\n    ret.addPropertyResult('cloudFormationDescribeStacksPolicy', 'CloudFormationDescribeStacksPolicy', properties.CloudFormationDescribeStacksPolicy != null ? CfnFunctionEmptySAMPTPropertyFromCloudFormation(properties.CloudFormationDescribeStacksPolicy) : undefined);\n    ret.addPropertyResult('cloudWatchPutMetricPolicy', 'CloudWatchPutMetricPolicy', properties.CloudWatchPutMetricPolicy != null ? CfnFunctionEmptySAMPTPropertyFromCloudFormation(properties.CloudWatchPutMetricPolicy) : undefined);\n    ret.addPropertyResult('dynamoDbCrudPolicy', 'DynamoDBCrudPolicy', properties.DynamoDBCrudPolicy != null ? CfnFunctionTableSAMPTPropertyFromCloudFormation(properties.DynamoDBCrudPolicy) : undefined);\n    ret.addPropertyResult('dynamoDbReadPolicy', 'DynamoDBReadPolicy', properties.DynamoDBReadPolicy != null ? CfnFunctionTableSAMPTPropertyFromCloudFormation(properties.DynamoDBReadPolicy) : undefined);\n    ret.addPropertyResult('dynamoDbStreamReadPolicy', 'DynamoDBStreamReadPolicy', properties.DynamoDBStreamReadPolicy != null ? CfnFunctionTableStreamSAMPTPropertyFromCloudFormation(properties.DynamoDBStreamReadPolicy) : undefined);\n    ret.addPropertyResult('ec2DescribePolicy', 'EC2DescribePolicy', properties.EC2DescribePolicy != null ? CfnFunctionEmptySAMPTPropertyFromCloudFormation(properties.EC2DescribePolicy) : undefined);\n    ret.addPropertyResult('elasticsearchHttpPostPolicy', 'ElasticsearchHttpPostPolicy', properties.ElasticsearchHttpPostPolicy != null ? CfnFunctionDomainSAMPTPropertyFromCloudFormation(properties.ElasticsearchHttpPostPolicy) : undefined);\n    ret.addPropertyResult('filterLogEventsPolicy', 'FilterLogEventsPolicy', properties.FilterLogEventsPolicy != null ? CfnFunctionLogGroupSAMPTPropertyFromCloudFormation(properties.FilterLogEventsPolicy) : undefined);\n    ret.addPropertyResult('kmsDecryptPolicy', 'KMSDecryptPolicy', properties.KMSDecryptPolicy != null ? CfnFunctionKeySAMPTPropertyFromCloudFormation(properties.KMSDecryptPolicy) : undefined);\n    ret.addPropertyResult('kinesisCrudPolicy', 'KinesisCrudPolicy', properties.KinesisCrudPolicy != null ? CfnFunctionStreamSAMPTPropertyFromCloudFormation(properties.KinesisCrudPolicy) : undefined);\n    ret.addPropertyResult('kinesisStreamReadPolicy', 'KinesisStreamReadPolicy', properties.KinesisStreamReadPolicy != null ? CfnFunctionStreamSAMPTPropertyFromCloudFormation(properties.KinesisStreamReadPolicy) : undefined);\n    ret.addPropertyResult('lambdaInvokePolicy', 'LambdaInvokePolicy', properties.LambdaInvokePolicy != null ? CfnFunctionFunctionSAMPTPropertyFromCloudFormation(properties.LambdaInvokePolicy) : undefined);\n    ret.addPropertyResult('rekognitionDetectOnlyPolicy', 'RekognitionDetectOnlyPolicy', properties.RekognitionDetectOnlyPolicy != null ? CfnFunctionEmptySAMPTPropertyFromCloudFormation(properties.RekognitionDetectOnlyPolicy) : undefined);\n    ret.addPropertyResult('rekognitionLabelsPolicy', 'RekognitionLabelsPolicy', properties.RekognitionLabelsPolicy != null ? CfnFunctionEmptySAMPTPropertyFromCloudFormation(properties.RekognitionLabelsPolicy) : undefined);\n    ret.addPropertyResult('rekognitionNoDataAccessPolicy', 'RekognitionNoDataAccessPolicy', properties.RekognitionNoDataAccessPolicy != null ? CfnFunctionCollectionSAMPTPropertyFromCloudFormation(properties.RekognitionNoDataAccessPolicy) : undefined);\n    ret.addPropertyResult('rekognitionReadPolicy', 'RekognitionReadPolicy', properties.RekognitionReadPolicy != null ? CfnFunctionCollectionSAMPTPropertyFromCloudFormation(properties.RekognitionReadPolicy) : undefined);\n    ret.addPropertyResult('rekognitionWriteOnlyAccessPolicy', 'RekognitionWriteOnlyAccessPolicy', properties.RekognitionWriteOnlyAccessPolicy != null ? CfnFunctionCollectionSAMPTPropertyFromCloudFormation(properties.RekognitionWriteOnlyAccessPolicy) : undefined);\n    ret.addPropertyResult('s3CrudPolicy', 'S3CrudPolicy', properties.S3CrudPolicy != null ? CfnFunctionBucketSAMPTPropertyFromCloudFormation(properties.S3CrudPolicy) : undefined);\n    ret.addPropertyResult('s3ReadPolicy', 'S3ReadPolicy', properties.S3ReadPolicy != null ? CfnFunctionBucketSAMPTPropertyFromCloudFormation(properties.S3ReadPolicy) : undefined);\n    ret.addPropertyResult('sesBulkTemplatedCrudPolicy', 'SESBulkTemplatedCrudPolicy', properties.SESBulkTemplatedCrudPolicy != null ? CfnFunctionIdentitySAMPTPropertyFromCloudFormation(properties.SESBulkTemplatedCrudPolicy) : undefined);\n    ret.addPropertyResult('sesCrudPolicy', 'SESCrudPolicy', properties.SESCrudPolicy != null ? CfnFunctionIdentitySAMPTPropertyFromCloudFormation(properties.SESCrudPolicy) : undefined);\n    ret.addPropertyResult('sesEmailTemplateCrudPolicy', 'SESEmailTemplateCrudPolicy', properties.SESEmailTemplateCrudPolicy != null ? CfnFunctionEmptySAMPTPropertyFromCloudFormation(properties.SESEmailTemplateCrudPolicy) : undefined);\n    ret.addPropertyResult('sesSendBouncePolicy', 'SESSendBouncePolicy', properties.SESSendBouncePolicy != null ? CfnFunctionIdentitySAMPTPropertyFromCloudFormation(properties.SESSendBouncePolicy) : undefined);\n    ret.addPropertyResult('snsCrudPolicy', 'SNSCrudPolicy', properties.SNSCrudPolicy != null ? CfnFunctionTopicSAMPTPropertyFromCloudFormation(properties.SNSCrudPolicy) : undefined);\n    ret.addPropertyResult('snsPublishMessagePolicy', 'SNSPublishMessagePolicy', properties.SNSPublishMessagePolicy != null ? CfnFunctionTopicSAMPTPropertyFromCloudFormation(properties.SNSPublishMessagePolicy) : undefined);\n    ret.addPropertyResult('sqsPollerPolicy', 'SQSPollerPolicy', properties.SQSPollerPolicy != null ? CfnFunctionQueueSAMPTPropertyFromCloudFormation(properties.SQSPollerPolicy) : undefined);\n    ret.addPropertyResult('sqsSendMessagePolicy', 'SQSSendMessagePolicy', properties.SQSSendMessagePolicy != null ? CfnFunctionQueueSAMPTPropertyFromCloudFormation(properties.SQSSendMessagePolicy) : undefined);\n    ret.addPropertyResult('stepFunctionsExecutionPolicy', 'StepFunctionsExecutionPolicy', properties.StepFunctionsExecutionPolicy != null ? CfnFunctionStateMachineSAMPTPropertyFromCloudFormation(properties.StepFunctionsExecutionPolicy) : undefined);\n    ret.addPropertyResult('vpcAccessPolicy', 'VPCAccessPolicy', properties.VPCAccessPolicy != null ? CfnFunctionEmptySAMPTPropertyFromCloudFormation(properties.VPCAccessPolicy) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#sns\n     */\n    export interface SNSEventProperty {\n        /**\n         * `CfnFunction.SNSEventProperty.Topic`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#sns\n         */\n        readonly topic: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `SNSEventProperty`\n *\n * @param properties - the TypeScript properties of a `SNSEventProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_SNSEventPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('topic', cdk.requiredValidator)(properties.topic));\n    errors.collect(cdk.propertyValidator('topic', cdk.validateString)(properties.topic));\n    return errors.wrap('supplied properties not correct for \"SNSEventProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.SNSEvent` resource\n *\n * @param properties - the TypeScript properties of a `SNSEventProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.SNSEvent` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionSNSEventPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_SNSEventPropertyValidator(properties).assertSuccess();\n    return {\n        Topic: cdk.stringToCloudFormation(properties.topic),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionSNSEventPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.SNSEventProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.SNSEventProperty>();\n    ret.addPropertyResult('topic', 'Topic', cfn_parse.FromCloudFormation.getString(properties.Topic));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#sqs\n     */\n    export interface SQSEventProperty {\n        /**\n         * `CfnFunction.SQSEventProperty.BatchSize`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#sqs\n         */\n        readonly batchSize?: number;\n        /**\n         * `CfnFunction.SQSEventProperty.Enabled`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#sqs\n         */\n        readonly enabled?: boolean | cdk.IResolvable;\n        /**\n         * `CfnFunction.SQSEventProperty.Queue`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#sqs\n         */\n        readonly queue: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `SQSEventProperty`\n *\n * @param properties - the TypeScript properties of a `SQSEventProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_SQSEventPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('batchSize', cdk.validateNumber)(properties.batchSize));\n    errors.collect(cdk.propertyValidator('enabled', cdk.validateBoolean)(properties.enabled));\n    errors.collect(cdk.propertyValidator('queue', cdk.requiredValidator)(properties.queue));\n    errors.collect(cdk.propertyValidator('queue', cdk.validateString)(properties.queue));\n    return errors.wrap('supplied properties not correct for \"SQSEventProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.SQSEvent` resource\n *\n * @param properties - the TypeScript properties of a `SQSEventProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.SQSEvent` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionSQSEventPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_SQSEventPropertyValidator(properties).assertSuccess();\n    return {\n        BatchSize: cdk.numberToCloudFormation(properties.batchSize),\n        Enabled: cdk.booleanToCloudFormation(properties.enabled),\n        Queue: cdk.stringToCloudFormation(properties.queue),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionSQSEventPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.SQSEventProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.SQSEventProperty>();\n    ret.addPropertyResult('batchSize', 'BatchSize', properties.BatchSize != null ? cfn_parse.FromCloudFormation.getNumber(properties.BatchSize) : undefined);\n    ret.addPropertyResult('enabled', 'Enabled', properties.Enabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.Enabled) : undefined);\n    ret.addPropertyResult('queue', 'Queue', cfn_parse.FromCloudFormation.getString(properties.Queue));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#schedule\n     */\n    export interface ScheduleEventProperty {\n        /**\n         * `CfnFunction.ScheduleEventProperty.Input`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#schedule\n         */\n        readonly input?: string;\n        /**\n         * `CfnFunction.ScheduleEventProperty.Schedule`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#schedule\n         */\n        readonly schedule: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ScheduleEventProperty`\n *\n * @param properties - the TypeScript properties of a `ScheduleEventProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_ScheduleEventPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('input', cdk.validateString)(properties.input));\n    errors.collect(cdk.propertyValidator('schedule', cdk.requiredValidator)(properties.schedule));\n    errors.collect(cdk.propertyValidator('schedule', cdk.validateString)(properties.schedule));\n    return errors.wrap('supplied properties not correct for \"ScheduleEventProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.ScheduleEvent` resource\n *\n * @param properties - the TypeScript properties of a `ScheduleEventProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.ScheduleEvent` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionScheduleEventPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_ScheduleEventPropertyValidator(properties).assertSuccess();\n    return {\n        Input: cdk.stringToCloudFormation(properties.input),\n        Schedule: cdk.stringToCloudFormation(properties.schedule),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionScheduleEventPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.ScheduleEventProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.ScheduleEventProperty>();\n    ret.addPropertyResult('input', 'Input', properties.Input != null ? cfn_parse.FromCloudFormation.getString(properties.Input) : undefined);\n    ret.addPropertyResult('schedule', 'Schedule', cfn_parse.FromCloudFormation.getString(properties.Schedule));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n     */\n    export interface StateMachineSAMPTProperty {\n        /**\n         * `CfnFunction.StateMachineSAMPTProperty.StateMachineName`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly stateMachineName: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `StateMachineSAMPTProperty`\n *\n * @param properties - the TypeScript properties of a `StateMachineSAMPTProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_StateMachineSAMPTPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('stateMachineName', cdk.requiredValidator)(properties.stateMachineName));\n    errors.collect(cdk.propertyValidator('stateMachineName', cdk.validateString)(properties.stateMachineName));\n    return errors.wrap('supplied properties not correct for \"StateMachineSAMPTProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.StateMachineSAMPT` resource\n *\n * @param properties - the TypeScript properties of a `StateMachineSAMPTProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.StateMachineSAMPT` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionStateMachineSAMPTPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_StateMachineSAMPTPropertyValidator(properties).assertSuccess();\n    return {\n        StateMachineName: cdk.stringToCloudFormation(properties.stateMachineName),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionStateMachineSAMPTPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.StateMachineSAMPTProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.StateMachineSAMPTProperty>();\n    ret.addPropertyResult('stateMachineName', 'StateMachineName', cfn_parse.FromCloudFormation.getString(properties.StateMachineName));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n     */\n    export interface StreamSAMPTProperty {\n        /**\n         * `CfnFunction.StreamSAMPTProperty.StreamName`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly streamName: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `StreamSAMPTProperty`\n *\n * @param properties - the TypeScript properties of a `StreamSAMPTProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_StreamSAMPTPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('streamName', cdk.requiredValidator)(properties.streamName));\n    errors.collect(cdk.propertyValidator('streamName', cdk.validateString)(properties.streamName));\n    return errors.wrap('supplied properties not correct for \"StreamSAMPTProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.StreamSAMPT` resource\n *\n * @param properties - the TypeScript properties of a `StreamSAMPTProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.StreamSAMPT` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionStreamSAMPTPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_StreamSAMPTPropertyValidator(properties).assertSuccess();\n    return {\n        StreamName: cdk.stringToCloudFormation(properties.streamName),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionStreamSAMPTPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.StreamSAMPTProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.StreamSAMPTProperty>();\n    ret.addPropertyResult('streamName', 'StreamName', cfn_parse.FromCloudFormation.getString(properties.StreamName));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n     */\n    export interface TableSAMPTProperty {\n        /**\n         * `CfnFunction.TableSAMPTProperty.TableName`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly tableName: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `TableSAMPTProperty`\n *\n * @param properties - the TypeScript properties of a `TableSAMPTProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_TableSAMPTPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('tableName', cdk.requiredValidator)(properties.tableName));\n    errors.collect(cdk.propertyValidator('tableName', cdk.validateString)(properties.tableName));\n    return errors.wrap('supplied properties not correct for \"TableSAMPTProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.TableSAMPT` resource\n *\n * @param properties - the TypeScript properties of a `TableSAMPTProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.TableSAMPT` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionTableSAMPTPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_TableSAMPTPropertyValidator(properties).assertSuccess();\n    return {\n        TableName: cdk.stringToCloudFormation(properties.tableName),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionTableSAMPTPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.TableSAMPTProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.TableSAMPTProperty>();\n    ret.addPropertyResult('tableName', 'TableName', cfn_parse.FromCloudFormation.getString(properties.TableName));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n     */\n    export interface TableStreamSAMPTProperty {\n        /**\n         * `CfnFunction.TableStreamSAMPTProperty.StreamName`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly streamName: string;\n        /**\n         * `CfnFunction.TableStreamSAMPTProperty.TableName`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly tableName: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `TableStreamSAMPTProperty`\n *\n * @param properties - the TypeScript properties of a `TableStreamSAMPTProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_TableStreamSAMPTPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('streamName', cdk.requiredValidator)(properties.streamName));\n    errors.collect(cdk.propertyValidator('streamName', cdk.validateString)(properties.streamName));\n    errors.collect(cdk.propertyValidator('tableName', cdk.requiredValidator)(properties.tableName));\n    errors.collect(cdk.propertyValidator('tableName', cdk.validateString)(properties.tableName));\n    return errors.wrap('supplied properties not correct for \"TableStreamSAMPTProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.TableStreamSAMPT` resource\n *\n * @param properties - the TypeScript properties of a `TableStreamSAMPTProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.TableStreamSAMPT` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionTableStreamSAMPTPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_TableStreamSAMPTPropertyValidator(properties).assertSuccess();\n    return {\n        StreamName: cdk.stringToCloudFormation(properties.streamName),\n        TableName: cdk.stringToCloudFormation(properties.tableName),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionTableStreamSAMPTPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.TableStreamSAMPTProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.TableStreamSAMPTProperty>();\n    ret.addPropertyResult('streamName', 'StreamName', cfn_parse.FromCloudFormation.getString(properties.StreamName));\n    ret.addPropertyResult('tableName', 'TableName', cfn_parse.FromCloudFormation.getString(properties.TableName));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n     */\n    export interface TopicSAMPTProperty {\n        /**\n         * `CfnFunction.TopicSAMPTProperty.TopicName`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly topicName: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `TopicSAMPTProperty`\n *\n * @param properties - the TypeScript properties of a `TopicSAMPTProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_TopicSAMPTPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('topicName', cdk.requiredValidator)(properties.topicName));\n    errors.collect(cdk.propertyValidator('topicName', cdk.validateString)(properties.topicName));\n    return errors.wrap('supplied properties not correct for \"TopicSAMPTProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.TopicSAMPT` resource\n *\n * @param properties - the TypeScript properties of a `TopicSAMPTProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.TopicSAMPT` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionTopicSAMPTPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_TopicSAMPTPropertyValidator(properties).assertSuccess();\n    return {\n        TopicName: cdk.stringToCloudFormation(properties.topicName),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionTopicSAMPTPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.TopicSAMPTProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.TopicSAMPTProperty>();\n    ret.addPropertyResult('topicName', 'TopicName', cfn_parse.FromCloudFormation.getString(properties.TopicName));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnFunction {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html\n     */\n    export interface VpcConfigProperty {\n        /**\n         * `CfnFunction.VpcConfigProperty.SecurityGroupIds`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html\n         */\n        readonly securityGroupIds: string[];\n        /**\n         * `CfnFunction.VpcConfigProperty.SubnetIds`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html\n         */\n        readonly subnetIds: string[];\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `VpcConfigProperty`\n *\n * @param properties - the TypeScript properties of a `VpcConfigProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnFunction_VpcConfigPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('securityGroupIds', cdk.requiredValidator)(properties.securityGroupIds));\n    errors.collect(cdk.propertyValidator('securityGroupIds', cdk.listValidator(cdk.validateString))(properties.securityGroupIds));\n    errors.collect(cdk.propertyValidator('subnetIds', cdk.requiredValidator)(properties.subnetIds));\n    errors.collect(cdk.propertyValidator('subnetIds', cdk.listValidator(cdk.validateString))(properties.subnetIds));\n    return errors.wrap('supplied properties not correct for \"VpcConfigProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::Function.VpcConfig` resource\n *\n * @param properties - the TypeScript properties of a `VpcConfigProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::Function.VpcConfig` resource.\n */\n// @ts-ignore TS6133\nfunction cfnFunctionVpcConfigPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnFunction_VpcConfigPropertyValidator(properties).assertSuccess();\n    return {\n        SecurityGroupIds: cdk.listMapper(cdk.stringToCloudFormation)(properties.securityGroupIds),\n        SubnetIds: cdk.listMapper(cdk.stringToCloudFormation)(properties.subnetIds),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnFunctionVpcConfigPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnFunction.VpcConfigProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnFunction.VpcConfigProperty>();\n    ret.addPropertyResult('securityGroupIds', 'SecurityGroupIds', cfn_parse.FromCloudFormation.getStringArray(properties.SecurityGroupIds));\n    ret.addPropertyResult('subnetIds', 'SubnetIds', cfn_parse.FromCloudFormation.getStringArray(properties.SubnetIds));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnHttpApi`\n *\n * @struct\n * @stability external\n *\n * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesshttpapi\n */\nexport interface CfnHttpApiProps {\n\n    /**\n     * `AWS::Serverless::HttpApi.AccessLogSetting`\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesshttpapi\n     */\n    readonly accessLogSetting?: CfnHttpApi.AccessLogSettingProperty | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::HttpApi.Auth`\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesshttpapi\n     */\n    readonly auth?: CfnHttpApi.HttpApiAuthProperty | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::HttpApi.CorsConfiguration`\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesshttpapi\n     */\n    readonly corsConfiguration?: CfnHttpApi.CorsConfigurationObjectProperty | boolean | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::HttpApi.DefaultRouteSettings`\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesshttpapi\n     */\n    readonly defaultRouteSettings?: CfnHttpApi.RouteSettingsProperty | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::HttpApi.DefinitionBody`\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesshttpapi\n     */\n    readonly definitionBody?: any | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::HttpApi.DefinitionUri`\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesshttpapi\n     */\n    readonly definitionUri?: CfnHttpApi.S3LocationProperty | string | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::HttpApi.Description`\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesshttpapi\n     */\n    readonly description?: string;\n\n    /**\n     * `AWS::Serverless::HttpApi.DisableExecuteApiEndpoint`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-httpapi.html#sam-httpapi-disableexecuteapiendpoint\n     */\n    readonly disableExecuteApiEndpoint?: boolean | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::HttpApi.Domain`\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesshttpapi\n     */\n    readonly domain?: CfnHttpApi.HttpApiDomainConfigurationProperty | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::HttpApi.FailOnWarnings`\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesshttpapi\n     */\n    readonly failOnWarnings?: boolean | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::HttpApi.RouteSettings`\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesshttpapi\n     */\n    readonly routeSettings?: CfnHttpApi.RouteSettingsProperty | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::HttpApi.StageName`\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesshttpapi\n     */\n    readonly stageName?: string;\n\n    /**\n     * `AWS::Serverless::HttpApi.StageVariables`\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesshttpapi\n     */\n    readonly stageVariables?: { [key: string]: (string) } | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::HttpApi.Tags`\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesshttpapi\n     */\n    readonly tags?: { [key: string]: (string) };\n}\n\n/**\n * Determine whether the given properties match those of a `CfnHttpApiProps`\n *\n * @param properties - the TypeScript properties of a `CfnHttpApiProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnHttpApiPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('accessLogSetting', CfnHttpApi_AccessLogSettingPropertyValidator)(properties.accessLogSetting));\n    errors.collect(cdk.propertyValidator('auth', CfnHttpApi_HttpApiAuthPropertyValidator)(properties.auth));\n    errors.collect(cdk.propertyValidator('corsConfiguration', cdk.unionValidator(CfnHttpApi_CorsConfigurationObjectPropertyValidator, cdk.validateBoolean))(properties.corsConfiguration));\n    errors.collect(cdk.propertyValidator('defaultRouteSettings', CfnHttpApi_RouteSettingsPropertyValidator)(properties.defaultRouteSettings));\n    errors.collect(cdk.propertyValidator('definitionBody', cdk.validateObject)(properties.definitionBody));\n    errors.collect(cdk.propertyValidator('definitionUri', cdk.unionValidator(CfnHttpApi_S3LocationPropertyValidator, cdk.validateString))(properties.definitionUri));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('disableExecuteApiEndpoint', cdk.validateBoolean)(properties.disableExecuteApiEndpoint));\n    errors.collect(cdk.propertyValidator('domain', CfnHttpApi_HttpApiDomainConfigurationPropertyValidator)(properties.domain));\n    errors.collect(cdk.propertyValidator('failOnWarnings', cdk.validateBoolean)(properties.failOnWarnings));\n    errors.collect(cdk.propertyValidator('routeSettings', CfnHttpApi_RouteSettingsPropertyValidator)(properties.routeSettings));\n    errors.collect(cdk.propertyValidator('stageName', cdk.validateString)(properties.stageName));\n    errors.collect(cdk.propertyValidator('stageVariables', cdk.hashValidator(cdk.validateString))(properties.stageVariables));\n    errors.collect(cdk.propertyValidator('tags', cdk.hashValidator(cdk.validateString))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnHttpApiProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::HttpApi` resource\n *\n * @param properties - the TypeScript properties of a `CfnHttpApiProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::HttpApi` resource.\n */\n// @ts-ignore TS6133\nfunction cfnHttpApiPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnHttpApiPropsValidator(properties).assertSuccess();\n    return {\n        AccessLogSetting: cfnHttpApiAccessLogSettingPropertyToCloudFormation(properties.accessLogSetting),\n        Auth: cfnHttpApiHttpApiAuthPropertyToCloudFormation(properties.auth),\n        CorsConfiguration: cdk.unionMapper([CfnHttpApi_CorsConfigurationObjectPropertyValidator, cdk.validateBoolean], [cfnHttpApiCorsConfigurationObjectPropertyToCloudFormation, cdk.booleanToCloudFormation])(properties.corsConfiguration),\n        DefaultRouteSettings: cfnHttpApiRouteSettingsPropertyToCloudFormation(properties.defaultRouteSettings),\n        DefinitionBody: cdk.objectToCloudFormation(properties.definitionBody),\n        DefinitionUri: cdk.unionMapper([CfnHttpApi_S3LocationPropertyValidator, cdk.validateString], [cfnHttpApiS3LocationPropertyToCloudFormation, cdk.stringToCloudFormation])(properties.definitionUri),\n        Description: cdk.stringToCloudFormation(properties.description),\n        DisableExecuteApiEndpoint: cdk.booleanToCloudFormation(properties.disableExecuteApiEndpoint),\n        Domain: cfnHttpApiHttpApiDomainConfigurationPropertyToCloudFormation(properties.domain),\n        FailOnWarnings: cdk.booleanToCloudFormation(properties.failOnWarnings),\n        RouteSettings: cfnHttpApiRouteSettingsPropertyToCloudFormation(properties.routeSettings),\n        StageName: cdk.stringToCloudFormation(properties.stageName),\n        StageVariables: cdk.hashMapper(cdk.stringToCloudFormation)(properties.stageVariables),\n        Tags: cdk.hashMapper(cdk.stringToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnHttpApiPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnHttpApiProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnHttpApiProps>();\n    ret.addPropertyResult('accessLogSetting', 'AccessLogSetting', properties.AccessLogSetting != null ? CfnHttpApiAccessLogSettingPropertyFromCloudFormation(properties.AccessLogSetting) : undefined);\n    ret.addPropertyResult('auth', 'Auth', properties.Auth != null ? CfnHttpApiHttpApiAuthPropertyFromCloudFormation(properties.Auth) : undefined);\n    ret.addPropertyResult('corsConfiguration', 'CorsConfiguration', properties.CorsConfiguration != null ? cfn_parse.FromCloudFormation.getTypeUnion([CfnHttpApi_CorsConfigurationObjectPropertyValidator, cdk.validateBoolean], [CfnHttpApiCorsConfigurationObjectPropertyFromCloudFormation, cfn_parse.FromCloudFormation.getBoolean])(properties.CorsConfiguration) : undefined);\n    ret.addPropertyResult('defaultRouteSettings', 'DefaultRouteSettings', properties.DefaultRouteSettings != null ? CfnHttpApiRouteSettingsPropertyFromCloudFormation(properties.DefaultRouteSettings) : undefined);\n    ret.addPropertyResult('definitionBody', 'DefinitionBody', properties.DefinitionBody != null ? cfn_parse.FromCloudFormation.getAny(properties.DefinitionBody) : undefined);\n    ret.addPropertyResult('definitionUri', 'DefinitionUri', properties.DefinitionUri != null ? cfn_parse.FromCloudFormation.getTypeUnion([CfnHttpApi_S3LocationPropertyValidator, cdk.validateString], [CfnHttpApiS3LocationPropertyFromCloudFormation, cfn_parse.FromCloudFormation.getString])(properties.DefinitionUri) : undefined);\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('disableExecuteApiEndpoint', 'DisableExecuteApiEndpoint', properties.DisableExecuteApiEndpoint != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DisableExecuteApiEndpoint) : undefined);\n    ret.addPropertyResult('domain', 'Domain', properties.Domain != null ? CfnHttpApiHttpApiDomainConfigurationPropertyFromCloudFormation(properties.Domain) : undefined);\n    ret.addPropertyResult('failOnWarnings', 'FailOnWarnings', properties.FailOnWarnings != null ? cfn_parse.FromCloudFormation.getBoolean(properties.FailOnWarnings) : undefined);\n    ret.addPropertyResult('routeSettings', 'RouteSettings', properties.RouteSettings != null ? CfnHttpApiRouteSettingsPropertyFromCloudFormation(properties.RouteSettings) : undefined);\n    ret.addPropertyResult('stageName', 'StageName', properties.StageName != null ? cfn_parse.FromCloudFormation.getString(properties.StageName) : undefined);\n    ret.addPropertyResult('stageVariables', 'StageVariables', properties.StageVariables != null ? cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.StageVariables) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::Serverless::HttpApi`\n *\n *\n *\n * @cloudformationResource AWS::Serverless::HttpApi\n * @stability external\n *\n * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesshttpapi\n */\nexport class CfnHttpApi extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Serverless::HttpApi\";\n    /**\n     * The `Transform` a template must use in order to use this resource\n     */\n    public static readonly REQUIRED_TRANSFORM = \"AWS::Serverless-2016-10-31\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnHttpApi {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnHttpApiPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnHttpApi(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * `AWS::Serverless::HttpApi.AccessLogSetting`\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesshttpapi\n     */\n    public accessLogSetting: CfnHttpApi.AccessLogSettingProperty | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::HttpApi.Auth`\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesshttpapi\n     */\n    public auth: CfnHttpApi.HttpApiAuthProperty | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::HttpApi.CorsConfiguration`\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesshttpapi\n     */\n    public corsConfiguration: CfnHttpApi.CorsConfigurationObjectProperty | boolean | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::HttpApi.DefaultRouteSettings`\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesshttpapi\n     */\n    public defaultRouteSettings: CfnHttpApi.RouteSettingsProperty | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::HttpApi.DefinitionBody`\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesshttpapi\n     */\n    public definitionBody: any | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::HttpApi.DefinitionUri`\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesshttpapi\n     */\n    public definitionUri: CfnHttpApi.S3LocationProperty | string | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::HttpApi.Description`\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesshttpapi\n     */\n    public description: string | undefined;\n\n    /**\n     * `AWS::Serverless::HttpApi.DisableExecuteApiEndpoint`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-httpapi.html#sam-httpapi-disableexecuteapiendpoint\n     */\n    public disableExecuteApiEndpoint: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::HttpApi.Domain`\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesshttpapi\n     */\n    public domain: CfnHttpApi.HttpApiDomainConfigurationProperty | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::HttpApi.FailOnWarnings`\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesshttpapi\n     */\n    public failOnWarnings: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::HttpApi.RouteSettings`\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesshttpapi\n     */\n    public routeSettings: CfnHttpApi.RouteSettingsProperty | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::HttpApi.StageName`\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesshttpapi\n     */\n    public stageName: string | undefined;\n\n    /**\n     * `AWS::Serverless::HttpApi.StageVariables`\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesshttpapi\n     */\n    public stageVariables: { [key: string]: (string) } | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::HttpApi.Tags`\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesshttpapi\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::Serverless::HttpApi`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnHttpApiProps = {}) {\n        super(scope, id, { type: CfnHttpApi.CFN_RESOURCE_TYPE_NAME, properties: props });\n        // Automatically add the required transform\n        this.stack.addTransform(CfnHttpApi.REQUIRED_TRANSFORM);\n\n        this.accessLogSetting = props.accessLogSetting;\n        this.auth = props.auth;\n        this.corsConfiguration = props.corsConfiguration;\n        this.defaultRouteSettings = props.defaultRouteSettings;\n        this.definitionBody = props.definitionBody;\n        this.definitionUri = props.definitionUri;\n        this.description = props.description;\n        this.disableExecuteApiEndpoint = props.disableExecuteApiEndpoint;\n        this.domain = props.domain;\n        this.failOnWarnings = props.failOnWarnings;\n        this.routeSettings = props.routeSettings;\n        this.stageName = props.stageName;\n        this.stageVariables = props.stageVariables;\n        this.tags = new cdk.TagManager(cdk.TagType.MAP, \"AWS::Serverless::HttpApi\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnHttpApi.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            accessLogSetting: this.accessLogSetting,\n            auth: this.auth,\n            corsConfiguration: this.corsConfiguration,\n            defaultRouteSettings: this.defaultRouteSettings,\n            definitionBody: this.definitionBody,\n            definitionUri: this.definitionUri,\n            description: this.description,\n            disableExecuteApiEndpoint: this.disableExecuteApiEndpoint,\n            domain: this.domain,\n            failOnWarnings: this.failOnWarnings,\n            routeSettings: this.routeSettings,\n            stageName: this.stageName,\n            stageVariables: this.stageVariables,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnHttpApiPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnHttpApi {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-stage-accesslogsetting.html\n     */\n    export interface AccessLogSettingProperty {\n        /**\n         * `CfnHttpApi.AccessLogSettingProperty.DestinationArn`\n         *\n         * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-stage-accesslogsetting.html#cfn-apigateway-stage-accesslogsetting-destinationarn\n         */\n        readonly destinationArn?: string;\n        /**\n         * `CfnHttpApi.AccessLogSettingProperty.Format`\n         *\n         * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-stage-accesslogsetting.html#cfn-apigateway-stage-accesslogsetting-format\n         */\n        readonly format?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AccessLogSettingProperty`\n *\n * @param properties - the TypeScript properties of a `AccessLogSettingProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnHttpApi_AccessLogSettingPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('destinationArn', cdk.validateString)(properties.destinationArn));\n    errors.collect(cdk.propertyValidator('format', cdk.validateString)(properties.format));\n    return errors.wrap('supplied properties not correct for \"AccessLogSettingProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::HttpApi.AccessLogSetting` resource\n *\n * @param properties - the TypeScript properties of a `AccessLogSettingProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::HttpApi.AccessLogSetting` resource.\n */\n// @ts-ignore TS6133\nfunction cfnHttpApiAccessLogSettingPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnHttpApi_AccessLogSettingPropertyValidator(properties).assertSuccess();\n    return {\n        DestinationArn: cdk.stringToCloudFormation(properties.destinationArn),\n        Format: cdk.stringToCloudFormation(properties.format),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnHttpApiAccessLogSettingPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnHttpApi.AccessLogSettingProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnHttpApi.AccessLogSettingProperty>();\n    ret.addPropertyResult('destinationArn', 'DestinationArn', properties.DestinationArn != null ? cfn_parse.FromCloudFormation.getString(properties.DestinationArn) : undefined);\n    ret.addPropertyResult('format', 'Format', properties.Format != null ? cfn_parse.FromCloudFormation.getString(properties.Format) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnHttpApi {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#cors-configuration-object\n     */\n    export interface CorsConfigurationObjectProperty {\n        /**\n         * `CfnHttpApi.CorsConfigurationObjectProperty.AllowCredentials`\n         *\n         * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#cors-configuration-object\n         */\n        readonly allowCredentials?: boolean | cdk.IResolvable;\n        /**\n         * `CfnHttpApi.CorsConfigurationObjectProperty.AllowHeaders`\n         *\n         * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#cors-configuration-object\n         */\n        readonly allowHeaders?: string;\n        /**\n         * `CfnHttpApi.CorsConfigurationObjectProperty.AllowMethods`\n         *\n         * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#cors-configuration-object\n         */\n        readonly allowMethods?: string;\n        /**\n         * `CfnHttpApi.CorsConfigurationObjectProperty.AllowOrigin`\n         *\n         * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#cors-configuration-object\n         */\n        readonly allowOrigin?: string;\n        /**\n         * `CfnHttpApi.CorsConfigurationObjectProperty.ExposeHeaders`\n         *\n         * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#cors-configuration-object\n         */\n        readonly exposeHeaders?: string[];\n        /**\n         * `CfnHttpApi.CorsConfigurationObjectProperty.MaxAge`\n         *\n         * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#cors-configuration-object\n         */\n        readonly maxAge?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `CorsConfigurationObjectProperty`\n *\n * @param properties - the TypeScript properties of a `CorsConfigurationObjectProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnHttpApi_CorsConfigurationObjectPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('allowCredentials', cdk.validateBoolean)(properties.allowCredentials));\n    errors.collect(cdk.propertyValidator('allowHeaders', cdk.validateString)(properties.allowHeaders));\n    errors.collect(cdk.propertyValidator('allowMethods', cdk.validateString)(properties.allowMethods));\n    errors.collect(cdk.propertyValidator('allowOrigin', cdk.validateString)(properties.allowOrigin));\n    errors.collect(cdk.propertyValidator('exposeHeaders', cdk.listValidator(cdk.validateString))(properties.exposeHeaders));\n    errors.collect(cdk.propertyValidator('maxAge', cdk.validateString)(properties.maxAge));\n    return errors.wrap('supplied properties not correct for \"CorsConfigurationObjectProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::HttpApi.CorsConfigurationObject` resource\n *\n * @param properties - the TypeScript properties of a `CorsConfigurationObjectProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::HttpApi.CorsConfigurationObject` resource.\n */\n// @ts-ignore TS6133\nfunction cfnHttpApiCorsConfigurationObjectPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnHttpApi_CorsConfigurationObjectPropertyValidator(properties).assertSuccess();\n    return {\n        AllowCredentials: cdk.booleanToCloudFormation(properties.allowCredentials),\n        AllowHeaders: cdk.stringToCloudFormation(properties.allowHeaders),\n        AllowMethods: cdk.stringToCloudFormation(properties.allowMethods),\n        AllowOrigin: cdk.stringToCloudFormation(properties.allowOrigin),\n        ExposeHeaders: cdk.listMapper(cdk.stringToCloudFormation)(properties.exposeHeaders),\n        MaxAge: cdk.stringToCloudFormation(properties.maxAge),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnHttpApiCorsConfigurationObjectPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnHttpApi.CorsConfigurationObjectProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnHttpApi.CorsConfigurationObjectProperty>();\n    ret.addPropertyResult('allowCredentials', 'AllowCredentials', properties.AllowCredentials != null ? cfn_parse.FromCloudFormation.getBoolean(properties.AllowCredentials) : undefined);\n    ret.addPropertyResult('allowHeaders', 'AllowHeaders', properties.AllowHeaders != null ? cfn_parse.FromCloudFormation.getString(properties.AllowHeaders) : undefined);\n    ret.addPropertyResult('allowMethods', 'AllowMethods', properties.AllowMethods != null ? cfn_parse.FromCloudFormation.getString(properties.AllowMethods) : undefined);\n    ret.addPropertyResult('allowOrigin', 'AllowOrigin', properties.AllowOrigin != null ? cfn_parse.FromCloudFormation.getString(properties.AllowOrigin) : undefined);\n    ret.addPropertyResult('exposeHeaders', 'ExposeHeaders', properties.ExposeHeaders != null ? cfn_parse.FromCloudFormation.getStringArray(properties.ExposeHeaders) : undefined);\n    ret.addPropertyResult('maxAge', 'MaxAge', properties.MaxAge != null ? cfn_parse.FromCloudFormation.getString(properties.MaxAge) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnHttpApi {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-httpapi-httpapiauth.html\n     */\n    export interface HttpApiAuthProperty {\n        /**\n         * `CfnHttpApi.HttpApiAuthProperty.Authorizers`\n         *\n         * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-httpapi-httpapiauth.html#sam-httpapi-httpapiauth-defaultauthorizer\n         */\n        readonly authorizers?: any | cdk.IResolvable;\n        /**\n         * `CfnHttpApi.HttpApiAuthProperty.DefaultAuthorizer`\n         *\n         * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-httpapi-httpapiauth.html#sam-httpapi-httpapiauth-authorizers\n         */\n        readonly defaultAuthorizer?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `HttpApiAuthProperty`\n *\n * @param properties - the TypeScript properties of a `HttpApiAuthProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnHttpApi_HttpApiAuthPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('authorizers', cdk.validateObject)(properties.authorizers));\n    errors.collect(cdk.propertyValidator('defaultAuthorizer', cdk.validateString)(properties.defaultAuthorizer));\n    return errors.wrap('supplied properties not correct for \"HttpApiAuthProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::HttpApi.HttpApiAuth` resource\n *\n * @param properties - the TypeScript properties of a `HttpApiAuthProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::HttpApi.HttpApiAuth` resource.\n */\n// @ts-ignore TS6133\nfunction cfnHttpApiHttpApiAuthPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnHttpApi_HttpApiAuthPropertyValidator(properties).assertSuccess();\n    return {\n        Authorizers: cdk.objectToCloudFormation(properties.authorizers),\n        DefaultAuthorizer: cdk.stringToCloudFormation(properties.defaultAuthorizer),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnHttpApiHttpApiAuthPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnHttpApi.HttpApiAuthProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnHttpApi.HttpApiAuthProperty>();\n    ret.addPropertyResult('authorizers', 'Authorizers', properties.Authorizers != null ? cfn_parse.FromCloudFormation.getAny(properties.Authorizers) : undefined);\n    ret.addPropertyResult('defaultAuthorizer', 'DefaultAuthorizer', properties.DefaultAuthorizer != null ? cfn_parse.FromCloudFormation.getString(properties.DefaultAuthorizer) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnHttpApi {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#domain-configuration-object\n     */\n    export interface HttpApiDomainConfigurationProperty {\n        /**\n         * `CfnHttpApi.HttpApiDomainConfigurationProperty.BasePath`\n         *\n         * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#domain-configuration-object\n         */\n        readonly basePath?: string;\n        /**\n         * `CfnHttpApi.HttpApiDomainConfigurationProperty.CertificateArn`\n         *\n         * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#domain-configuration-object\n         */\n        readonly certificateArn: string;\n        /**\n         * `CfnHttpApi.HttpApiDomainConfigurationProperty.DomainName`\n         *\n         * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#domain-configuration-object\n         */\n        readonly domainName: string;\n        /**\n         * `CfnHttpApi.HttpApiDomainConfigurationProperty.EndpointConfiguration`\n         *\n         * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#domain-configuration-object\n         */\n        readonly endpointConfiguration?: string;\n        /**\n         * `CfnHttpApi.HttpApiDomainConfigurationProperty.MutualTlsAuthentication`\n         *\n         * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-httpapi-httpapidomainconfiguration.html#sam-httpapi-httpapidomainconfiguration-mutualtlsauthentication\n         */\n        readonly mutualTlsAuthentication?: CfnHttpApi.MutualTlsAuthenticationProperty | cdk.IResolvable;\n        /**\n         * `CfnHttpApi.HttpApiDomainConfigurationProperty.Route53`\n         *\n         * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#domain-configuration-object\n         */\n        readonly route53?: CfnHttpApi.Route53ConfigurationProperty | cdk.IResolvable;\n        /**\n         * `CfnHttpApi.HttpApiDomainConfigurationProperty.SecurityPolicy`\n         *\n         * @link https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#domain-configuration-object\n         */\n        readonly securityPolicy?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `HttpApiDomainConfigurationProperty`\n *\n * @param properties - the TypeScript properties of a `HttpApiDomainConfigurationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnHttpApi_HttpApiDomainConfigurationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('basePath', cdk.validateString)(properties.basePath));\n    errors.collect(cdk.propertyValidator('certificateArn', cdk.requiredValidator)(properties.certificateArn));\n    errors.collect(cdk.propertyValidator('certificateArn', cdk.validateString)(properties.certificateArn));\n    errors.collect(cdk.propertyValidator('domainName', cdk.requiredValidator)(properties.domainName));\n    errors.collect(cdk.propertyValidator('domainName', cdk.validateString)(properties.domainName));\n    errors.collect(cdk.propertyValidator('endpointConfiguration', cdk.validateString)(properties.endpointConfiguration));\n    errors.collect(cdk.propertyValidator('mutualTlsAuthentication', CfnHttpApi_MutualTlsAuthenticationPropertyValidator)(properties.mutualTlsAuthentication));\n    errors.collect(cdk.propertyValidator('route53', CfnHttpApi_Route53ConfigurationPropertyValidator)(properties.route53));\n    errors.collect(cdk.propertyValidator('securityPolicy', cdk.validateString)(properties.securityPolicy));\n    return errors.wrap('supplied properties not correct for \"HttpApiDomainConfigurationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::HttpApi.HttpApiDomainConfiguration` resource\n *\n * @param properties - the TypeScript properties of a `HttpApiDomainConfigurationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::HttpApi.HttpApiDomainConfiguration` resource.\n */\n// @ts-ignore TS6133\nfunction cfnHttpApiHttpApiDomainConfigurationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnHttpApi_HttpApiDomainConfigurationPropertyValidator(properties).assertSuccess();\n    return {\n        BasePath: cdk.stringToCloudFormation(properties.basePath),\n        CertificateArn: cdk.stringToCloudFormation(properties.certificateArn),\n        DomainName: cdk.stringToCloudFormation(properties.domainName),\n        EndpointConfiguration: cdk.stringToCloudFormation(properties.endpointConfiguration),\n        MutualTlsAuthentication: cfnHttpApiMutualTlsAuthenticationPropertyToCloudFormation(properties.mutualTlsAuthentication),\n        Route53: cfnHttpApiRoute53ConfigurationPropertyToCloudFormation(properties.route53),\n        SecurityPolicy: cdk.stringToCloudFormation(properties.securityPolicy),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnHttpApiHttpApiDomainConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnHttpApi.HttpApiDomainConfigurationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnHttpApi.HttpApiDomainConfigurationProperty>();\n    ret.addPropertyResult('basePath', 'BasePath', properties.BasePath != null ? cfn_parse.FromCloudFormation.getString(properties.BasePath) : undefined);\n    ret.addPropertyResult('certificateArn', 'CertificateArn', cfn_parse.FromCloudFormation.getString(properties.CertificateArn));\n    ret.addPropertyResult('domainName', 'DomainName', cfn_parse.FromCloudFormation.getString(properties.DomainName));\n    ret.addPropertyResult('endpointConfiguration', 'EndpointConfiguration', properties.EndpointConfiguration != null ? cfn_parse.FromCloudFormation.getString(properties.EndpointConfiguration) : undefined);\n    ret.addPropertyResult('mutualTlsAuthentication', 'MutualTlsAuthentication', properties.MutualTlsAuthentication != null ? CfnHttpApiMutualTlsAuthenticationPropertyFromCloudFormation(properties.MutualTlsAuthentication) : undefined);\n    ret.addPropertyResult('route53', 'Route53', properties.Route53 != null ? CfnHttpApiRoute53ConfigurationPropertyFromCloudFormation(properties.Route53) : undefined);\n    ret.addPropertyResult('securityPolicy', 'SecurityPolicy', properties.SecurityPolicy != null ? cfn_parse.FromCloudFormation.getString(properties.SecurityPolicy) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnHttpApi {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigatewayv2-domainname-mutualtlsauthentication.html\n     */\n    export interface MutualTlsAuthenticationProperty {\n        /**\n         * `CfnHttpApi.MutualTlsAuthenticationProperty.TruststoreUri`\n         *\n         * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigatewayv2-domainname-mutualtlsauthentication.html#cfn-apigatewayv2-domainname-mutualtlsauthentication-truststoreuri\n         */\n        readonly truststoreUri?: string;\n        /**\n         * `CfnHttpApi.MutualTlsAuthenticationProperty.TruststoreVersion`\n         *\n         * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigatewayv2-domainname-mutualtlsauthentication.html#cfn-apigatewayv2-domainname-mutualtlsauthentication-truststoreversion\n         */\n        readonly truststoreVersion?: boolean | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `MutualTlsAuthenticationProperty`\n *\n * @param properties - the TypeScript properties of a `MutualTlsAuthenticationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnHttpApi_MutualTlsAuthenticationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('truststoreUri', cdk.validateString)(properties.truststoreUri));\n    errors.collect(cdk.propertyValidator('truststoreVersion', cdk.validateBoolean)(properties.truststoreVersion));\n    return errors.wrap('supplied properties not correct for \"MutualTlsAuthenticationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::HttpApi.MutualTlsAuthentication` resource\n *\n * @param properties - the TypeScript properties of a `MutualTlsAuthenticationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::HttpApi.MutualTlsAuthentication` resource.\n */\n// @ts-ignore TS6133\nfunction cfnHttpApiMutualTlsAuthenticationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnHttpApi_MutualTlsAuthenticationPropertyValidator(properties).assertSuccess();\n    return {\n        TruststoreUri: cdk.stringToCloudFormation(properties.truststoreUri),\n        TruststoreVersion: cdk.booleanToCloudFormation(properties.truststoreVersion),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnHttpApiMutualTlsAuthenticationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnHttpApi.MutualTlsAuthenticationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnHttpApi.MutualTlsAuthenticationProperty>();\n    ret.addPropertyResult('truststoreUri', 'TruststoreUri', properties.TruststoreUri != null ? cfn_parse.FromCloudFormation.getString(properties.TruststoreUri) : undefined);\n    ret.addPropertyResult('truststoreVersion', 'TruststoreVersion', properties.TruststoreVersion != null ? cfn_parse.FromCloudFormation.getBoolean(properties.TruststoreVersion) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnHttpApi {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-httpapi-route53configuration.html\n     */\n    export interface Route53ConfigurationProperty {\n        /**\n         * `CfnHttpApi.Route53ConfigurationProperty.DistributedDomainName`\n         *\n         * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-httpapi-route53configuration.html#sam-httpapi-route53configuration-distributiondomainname\n         */\n        readonly distributedDomainName?: string;\n        /**\n         * `CfnHttpApi.Route53ConfigurationProperty.EvaluateTargetHealth`\n         *\n         * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-httpapi-route53configuration.html#sam-httpapi-route53configuration-evaluatetargethealth\n         */\n        readonly evaluateTargetHealth?: boolean | cdk.IResolvable;\n        /**\n         * `CfnHttpApi.Route53ConfigurationProperty.HostedZoneId`\n         *\n         * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-httpapi-route53configuration.html#sam-httpapi-route53configuration-hostedzoneid\n         */\n        readonly hostedZoneId?: string;\n        /**\n         * `CfnHttpApi.Route53ConfigurationProperty.HostedZoneName`\n         *\n         * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-httpapi-route53configuration.html#sam-httpapi-route53configuration-hostedzonename\n         */\n        readonly hostedZoneName?: string;\n        /**\n         * `CfnHttpApi.Route53ConfigurationProperty.IpV6`\n         *\n         * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-httpapi-route53configuration.html#sam-httpapi-route53configuration-ipv6\n         */\n        readonly ipV6?: boolean | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `Route53ConfigurationProperty`\n *\n * @param properties - the TypeScript properties of a `Route53ConfigurationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnHttpApi_Route53ConfigurationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('distributedDomainName', cdk.validateString)(properties.distributedDomainName));\n    errors.collect(cdk.propertyValidator('evaluateTargetHealth', cdk.validateBoolean)(properties.evaluateTargetHealth));\n    errors.collect(cdk.propertyValidator('hostedZoneId', cdk.validateString)(properties.hostedZoneId));\n    errors.collect(cdk.propertyValidator('hostedZoneName', cdk.validateString)(properties.hostedZoneName));\n    errors.collect(cdk.propertyValidator('ipV6', cdk.validateBoolean)(properties.ipV6));\n    return errors.wrap('supplied properties not correct for \"Route53ConfigurationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::HttpApi.Route53Configuration` resource\n *\n * @param properties - the TypeScript properties of a `Route53ConfigurationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::HttpApi.Route53Configuration` resource.\n */\n// @ts-ignore TS6133\nfunction cfnHttpApiRoute53ConfigurationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnHttpApi_Route53ConfigurationPropertyValidator(properties).assertSuccess();\n    return {\n        DistributedDomainName: cdk.stringToCloudFormation(properties.distributedDomainName),\n        EvaluateTargetHealth: cdk.booleanToCloudFormation(properties.evaluateTargetHealth),\n        HostedZoneId: cdk.stringToCloudFormation(properties.hostedZoneId),\n        HostedZoneName: cdk.stringToCloudFormation(properties.hostedZoneName),\n        IpV6: cdk.booleanToCloudFormation(properties.ipV6),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnHttpApiRoute53ConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnHttpApi.Route53ConfigurationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnHttpApi.Route53ConfigurationProperty>();\n    ret.addPropertyResult('distributedDomainName', 'DistributedDomainName', properties.DistributedDomainName != null ? cfn_parse.FromCloudFormation.getString(properties.DistributedDomainName) : undefined);\n    ret.addPropertyResult('evaluateTargetHealth', 'EvaluateTargetHealth', properties.EvaluateTargetHealth != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EvaluateTargetHealth) : undefined);\n    ret.addPropertyResult('hostedZoneId', 'HostedZoneId', properties.HostedZoneId != null ? cfn_parse.FromCloudFormation.getString(properties.HostedZoneId) : undefined);\n    ret.addPropertyResult('hostedZoneName', 'HostedZoneName', properties.HostedZoneName != null ? cfn_parse.FromCloudFormation.getString(properties.HostedZoneName) : undefined);\n    ret.addPropertyResult('ipV6', 'IpV6', properties.IpV6 != null ? cfn_parse.FromCloudFormation.getBoolean(properties.IpV6) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnHttpApi {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigatewayv2-stage-routesettings.html\n     */\n    export interface RouteSettingsProperty {\n        /**\n         * `CfnHttpApi.RouteSettingsProperty.DataTraceEnabled`\n         *\n         * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigatewayv2-stage-routesettings.html#cfn-apigatewayv2-stage-routesettings-datatraceenabled\n         */\n        readonly dataTraceEnabled?: boolean | cdk.IResolvable;\n        /**\n         * `CfnHttpApi.RouteSettingsProperty.DetailedMetricsEnabled`\n         *\n         * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigatewayv2-stage-routesettings.html#cfn-apigatewayv2-stage-routesettings-detailedmetricsenabled\n         */\n        readonly detailedMetricsEnabled?: boolean | cdk.IResolvable;\n        /**\n         * `CfnHttpApi.RouteSettingsProperty.LoggingLevel`\n         *\n         * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigatewayv2-stage-routesettings.html#cfn-apigatewayv2-stage-routesettings-logginglevel\n         */\n        readonly loggingLevel?: string;\n        /**\n         * `CfnHttpApi.RouteSettingsProperty.ThrottlingBurstLimit`\n         *\n         * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigatewayv2-stage-routesettings.html#cfn-apigatewayv2-stage-routesettings-throttlingburstlimit\n         */\n        readonly throttlingBurstLimit?: number;\n        /**\n         * `CfnHttpApi.RouteSettingsProperty.ThrottlingRateLimit`\n         *\n         * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigatewayv2-stage-routesettings.html#cfn-apigatewayv2-stage-routesettings-throttlingratelimit\n         */\n        readonly throttlingRateLimit?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `RouteSettingsProperty`\n *\n * @param properties - the TypeScript properties of a `RouteSettingsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnHttpApi_RouteSettingsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('dataTraceEnabled', cdk.validateBoolean)(properties.dataTraceEnabled));\n    errors.collect(cdk.propertyValidator('detailedMetricsEnabled', cdk.validateBoolean)(properties.detailedMetricsEnabled));\n    errors.collect(cdk.propertyValidator('loggingLevel', cdk.validateString)(properties.loggingLevel));\n    errors.collect(cdk.propertyValidator('throttlingBurstLimit', cdk.validateNumber)(properties.throttlingBurstLimit));\n    errors.collect(cdk.propertyValidator('throttlingRateLimit', cdk.validateNumber)(properties.throttlingRateLimit));\n    return errors.wrap('supplied properties not correct for \"RouteSettingsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::HttpApi.RouteSettings` resource\n *\n * @param properties - the TypeScript properties of a `RouteSettingsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::HttpApi.RouteSettings` resource.\n */\n// @ts-ignore TS6133\nfunction cfnHttpApiRouteSettingsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnHttpApi_RouteSettingsPropertyValidator(properties).assertSuccess();\n    return {\n        DataTraceEnabled: cdk.booleanToCloudFormation(properties.dataTraceEnabled),\n        DetailedMetricsEnabled: cdk.booleanToCloudFormation(properties.detailedMetricsEnabled),\n        LoggingLevel: cdk.stringToCloudFormation(properties.loggingLevel),\n        ThrottlingBurstLimit: cdk.numberToCloudFormation(properties.throttlingBurstLimit),\n        ThrottlingRateLimit: cdk.numberToCloudFormation(properties.throttlingRateLimit),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnHttpApiRouteSettingsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnHttpApi.RouteSettingsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnHttpApi.RouteSettingsProperty>();\n    ret.addPropertyResult('dataTraceEnabled', 'DataTraceEnabled', properties.DataTraceEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DataTraceEnabled) : undefined);\n    ret.addPropertyResult('detailedMetricsEnabled', 'DetailedMetricsEnabled', properties.DetailedMetricsEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DetailedMetricsEnabled) : undefined);\n    ret.addPropertyResult('loggingLevel', 'LoggingLevel', properties.LoggingLevel != null ? cfn_parse.FromCloudFormation.getString(properties.LoggingLevel) : undefined);\n    ret.addPropertyResult('throttlingBurstLimit', 'ThrottlingBurstLimit', properties.ThrottlingBurstLimit != null ? cfn_parse.FromCloudFormation.getNumber(properties.ThrottlingBurstLimit) : undefined);\n    ret.addPropertyResult('throttlingRateLimit', 'ThrottlingRateLimit', properties.ThrottlingRateLimit != null ? cfn_parse.FromCloudFormation.getNumber(properties.ThrottlingRateLimit) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnHttpApi {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#s3-location-object\n     */\n    export interface S3LocationProperty {\n        /**\n         * `CfnHttpApi.S3LocationProperty.Bucket`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#s3-location-object\n         */\n        readonly bucket: string;\n        /**\n         * `CfnHttpApi.S3LocationProperty.Key`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#s3-location-object\n         */\n        readonly key: string;\n        /**\n         * `CfnHttpApi.S3LocationProperty.Version`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#s3-location-object\n         */\n        readonly version: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `S3LocationProperty`\n *\n * @param properties - the TypeScript properties of a `S3LocationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnHttpApi_S3LocationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('bucket', cdk.requiredValidator)(properties.bucket));\n    errors.collect(cdk.propertyValidator('bucket', cdk.validateString)(properties.bucket));\n    errors.collect(cdk.propertyValidator('key', cdk.requiredValidator)(properties.key));\n    errors.collect(cdk.propertyValidator('key', cdk.validateString)(properties.key));\n    errors.collect(cdk.propertyValidator('version', cdk.requiredValidator)(properties.version));\n    errors.collect(cdk.propertyValidator('version', cdk.validateNumber)(properties.version));\n    return errors.wrap('supplied properties not correct for \"S3LocationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::HttpApi.S3Location` resource\n *\n * @param properties - the TypeScript properties of a `S3LocationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::HttpApi.S3Location` resource.\n */\n// @ts-ignore TS6133\nfunction cfnHttpApiS3LocationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnHttpApi_S3LocationPropertyValidator(properties).assertSuccess();\n    return {\n        Bucket: cdk.stringToCloudFormation(properties.bucket),\n        Key: cdk.stringToCloudFormation(properties.key),\n        Version: cdk.numberToCloudFormation(properties.version),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnHttpApiS3LocationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnHttpApi.S3LocationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnHttpApi.S3LocationProperty>();\n    ret.addPropertyResult('bucket', 'Bucket', cfn_parse.FromCloudFormation.getString(properties.Bucket));\n    ret.addPropertyResult('key', 'Key', cfn_parse.FromCloudFormation.getString(properties.Key));\n    ret.addPropertyResult('version', 'Version', cfn_parse.FromCloudFormation.getNumber(properties.Version));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnLayerVersion`\n *\n * @struct\n * @stability external\n *\n * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesslayerversion\n */\nexport interface CfnLayerVersionProps {\n\n    /**\n     * `AWS::Serverless::LayerVersion.CompatibleRuntimes`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesslayerversion\n     */\n    readonly compatibleRuntimes?: string[];\n\n    /**\n     * `AWS::Serverless::LayerVersion.ContentUri`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesslayerversion\n     */\n    readonly contentUri?: CfnLayerVersion.S3LocationProperty | string | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::LayerVersion.Description`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesslayerversion\n     */\n    readonly description?: string;\n\n    /**\n     * `AWS::Serverless::LayerVersion.LayerName`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesslayerversion\n     */\n    readonly layerName?: string;\n\n    /**\n     * `AWS::Serverless::LayerVersion.LicenseInfo`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesslayerversion\n     */\n    readonly licenseInfo?: string;\n\n    /**\n     * `AWS::Serverless::LayerVersion.RetentionPolicy`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesslayerversion\n     */\n    readonly retentionPolicy?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnLayerVersionProps`\n *\n * @param properties - the TypeScript properties of a `CfnLayerVersionProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnLayerVersionPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('compatibleRuntimes', cdk.listValidator(cdk.validateString))(properties.compatibleRuntimes));\n    errors.collect(cdk.propertyValidator('contentUri', cdk.unionValidator(CfnLayerVersion_S3LocationPropertyValidator, cdk.validateString))(properties.contentUri));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('layerName', cdk.validateString)(properties.layerName));\n    errors.collect(cdk.propertyValidator('licenseInfo', cdk.validateString)(properties.licenseInfo));\n    errors.collect(cdk.propertyValidator('retentionPolicy', cdk.validateString)(properties.retentionPolicy));\n    return errors.wrap('supplied properties not correct for \"CfnLayerVersionProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::LayerVersion` resource\n *\n * @param properties - the TypeScript properties of a `CfnLayerVersionProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::LayerVersion` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLayerVersionPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLayerVersionPropsValidator(properties).assertSuccess();\n    return {\n        CompatibleRuntimes: cdk.listMapper(cdk.stringToCloudFormation)(properties.compatibleRuntimes),\n        ContentUri: cdk.unionMapper([CfnLayerVersion_S3LocationPropertyValidator, cdk.validateString], [cfnLayerVersionS3LocationPropertyToCloudFormation, cdk.stringToCloudFormation])(properties.contentUri),\n        Description: cdk.stringToCloudFormation(properties.description),\n        LayerName: cdk.stringToCloudFormation(properties.layerName),\n        LicenseInfo: cdk.stringToCloudFormation(properties.licenseInfo),\n        RetentionPolicy: cdk.stringToCloudFormation(properties.retentionPolicy),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLayerVersionPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLayerVersionProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLayerVersionProps>();\n    ret.addPropertyResult('compatibleRuntimes', 'CompatibleRuntimes', properties.CompatibleRuntimes != null ? cfn_parse.FromCloudFormation.getStringArray(properties.CompatibleRuntimes) : undefined);\n    ret.addPropertyResult('contentUri', 'ContentUri', properties.ContentUri != null ? cfn_parse.FromCloudFormation.getTypeUnion([CfnLayerVersion_S3LocationPropertyValidator, cdk.validateString], [CfnLayerVersionS3LocationPropertyFromCloudFormation, cfn_parse.FromCloudFormation.getString])(properties.ContentUri) : undefined);\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('layerName', 'LayerName', properties.LayerName != null ? cfn_parse.FromCloudFormation.getString(properties.LayerName) : undefined);\n    ret.addPropertyResult('licenseInfo', 'LicenseInfo', properties.LicenseInfo != null ? cfn_parse.FromCloudFormation.getString(properties.LicenseInfo) : undefined);\n    ret.addPropertyResult('retentionPolicy', 'RetentionPolicy', properties.RetentionPolicy != null ? cfn_parse.FromCloudFormation.getString(properties.RetentionPolicy) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::Serverless::LayerVersion`\n *\n *\n *\n * @cloudformationResource AWS::Serverless::LayerVersion\n * @stability external\n *\n * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesslayerversion\n */\nexport class CfnLayerVersion extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Serverless::LayerVersion\";\n    /**\n     * The `Transform` a template must use in order to use this resource\n     */\n    public static readonly REQUIRED_TRANSFORM = \"AWS::Serverless-2016-10-31\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnLayerVersion {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnLayerVersionPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnLayerVersion(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * `AWS::Serverless::LayerVersion.CompatibleRuntimes`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesslayerversion\n     */\n    public compatibleRuntimes: string[] | undefined;\n\n    /**\n     * `AWS::Serverless::LayerVersion.ContentUri`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesslayerversion\n     */\n    public contentUri: CfnLayerVersion.S3LocationProperty | string | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::LayerVersion.Description`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesslayerversion\n     */\n    public description: string | undefined;\n\n    /**\n     * `AWS::Serverless::LayerVersion.LayerName`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesslayerversion\n     */\n    public layerName: string | undefined;\n\n    /**\n     * `AWS::Serverless::LayerVersion.LicenseInfo`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesslayerversion\n     */\n    public licenseInfo: string | undefined;\n\n    /**\n     * `AWS::Serverless::LayerVersion.RetentionPolicy`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesslayerversion\n     */\n    public retentionPolicy: string | undefined;\n\n    /**\n     * Create a new `AWS::Serverless::LayerVersion`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnLayerVersionProps = {}) {\n        super(scope, id, { type: CfnLayerVersion.CFN_RESOURCE_TYPE_NAME, properties: props });\n        // Automatically add the required transform\n        this.stack.addTransform(CfnLayerVersion.REQUIRED_TRANSFORM);\n\n        this.compatibleRuntimes = props.compatibleRuntimes;\n        this.contentUri = props.contentUri;\n        this.description = props.description;\n        this.layerName = props.layerName;\n        this.licenseInfo = props.licenseInfo;\n        this.retentionPolicy = props.retentionPolicy;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnLayerVersion.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            compatibleRuntimes: this.compatibleRuntimes,\n            contentUri: this.contentUri,\n            description: this.description,\n            layerName: this.layerName,\n            licenseInfo: this.licenseInfo,\n            retentionPolicy: this.retentionPolicy,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnLayerVersionPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnLayerVersion {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#s3-location-object\n     */\n    export interface S3LocationProperty {\n        /**\n         * `CfnLayerVersion.S3LocationProperty.Bucket`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n         */\n        readonly bucket: string;\n        /**\n         * `CfnLayerVersion.S3LocationProperty.Key`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n         */\n        readonly key: string;\n        /**\n         * `CfnLayerVersion.S3LocationProperty.Version`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n         */\n        readonly version?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `S3LocationProperty`\n *\n * @param properties - the TypeScript properties of a `S3LocationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnLayerVersion_S3LocationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('bucket', cdk.requiredValidator)(properties.bucket));\n    errors.collect(cdk.propertyValidator('bucket', cdk.validateString)(properties.bucket));\n    errors.collect(cdk.propertyValidator('key', cdk.requiredValidator)(properties.key));\n    errors.collect(cdk.propertyValidator('key', cdk.validateString)(properties.key));\n    errors.collect(cdk.propertyValidator('version', cdk.validateNumber)(properties.version));\n    return errors.wrap('supplied properties not correct for \"S3LocationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::LayerVersion.S3Location` resource\n *\n * @param properties - the TypeScript properties of a `S3LocationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::LayerVersion.S3Location` resource.\n */\n// @ts-ignore TS6133\nfunction cfnLayerVersionS3LocationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnLayerVersion_S3LocationPropertyValidator(properties).assertSuccess();\n    return {\n        Bucket: cdk.stringToCloudFormation(properties.bucket),\n        Key: cdk.stringToCloudFormation(properties.key),\n        Version: cdk.numberToCloudFormation(properties.version),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnLayerVersionS3LocationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnLayerVersion.S3LocationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnLayerVersion.S3LocationProperty>();\n    ret.addPropertyResult('bucket', 'Bucket', cfn_parse.FromCloudFormation.getString(properties.Bucket));\n    ret.addPropertyResult('key', 'Key', cfn_parse.FromCloudFormation.getString(properties.Key));\n    ret.addPropertyResult('version', 'Version', properties.Version != null ? cfn_parse.FromCloudFormation.getNumber(properties.Version) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnSimpleTable`\n *\n * @struct\n * @stability external\n *\n * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesssimpletable\n */\nexport interface CfnSimpleTableProps {\n\n    /**\n     * `AWS::Serverless::SimpleTable.PrimaryKey`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#primary-key-object\n     */\n    readonly primaryKey?: CfnSimpleTable.PrimaryKeyProperty | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::SimpleTable.ProvisionedThroughput`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-provisionedthroughput.html\n     */\n    readonly provisionedThroughput?: CfnSimpleTable.ProvisionedThroughputProperty | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::SimpleTable.SSESpecification`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesssimpletable\n     */\n    readonly sseSpecification?: CfnSimpleTable.SSESpecificationProperty | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::SimpleTable.TableName`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesssimpletable\n     */\n    readonly tableName?: string;\n\n    /**\n     * `AWS::Serverless::SimpleTable.Tags`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesssimpletable\n     */\n    readonly tags?: { [key: string]: (string) };\n}\n\n/**\n * Determine whether the given properties match those of a `CfnSimpleTableProps`\n *\n * @param properties - the TypeScript properties of a `CfnSimpleTableProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnSimpleTablePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('primaryKey', CfnSimpleTable_PrimaryKeyPropertyValidator)(properties.primaryKey));\n    errors.collect(cdk.propertyValidator('provisionedThroughput', CfnSimpleTable_ProvisionedThroughputPropertyValidator)(properties.provisionedThroughput));\n    errors.collect(cdk.propertyValidator('sseSpecification', CfnSimpleTable_SSESpecificationPropertyValidator)(properties.sseSpecification));\n    errors.collect(cdk.propertyValidator('tableName', cdk.validateString)(properties.tableName));\n    errors.collect(cdk.propertyValidator('tags', cdk.hashValidator(cdk.validateString))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnSimpleTableProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::SimpleTable` resource\n *\n * @param properties - the TypeScript properties of a `CfnSimpleTableProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::SimpleTable` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSimpleTablePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSimpleTablePropsValidator(properties).assertSuccess();\n    return {\n        PrimaryKey: cfnSimpleTablePrimaryKeyPropertyToCloudFormation(properties.primaryKey),\n        ProvisionedThroughput: cfnSimpleTableProvisionedThroughputPropertyToCloudFormation(properties.provisionedThroughput),\n        SSESpecification: cfnSimpleTableSSESpecificationPropertyToCloudFormation(properties.sseSpecification),\n        TableName: cdk.stringToCloudFormation(properties.tableName),\n        Tags: cdk.hashMapper(cdk.stringToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSimpleTablePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSimpleTableProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSimpleTableProps>();\n    ret.addPropertyResult('primaryKey', 'PrimaryKey', properties.PrimaryKey != null ? CfnSimpleTablePrimaryKeyPropertyFromCloudFormation(properties.PrimaryKey) : undefined);\n    ret.addPropertyResult('provisionedThroughput', 'ProvisionedThroughput', properties.ProvisionedThroughput != null ? CfnSimpleTableProvisionedThroughputPropertyFromCloudFormation(properties.ProvisionedThroughput) : undefined);\n    ret.addPropertyResult('sseSpecification', 'SSESpecification', properties.SSESpecification != null ? CfnSimpleTableSSESpecificationPropertyFromCloudFormation(properties.SSESpecification) : undefined);\n    ret.addPropertyResult('tableName', 'TableName', properties.TableName != null ? cfn_parse.FromCloudFormation.getString(properties.TableName) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::Serverless::SimpleTable`\n *\n *\n *\n * @cloudformationResource AWS::Serverless::SimpleTable\n * @stability external\n *\n * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesssimpletable\n */\nexport class CfnSimpleTable extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Serverless::SimpleTable\";\n    /**\n     * The `Transform` a template must use in order to use this resource\n     */\n    public static readonly REQUIRED_TRANSFORM = \"AWS::Serverless-2016-10-31\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnSimpleTable {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnSimpleTablePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnSimpleTable(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * `AWS::Serverless::SimpleTable.PrimaryKey`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#primary-key-object\n     */\n    public primaryKey: CfnSimpleTable.PrimaryKeyProperty | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::SimpleTable.ProvisionedThroughput`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-provisionedthroughput.html\n     */\n    public provisionedThroughput: CfnSimpleTable.ProvisionedThroughputProperty | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::SimpleTable.SSESpecification`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesssimpletable\n     */\n    public sseSpecification: CfnSimpleTable.SSESpecificationProperty | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::SimpleTable.TableName`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesssimpletable\n     */\n    public tableName: string | undefined;\n\n    /**\n     * `AWS::Serverless::SimpleTable.Tags`\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesssimpletable\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::Serverless::SimpleTable`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnSimpleTableProps = {}) {\n        super(scope, id, { type: CfnSimpleTable.CFN_RESOURCE_TYPE_NAME, properties: props });\n        // Automatically add the required transform\n        this.stack.addTransform(CfnSimpleTable.REQUIRED_TRANSFORM);\n\n        this.primaryKey = props.primaryKey;\n        this.provisionedThroughput = props.provisionedThroughput;\n        this.sseSpecification = props.sseSpecification;\n        this.tableName = props.tableName;\n        this.tags = new cdk.TagManager(cdk.TagType.MAP, \"AWS::Serverless::SimpleTable\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnSimpleTable.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            primaryKey: this.primaryKey,\n            provisionedThroughput: this.provisionedThroughput,\n            sseSpecification: this.sseSpecification,\n            tableName: this.tableName,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnSimpleTablePropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnSimpleTable {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#primary-key-object\n     */\n    export interface PrimaryKeyProperty {\n        /**\n         * `CfnSimpleTable.PrimaryKeyProperty.Name`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#primary-key-object\n         */\n        readonly name?: string;\n        /**\n         * `CfnSimpleTable.PrimaryKeyProperty.Type`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#primary-key-object\n         */\n        readonly type: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `PrimaryKeyProperty`\n *\n * @param properties - the TypeScript properties of a `PrimaryKeyProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSimpleTable_PrimaryKeyPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('type', cdk.requiredValidator)(properties.type));\n    errors.collect(cdk.propertyValidator('type', cdk.validateString)(properties.type));\n    return errors.wrap('supplied properties not correct for \"PrimaryKeyProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::SimpleTable.PrimaryKey` resource\n *\n * @param properties - the TypeScript properties of a `PrimaryKeyProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::SimpleTable.PrimaryKey` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSimpleTablePrimaryKeyPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSimpleTable_PrimaryKeyPropertyValidator(properties).assertSuccess();\n    return {\n        Name: cdk.stringToCloudFormation(properties.name),\n        Type: cdk.stringToCloudFormation(properties.type),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSimpleTablePrimaryKeyPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSimpleTable.PrimaryKeyProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSimpleTable.PrimaryKeyProperty>();\n    ret.addPropertyResult('name', 'Name', properties.Name != null ? cfn_parse.FromCloudFormation.getString(properties.Name) : undefined);\n    ret.addPropertyResult('type', 'Type', cfn_parse.FromCloudFormation.getString(properties.Type));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSimpleTable {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-provisionedthroughput.html\n     */\n    export interface ProvisionedThroughputProperty {\n        /**\n         * `CfnSimpleTable.ProvisionedThroughputProperty.ReadCapacityUnits`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-provisionedthroughput.html\n         */\n        readonly readCapacityUnits?: number;\n        /**\n         * `CfnSimpleTable.ProvisionedThroughputProperty.WriteCapacityUnits`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-provisionedthroughput.html\n         */\n        readonly writeCapacityUnits: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ProvisionedThroughputProperty`\n *\n * @param properties - the TypeScript properties of a `ProvisionedThroughputProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSimpleTable_ProvisionedThroughputPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('readCapacityUnits', cdk.validateNumber)(properties.readCapacityUnits));\n    errors.collect(cdk.propertyValidator('writeCapacityUnits', cdk.requiredValidator)(properties.writeCapacityUnits));\n    errors.collect(cdk.propertyValidator('writeCapacityUnits', cdk.validateNumber)(properties.writeCapacityUnits));\n    return errors.wrap('supplied properties not correct for \"ProvisionedThroughputProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::SimpleTable.ProvisionedThroughput` resource\n *\n * @param properties - the TypeScript properties of a `ProvisionedThroughputProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::SimpleTable.ProvisionedThroughput` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSimpleTableProvisionedThroughputPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSimpleTable_ProvisionedThroughputPropertyValidator(properties).assertSuccess();\n    return {\n        ReadCapacityUnits: cdk.numberToCloudFormation(properties.readCapacityUnits),\n        WriteCapacityUnits: cdk.numberToCloudFormation(properties.writeCapacityUnits),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSimpleTableProvisionedThroughputPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSimpleTable.ProvisionedThroughputProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSimpleTable.ProvisionedThroughputProperty>();\n    ret.addPropertyResult('readCapacityUnits', 'ReadCapacityUnits', properties.ReadCapacityUnits != null ? cfn_parse.FromCloudFormation.getNumber(properties.ReadCapacityUnits) : undefined);\n    ret.addPropertyResult('writeCapacityUnits', 'WriteCapacityUnits', cfn_parse.FromCloudFormation.getNumber(properties.WriteCapacityUnits));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSimpleTable {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-table-ssespecification.html\n     */\n    export interface SSESpecificationProperty {\n        /**\n         * `CfnSimpleTable.SSESpecificationProperty.SSEEnabled`\n         *\n         * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-table-ssespecification.html\n         */\n        readonly sseEnabled?: boolean | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `SSESpecificationProperty`\n *\n * @param properties - the TypeScript properties of a `SSESpecificationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSimpleTable_SSESpecificationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('sseEnabled', cdk.validateBoolean)(properties.sseEnabled));\n    return errors.wrap('supplied properties not correct for \"SSESpecificationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::SimpleTable.SSESpecification` resource\n *\n * @param properties - the TypeScript properties of a `SSESpecificationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::SimpleTable.SSESpecification` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSimpleTableSSESpecificationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSimpleTable_SSESpecificationPropertyValidator(properties).assertSuccess();\n    return {\n        SSEEnabled: cdk.booleanToCloudFormation(properties.sseEnabled),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSimpleTableSSESpecificationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSimpleTable.SSESpecificationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSimpleTable.SSESpecificationProperty>();\n    ret.addPropertyResult('sseEnabled', 'SSEEnabled', properties.SSEEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.SSEEnabled) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnStateMachine`\n *\n * @struct\n * @stability external\n *\n * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html\n */\nexport interface CfnStateMachineProps {\n\n    /**\n     * `AWS::Serverless::StateMachine.Definition`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html\n     */\n    readonly definition?: any | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::StateMachine.DefinitionSubstitutions`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html\n     */\n    readonly definitionSubstitutions?: { [key: string]: (string) } | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::StateMachine.DefinitionUri`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html\n     */\n    readonly definitionUri?: CfnStateMachine.S3LocationProperty | string | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::StateMachine.Events`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html\n     */\n    readonly events?: { [key: string]: (CfnStateMachine.EventSourceProperty | cdk.IResolvable) } | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::StateMachine.Logging`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html\n     */\n    readonly logging?: CfnStateMachine.LoggingConfigurationProperty | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::StateMachine.Name`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html\n     */\n    readonly name?: string;\n\n    /**\n     * `AWS::Serverless::StateMachine.PermissionsBoundaries`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html#sam-statemachine-permissionsboundary\n     */\n    readonly permissionsBoundaries?: string;\n\n    /**\n     * `AWS::Serverless::StateMachine.Policies`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html\n     */\n    readonly policies?: Array<CfnStateMachine.IAMPolicyDocumentProperty | CfnStateMachine.SAMPolicyTemplateProperty | string | cdk.IResolvable> | CfnStateMachine.IAMPolicyDocumentProperty | string | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::StateMachine.Role`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html\n     */\n    readonly role?: string;\n\n    /**\n     * `AWS::Serverless::StateMachine.Tags`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html\n     */\n    readonly tags?: { [key: string]: (string) };\n\n    /**\n     * `AWS::Serverless::StateMachine.Tracing`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html#sam-statemachine-tracing\n     */\n    readonly tracing?: CfnStateMachine.TracingConfigurationProperty | cdk.IResolvable;\n\n    /**\n     * `AWS::Serverless::StateMachine.Type`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html\n     */\n    readonly type?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnStateMachineProps`\n *\n * @param properties - the TypeScript properties of a `CfnStateMachineProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnStateMachinePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('definition', cdk.validateObject)(properties.definition));\n    errors.collect(cdk.propertyValidator('definitionSubstitutions', cdk.hashValidator(cdk.validateString))(properties.definitionSubstitutions));\n    errors.collect(cdk.propertyValidator('definitionUri', cdk.unionValidator(CfnStateMachine_S3LocationPropertyValidator, cdk.validateString))(properties.definitionUri));\n    errors.collect(cdk.propertyValidator('events', cdk.hashValidator(CfnStateMachine_EventSourcePropertyValidator))(properties.events));\n    errors.collect(cdk.propertyValidator('logging', CfnStateMachine_LoggingConfigurationPropertyValidator)(properties.logging));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('permissionsBoundaries', cdk.validateString)(properties.permissionsBoundaries));\n    errors.collect(cdk.propertyValidator('policies', cdk.unionValidator(cdk.unionValidator(CfnStateMachine_IAMPolicyDocumentPropertyValidator, cdk.validateString), cdk.listValidator(cdk.unionValidator(CfnStateMachine_IAMPolicyDocumentPropertyValidator, CfnStateMachine_SAMPolicyTemplatePropertyValidator, cdk.validateString))))(properties.policies));\n    errors.collect(cdk.propertyValidator('role', cdk.validateString)(properties.role));\n    errors.collect(cdk.propertyValidator('tags', cdk.hashValidator(cdk.validateString))(properties.tags));\n    errors.collect(cdk.propertyValidator('tracing', CfnStateMachine_TracingConfigurationPropertyValidator)(properties.tracing));\n    errors.collect(cdk.propertyValidator('type', cdk.validateString)(properties.type));\n    return errors.wrap('supplied properties not correct for \"CfnStateMachineProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::StateMachine` resource\n *\n * @param properties - the TypeScript properties of a `CfnStateMachineProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::StateMachine` resource.\n */\n// @ts-ignore TS6133\nfunction cfnStateMachinePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnStateMachinePropsValidator(properties).assertSuccess();\n    return {\n        Definition: cdk.objectToCloudFormation(properties.definition),\n        DefinitionSubstitutions: cdk.hashMapper(cdk.stringToCloudFormation)(properties.definitionSubstitutions),\n        DefinitionUri: cdk.unionMapper([CfnStateMachine_S3LocationPropertyValidator, cdk.validateString], [cfnStateMachineS3LocationPropertyToCloudFormation, cdk.stringToCloudFormation])(properties.definitionUri),\n        Events: cdk.hashMapper(cfnStateMachineEventSourcePropertyToCloudFormation)(properties.events),\n        Logging: cfnStateMachineLoggingConfigurationPropertyToCloudFormation(properties.logging),\n        Name: cdk.stringToCloudFormation(properties.name),\n        PermissionsBoundaries: cdk.stringToCloudFormation(properties.permissionsBoundaries),\n        Policies: cdk.unionMapper([cdk.unionValidator(CfnStateMachine_IAMPolicyDocumentPropertyValidator, cdk.validateString), cdk.listValidator(cdk.unionValidator(CfnStateMachine_IAMPolicyDocumentPropertyValidator, CfnStateMachine_SAMPolicyTemplatePropertyValidator, cdk.validateString))], [cdk.unionMapper([CfnStateMachine_IAMPolicyDocumentPropertyValidator, cdk.validateString], [cfnStateMachineIAMPolicyDocumentPropertyToCloudFormation, cdk.stringToCloudFormation]), cdk.listMapper(cdk.unionMapper([CfnStateMachine_IAMPolicyDocumentPropertyValidator, CfnStateMachine_SAMPolicyTemplatePropertyValidator, cdk.validateString], [cfnStateMachineIAMPolicyDocumentPropertyToCloudFormation, cfnStateMachineSAMPolicyTemplatePropertyToCloudFormation, cdk.stringToCloudFormation]))])(properties.policies),\n        Role: cdk.stringToCloudFormation(properties.role),\n        Tags: cdk.hashMapper(cdk.stringToCloudFormation)(properties.tags),\n        Tracing: cfnStateMachineTracingConfigurationPropertyToCloudFormation(properties.tracing),\n        Type: cdk.stringToCloudFormation(properties.type),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnStateMachinePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnStateMachineProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnStateMachineProps>();\n    ret.addPropertyResult('definition', 'Definition', properties.Definition != null ? cfn_parse.FromCloudFormation.getAny(properties.Definition) : undefined);\n    ret.addPropertyResult('definitionSubstitutions', 'DefinitionSubstitutions', properties.DefinitionSubstitutions != null ? cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.DefinitionSubstitutions) : undefined);\n    ret.addPropertyResult('definitionUri', 'DefinitionUri', properties.DefinitionUri != null ? cfn_parse.FromCloudFormation.getTypeUnion([CfnStateMachine_S3LocationPropertyValidator, cdk.validateString], [CfnStateMachineS3LocationPropertyFromCloudFormation, cfn_parse.FromCloudFormation.getString])(properties.DefinitionUri) : undefined);\n    ret.addPropertyResult('events', 'Events', properties.Events != null ? cfn_parse.FromCloudFormation.getMap(CfnStateMachineEventSourcePropertyFromCloudFormation)(properties.Events) : undefined);\n    ret.addPropertyResult('logging', 'Logging', properties.Logging != null ? CfnStateMachineLoggingConfigurationPropertyFromCloudFormation(properties.Logging) : undefined);\n    ret.addPropertyResult('name', 'Name', properties.Name != null ? cfn_parse.FromCloudFormation.getString(properties.Name) : undefined);\n    ret.addPropertyResult('permissionsBoundaries', 'PermissionsBoundaries', properties.PermissionsBoundaries != null ? cfn_parse.FromCloudFormation.getString(properties.PermissionsBoundaries) : undefined);\n    ret.addPropertyResult('policies', 'Policies', properties.Policies != null ? cfn_parse.FromCloudFormation.getTypeUnion([cdk.unionValidator(CfnStateMachine_IAMPolicyDocumentPropertyValidator, cdk.validateString), cdk.listValidator(cdk.unionValidator(CfnStateMachine_IAMPolicyDocumentPropertyValidator, CfnStateMachine_SAMPolicyTemplatePropertyValidator, cdk.validateString))], [cfn_parse.FromCloudFormation.getTypeUnion([CfnStateMachine_IAMPolicyDocumentPropertyValidator, cdk.validateString], [CfnStateMachineIAMPolicyDocumentPropertyFromCloudFormation, cfn_parse.FromCloudFormation.getString]), cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getTypeUnion([CfnStateMachine_IAMPolicyDocumentPropertyValidator, CfnStateMachine_SAMPolicyTemplatePropertyValidator, cdk.validateString], [CfnStateMachineIAMPolicyDocumentPropertyFromCloudFormation, CfnStateMachineSAMPolicyTemplatePropertyFromCloudFormation, cfn_parse.FromCloudFormation.getString]))])(properties.Policies) : undefined);\n    ret.addPropertyResult('role', 'Role', properties.Role != null ? cfn_parse.FromCloudFormation.getString(properties.Role) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Tags) : undefined as any);\n    ret.addPropertyResult('tracing', 'Tracing', properties.Tracing != null ? CfnStateMachineTracingConfigurationPropertyFromCloudFormation(properties.Tracing) : undefined);\n    ret.addPropertyResult('type', 'Type', properties.Type != null ? cfn_parse.FromCloudFormation.getString(properties.Type) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::Serverless::StateMachine`\n *\n *\n *\n * @cloudformationResource AWS::Serverless::StateMachine\n * @stability external\n *\n * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html\n */\nexport class CfnStateMachine extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Serverless::StateMachine\";\n    /**\n     * The `Transform` a template must use in order to use this resource\n     */\n    public static readonly REQUIRED_TRANSFORM = \"AWS::Serverless-2016-10-31\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnStateMachine {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnStateMachinePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnStateMachine(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * `AWS::Serverless::StateMachine.Definition`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html\n     */\n    public definition: any | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::StateMachine.DefinitionSubstitutions`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html\n     */\n    public definitionSubstitutions: { [key: string]: (string) } | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::StateMachine.DefinitionUri`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html\n     */\n    public definitionUri: CfnStateMachine.S3LocationProperty | string | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::StateMachine.Events`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html\n     */\n    public events: { [key: string]: (CfnStateMachine.EventSourceProperty | cdk.IResolvable) } | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::StateMachine.Logging`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html\n     */\n    public logging: CfnStateMachine.LoggingConfigurationProperty | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::StateMachine.Name`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html\n     */\n    public name: string | undefined;\n\n    /**\n     * `AWS::Serverless::StateMachine.PermissionsBoundaries`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html#sam-statemachine-permissionsboundary\n     */\n    public permissionsBoundaries: string | undefined;\n\n    /**\n     * `AWS::Serverless::StateMachine.Policies`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html\n     */\n    public policies: Array<CfnStateMachine.IAMPolicyDocumentProperty | CfnStateMachine.SAMPolicyTemplateProperty | string | cdk.IResolvable> | CfnStateMachine.IAMPolicyDocumentProperty | string | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::StateMachine.Role`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html\n     */\n    public role: string | undefined;\n\n    /**\n     * `AWS::Serverless::StateMachine.Tags`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * `AWS::Serverless::StateMachine.Tracing`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html#sam-statemachine-tracing\n     */\n    public tracing: CfnStateMachine.TracingConfigurationProperty | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::Serverless::StateMachine.Type`\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html\n     */\n    public type: string | undefined;\n\n    /**\n     * Create a new `AWS::Serverless::StateMachine`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnStateMachineProps = {}) {\n        super(scope, id, { type: CfnStateMachine.CFN_RESOURCE_TYPE_NAME, properties: props });\n        // Automatically add the required transform\n        this.stack.addTransform(CfnStateMachine.REQUIRED_TRANSFORM);\n\n        this.definition = props.definition;\n        this.definitionSubstitutions = props.definitionSubstitutions;\n        this.definitionUri = props.definitionUri;\n        this.events = props.events;\n        this.logging = props.logging;\n        this.name = props.name;\n        this.permissionsBoundaries = props.permissionsBoundaries;\n        this.policies = props.policies;\n        this.role = props.role;\n        this.tags = new cdk.TagManager(cdk.TagType.MAP, \"AWS::Serverless::StateMachine\", props.tags, { tagPropertyName: 'tags' });\n        this.tracing = props.tracing;\n        this.type = props.type;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnStateMachine.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            definition: this.definition,\n            definitionSubstitutions: this.definitionSubstitutions,\n            definitionUri: this.definitionUri,\n            events: this.events,\n            logging: this.logging,\n            name: this.name,\n            permissionsBoundaries: this.permissionsBoundaries,\n            policies: this.policies,\n            role: this.role,\n            tags: this.tags.renderTags(),\n            tracing: this.tracing,\n            type: this.type,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnStateMachinePropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnStateMachine {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api\n     */\n    export interface ApiEventProperty {\n        /**\n         * `CfnStateMachine.ApiEventProperty.Method`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api\n         */\n        readonly method: string;\n        /**\n         * `CfnStateMachine.ApiEventProperty.Path`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api\n         */\n        readonly path: string;\n        /**\n         * `CfnStateMachine.ApiEventProperty.RestApiId`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api\n         */\n        readonly restApiId?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ApiEventProperty`\n *\n * @param properties - the TypeScript properties of a `ApiEventProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnStateMachine_ApiEventPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('method', cdk.requiredValidator)(properties.method));\n    errors.collect(cdk.propertyValidator('method', cdk.validateString)(properties.method));\n    errors.collect(cdk.propertyValidator('path', cdk.requiredValidator)(properties.path));\n    errors.collect(cdk.propertyValidator('path', cdk.validateString)(properties.path));\n    errors.collect(cdk.propertyValidator('restApiId', cdk.validateString)(properties.restApiId));\n    return errors.wrap('supplied properties not correct for \"ApiEventProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::StateMachine.ApiEvent` resource\n *\n * @param properties - the TypeScript properties of a `ApiEventProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::StateMachine.ApiEvent` resource.\n */\n// @ts-ignore TS6133\nfunction cfnStateMachineApiEventPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnStateMachine_ApiEventPropertyValidator(properties).assertSuccess();\n    return {\n        Method: cdk.stringToCloudFormation(properties.method),\n        Path: cdk.stringToCloudFormation(properties.path),\n        RestApiId: cdk.stringToCloudFormation(properties.restApiId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnStateMachineApiEventPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnStateMachine.ApiEventProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnStateMachine.ApiEventProperty>();\n    ret.addPropertyResult('method', 'Method', cfn_parse.FromCloudFormation.getString(properties.Method));\n    ret.addPropertyResult('path', 'Path', cfn_parse.FromCloudFormation.getString(properties.Path));\n    ret.addPropertyResult('restApiId', 'RestApiId', properties.RestApiId != null ? cfn_parse.FromCloudFormation.getString(properties.RestApiId) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnStateMachine {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-statemachine-cloudwatchevent.html\n     */\n    export interface CloudWatchEventEventProperty {\n        /**\n         * `CfnStateMachine.CloudWatchEventEventProperty.EventBusName`\n         *\n         * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-statemachine-cloudwatchevent.html\n         */\n        readonly eventBusName?: string;\n        /**\n         * `CfnStateMachine.CloudWatchEventEventProperty.Input`\n         *\n         * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-statemachine-cloudwatchevent.html\n         */\n        readonly input?: string;\n        /**\n         * `CfnStateMachine.CloudWatchEventEventProperty.InputPath`\n         *\n         * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-statemachine-cloudwatchevent.html\n         */\n        readonly inputPath?: string;\n        /**\n         * `CfnStateMachine.CloudWatchEventEventProperty.Pattern`\n         *\n         * @link http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/CloudWatchEventsandEventPatterns.html\n         */\n        readonly pattern: any | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `CloudWatchEventEventProperty`\n *\n * @param properties - the TypeScript properties of a `CloudWatchEventEventProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnStateMachine_CloudWatchEventEventPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('eventBusName', cdk.validateString)(properties.eventBusName));\n    errors.collect(cdk.propertyValidator('input', cdk.validateString)(properties.input));\n    errors.collect(cdk.propertyValidator('inputPath', cdk.validateString)(properties.inputPath));\n    errors.collect(cdk.propertyValidator('pattern', cdk.requiredValidator)(properties.pattern));\n    errors.collect(cdk.propertyValidator('pattern', cdk.validateObject)(properties.pattern));\n    return errors.wrap('supplied properties not correct for \"CloudWatchEventEventProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::StateMachine.CloudWatchEventEvent` resource\n *\n * @param properties - the TypeScript properties of a `CloudWatchEventEventProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::StateMachine.CloudWatchEventEvent` resource.\n */\n// @ts-ignore TS6133\nfunction cfnStateMachineCloudWatchEventEventPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnStateMachine_CloudWatchEventEventPropertyValidator(properties).assertSuccess();\n    return {\n        EventBusName: cdk.stringToCloudFormation(properties.eventBusName),\n        Input: cdk.stringToCloudFormation(properties.input),\n        InputPath: cdk.stringToCloudFormation(properties.inputPath),\n        Pattern: cdk.objectToCloudFormation(properties.pattern),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnStateMachineCloudWatchEventEventPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnStateMachine.CloudWatchEventEventProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnStateMachine.CloudWatchEventEventProperty>();\n    ret.addPropertyResult('eventBusName', 'EventBusName', properties.EventBusName != null ? cfn_parse.FromCloudFormation.getString(properties.EventBusName) : undefined);\n    ret.addPropertyResult('input', 'Input', properties.Input != null ? cfn_parse.FromCloudFormation.getString(properties.Input) : undefined);\n    ret.addPropertyResult('inputPath', 'InputPath', properties.InputPath != null ? cfn_parse.FromCloudFormation.getString(properties.InputPath) : undefined);\n    ret.addPropertyResult('pattern', 'Pattern', cfn_parse.FromCloudFormation.getAny(properties.Pattern));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnStateMachine {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stepfunctions-statemachine-logdestination-cloudwatchlogsloggroup.html\n     */\n    export interface CloudWatchLogsLogGroupProperty {\n        /**\n         * `CfnStateMachine.CloudWatchLogsLogGroupProperty.LogGroupArn`\n         *\n         * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stepfunctions-statemachine-logdestination-cloudwatchlogsloggroup.html\n         */\n        readonly logGroupArn: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `CloudWatchLogsLogGroupProperty`\n *\n * @param properties - the TypeScript properties of a `CloudWatchLogsLogGroupProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnStateMachine_CloudWatchLogsLogGroupPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('logGroupArn', cdk.requiredValidator)(properties.logGroupArn));\n    errors.collect(cdk.propertyValidator('logGroupArn', cdk.validateString)(properties.logGroupArn));\n    return errors.wrap('supplied properties not correct for \"CloudWatchLogsLogGroupProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::StateMachine.CloudWatchLogsLogGroup` resource\n *\n * @param properties - the TypeScript properties of a `CloudWatchLogsLogGroupProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::StateMachine.CloudWatchLogsLogGroup` resource.\n */\n// @ts-ignore TS6133\nfunction cfnStateMachineCloudWatchLogsLogGroupPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnStateMachine_CloudWatchLogsLogGroupPropertyValidator(properties).assertSuccess();\n    return {\n        LogGroupArn: cdk.stringToCloudFormation(properties.logGroupArn),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnStateMachineCloudWatchLogsLogGroupPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnStateMachine.CloudWatchLogsLogGroupProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnStateMachine.CloudWatchLogsLogGroupProperty>();\n    ret.addPropertyResult('logGroupArn', 'LogGroupArn', cfn_parse.FromCloudFormation.getString(properties.LogGroupArn));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnStateMachine {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-statemachine-cloudwatchevent.html\n     */\n    export interface EventBridgeRuleEventProperty {\n        /**\n         * `CfnStateMachine.EventBridgeRuleEventProperty.EventBusName`\n         *\n         * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-statemachine-cloudwatchevent.html\n         */\n        readonly eventBusName?: string;\n        /**\n         * `CfnStateMachine.EventBridgeRuleEventProperty.Input`\n         *\n         * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-statemachine-cloudwatchevent.html\n         */\n        readonly input?: string;\n        /**\n         * `CfnStateMachine.EventBridgeRuleEventProperty.InputPath`\n         *\n         * @link https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-statemachine-cloudwatchevent.html\n         */\n        readonly inputPath?: string;\n        /**\n         * `CfnStateMachine.EventBridgeRuleEventProperty.Pattern`\n         *\n         * @link http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/CloudWatchEventsandEventPatterns.html\n         */\n        readonly pattern: any | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `EventBridgeRuleEventProperty`\n *\n * @param properties - the TypeScript properties of a `EventBridgeRuleEventProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnStateMachine_EventBridgeRuleEventPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('eventBusName', cdk.validateString)(properties.eventBusName));\n    errors.collect(cdk.propertyValidator('input', cdk.validateString)(properties.input));\n    errors.collect(cdk.propertyValidator('inputPath', cdk.validateString)(properties.inputPath));\n    errors.collect(cdk.propertyValidator('pattern', cdk.requiredValidator)(properties.pattern));\n    errors.collect(cdk.propertyValidator('pattern', cdk.validateObject)(properties.pattern));\n    return errors.wrap('supplied properties not correct for \"EventBridgeRuleEventProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::StateMachine.EventBridgeRuleEvent` resource\n *\n * @param properties - the TypeScript properties of a `EventBridgeRuleEventProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::StateMachine.EventBridgeRuleEvent` resource.\n */\n// @ts-ignore TS6133\nfunction cfnStateMachineEventBridgeRuleEventPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnStateMachine_EventBridgeRuleEventPropertyValidator(properties).assertSuccess();\n    return {\n        EventBusName: cdk.stringToCloudFormation(properties.eventBusName),\n        Input: cdk.stringToCloudFormation(properties.input),\n        InputPath: cdk.stringToCloudFormation(properties.inputPath),\n        Pattern: cdk.objectToCloudFormation(properties.pattern),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnStateMachineEventBridgeRuleEventPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnStateMachine.EventBridgeRuleEventProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnStateMachine.EventBridgeRuleEventProperty>();\n    ret.addPropertyResult('eventBusName', 'EventBusName', properties.EventBusName != null ? cfn_parse.FromCloudFormation.getString(properties.EventBusName) : undefined);\n    ret.addPropertyResult('input', 'Input', properties.Input != null ? cfn_parse.FromCloudFormation.getString(properties.Input) : undefined);\n    ret.addPropertyResult('inputPath', 'InputPath', properties.InputPath != null ? cfn_parse.FromCloudFormation.getString(properties.InputPath) : undefined);\n    ret.addPropertyResult('pattern', 'Pattern', cfn_parse.FromCloudFormation.getAny(properties.Pattern));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnStateMachine {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#event-source-object\n     */\n    export interface EventSourceProperty {\n        /**\n         * `CfnStateMachine.EventSourceProperty.Properties`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#event-source-types\n         */\n        readonly properties: CfnStateMachine.CloudWatchEventEventProperty | CfnStateMachine.EventBridgeRuleEventProperty | CfnStateMachine.ScheduleEventProperty | CfnStateMachine.ApiEventProperty | cdk.IResolvable;\n        /**\n         * `CfnStateMachine.EventSourceProperty.Type`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#event-source-object\n         */\n        readonly type: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `EventSourceProperty`\n *\n * @param properties - the TypeScript properties of a `EventSourceProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnStateMachine_EventSourcePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('properties', cdk.requiredValidator)(properties.properties));\n    errors.collect(cdk.propertyValidator('properties', cdk.unionValidator(CfnStateMachine_CloudWatchEventEventPropertyValidator, CfnStateMachine_EventBridgeRuleEventPropertyValidator, CfnStateMachine_ScheduleEventPropertyValidator, CfnStateMachine_ApiEventPropertyValidator))(properties.properties));\n    errors.collect(cdk.propertyValidator('type', cdk.requiredValidator)(properties.type));\n    errors.collect(cdk.propertyValidator('type', cdk.validateString)(properties.type));\n    return errors.wrap('supplied properties not correct for \"EventSourceProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::StateMachine.EventSource` resource\n *\n * @param properties - the TypeScript properties of a `EventSourceProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::StateMachine.EventSource` resource.\n */\n// @ts-ignore TS6133\nfunction cfnStateMachineEventSourcePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnStateMachine_EventSourcePropertyValidator(properties).assertSuccess();\n    return {\n        Properties: cdk.unionMapper([CfnStateMachine_CloudWatchEventEventPropertyValidator, CfnStateMachine_EventBridgeRuleEventPropertyValidator, CfnStateMachine_ScheduleEventPropertyValidator, CfnStateMachine_ApiEventPropertyValidator], [cfnStateMachineCloudWatchEventEventPropertyToCloudFormation, cfnStateMachineEventBridgeRuleEventPropertyToCloudFormation, cfnStateMachineScheduleEventPropertyToCloudFormation, cfnStateMachineApiEventPropertyToCloudFormation])(properties.properties),\n        Type: cdk.stringToCloudFormation(properties.type),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnStateMachineEventSourcePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnStateMachine.EventSourceProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnStateMachine.EventSourceProperty>();\n    ret.addPropertyResult('properties', 'Properties', cfn_parse.FromCloudFormation.getTypeUnion([CfnStateMachine_CloudWatchEventEventPropertyValidator, CfnStateMachine_EventBridgeRuleEventPropertyValidator, CfnStateMachine_ScheduleEventPropertyValidator, CfnStateMachine_ApiEventPropertyValidator], [CfnStateMachineCloudWatchEventEventPropertyFromCloudFormation, CfnStateMachineEventBridgeRuleEventPropertyFromCloudFormation, CfnStateMachineScheduleEventPropertyFromCloudFormation, CfnStateMachineApiEventPropertyFromCloudFormation])(properties.Properties));\n    ret.addPropertyResult('type', 'Type', cfn_parse.FromCloudFormation.getString(properties.Type));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnStateMachine {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n     */\n    export interface FunctionSAMPTProperty {\n        /**\n         * `CfnStateMachine.FunctionSAMPTProperty.FunctionName`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly functionName: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `FunctionSAMPTProperty`\n *\n * @param properties - the TypeScript properties of a `FunctionSAMPTProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnStateMachine_FunctionSAMPTPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('functionName', cdk.requiredValidator)(properties.functionName));\n    errors.collect(cdk.propertyValidator('functionName', cdk.validateString)(properties.functionName));\n    return errors.wrap('supplied properties not correct for \"FunctionSAMPTProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::StateMachine.FunctionSAMPT` resource\n *\n * @param properties - the TypeScript properties of a `FunctionSAMPTProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::StateMachine.FunctionSAMPT` resource.\n */\n// @ts-ignore TS6133\nfunction cfnStateMachineFunctionSAMPTPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnStateMachine_FunctionSAMPTPropertyValidator(properties).assertSuccess();\n    return {\n        FunctionName: cdk.stringToCloudFormation(properties.functionName),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnStateMachineFunctionSAMPTPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnStateMachine.FunctionSAMPTProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnStateMachine.FunctionSAMPTProperty>();\n    ret.addPropertyResult('functionName', 'FunctionName', cfn_parse.FromCloudFormation.getString(properties.FunctionName));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnStateMachine {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies.html\n     */\n    export interface IAMPolicyDocumentProperty {\n        /**\n         * `CfnStateMachine.IAMPolicyDocumentProperty.Statement`\n         *\n         * @link http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies.html\n         */\n        readonly statement: any | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `IAMPolicyDocumentProperty`\n *\n * @param properties - the TypeScript properties of a `IAMPolicyDocumentProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnStateMachine_IAMPolicyDocumentPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('statement', cdk.requiredValidator)(properties.statement));\n    errors.collect(cdk.propertyValidator('statement', cdk.validateObject)(properties.statement));\n    return errors.wrap('supplied properties not correct for \"IAMPolicyDocumentProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::StateMachine.IAMPolicyDocument` resource\n *\n * @param properties - the TypeScript properties of a `IAMPolicyDocumentProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::StateMachine.IAMPolicyDocument` resource.\n */\n// @ts-ignore TS6133\nfunction cfnStateMachineIAMPolicyDocumentPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnStateMachine_IAMPolicyDocumentPropertyValidator(properties).assertSuccess();\n    return {\n        Statement: cdk.objectToCloudFormation(properties.statement),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnStateMachineIAMPolicyDocumentPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnStateMachine.IAMPolicyDocumentProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnStateMachine.IAMPolicyDocumentProperty>();\n    ret.addPropertyResult('statement', 'Statement', cfn_parse.FromCloudFormation.getAny(properties.Statement));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnStateMachine {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stepfunctions-statemachine-logdestination.html#cfn-stepfunctions-statemachine-logdestination-cloudwatchlogsloggroup\n     */\n    export interface LogDestinationProperty {\n        /**\n         * `CfnStateMachine.LogDestinationProperty.CloudWatchLogsLogGroup`\n         *\n         * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stepfunctions-statemachine-logdestination.html#cfn-stepfunctions-statemachine-logdestination-cloudwatchlogsloggroup\n         */\n        readonly cloudWatchLogsLogGroup: CfnStateMachine.CloudWatchLogsLogGroupProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `LogDestinationProperty`\n *\n * @param properties - the TypeScript properties of a `LogDestinationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnStateMachine_LogDestinationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('cloudWatchLogsLogGroup', cdk.requiredValidator)(properties.cloudWatchLogsLogGroup));\n    errors.collect(cdk.propertyValidator('cloudWatchLogsLogGroup', CfnStateMachine_CloudWatchLogsLogGroupPropertyValidator)(properties.cloudWatchLogsLogGroup));\n    return errors.wrap('supplied properties not correct for \"LogDestinationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::StateMachine.LogDestination` resource\n *\n * @param properties - the TypeScript properties of a `LogDestinationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::StateMachine.LogDestination` resource.\n */\n// @ts-ignore TS6133\nfunction cfnStateMachineLogDestinationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnStateMachine_LogDestinationPropertyValidator(properties).assertSuccess();\n    return {\n        CloudWatchLogsLogGroup: cfnStateMachineCloudWatchLogsLogGroupPropertyToCloudFormation(properties.cloudWatchLogsLogGroup),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnStateMachineLogDestinationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnStateMachine.LogDestinationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnStateMachine.LogDestinationProperty>();\n    ret.addPropertyResult('cloudWatchLogsLogGroup', 'CloudWatchLogsLogGroup', CfnStateMachineCloudWatchLogsLogGroupPropertyFromCloudFormation(properties.CloudWatchLogsLogGroup));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnStateMachine {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stepfunctions-statemachine-loggingconfiguration.html\n     */\n    export interface LoggingConfigurationProperty {\n        /**\n         * `CfnStateMachine.LoggingConfigurationProperty.Destinations`\n         *\n         * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stepfunctions-statemachine-loggingconfiguration.html\n         */\n        readonly destinations: Array<CfnStateMachine.LogDestinationProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * `CfnStateMachine.LoggingConfigurationProperty.IncludeExecutionData`\n         *\n         * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stepfunctions-statemachine-loggingconfiguration.html\n         */\n        readonly includeExecutionData: boolean | cdk.IResolvable;\n        /**\n         * `CfnStateMachine.LoggingConfigurationProperty.Level`\n         *\n         * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stepfunctions-statemachine-loggingconfiguration.html\n         */\n        readonly level: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `LoggingConfigurationProperty`\n *\n * @param properties - the TypeScript properties of a `LoggingConfigurationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnStateMachine_LoggingConfigurationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('destinations', cdk.requiredValidator)(properties.destinations));\n    errors.collect(cdk.propertyValidator('destinations', cdk.listValidator(CfnStateMachine_LogDestinationPropertyValidator))(properties.destinations));\n    errors.collect(cdk.propertyValidator('includeExecutionData', cdk.requiredValidator)(properties.includeExecutionData));\n    errors.collect(cdk.propertyValidator('includeExecutionData', cdk.validateBoolean)(properties.includeExecutionData));\n    errors.collect(cdk.propertyValidator('level', cdk.requiredValidator)(properties.level));\n    errors.collect(cdk.propertyValidator('level', cdk.validateString)(properties.level));\n    return errors.wrap('supplied properties not correct for \"LoggingConfigurationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::StateMachine.LoggingConfiguration` resource\n *\n * @param properties - the TypeScript properties of a `LoggingConfigurationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::StateMachine.LoggingConfiguration` resource.\n */\n// @ts-ignore TS6133\nfunction cfnStateMachineLoggingConfigurationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnStateMachine_LoggingConfigurationPropertyValidator(properties).assertSuccess();\n    return {\n        Destinations: cdk.listMapper(cfnStateMachineLogDestinationPropertyToCloudFormation)(properties.destinations),\n        IncludeExecutionData: cdk.booleanToCloudFormation(properties.includeExecutionData),\n        Level: cdk.stringToCloudFormation(properties.level),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnStateMachineLoggingConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnStateMachine.LoggingConfigurationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnStateMachine.LoggingConfigurationProperty>();\n    ret.addPropertyResult('destinations', 'Destinations', cfn_parse.FromCloudFormation.getArray(CfnStateMachineLogDestinationPropertyFromCloudFormation)(properties.Destinations));\n    ret.addPropertyResult('includeExecutionData', 'IncludeExecutionData', cfn_parse.FromCloudFormation.getBoolean(properties.IncludeExecutionData));\n    ret.addPropertyResult('level', 'Level', cfn_parse.FromCloudFormation.getString(properties.Level));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnStateMachine {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#s3-location-object\n     */\n    export interface S3LocationProperty {\n        /**\n         * `CfnStateMachine.S3LocationProperty.Bucket`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n         */\n        readonly bucket: string;\n        /**\n         * `CfnStateMachine.S3LocationProperty.Key`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n         */\n        readonly key: string;\n        /**\n         * `CfnStateMachine.S3LocationProperty.Version`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\n         */\n        readonly version?: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `S3LocationProperty`\n *\n * @param properties - the TypeScript properties of a `S3LocationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnStateMachine_S3LocationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('bucket', cdk.requiredValidator)(properties.bucket));\n    errors.collect(cdk.propertyValidator('bucket', cdk.validateString)(properties.bucket));\n    errors.collect(cdk.propertyValidator('key', cdk.requiredValidator)(properties.key));\n    errors.collect(cdk.propertyValidator('key', cdk.validateString)(properties.key));\n    errors.collect(cdk.propertyValidator('version', cdk.validateNumber)(properties.version));\n    return errors.wrap('supplied properties not correct for \"S3LocationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::StateMachine.S3Location` resource\n *\n * @param properties - the TypeScript properties of a `S3LocationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::StateMachine.S3Location` resource.\n */\n// @ts-ignore TS6133\nfunction cfnStateMachineS3LocationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnStateMachine_S3LocationPropertyValidator(properties).assertSuccess();\n    return {\n        Bucket: cdk.stringToCloudFormation(properties.bucket),\n        Key: cdk.stringToCloudFormation(properties.key),\n        Version: cdk.numberToCloudFormation(properties.version),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnStateMachineS3LocationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnStateMachine.S3LocationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnStateMachine.S3LocationProperty>();\n    ret.addPropertyResult('bucket', 'Bucket', cfn_parse.FromCloudFormation.getString(properties.Bucket));\n    ret.addPropertyResult('key', 'Key', cfn_parse.FromCloudFormation.getString(properties.Key));\n    ret.addPropertyResult('version', 'Version', properties.Version != null ? cfn_parse.FromCloudFormation.getNumber(properties.Version) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnStateMachine {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n     */\n    export interface SAMPolicyTemplateProperty {\n        /**\n         * `CfnStateMachine.SAMPolicyTemplateProperty.LambdaInvokePolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly lambdaInvokePolicy?: CfnStateMachine.FunctionSAMPTProperty | cdk.IResolvable;\n        /**\n         * `CfnStateMachine.SAMPolicyTemplateProperty.StepFunctionsExecutionPolicy`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly stepFunctionsExecutionPolicy?: CfnStateMachine.StateMachineSAMPTProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `SAMPolicyTemplateProperty`\n *\n * @param properties - the TypeScript properties of a `SAMPolicyTemplateProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnStateMachine_SAMPolicyTemplatePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('lambdaInvokePolicy', CfnStateMachine_FunctionSAMPTPropertyValidator)(properties.lambdaInvokePolicy));\n    errors.collect(cdk.propertyValidator('stepFunctionsExecutionPolicy', CfnStateMachine_StateMachineSAMPTPropertyValidator)(properties.stepFunctionsExecutionPolicy));\n    return errors.wrap('supplied properties not correct for \"SAMPolicyTemplateProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::StateMachine.SAMPolicyTemplate` resource\n *\n * @param properties - the TypeScript properties of a `SAMPolicyTemplateProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::StateMachine.SAMPolicyTemplate` resource.\n */\n// @ts-ignore TS6133\nfunction cfnStateMachineSAMPolicyTemplatePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnStateMachine_SAMPolicyTemplatePropertyValidator(properties).assertSuccess();\n    return {\n        LambdaInvokePolicy: cfnStateMachineFunctionSAMPTPropertyToCloudFormation(properties.lambdaInvokePolicy),\n        StepFunctionsExecutionPolicy: cfnStateMachineStateMachineSAMPTPropertyToCloudFormation(properties.stepFunctionsExecutionPolicy),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnStateMachineSAMPolicyTemplatePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnStateMachine.SAMPolicyTemplateProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnStateMachine.SAMPolicyTemplateProperty>();\n    ret.addPropertyResult('lambdaInvokePolicy', 'LambdaInvokePolicy', properties.LambdaInvokePolicy != null ? CfnStateMachineFunctionSAMPTPropertyFromCloudFormation(properties.LambdaInvokePolicy) : undefined);\n    ret.addPropertyResult('stepFunctionsExecutionPolicy', 'StepFunctionsExecutionPolicy', properties.StepFunctionsExecutionPolicy != null ? CfnStateMachineStateMachineSAMPTPropertyFromCloudFormation(properties.StepFunctionsExecutionPolicy) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnStateMachine {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#schedule\n     */\n    export interface ScheduleEventProperty {\n        /**\n         * `CfnStateMachine.ScheduleEventProperty.Input`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#schedule\n         */\n        readonly input?: string;\n        /**\n         * `CfnStateMachine.ScheduleEventProperty.Schedule`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#schedule\n         */\n        readonly schedule: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ScheduleEventProperty`\n *\n * @param properties - the TypeScript properties of a `ScheduleEventProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnStateMachine_ScheduleEventPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('input', cdk.validateString)(properties.input));\n    errors.collect(cdk.propertyValidator('schedule', cdk.requiredValidator)(properties.schedule));\n    errors.collect(cdk.propertyValidator('schedule', cdk.validateString)(properties.schedule));\n    return errors.wrap('supplied properties not correct for \"ScheduleEventProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::StateMachine.ScheduleEvent` resource\n *\n * @param properties - the TypeScript properties of a `ScheduleEventProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::StateMachine.ScheduleEvent` resource.\n */\n// @ts-ignore TS6133\nfunction cfnStateMachineScheduleEventPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnStateMachine_ScheduleEventPropertyValidator(properties).assertSuccess();\n    return {\n        Input: cdk.stringToCloudFormation(properties.input),\n        Schedule: cdk.stringToCloudFormation(properties.schedule),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnStateMachineScheduleEventPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnStateMachine.ScheduleEventProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnStateMachine.ScheduleEventProperty>();\n    ret.addPropertyResult('input', 'Input', properties.Input != null ? cfn_parse.FromCloudFormation.getString(properties.Input) : undefined);\n    ret.addPropertyResult('schedule', 'Schedule', cfn_parse.FromCloudFormation.getString(properties.Schedule));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnStateMachine {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n     */\n    export interface StateMachineSAMPTProperty {\n        /**\n         * `CfnStateMachine.StateMachineSAMPTProperty.StateMachineName`\n         *\n         * @link https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst\n         */\n        readonly stateMachineName: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `StateMachineSAMPTProperty`\n *\n * @param properties - the TypeScript properties of a `StateMachineSAMPTProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnStateMachine_StateMachineSAMPTPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('stateMachineName', cdk.requiredValidator)(properties.stateMachineName));\n    errors.collect(cdk.propertyValidator('stateMachineName', cdk.validateString)(properties.stateMachineName));\n    return errors.wrap('supplied properties not correct for \"StateMachineSAMPTProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::StateMachine.StateMachineSAMPT` resource\n *\n * @param properties - the TypeScript properties of a `StateMachineSAMPTProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::StateMachine.StateMachineSAMPT` resource.\n */\n// @ts-ignore TS6133\nfunction cfnStateMachineStateMachineSAMPTPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnStateMachine_StateMachineSAMPTPropertyValidator(properties).assertSuccess();\n    return {\n        StateMachineName: cdk.stringToCloudFormation(properties.stateMachineName),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnStateMachineStateMachineSAMPTPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnStateMachine.StateMachineSAMPTProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnStateMachine.StateMachineSAMPTProperty>();\n    ret.addPropertyResult('stateMachineName', 'StateMachineName', cfn_parse.FromCloudFormation.getString(properties.StateMachineName));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnStateMachine {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api\n     */\n    export interface TracingConfigurationProperty {\n        /**\n         * `CfnStateMachine.TracingConfigurationProperty.Enabled`\n         *\n         * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stepfunctions-statemachine-tracingconfiguration.html\n         */\n        readonly enabled?: boolean | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `TracingConfigurationProperty`\n *\n * @param properties - the TypeScript properties of a `TracingConfigurationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnStateMachine_TracingConfigurationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('enabled', cdk.validateBoolean)(properties.enabled));\n    return errors.wrap('supplied properties not correct for \"TracingConfigurationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Serverless::StateMachine.TracingConfiguration` resource\n *\n * @param properties - the TypeScript properties of a `TracingConfigurationProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Serverless::StateMachine.TracingConfiguration` resource.\n */\n// @ts-ignore TS6133\nfunction cfnStateMachineTracingConfigurationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnStateMachine_TracingConfigurationPropertyValidator(properties).assertSuccess();\n    return {\n        Enabled: cdk.booleanToCloudFormation(properties.enabled),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnStateMachineTracingConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnStateMachine.TracingConfigurationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnStateMachine.TracingConfigurationProperty>();\n    ret.addPropertyResult('enabled', 'Enabled', properties.Enabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.Enabled) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n"],
  "mappings": "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",
  "names": []
}
