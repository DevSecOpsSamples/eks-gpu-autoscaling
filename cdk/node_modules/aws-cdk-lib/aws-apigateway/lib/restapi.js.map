{
  "version": 3,
  "sources": ["restapi.ts"],
  "sourcesContent": ["import * as cloudwatch from '../../aws-cloudwatch';\nimport { IVpcEndpoint } from '../../aws-ec2';\nimport * as iam from '../../aws-iam';\nimport { ArnFormat, CfnOutput, IResource as IResourceBase, Resource, Stack } from '../../core';\nimport { Construct } from 'constructs';\nimport { ApiDefinition } from './api-definition';\nimport { ApiKey, ApiKeyOptions, IApiKey } from './api-key';\nimport { ApiGatewayMetrics } from './apigateway-canned-metrics.generated';\nimport { CfnAccount, CfnRestApi } from './apigateway.generated';\nimport { CorsOptions } from './cors';\nimport { Deployment } from './deployment';\nimport { DomainName, DomainNameOptions } from './domain-name';\nimport { GatewayResponse, GatewayResponseOptions } from './gateway-response';\nimport { Integration } from './integration';\nimport { Method, MethodOptions } from './method';\nimport { Model, ModelOptions } from './model';\nimport { RequestValidator, RequestValidatorOptions } from './requestvalidator';\nimport { IResource, ResourceBase, ResourceOptions } from './resource';\nimport { Stage, StageOptions } from './stage';\nimport { UsagePlan, UsagePlanProps } from './usage-plan';\n\nconst RESTAPI_SYMBOL = Symbol.for('@aws-cdk/aws-apigateway.RestApiBase');\n\nexport interface IRestApi extends IResourceBase {\n  /**\n   * The ID of this API Gateway RestApi.\n   * @attribute\n   */\n  readonly restApiId: string;\n\n  /**\n   * The resource ID of the root resource.\n   * @attribute\n   */\n  readonly restApiRootResourceId: string;\n\n  /**\n   * API Gateway deployment that represents the latest changes of the API.\n   * This resource will be automatically updated every time the REST API model changes.\n   * `undefined` when no deployment is configured.\n   */\n  readonly latestDeployment?: Deployment;\n\n  /**\n   * API Gateway stage that points to the latest deployment (if defined).\n   */\n  deploymentStage: Stage;\n\n  /**\n   * Represents the root resource (\"/\") of this API. Use it to define the API model:\n   *\n   *    api.root.addMethod('ANY', redirectToHomePage); // \"ANY /\"\n   *    api.root.addResource('friends').addMethod('GET', getFriendsHandler); // \"GET /friends\"\n   *\n   */\n  readonly root: IResource;\n\n  /**\n   * Gets the \"execute-api\" ARN\n   * @returns The \"execute-api\" ARN.\n   * @default \"*\" returns the execute API ARN for all methods/resources in\n   * this API.\n   * @param method The method (default `*`)\n   * @param path The resource path. Must start with '/' (default `*`)\n   * @param stage The stage (default `*`)\n   */\n  arnForExecuteApi(method?: string, path?: string, stage?: string): string;\n}\n\n/**\n * Represents the props that all Rest APIs share\n */\nexport interface RestApiBaseProps {\n  /**\n   * Indicates if a Deployment should be automatically created for this API,\n   * and recreated when the API model (resources, methods) changes.\n   *\n   * Since API Gateway deployments are immutable, When this option is enabled\n   * (by default), an AWS::ApiGateway::Deployment resource will automatically\n   * created with a logical ID that hashes the API model (methods, resources\n   * and options). This means that when the model changes, the logical ID of\n   * this CloudFormation resource will change, and a new deployment will be\n   * created.\n   *\n   * If this is set, `latestDeployment` will refer to the `Deployment` object\n   * and `deploymentStage` will refer to a `Stage` that points to this\n   * deployment. To customize the stage options, use the `deployOptions`\n   * property.\n   *\n   * A CloudFormation Output will also be defined with the root URL endpoint\n   * of this REST API.\n   *\n   * @default true\n   */\n  readonly deploy?: boolean;\n\n  /**\n   * Options for the API Gateway stage that will always point to the latest\n   * deployment when `deploy` is enabled. If `deploy` is disabled,\n   * this value cannot be set.\n   *\n   * @default - Based on defaults of `StageOptions`.\n   */\n  readonly deployOptions?: StageOptions;\n\n  /**\n   * Retains old deployment resources when the API changes. This allows\n   * manually reverting stages to point to old deployments via the AWS\n   * Console.\n   *\n   * @default false\n   */\n  readonly retainDeployments?: boolean;\n\n  /**\n   * A name for the API Gateway RestApi resource.\n   *\n   * @default - ID of the RestApi construct.\n   */\n  readonly restApiName?: string;\n\n  /**\n   * Custom header parameters for the request.\n   * @see https://docs.aws.amazon.com/cli/latest/reference/apigateway/import-rest-api.html\n   *\n   * @default - No parameters.\n   */\n  readonly parameters?: { [key: string]: string };\n\n  /**\n   * A policy document that contains the permissions for this RestApi\n   *\n   * @default - No policy.\n   */\n  readonly policy?: iam.PolicyDocument;\n\n  /**\n   * Indicates whether to roll back the resource if a warning occurs while API\n   * Gateway is creating the RestApi resource.\n   *\n   * @default false\n   */\n  readonly failOnWarnings?: boolean;\n\n  /**\n   * Configure a custom domain name and map it to this API.\n   *\n   * @default - no domain name is defined, use `addDomainName` or directly define a `DomainName`.\n   */\n  readonly domainName?: DomainNameOptions;\n\n  /**\n   * Automatically configure an AWS CloudWatch role for API Gateway.\n   *\n   * @default true\n   */\n  readonly cloudWatchRole?: boolean;\n\n  /**\n   * Export name for the CfnOutput containing the API endpoint\n   *\n   * @default - when no export name is given, output will be created without export\n   */\n  readonly endpointExportName?: string;\n\n  /**\n   * A list of the endpoint types of the API. Use this property when creating\n   * an API.\n   *\n   * @default EndpointType.EDGE\n   */\n  readonly endpointTypes?: EndpointType[];\n\n  /**\n   * Specifies whether clients can invoke the API using the default execute-api\n   * endpoint. To require that clients use a custom domain name to invoke the\n   * API, disable the default endpoint.\n   * @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html\n   *\n   * @default false\n   */\n  readonly disableExecuteApiEndpoint?: boolean;\n}\n\n/**\n * Represents the props that all Rest APIs share.\n * @deprecated - superseded by `RestApiBaseProps`\n */\nexport interface RestApiOptions extends RestApiBaseProps, ResourceOptions {\n}\n\n/**\n * Props to create a new instance of RestApi\n */\nexport interface RestApiProps extends RestApiOptions {\n  /**\n   * A description of the purpose of this API Gateway RestApi resource.\n   *\n   * @default - No description.\n   */\n  readonly description?: string;\n\n  /**\n   * The list of binary media mime-types that are supported by the RestApi\n   * resource, such as \"image/png\" or \"application/octet-stream\"\n   *\n   * @default - RestApi supports only UTF-8-encoded text payloads.\n   */\n  readonly binaryMediaTypes?: string[];\n\n  /**\n   * A nullable integer that is used to enable compression (with non-negative\n   * between 0 and 10485760 (10M) bytes, inclusive) or disable compression\n   * (when undefined) on an API. When compression is enabled, compression or\n   * decompression is not applied on the payload if the payload size is\n   * smaller than this value. Setting it to zero allows compression for any\n   * payload size.\n   *\n   * @default - Compression is disabled.\n   */\n  readonly minimumCompressionSize?: number;\n\n  /**\n   * The ID of the API Gateway RestApi resource that you want to clone.\n   *\n   * @default - None.\n   */\n  readonly cloneFrom?: IRestApi;\n\n  /**\n   * The source of the API key for metering requests according to a usage\n   * plan.\n   *\n   * @default - Metering is disabled.\n   */\n  readonly apiKeySourceType?: ApiKeySourceType;\n\n  /**\n   * The EndpointConfiguration property type specifies the endpoint types of a REST API\n   * @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-endpointconfiguration.html\n   *\n   * @default EndpointType.EDGE\n   */\n  readonly endpointConfiguration?: EndpointConfiguration;\n}\n\n/**\n * Props to instantiate a new SpecRestApi\n */\nexport interface SpecRestApiProps extends RestApiBaseProps {\n  /**\n   * An OpenAPI definition compatible with API Gateway.\n   * @see https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-import-api.html\n   */\n  readonly apiDefinition: ApiDefinition;\n}\n\n/**\n * Base implementation that are common to various implementations of IRestApi\n */\nexport abstract class RestApiBase extends Resource implements IRestApi {\n  /**\n   * Checks if the given object is an instance of RestApiBase.\n   * @internal\n   */\n  public static _isRestApiBase(x: any): x is RestApiBase {\n    return x !== null && typeof(x) === 'object' && RESTAPI_SYMBOL in x;\n  }\n\n  /**\n   * API Gateway deployment that represents the latest changes of the API.\n   * This resource will be automatically updated every time the REST API model changes.\n   * This will be undefined if `deploy` is false.\n   */\n  public get latestDeployment() {\n    return this._latestDeployment;\n  }\n\n  /**\n   * The first domain name mapped to this API, if defined through the `domainName`\n   * configuration prop, or added via `addDomainName`\n   */\n  public get domainName() {\n    return this._domainName;\n  }\n\n  /**\n   * The ID of this API Gateway RestApi.\n   */\n  public abstract readonly restApiId: string;\n\n  /**\n   * The resource ID of the root resource.\n   *\n   * @attribute\n   */\n  public abstract readonly restApiRootResourceId: string;\n\n  /**\n   * Represents the root resource of this API endpoint ('/').\n   * Resources and Methods are added to this resource.\n   */\n  public abstract readonly root: IResource;\n\n  /**\n   * API Gateway stage that points to the latest deployment (if defined).\n   *\n   * If `deploy` is disabled, you will need to explicitly assign this value in order to\n   * set up integrations.\n   */\n  public deploymentStage!: Stage;\n\n  /**\n   * A human friendly name for this Rest API. Note that this is different from `restApiId`.\n   * @attribute\n   */\n  public readonly restApiName: string;\n\n  private _latestDeployment?: Deployment;\n  private _domainName?: DomainName;\n\n  protected cloudWatchAccount?: CfnAccount;\n\n  constructor(scope: Construct, id: string, props: RestApiBaseProps = { }) {\n    const restApiName = props.restApiName ?? id;\n    super(scope, id, {\n      physicalName: restApiName,\n    });\n    this.restApiName = restApiName;\n\n    Object.defineProperty(this, RESTAPI_SYMBOL, { value: true });\n  }\n\n  /**\n   * Returns the URL for an HTTP path.\n   *\n   * Fails if `deploymentStage` is not set either by `deploy` or explicitly.\n   */\n  public urlForPath(path: string = '/'): string {\n    if (!this.deploymentStage) {\n      throw new Error('Cannot determine deployment stage for API from \"deploymentStage\". Use \"deploy\" or explicitly set \"deploymentStage\"');\n    }\n\n    return this.deploymentStage.urlForPath(path);\n  }\n\n  /**\n   * Defines an API Gateway domain name and maps it to this API.\n   * @param id The construct id\n   * @param options custom domain options\n   */\n  public addDomainName(id: string, options: DomainNameOptions): DomainName {\n    const domainName = new DomainName(this, id, {\n      ...options,\n      mapping: this,\n    });\n    if (!this._domainName) {\n      this._domainName = domainName;\n    }\n    return domainName;\n  }\n\n  /**\n   * Adds a usage plan.\n   */\n  public addUsagePlan(id: string, props: UsagePlanProps = {}): UsagePlan {\n    return new UsagePlan(this, id, props);\n  }\n\n  public arnForExecuteApi(method: string = '*', path: string = '/*', stage: string = '*') {\n    if (!path.startsWith('/')) {\n      throw new Error(`\"path\" must begin with a \"/\": '${path}'`);\n    }\n\n    if (method.toUpperCase() === 'ANY') {\n      method = '*';\n    }\n\n    return Stack.of(this).formatArn({\n      service: 'execute-api',\n      resource: this.restApiId,\n      arnFormat: ArnFormat.SLASH_RESOURCE_NAME,\n      resourceName: `${stage}/${method}${path}`,\n    });\n  }\n\n  /**\n   * Adds a new gateway response.\n   */\n  public addGatewayResponse(id: string, options: GatewayResponseOptions): GatewayResponse {\n    return new GatewayResponse(this, id, {\n      restApi: this,\n      ...options,\n    });\n  }\n\n  /**\n   * Add an ApiKey\n   */\n  public addApiKey(id: string, options?: ApiKeyOptions): IApiKey {\n    return new ApiKey(this, id, {\n      resources: [this],\n      ...options,\n    });\n  }\n\n  /**\n   * Returns the given named metric for this API\n   */\n  public metric(metricName: string, props?: cloudwatch.MetricOptions): cloudwatch.Metric {\n    return new cloudwatch.Metric({\n      namespace: 'AWS/ApiGateway',\n      metricName,\n      dimensionsMap: { ApiName: this.restApiName },\n      ...props,\n    }).attachTo(this);\n  }\n\n  /**\n   * Metric for the number of client-side errors captured in a given period.\n   *\n   * Default: sum over 5 minutes\n   */\n  public metricClientError(props?: cloudwatch.MetricOptions): cloudwatch.Metric {\n    return this.cannedMetric(ApiGatewayMetrics._4XxErrorSum, props);\n  }\n\n  /**\n   * Metric for the number of server-side errors captured in a given period.\n   *\n   * Default: sum over 5 minutes\n   */\n  public metricServerError(props?: cloudwatch.MetricOptions): cloudwatch.Metric {\n    return this.cannedMetric(ApiGatewayMetrics._5XxErrorSum, props);\n  }\n\n  /**\n   * Metric for the number of requests served from the API cache in a given period.\n   *\n   * Default: sum over 5 minutes\n   */\n  public metricCacheHitCount(props?: cloudwatch.MetricOptions): cloudwatch.Metric {\n    return this.cannedMetric(ApiGatewayMetrics.cacheHitCountSum, props);\n  }\n\n  /**\n   * Metric for the number of requests served from the backend in a given period,\n   * when API caching is enabled.\n   *\n   * Default: sum over 5 minutes\n   */\n  public metricCacheMissCount(props?: cloudwatch.MetricOptions): cloudwatch.Metric {\n    return this.cannedMetric(ApiGatewayMetrics.cacheMissCountSum, props);\n  }\n\n  /**\n   * Metric for the total number API requests in a given period.\n   *\n   * Default: sample count over 5 minutes\n   */\n  public metricCount(props?: cloudwatch.MetricOptions): cloudwatch.Metric {\n    return this.cannedMetric(ApiGatewayMetrics.countSum, {\n      statistic: 'SampleCount',\n      ...props,\n    });\n  }\n\n  /**\n   * Metric for the time between when API Gateway relays a request to the backend\n   * and when it receives a response from the backend.\n   *\n   * Default: average over 5 minutes.\n   */\n  public metricIntegrationLatency(props?: cloudwatch.MetricOptions): cloudwatch.Metric {\n    return this.cannedMetric(ApiGatewayMetrics.integrationLatencyAverage, props);\n  }\n\n  /**\n   * The time between when API Gateway receives a request from a client\n   * and when it returns a response to the client.\n   * The latency includes the integration latency and other API Gateway overhead.\n   *\n   * Default: average over 5 minutes.\n   */\n  public metricLatency(props?: cloudwatch.MetricOptions): cloudwatch.Metric {\n    return this.cannedMetric(ApiGatewayMetrics.latencyAverage, props);\n  }\n\n  /**\n   * Internal API used by `Method` to keep an inventory of methods at the API\n   * level for validation purposes.\n   *\n   * @internal\n   */\n  public _attachMethod(method: Method) {\n    ignore(method);\n  }\n\n  /**\n   * Associates a Deployment resource with this REST API.\n   *\n   * @internal\n   */\n  public _attachDeployment(deployment: Deployment) {\n    ignore(deployment);\n  }\n\n  /**\n   * Associates a Stage with this REST API\n   *\n   * @internal\n   */\n  public _attachStage(stage: Stage) {\n    if (this.cloudWatchAccount) {\n      stage.node.addDependency(this.cloudWatchAccount);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  protected _configureCloudWatchRole(apiResource: CfnRestApi) {\n    const role = new iam.Role(this, 'CloudWatchRole', {\n      assumedBy: new iam.ServicePrincipal('apigateway.amazonaws.com'),\n      managedPolicies: [iam.ManagedPolicy.fromAwsManagedPolicyName('service-role/AmazonAPIGatewayPushToCloudWatchLogs')],\n    });\n\n    this.cloudWatchAccount = new CfnAccount(this, 'Account', {\n      cloudWatchRoleArn: role.roleArn,\n    });\n\n    this.cloudWatchAccount.node.addDependency(apiResource);\n  }\n\n  /**\n   * @deprecated This method will be made internal. No replacement\n   */\n  protected configureCloudWatchRole(apiResource: CfnRestApi) {\n    this._configureCloudWatchRole(apiResource);\n  }\n\n  /**\n   * @deprecated This method will be made internal. No replacement\n   */\n  protected configureDeployment(props: RestApiBaseProps) {\n    this._configureDeployment(props);\n  }\n\n  /**\n   * @internal\n   */\n  protected _configureDeployment(props: RestApiBaseProps) {\n    const deploy = props.deploy ?? true;\n    if (deploy) {\n\n      this._latestDeployment = new Deployment(this, 'Deployment', {\n        description: 'Automatically created by the RestApi construct',\n        api: this,\n        retainDeployments: props.retainDeployments,\n      });\n\n      // encode the stage name into the construct id, so if we change the stage name, it will recreate a new stage.\n      // stage name is part of the endpoint, so that makes sense.\n      const stageName = (props.deployOptions && props.deployOptions.stageName) || 'prod';\n\n      this.deploymentStage = new Stage(this, `DeploymentStage.${stageName}`, {\n        deployment: this._latestDeployment,\n        ...props.deployOptions,\n      });\n\n      new CfnOutput(this, 'Endpoint', { exportName: props.endpointExportName, value: this.urlForPath() });\n    } else {\n      if (props.deployOptions) {\n        throw new Error('Cannot set \\'deployOptions\\' if \\'deploy\\' is disabled');\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  protected _configureEndpoints(props: RestApiProps): CfnRestApi.EndpointConfigurationProperty | undefined {\n    if (props.endpointTypes && props.endpointConfiguration) {\n      throw new Error('Only one of the RestApi props, endpointTypes or endpointConfiguration, is allowed');\n    }\n    if (props.endpointConfiguration) {\n      return {\n        types: props.endpointConfiguration.types,\n        vpcEndpointIds: props.endpointConfiguration?.vpcEndpoints?.map(vpcEndpoint => vpcEndpoint.vpcEndpointId),\n      };\n    }\n    if (props.endpointTypes) {\n      return { types: props.endpointTypes };\n    }\n    return undefined;\n  }\n\n  private cannedMetric(fn: (dims: { ApiName: string }) => cloudwatch.MetricProps, props?: cloudwatch.MetricOptions) {\n    return new cloudwatch.Metric({\n      ...fn({ ApiName: this.restApiName }),\n      ...props,\n    }).attachTo(this);\n  }\n}\n\n/**\n * Represents a REST API in Amazon API Gateway, created with an OpenAPI specification.\n *\n * Some properties normally accessible on @see {@link RestApi} - such as the description -\n * must be declared in the specification. All Resources and Methods need to be defined as\n * part of the OpenAPI specification file, and cannot be added via the CDK.\n *\n * By default, the API will automatically be deployed and accessible from a\n * public endpoint.\n *\n *\n * @resource AWS::ApiGateway::RestApi\n */\nexport class SpecRestApi extends RestApiBase {\n  /**\n   * The ID of this API Gateway RestApi.\n   */\n  public readonly restApiId: string;\n\n  /**\n   * The resource ID of the root resource.\n   *\n   * @attribute\n   */\n  public readonly restApiRootResourceId: string;\n\n  public readonly root: IResource;\n\n  constructor(scope: Construct, id: string, props: SpecRestApiProps) {\n    super(scope, id, props);\n    const apiDefConfig = props.apiDefinition.bind(this);\n    const resource = new CfnRestApi(this, 'Resource', {\n      name: this.restApiName,\n      policy: props.policy,\n      failOnWarnings: props.failOnWarnings,\n      body: apiDefConfig.inlineDefinition ?? undefined,\n      bodyS3Location: apiDefConfig.inlineDefinition ? undefined : apiDefConfig.s3Location,\n      endpointConfiguration: this._configureEndpoints(props),\n      parameters: props.parameters,\n    });\n\n    props.apiDefinition.bindAfterCreate(this, this);\n\n    this.node.defaultChild = resource;\n    this.restApiId = resource.ref;\n    this.restApiRootResourceId = resource.attrRootResourceId;\n    this.root = new RootResource(this, {}, this.restApiRootResourceId);\n\n    this._configureDeployment(props);\n    if (props.domainName) {\n      this.addDomainName('CustomDomain', props.domainName);\n    }\n\n    const cloudWatchRole = props.cloudWatchRole ?? true;\n    if (cloudWatchRole) {\n      this._configureCloudWatchRole(resource);\n    }\n  }\n}\n\n/**\n * Attributes that can be specified when importing a RestApi\n */\nexport interface RestApiAttributes {\n  /**\n   * The ID of the API Gateway RestApi.\n   */\n  readonly restApiId: string;\n\n  /**\n   * The resource ID of the root resource.\n   */\n  readonly rootResourceId: string;\n}\n\n/**\n * Represents a REST API in Amazon API Gateway.\n *\n * Use `addResource` and `addMethod` to configure the API model.\n *\n * By default, the API will automatically be deployed and accessible from a\n * public endpoint.\n */\nexport class RestApi extends RestApiBase {\n  /**\n   * Import an existing RestApi.\n   */\n  public static fromRestApiId(scope: Construct, id: string, restApiId: string): IRestApi {\n    class Import extends RestApiBase {\n      public readonly restApiId = restApiId;\n\n      public get root(): IResource {\n        throw new Error('root is not configured when imported using `fromRestApiId()`. Use `fromRestApiAttributes()` API instead.');\n      }\n\n      public get restApiRootResourceId(): string {\n        throw new Error('restApiRootResourceId is not configured when imported using `fromRestApiId()`. Use `fromRestApiAttributes()` API instead.');\n      }\n    }\n\n    return new Import(scope, id);\n  }\n\n  /**\n   * Import an existing RestApi that can be configured with additional Methods and Resources.\n   */\n  public static fromRestApiAttributes(scope: Construct, id: string, attrs: RestApiAttributes): IRestApi {\n    class Import extends RestApiBase {\n      public readonly restApiId = attrs.restApiId;\n      public readonly restApiRootResourceId = attrs.rootResourceId;\n      public readonly root: IResource = new RootResource(this, {}, this.restApiRootResourceId);\n    }\n\n    return new Import(scope, id);\n  }\n\n  public readonly restApiId: string;\n\n  public readonly root: IResource;\n\n  public readonly restApiRootResourceId: string;\n\n  /**\n   * The list of methods bound to this RestApi\n   */\n  public readonly methods = new Array<Method>();\n\n  /**\n   * This list of deployments bound to this RestApi\n   */\n  private readonly deployments = new Array<Deployment>();\n\n  constructor(scope: Construct, id: string, props: RestApiProps = { }) {\n    super(scope, id, props);\n\n    const resource = new CfnRestApi(this, 'Resource', {\n      name: this.physicalName,\n      description: props.description,\n      policy: props.policy,\n      failOnWarnings: props.failOnWarnings,\n      minimumCompressionSize: props.minimumCompressionSize,\n      binaryMediaTypes: props.binaryMediaTypes,\n      endpointConfiguration: this._configureEndpoints(props),\n      apiKeySourceType: props.apiKeySourceType,\n      cloneFrom: props.cloneFrom?.restApiId,\n      parameters: props.parameters,\n      disableExecuteApiEndpoint: props.disableExecuteApiEndpoint,\n    });\n    this.node.defaultChild = resource;\n    this.restApiId = resource.ref;\n\n    const cloudWatchRole = props.cloudWatchRole ?? true;\n    if (cloudWatchRole) {\n      this._configureCloudWatchRole(resource);\n    }\n\n    this._configureDeployment(props);\n    if (props.domainName) {\n      this.addDomainName('CustomDomain', props.domainName);\n    }\n\n    this.root = new RootResource(this, props, resource.attrRootResourceId);\n    this.restApiRootResourceId = resource.attrRootResourceId;\n\n    this.node.addValidation({ validate: () => this.validateRestApi() });\n  }\n\n  /**\n   * The deployed root URL of this REST API.\n   */\n  public get url() {\n    return this.urlForPath();\n  }\n\n  /**\n   * Adds a new model.\n   */\n  public addModel(id: string, props: ModelOptions): Model {\n    return new Model(this, id, {\n      ...props,\n      restApi: this,\n    });\n  }\n\n  /**\n   * Adds a new request validator.\n   */\n  public addRequestValidator(id: string, props: RequestValidatorOptions): RequestValidator {\n    return new RequestValidator(this, id, {\n      ...props,\n      restApi: this,\n    });\n  }\n\n  /**\n   * Internal API used by `Method` to keep an inventory of methods at the API\n   * level for validation purposes.\n   *\n   * @internal\n   */\n  public _attachMethod(method: Method) {\n    this.methods.push(method);\n\n    // add this method as a dependency to all deployments defined for this api\n    // when additional deployments are added, _attachDeployment is called and\n    // this method will be added there.\n    for (const dep of this.deployments) {\n      dep._addMethodDependency(method);\n    }\n  }\n\n  /**\n   * Attaches a deployment to this REST API.\n   *\n   * @internal\n   */\n  public _attachDeployment(deployment: Deployment) {\n    this.deployments.push(deployment);\n\n    // add all methods that were already defined as dependencies of this\n    // deployment when additional methods are added, _attachMethod is called and\n    // it will be added as a dependency to this deployment.\n    for (const method of this.methods) {\n      deployment._addMethodDependency(method);\n    }\n  }\n\n  /**\n   * Performs validation of the REST API.\n   */\n  private validateRestApi() {\n    if (this.methods.length === 0) {\n      return [\"The REST API doesn't contain any methods\"];\n    }\n\n    return [];\n  }\n}\n\n/**\n * The endpoint configuration of a REST API, including VPCs and endpoint types.\n *\n * EndpointConfiguration is a property of the AWS::ApiGateway::RestApi resource.\n */\nexport interface EndpointConfiguration {\n  /**\n   * A list of endpoint types of an API or its custom domain name.\n   *\n   * @default EndpointType.EDGE\n   */\n  readonly types: EndpointType[];\n\n  /**\n   * A list of VPC Endpoints against which to create Route53 ALIASes\n   *\n   * @default - no ALIASes are created for the endpoint.\n   */\n  readonly vpcEndpoints?: IVpcEndpoint[];\n}\n\nexport enum ApiKeySourceType {\n  /**\n   * To read the API key from the `X-API-Key` header of a request.\n   */\n  HEADER = 'HEADER',\n\n  /**\n   * To read the API key from the `UsageIdentifierKey` from a custom authorizer.\n   */\n  AUTHORIZER = 'AUTHORIZER',\n}\n\nexport enum EndpointType {\n  /**\n   * For an edge-optimized API and its custom domain name.\n   */\n  EDGE = 'EDGE',\n\n  /**\n   * For a regional API and its custom domain name.\n   */\n  REGIONAL = 'REGIONAL',\n\n  /**\n   * For a private API and its custom domain name.\n   */\n  PRIVATE = 'PRIVATE'\n}\n\nclass RootResource extends ResourceBase {\n  public readonly parentResource?: IResource;\n  public readonly api: RestApiBase;\n  public readonly resourceId: string;\n  public readonly path: string;\n  public readonly defaultIntegration?: Integration | undefined;\n  public readonly defaultMethodOptions?: MethodOptions | undefined;\n  public readonly defaultCorsPreflightOptions?: CorsOptions | undefined;\n\n  private readonly _restApi?: RestApi;\n\n  constructor(api: RestApiBase, props: ResourceOptions, resourceId: string) {\n    super(api, 'Default');\n\n    this.parentResource = undefined;\n    this.defaultIntegration = props.defaultIntegration;\n    this.defaultMethodOptions = props.defaultMethodOptions;\n    this.defaultCorsPreflightOptions = props.defaultCorsPreflightOptions;\n    this.api = api;\n    this.resourceId = resourceId;\n    this.path = '/';\n\n    if (api instanceof RestApi) {\n      this._restApi = api;\n    }\n\n    if (this.defaultCorsPreflightOptions) {\n      this.addCorsPreflight(this.defaultCorsPreflightOptions);\n    }\n  }\n\n  /**\n   * Get the RestApi associated with this Resource.\n   * @deprecated - Throws an error if this Resource is not associated with an instance of `RestApi`. Use `api` instead.\n   */\n  public get restApi(): RestApi {\n    if (!this._restApi) {\n      throw new Error('RestApi is not available on Resource not connected to an instance of RestApi. Use `api` instead');\n    }\n    return this._restApi;\n  }\n}\n\nfunction ignore(_x: any) {\n  return;\n}\n"],
  "mappings": "0SAAA,WAAA,QAAA,sBAAA,EAEA,IAAA,QAAA,eAAA,EACA,OAAA,QAAA,YAAA,EAGA,UAAA,QAAA,WAAA,EACA,sCAAA,QAAA,uCAAA,EACA,uBAAA,QAAA,wBAAA,EAEA,aAAA,QAAA,cAAA,EACA,cAAA,QAAA,eAAA,EACA,mBAAA,QAAA,oBAAA,EAGA,QAAA,QAAA,SAAA,EACA,mBAAA,QAAA,oBAAA,EACA,WAAA,QAAA,YAAA,EACA,QAAA,QAAA,SAAA,EACA,aAAA,QAAA,cAAA,EAEM,eAAiB,OAAO,IAAI,qCAAqC,EA+OvE,MAAsB,mBAAoB,QAAA,QAAQ,CA+DhD,YAAY,MAAkB,GAAY,MAA0B,CAAA,EAAG,mFACrE,KAAM,aAAW,IAAG,MAAM,eAAW,MAAA,KAAA,OAAA,GAAI,GACzC,MAAM,MAAO,GAAI,CACf,aAAc,YACf,EACD,KAAK,YAAc,YAEnB,OAAO,eAAe,KAAM,eAAgB,CAAE,MAAO,EAAI,CAAE,QAjE/C,gBAAe,EAAM,CACjC,MAAO,KAAM,MAAQ,MAAO,IAAO,UAAY,iBAAkB,MAQxD,mBAAgB,CACzB,MAAO,MAAK,qBAOH,aAAU,CACnB,MAAO,MAAK,YAuDP,WAAW,KAAe,IAAG,CAClC,GAAI,CAAC,KAAK,gBACR,KAAM,IAAI,OAAM,oHAAoH,EAGtI,MAAO,MAAK,gBAAgB,WAAW,IAAI,EAQtC,cAAc,GAAY,QAA0B,+EACzD,KAAM,YAAa,GAAI,eAAA,WAAW,KAAM,GAAI,IACvC,QACH,QAAS,KACV,EACD,MAAK,MAAK,aACR,MAAK,YAAc,YAEd,WAMF,aAAa,GAAY,MAAwB,CAAA,EAAE,iFACjD,GAAI,cAAA,UAAU,KAAM,GAAI,KAAK,EAG/B,iBAAiB,OAAiB,IAAK,KAAe,KAAM,MAAgB,IAAG,CACpF,GAAI,CAAC,KAAK,WAAW,GAAG,EACtB,KAAM,IAAI,OAAM,kCAAkC,OAAO,EAG3D,MAAI,QAAO,YAAW,IAAO,OAC3B,QAAS,KAGJ,OAAA,MAAM,GAAG,IAAI,EAAE,UAAU,CAC9B,QAAS,cACT,SAAU,KAAK,UACf,UAAW,OAAA,UAAU,oBACrB,aAAc,GAAG,SAAS,SAAS,OACpC,EAMI,mBAAmB,GAAY,QAA+B,2FAC5D,GAAI,oBAAA,gBAAgB,KAAM,GAAI,CACnC,QAAS,QACN,QACJ,EAMI,UAAU,GAAY,QAAuB,kFAC3C,GAAI,WAAA,OAAO,KAAM,GAAI,CAC1B,UAAW,CAAC,IAAI,KACb,QACJ,EAMI,OAAO,WAAoB,MAAgC,gFACzD,GAAI,YAAW,OAAO,CAC3B,UAAW,iBACX,WACA,cAAe,CAAE,QAAS,KAAK,WAAW,KACvC,MACJ,EAAE,SAAS,IAAI,EAQX,kBAAkB,MAAgC,gFAChD,KAAK,aAAa,sCAAA,kBAAkB,aAAc,KAAK,EAQzD,kBAAkB,MAAgC,gFAChD,KAAK,aAAa,sCAAA,kBAAkB,aAAc,KAAK,EAQzD,oBAAoB,MAAgC,gFAClD,KAAK,aAAa,sCAAA,kBAAkB,iBAAkB,KAAK,EAS7D,qBAAqB,MAAgC,gFACnD,KAAK,aAAa,sCAAA,kBAAkB,kBAAmB,KAAK,EAQ9D,YAAY,MAAgC,gFAC1C,KAAK,aAAa,sCAAA,kBAAkB,SAAU,CACnD,UAAW,iBACR,MACJ,EASI,yBAAyB,MAAgC,gFACvD,KAAK,aAAa,sCAAA,kBAAkB,0BAA2B,KAAK,EAUtE,cAAc,MAAgC,gFAC5C,KAAK,aAAa,sCAAA,kBAAkB,eAAgB,KAAK,EAS3D,cAAc,OAAc,CACjC,CAQK,kBAAkB,WAAsB,CAC7C,CAQK,aAAa,MAAY,CAC9B,AAAI,KAAK,mBACP,MAAM,KAAK,cAAc,KAAK,iBAAiB,EAOzC,yBAAyB,YAAuB,CACxD,KAAM,MAAO,GAAI,KAAI,KAAK,KAAM,iBAAkB,CAChD,UAAW,GAAI,KAAI,iBAAiB,0BAA0B,EAC9D,gBAAiB,CAAC,IAAI,cAAc,yBAAyB,mDAAmD,CAAC,EAClH,EAED,KAAK,kBAAoB,GAAI,wBAAA,WAAW,KAAM,UAAW,CACvD,kBAAmB,KAAK,QACzB,EAED,KAAK,kBAAkB,KAAK,cAAc,WAAW,EAM7C,wBAAwB,YAAuB,CACvD,KAAK,yBAAyB,WAAW,EAMjC,oBAAoB,MAAuB,CACnD,KAAK,qBAAqB,KAAK,EAMvB,qBAAqB,MAAuB,QAEpD,GADY,IAAG,MAAM,UAAM,MAAA,KAAA,OAAA,GAAI,GACnB,CAEV,KAAK,kBAAoB,GAAI,cAAA,WAAW,KAAM,aAAc,CAC1D,YAAa,iDACb,IAAK,KACL,kBAAmB,MAAM,kBAC1B,EAID,KAAM,WAAa,MAAM,eAAiB,MAAM,cAAc,WAAc,OAE5E,KAAK,gBAAkB,GAAI,SAAA,MAAM,KAAM,mBAAmB,YAAa,CACrE,WAAY,KAAK,qBACd,MAAM,cACV,EAED,GAAI,QAAA,UAAU,KAAM,WAAY,CAAE,WAAY,MAAM,mBAAoB,MAAO,KAAK,WAAU,CAAE,CAAE,UAE9F,MAAM,cACR,KAAM,IAAI,OAAM,oDAAwD,EAQpE,oBAAoB,MAAmB,WAC/C,GAAI,MAAM,eAAiB,MAAM,sBAC/B,KAAM,IAAI,OAAM,mFAAmF,EAErG,GAAI,MAAM,sBACR,MAAO,CACL,MAAO,MAAM,sBAAsB,MACnC,eAAc,IAAA,IAAE,MAAM,yBAAqB,MAAA,KAAA,OAAA,OAAA,GAAE,gBAAY,MAAA,KAAA,OAAA,OAAA,GAAE,IAAI,aAAe,YAAY,aAAa,GAG3G,GAAI,MAAM,cACR,MAAO,CAAE,MAAO,MAAM,aAAa,EAK/B,aAAa,GAA2D,MAAgC,CAC9G,MAAO,IAAI,YAAW,OAAO,IACxB,GAAG,CAAE,QAAS,KAAK,WAAW,CAAE,KAChC,MACJ,EAAE,SAAS,IAAI,GArVpB,QAAA,YAAA,kHAsWA,MAAa,mBAAoB,YAAW,CAe1C,YAAY,MAAkB,GAAY,MAAuB,WAC/D,MAAM,MAAO,GAAI,KAAK,6EACtB,KAAM,cAAe,MAAM,cAAc,KAAK,IAAI,EAC5C,SAAW,GAAI,wBAAA,WAAW,KAAM,WAAY,CAChD,KAAM,KAAK,YACX,OAAQ,MAAM,OACd,eAAgB,MAAM,eACtB,KAAI,IAAE,aAAa,oBAAgB,MAAA,KAAA,OAAA,GAAI,OACvC,eAAgB,aAAa,iBAAmB,OAAY,aAAa,WACzE,sBAAuB,KAAK,oBAAoB,KAAK,EACrD,WAAY,MAAM,WACnB,EAED,MAAM,cAAc,gBAAgB,KAAM,IAAI,EAE9C,KAAK,KAAK,aAAe,SACzB,KAAK,UAAY,SAAS,IAC1B,KAAK,sBAAwB,SAAS,mBACtC,KAAK,KAAO,GAAI,cAAa,KAAM,CAAA,EAAI,KAAK,qBAAqB,EAEjE,KAAK,qBAAqB,KAAK,EAC3B,MAAM,YACR,KAAK,cAAc,eAAgB,MAAM,UAAU,EAIjD,AADgB,KAAG,MAAM,kBAAc,MAAA,KAAA,OAAA,GAAI,KAE7C,KAAK,yBAAyB,QAAQ,GA1C5C,QAAA,YAAA,kHAsEA,MAAa,eAAgB,YAAW,CAiDtC,YAAY,MAAkB,GAAY,MAAsB,CAAA,EAAG,WACjE,MAAM,MAAO,GAAI,KAAK,EARR,KAAA,QAAU,GAAI,OAKb,KAAA,YAAc,GAAI,8EAKjC,KAAM,UAAW,GAAI,wBAAA,WAAW,KAAM,WAAY,CAChD,KAAM,KAAK,aACX,YAAa,MAAM,YACnB,OAAQ,MAAM,OACd,eAAgB,MAAM,eACtB,uBAAwB,MAAM,uBAC9B,iBAAkB,MAAM,iBACxB,sBAAuB,KAAK,oBAAoB,KAAK,EACrD,iBAAkB,MAAM,iBACxB,UAAS,IAAE,MAAM,aAAS,MAAA,KAAA,OAAA,OAAA,GAAE,UAC5B,WAAY,MAAM,WAClB,0BAA2B,MAAM,0BAClC,EACD,KAAK,KAAK,aAAe,SACzB,KAAK,UAAY,SAAS,IAGtB,AADgB,KAAG,MAAM,kBAAc,MAAA,KAAA,OAAA,GAAI,KAE7C,KAAK,yBAAyB,QAAQ,EAGxC,KAAK,qBAAqB,KAAK,EAC3B,MAAM,YACR,KAAK,cAAc,eAAgB,MAAM,UAAU,EAGrD,KAAK,KAAO,GAAI,cAAa,KAAM,MAAO,SAAS,kBAAkB,EACrE,KAAK,sBAAwB,SAAS,mBAEtC,KAAK,KAAK,cAAc,CAAE,SAAU,IAAM,KAAK,gBAAe,CAAE,CAAE,QA7EtD,eAAc,MAAkB,GAAY,UAAiB,CACzE,MAAM,cAAe,YAAW,CAAhC,aAAA,qBACkB,KAAA,UAAY,SAS9B,IAPa,OAAI,CACb,KAAM,IAAI,OAAM,0GAA0G,CAC5H,IAEW,wBAAqB,CAC9B,KAAM,IAAI,OAAM,2HAA2H,CAC7I,EAGF,MAAO,IAAI,QAAO,MAAO,EAAE,QAMf,uBAAsB,MAAkB,GAAY,MAAwB,6EACxF,MAAM,cAAe,YAAW,CAAhC,aAAA,qBACkB,KAAA,UAAY,MAAM,UAClB,KAAA,sBAAwB,MAAM,eAC9B,KAAA,KAAkB,GAAI,cAAa,KAAM,CAAA,EAAI,KAAK,qBAAqB,CACzF,EAEA,MAAO,IAAI,QAAO,MAAO,EAAE,KAyDlB,MAAG,CACZ,MAAO,MAAK,WAAU,EAMjB,SAAS,GAAY,MAAmB,+EACtC,GAAI,SAAA,MAAM,KAAM,GAAI,IACtB,MACH,QAAS,KACV,EAMI,oBAAoB,GAAY,MAA8B,0FAC5D,GAAI,oBAAA,iBAAiB,KAAM,GAAI,IACjC,MACH,QAAS,KACV,EASI,cAAc,OAAc,CACjC,KAAK,QAAQ,KAAK,MAAM,EAKxB,SAAW,OAAO,MAAK,YACrB,IAAI,qBAAqB,MAAM,EAS5B,kBAAkB,WAAsB,CAC7C,KAAK,YAAY,KAAK,UAAU,EAKhC,SAAW,UAAU,MAAK,QACxB,WAAW,qBAAqB,MAAM,EAOlC,iBAAe,CACrB,MAAI,MAAK,QAAQ,SAAW,EACnB,CAAC,0CAA0C,EAG7C,CAAA,GAxJX,QAAA,QAAA,sGAiLA,GAAY,kBAAZ,AAAA,UAAY,kBAAgB,CAI1B,kBAAA,OAAA,SAKA,kBAAA,WAAA,YACF,GAVY,iBAAA,QAAA,kBAAA,SAAA,iBAAgB,CAAA,EAAA,EAY5B,GAAY,cAAZ,AAAA,UAAY,cAAY,CAItB,cAAA,KAAA,OAKA,cAAA,SAAA,WAKA,cAAA,QAAA,SACF,GAfY,aAAA,QAAA,cAAA,SAAA,aAAY,CAAA,EAAA,EAiBxB,MAAM,oBAAqB,YAAA,YAAY,CAWrC,YAAY,IAAkB,MAAwB,WAAkB,CACtE,MAAM,IAAK,SAAS,EAEpB,KAAK,eAAiB,OACtB,KAAK,mBAAqB,MAAM,mBAChC,KAAK,qBAAuB,MAAM,qBAClC,KAAK,4BAA8B,MAAM,4BACzC,KAAK,IAAM,IACX,KAAK,WAAa,WAClB,KAAK,KAAO,IAER,cAAe,UACjB,MAAK,SAAW,KAGd,KAAK,6BACP,KAAK,iBAAiB,KAAK,2BAA2B,KAQ/C,UAAO,CAChB,GAAI,CAAC,KAAK,SACR,KAAM,IAAI,OAAM,iGAAiG,EAEnH,MAAO,MAAK,UAIhB,gBAAgB,GAAO,CAEvB",
  "names": []
}
