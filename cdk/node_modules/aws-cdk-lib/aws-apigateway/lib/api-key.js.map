{
  "version": 3,
  "sources": ["api-key.ts"],
  "sourcesContent": ["import * as iam from '../../aws-iam';\nimport { ArnFormat, IResource as IResourceBase, Resource, Stack } from '../../core';\nimport { Construct } from 'constructs';\nimport { CfnApiKey } from './apigateway.generated';\nimport { ResourceOptions } from './resource';\nimport { IRestApi } from './restapi';\nimport { QuotaSettings, ThrottleSettings, UsagePlan, UsagePlanPerApiStage } from './usage-plan';\n\n/**\n * API keys are alphanumeric string values that you distribute to\n * app developer customers to grant access to your API\n */\nexport interface IApiKey extends IResourceBase {\n  /**\n   * The API key ID.\n   * @attribute\n   */\n  readonly keyId: string;\n\n  /**\n   * The API key ARN.\n   */\n  readonly keyArn: string;\n}\n\n/**\n * The options for creating an API Key.\n */\nexport interface ApiKeyOptions extends ResourceOptions {\n  /**\n   * A name for the API key. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the API key name.\n   * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-apikey.html#cfn-apigateway-apikey-name\n   * @default automically generated name\n   */\n  readonly apiKeyName?: string;\n\n  /**\n   * The value of the API key. Must be at least 20 characters long.\n   * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-apikey.html#cfn-apigateway-apikey-value\n   * @default none\n   */\n  readonly value?: string;\n\n  /**\n   * A description of the purpose of the API key.\n   * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-apikey.html#cfn-apigateway-apikey-description\n   * @default none\n   */\n  readonly description?: string;\n}\n\n/**\n * ApiKey Properties.\n */\nexport interface ApiKeyProps extends ApiKeyOptions {\n  /**\n   * A list of resources this api key is associated with.\n   * @default none\n   */\n  readonly resources?: IRestApi[];\n\n  /**\n   * An AWS Marketplace customer identifier to use when integrating with the AWS SaaS Marketplace.\n   * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-apikey.html#cfn-apigateway-apikey-customerid\n   * @default none\n   */\n  readonly customerId?: string;\n\n  /**\n   * Indicates whether the API key can be used by clients.\n   * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-apikey.html#cfn-apigateway-apikey-enabled\n   * @default true\n   */\n  readonly enabled?: boolean;\n\n  /**\n   * Specifies whether the key identifier is distinct from the created API key value.\n   * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-apikey.html#cfn-apigateway-apikey-generatedistinctid\n   * @default false\n   */\n  readonly generateDistinctId?: boolean;\n}\n\n/**\n * Base implementation that is common to the various implementations of IApiKey\n */\nabstract class ApiKeyBase extends Resource implements IApiKey {\n  public abstract readonly keyId: string;\n  public abstract readonly keyArn: string;\n\n  /**\n   * Permits the IAM principal all read operations through this key\n   *\n   * @param grantee The principal to grant access to\n   */\n  public grantRead(grantee: iam.IGrantable): iam.Grant {\n    return iam.Grant.addToPrincipal({\n      grantee,\n      actions: readPermissions,\n      resourceArns: [this.keyArn],\n    });\n  }\n\n  /**\n   * Permits the IAM principal all write operations through this key\n   *\n   * @param grantee The principal to grant access to\n   */\n  public grantWrite(grantee: iam.IGrantable): iam.Grant {\n    return iam.Grant.addToPrincipal({\n      grantee,\n      actions: writePermissions,\n      resourceArns: [this.keyArn],\n    });\n  }\n\n  /**\n   * Permits the IAM principal all read and write operations through this key\n   *\n   * @param grantee The principal to grant access to\n   */\n  public grantReadWrite(grantee: iam.IGrantable): iam.Grant {\n    return iam.Grant.addToPrincipal({\n      grantee,\n      actions: [...readPermissions, ...writePermissions],\n      resourceArns: [this.keyArn],\n    });\n  }\n}\n\n/**\n * An API Gateway ApiKey.\n *\n * An ApiKey can be distributed to API clients that are executing requests\n * for Method resources that require an Api Key.\n */\nexport class ApiKey extends ApiKeyBase {\n\n  /**\n   * Import an ApiKey by its Id\n   */\n  public static fromApiKeyId(scope: Construct, id: string, apiKeyId: string): IApiKey {\n    class Import extends ApiKeyBase {\n      public keyId = apiKeyId;\n      public keyArn = Stack.of(this).formatArn({\n        service: 'apigateway',\n        account: '',\n        resource: '/apikeys',\n        arnFormat: ArnFormat.SLASH_RESOURCE_NAME,\n        resourceName: apiKeyId,\n      });\n    }\n\n    return new Import(scope, id);\n  }\n\n  public readonly keyId: string;\n  public readonly keyArn: string;\n\n  constructor(scope: Construct, id: string, props: ApiKeyProps = { }) {\n    super(scope, id, {\n      physicalName: props.apiKeyName,\n    });\n\n    const resource = new CfnApiKey(this, 'Resource', {\n      customerId: props.customerId,\n      description: props.description,\n      enabled: props.enabled ?? true,\n      generateDistinctId: props.generateDistinctId,\n      name: this.physicalName,\n      stageKeys: this.renderStageKeys(props.resources),\n      value: props.value,\n    });\n\n    this.keyId = resource.ref;\n    this.keyArn = Stack.of(this).formatArn({\n      service: 'apigateway',\n      account: '',\n      resource: '/apikeys',\n      arnFormat: ArnFormat.SLASH_RESOURCE_NAME,\n      resourceName: this.keyId,\n    });\n  }\n\n  private renderStageKeys(resources: IRestApi[] | undefined): CfnApiKey.StageKeyProperty[] | undefined {\n    if (!resources) {\n      return undefined;\n    }\n\n    return resources.map((resource: IRestApi) => {\n      const restApi = resource;\n      const restApiId = restApi.restApiId;\n      const stageName = restApi.deploymentStage!.stageName.toString();\n      return { restApiId, stageName };\n    });\n  }\n}\n\n/**\n * RateLimitedApiKey properties.\n */\nexport interface RateLimitedApiKeyProps extends ApiKeyProps {\n  /**\n   * API Stages to be associated with the RateLimitedApiKey.\n   * @default none\n   */\n  readonly apiStages?: UsagePlanPerApiStage[];\n\n  /**\n   * Number of requests clients can make in a given time period.\n   * @default none\n   */\n  readonly quota?: QuotaSettings;\n\n  /**\n   * Overall throttle settings for the API.\n   * @default none\n   */\n  readonly throttle?: ThrottleSettings;\n}\n\n/**\n * An API Gateway ApiKey, for which a rate limiting configuration can be specified.\n *\n * @resource AWS::ApiGateway::ApiKey\n */\nexport class RateLimitedApiKey extends ApiKeyBase {\n  public readonly keyId: string;\n  public readonly keyArn: string;\n\n  constructor(scope: Construct, id: string, props: RateLimitedApiKeyProps = { }) {\n    super(scope, id, {\n      physicalName: props.apiKeyName,\n    });\n\n    const resource = new ApiKey(this, 'Resource', props);\n\n    if (props.apiStages || props.quota || props.throttle) {\n      const usageplan = new UsagePlan(this, 'UsagePlanResource', {\n        apiStages: props.apiStages,\n        quota: props.quota,\n        throttle: props.throttle,\n      });\n      usageplan.addApiKey(resource);\n    }\n\n    this.keyId = resource.keyId;\n    this.keyArn = resource.keyArn;\n  }\n}\n\nconst readPermissions = [\n  'apigateway:GET',\n];\n\nconst writePermissions = [\n  'apigateway:POST',\n  'apigateway:PUT',\n  'apigateway:PATCH',\n  'apigateway:DELETE',\n];"],
  "mappings": "0OAAA,IAAA,QAAA,eAAA,EACA,OAAA,QAAA,YAAA,EAEA,uBAAA,QAAA,wBAAA,EAGA,aAAA,QAAA,cAAA,EAgFA,MAAe,kBAAmB,QAAA,QAAQ,CASjC,UAAU,QAAuB,CACtC,MAAO,KAAI,MAAM,eAAe,CAC9B,QACA,QAAS,gBACT,aAAc,CAAC,KAAK,MAAM,EAC3B,EAQI,WAAW,QAAuB,CACvC,MAAO,KAAI,MAAM,eAAe,CAC9B,QACA,QAAS,iBACT,aAAc,CAAC,KAAK,MAAM,EAC3B,EAQI,eAAe,QAAuB,CAC3C,MAAO,KAAI,MAAM,eAAe,CAC9B,QACA,QAAS,CAAC,GAAG,gBAAiB,GAAG,gBAAgB,EACjD,aAAc,CAAC,KAAK,MAAM,EAC3B,GAUL,MAAa,cAAe,WAAU,CAuBpC,YAAY,MAAkB,GAAY,MAAqB,CAAA,EAAG,QAChE,MAAM,MAAO,GAAI,CACf,aAAc,MAAM,WACrB,wEAED,KAAM,UAAW,GAAI,wBAAA,UAAU,KAAM,WAAY,CAC/C,WAAY,MAAM,WAClB,YAAa,MAAM,YACnB,QAAO,IAAE,MAAM,WAAO,MAAA,KAAA,OAAA,GAAI,GAC1B,mBAAoB,MAAM,mBAC1B,KAAM,KAAK,aACX,UAAW,KAAK,gBAAgB,MAAM,SAAS,EAC/C,MAAO,MAAM,MACd,EAED,KAAK,MAAQ,SAAS,IACtB,KAAK,OAAS,OAAA,MAAM,GAAG,IAAI,EAAE,UAAU,CACrC,QAAS,aACT,QAAS,GACT,SAAU,WACV,UAAW,OAAA,UAAU,oBACrB,aAAc,KAAK,MACpB,QAxCW,cAAa,MAAkB,GAAY,SAAgB,CACvE,MAAM,cAAe,WAAU,CAA/B,aAAA,qBACS,KAAA,MAAQ,SACR,KAAA,OAAS,OAAA,MAAM,GAAG,IAAI,EAAE,UAAU,CACvC,QAAS,aACT,QAAS,GACT,SAAU,WACV,UAAW,OAAA,UAAU,oBACrB,aAAc,SACf,CACH,EAEA,MAAO,IAAI,QAAO,MAAO,EAAE,EA+BrB,gBAAgB,UAAiC,CACvD,GAAI,EAAC,UAIL,MAAO,WAAU,IAAI,AAAC,UAAsB,CAC1C,KAAM,SAAU,SACV,UAAY,QAAQ,UACpB,UAAY,QAAQ,gBAAiB,UAAU,SAAQ,EAC7D,MAAO,CAAE,UAAW,SAAS,CAC/B,CAAC,GA1DL,QAAA,OAAA,mGA0FA,MAAa,yBAA0B,WAAU,CAI/C,YAAY,MAAkB,GAAY,MAAgC,CAAA,EAAG,CAC3E,MAAM,MAAO,GAAI,CACf,aAAc,MAAM,WACrB,mFAED,KAAM,UAAW,GAAI,QAAO,KAAM,WAAY,KAAK,EAEnD,AAAI,OAAM,WAAa,MAAM,OAAS,MAAM,WAM1C,AALkB,GAAI,cAAA,UAAU,KAAM,oBAAqB,CACzD,UAAW,MAAM,UACjB,MAAO,MAAM,MACb,SAAU,MAAM,SACjB,EACS,UAAU,QAAQ,EAG9B,KAAK,MAAQ,SAAS,MACtB,KAAK,OAAS,SAAS,QArB3B,QAAA,kBAAA,oIAyBA,KAAM,iBAAkB,CACtB,kBAGI,iBAAmB,CACvB,kBACA,iBACA,mBACA",
  "names": []
}
