"use strict";var _a,_b,_c;Object.defineProperty(exports,"__esModule",{value:!0}),exports.EndpointType=exports.ApiKeySourceType=exports.RestApi=exports.SpecRestApi=exports.RestApiBase=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cloudwatch=require("../../aws-cloudwatch"),iam=require("../../aws-iam"),core_1=require("../../core"),api_key_1=require("./api-key"),apigateway_canned_metrics_generated_1=require("./apigateway-canned-metrics.generated"),apigateway_generated_1=require("./apigateway.generated"),deployment_1=require("./deployment"),domain_name_1=require("./domain-name"),gateway_response_1=require("./gateway-response"),model_1=require("./model"),requestvalidator_1=require("./requestvalidator"),resource_1=require("./resource"),stage_1=require("./stage"),usage_plan_1=require("./usage-plan"),RESTAPI_SYMBOL=Symbol.for("@aws-cdk/aws-apigateway.RestApiBase");class RestApiBase extends core_1.Resource{constructor(scope,id,props={}){var _d;jsiiDeprecationWarnings.aws_cdk_lib_aws_apigateway_RestApiBaseProps(props);const restApiName=(_d=props.restApiName)!==null&&_d!==void 0?_d:id;super(scope,id,{physicalName:restApiName});this.restApiName=restApiName,Object.defineProperty(this,RESTAPI_SYMBOL,{value:!0})}static _isRestApiBase(x){return x!==null&&typeof x=="object"&&RESTAPI_SYMBOL in x}get latestDeployment(){return this._latestDeployment}get domainName(){return this._domainName}urlForPath(path="/"){if(!this.deploymentStage)throw new Error('Cannot determine deployment stage for API from "deploymentStage". Use "deploy" or explicitly set "deploymentStage"');return this.deploymentStage.urlForPath(path)}addDomainName(id,options){jsiiDeprecationWarnings.aws_cdk_lib_aws_apigateway_DomainNameOptions(options);const domainName=new domain_name_1.DomainName(this,id,{...options,mapping:this});return this._domainName||(this._domainName=domainName),domainName}addUsagePlan(id,props={}){return jsiiDeprecationWarnings.aws_cdk_lib_aws_apigateway_UsagePlanProps(props),new usage_plan_1.UsagePlan(this,id,props)}arnForExecuteApi(method="*",path="/*",stage="*"){if(!path.startsWith("/"))throw new Error(`"path" must begin with a "/": '${path}'`);return method.toUpperCase()==="ANY"&&(method="*"),core_1.Stack.of(this).formatArn({service:"execute-api",resource:this.restApiId,arnFormat:core_1.ArnFormat.SLASH_RESOURCE_NAME,resourceName:`${stage}/${method}${path}`})}addGatewayResponse(id,options){return jsiiDeprecationWarnings.aws_cdk_lib_aws_apigateway_GatewayResponseOptions(options),new gateway_response_1.GatewayResponse(this,id,{restApi:this,...options})}addApiKey(id,options){return jsiiDeprecationWarnings.aws_cdk_lib_aws_apigateway_ApiKeyOptions(options),new api_key_1.ApiKey(this,id,{resources:[this],...options})}metric(metricName,props){return jsiiDeprecationWarnings.aws_cdk_lib_aws_cloudwatch_MetricOptions(props),new cloudwatch.Metric({namespace:"AWS/ApiGateway",metricName,dimensionsMap:{ApiName:this.restApiName},...props}).attachTo(this)}metricClientError(props){return jsiiDeprecationWarnings.aws_cdk_lib_aws_cloudwatch_MetricOptions(props),this.cannedMetric(apigateway_canned_metrics_generated_1.ApiGatewayMetrics._4XxErrorSum,props)}metricServerError(props){return jsiiDeprecationWarnings.aws_cdk_lib_aws_cloudwatch_MetricOptions(props),this.cannedMetric(apigateway_canned_metrics_generated_1.ApiGatewayMetrics._5XxErrorSum,props)}metricCacheHitCount(props){return jsiiDeprecationWarnings.aws_cdk_lib_aws_cloudwatch_MetricOptions(props),this.cannedMetric(apigateway_canned_metrics_generated_1.ApiGatewayMetrics.cacheHitCountSum,props)}metricCacheMissCount(props){return jsiiDeprecationWarnings.aws_cdk_lib_aws_cloudwatch_MetricOptions(props),this.cannedMetric(apigateway_canned_metrics_generated_1.ApiGatewayMetrics.cacheMissCountSum,props)}metricCount(props){return jsiiDeprecationWarnings.aws_cdk_lib_aws_cloudwatch_MetricOptions(props),this.cannedMetric(apigateway_canned_metrics_generated_1.ApiGatewayMetrics.countSum,{statistic:"SampleCount",...props})}metricIntegrationLatency(props){return jsiiDeprecationWarnings.aws_cdk_lib_aws_cloudwatch_MetricOptions(props),this.cannedMetric(apigateway_canned_metrics_generated_1.ApiGatewayMetrics.integrationLatencyAverage,props)}metricLatency(props){return jsiiDeprecationWarnings.aws_cdk_lib_aws_cloudwatch_MetricOptions(props),this.cannedMetric(apigateway_canned_metrics_generated_1.ApiGatewayMetrics.latencyAverage,props)}_attachMethod(method){}_attachDeployment(deployment){}_attachStage(stage){this.cloudWatchAccount&&stage.node.addDependency(this.cloudWatchAccount)}_configureCloudWatchRole(apiResource){const role=new iam.Role(this,"CloudWatchRole",{assumedBy:new iam.ServicePrincipal("apigateway.amazonaws.com"),managedPolicies:[iam.ManagedPolicy.fromAwsManagedPolicyName("service-role/AmazonAPIGatewayPushToCloudWatchLogs")]});this.cloudWatchAccount=new apigateway_generated_1.CfnAccount(this,"Account",{cloudWatchRoleArn:role.roleArn}),this.cloudWatchAccount.node.addDependency(apiResource)}configureCloudWatchRole(apiResource){this._configureCloudWatchRole(apiResource)}configureDeployment(props){this._configureDeployment(props)}_configureDeployment(props){var _d;if((_d=props.deploy)!==null&&_d!==void 0?_d:!0){this._latestDeployment=new deployment_1.Deployment(this,"Deployment",{description:"Automatically created by the RestApi construct",api:this,retainDeployments:props.retainDeployments});const stageName=props.deployOptions&&props.deployOptions.stageName||"prod";this.deploymentStage=new stage_1.Stage(this,`DeploymentStage.${stageName}`,{deployment:this._latestDeployment,...props.deployOptions}),new core_1.CfnOutput(this,"Endpoint",{exportName:props.endpointExportName,value:this.urlForPath()})}else if(props.deployOptions)throw new Error("Cannot set 'deployOptions' if 'deploy' is disabled")}_configureEndpoints(props){var _d,_e;if(props.endpointTypes&&props.endpointConfiguration)throw new Error("Only one of the RestApi props, endpointTypes or endpointConfiguration, is allowed");if(props.endpointConfiguration)return{types:props.endpointConfiguration.types,vpcEndpointIds:(_e=(_d=props.endpointConfiguration)===null||_d===void 0?void 0:_d.vpcEndpoints)===null||_e===void 0?void 0:_e.map(vpcEndpoint=>vpcEndpoint.vpcEndpointId)};if(props.endpointTypes)return{types:props.endpointTypes}}cannedMetric(fn,props){return new cloudwatch.Metric({...fn({ApiName:this.restApiName}),...props}).attachTo(this)}}exports.RestApiBase=RestApiBase,_a=JSII_RTTI_SYMBOL_1,RestApiBase[_a]={fqn:"aws-cdk-lib.aws_apigateway.RestApiBase",version:"2.20.0"};class SpecRestApi extends RestApiBase{constructor(scope,id,props){var _d,_e;super(scope,id,props);jsiiDeprecationWarnings.aws_cdk_lib_aws_apigateway_SpecRestApiProps(props);const apiDefConfig=props.apiDefinition.bind(this),resource=new apigateway_generated_1.CfnRestApi(this,"Resource",{name:this.restApiName,policy:props.policy,failOnWarnings:props.failOnWarnings,body:(_d=apiDefConfig.inlineDefinition)!==null&&_d!==void 0?_d:void 0,bodyS3Location:apiDefConfig.inlineDefinition?void 0:apiDefConfig.s3Location,endpointConfiguration:this._configureEndpoints(props),parameters:props.parameters});props.apiDefinition.bindAfterCreate(this,this),this.node.defaultChild=resource,this.restApiId=resource.ref,this.restApiRootResourceId=resource.attrRootResourceId,this.root=new RootResource(this,{},this.restApiRootResourceId),this._configureDeployment(props),props.domainName&&this.addDomainName("CustomDomain",props.domainName),((_e=props.cloudWatchRole)!==null&&_e!==void 0?_e:!0)&&this._configureCloudWatchRole(resource)}}exports.SpecRestApi=SpecRestApi,_b=JSII_RTTI_SYMBOL_1,SpecRestApi[_b]={fqn:"aws-cdk-lib.aws_apigateway.SpecRestApi",version:"2.20.0"};class RestApi extends RestApiBase{constructor(scope,id,props={}){var _d,_e;super(scope,id,props);this.methods=new Array,this.deployments=new Array,jsiiDeprecationWarnings.aws_cdk_lib_aws_apigateway_RestApiProps(props);const resource=new apigateway_generated_1.CfnRestApi(this,"Resource",{name:this.physicalName,description:props.description,policy:props.policy,failOnWarnings:props.failOnWarnings,minimumCompressionSize:props.minimumCompressionSize,binaryMediaTypes:props.binaryMediaTypes,endpointConfiguration:this._configureEndpoints(props),apiKeySourceType:props.apiKeySourceType,cloneFrom:(_d=props.cloneFrom)===null||_d===void 0?void 0:_d.restApiId,parameters:props.parameters,disableExecuteApiEndpoint:props.disableExecuteApiEndpoint});this.node.defaultChild=resource,this.restApiId=resource.ref,((_e=props.cloudWatchRole)!==null&&_e!==void 0?_e:!0)&&this._configureCloudWatchRole(resource),this._configureDeployment(props),props.domainName&&this.addDomainName("CustomDomain",props.domainName),this.root=new RootResource(this,props,resource.attrRootResourceId),this.restApiRootResourceId=resource.attrRootResourceId,this.node.addValidation({validate:()=>this.validateRestApi()})}static fromRestApiId(scope,id,restApiId){class Import extends RestApiBase{constructor(){super(...arguments);this.restApiId=restApiId}get root(){throw new Error("root is not configured when imported using `fromRestApiId()`. Use `fromRestApiAttributes()` API instead.")}get restApiRootResourceId(){throw new Error("restApiRootResourceId is not configured when imported using `fromRestApiId()`. Use `fromRestApiAttributes()` API instead.")}}return new Import(scope,id)}static fromRestApiAttributes(scope,id,attrs){jsiiDeprecationWarnings.aws_cdk_lib_aws_apigateway_RestApiAttributes(attrs);class Import extends RestApiBase{constructor(){super(...arguments);this.restApiId=attrs.restApiId,this.restApiRootResourceId=attrs.rootResourceId,this.root=new RootResource(this,{},this.restApiRootResourceId)}}return new Import(scope,id)}get url(){return this.urlForPath()}addModel(id,props){return jsiiDeprecationWarnings.aws_cdk_lib_aws_apigateway_ModelOptions(props),new model_1.Model(this,id,{...props,restApi:this})}addRequestValidator(id,props){return jsiiDeprecationWarnings.aws_cdk_lib_aws_apigateway_RequestValidatorOptions(props),new requestvalidator_1.RequestValidator(this,id,{...props,restApi:this})}_attachMethod(method){this.methods.push(method);for(const dep of this.deployments)dep._addMethodDependency(method)}_attachDeployment(deployment){this.deployments.push(deployment);for(const method of this.methods)deployment._addMethodDependency(method)}validateRestApi(){return this.methods.length===0?["The REST API doesn't contain any methods"]:[]}}exports.RestApi=RestApi,_c=JSII_RTTI_SYMBOL_1,RestApi[_c]={fqn:"aws-cdk-lib.aws_apigateway.RestApi",version:"2.20.0"};var ApiKeySourceType;(function(ApiKeySourceType2){ApiKeySourceType2.HEADER="HEADER",ApiKeySourceType2.AUTHORIZER="AUTHORIZER"})(ApiKeySourceType=exports.ApiKeySourceType||(exports.ApiKeySourceType={}));var EndpointType;(function(EndpointType2){EndpointType2.EDGE="EDGE",EndpointType2.REGIONAL="REGIONAL",EndpointType2.PRIVATE="PRIVATE"})(EndpointType=exports.EndpointType||(exports.EndpointType={}));class RootResource extends resource_1.ResourceBase{constructor(api,props,resourceId){super(api,"Default");this.parentResource=void 0,this.defaultIntegration=props.defaultIntegration,this.defaultMethodOptions=props.defaultMethodOptions,this.defaultCorsPreflightOptions=props.defaultCorsPreflightOptions,this.api=api,this.resourceId=resourceId,this.path="/",api instanceof RestApi&&(this._restApi=api),this.defaultCorsPreflightOptions&&this.addCorsPreflight(this.defaultCorsPreflightOptions)}get restApi(){if(!this._restApi)throw new Error("RestApi is not available on Resource not connected to an instance of RestApi. Use `api` instead");return this._restApi}}function ignore(_x){}
//# sourceMappingURL=restapi.js.map
