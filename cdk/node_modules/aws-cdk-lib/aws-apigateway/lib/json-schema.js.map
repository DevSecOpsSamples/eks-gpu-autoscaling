{
  "version": 3,
  "sources": ["json-schema.ts"],
  "sourcesContent": ["export enum JsonSchemaVersion {\n  /**\n   * In API Gateway models are defined using the JSON schema draft 4.\n   * @see https://tools.ietf.org/html/draft-zyp-json-schema-04\n   */\n  DRAFT4 = 'http://json-schema.org/draft-04/schema#',\n  DRAFT7 = 'http://json-schema.org/draft-07/schema#'\n}\n\nexport enum JsonSchemaType {\n  NULL = 'null',\n  BOOLEAN = 'boolean',\n  OBJECT = 'object',\n  ARRAY = 'array',\n  NUMBER = 'number',\n  INTEGER = 'integer',\n  STRING = 'string'\n}\n\n/**\n * Represents a JSON schema definition of the structure of a\n * REST API model. Copied from npm module jsonschema.\n *\n * @see http://json-schema.org/\n * @see https://github.com/tdegrunt/jsonschema\n */\nexport interface JsonSchema {\n  // Special keywords\n  readonly schema?: JsonSchemaVersion;\n  readonly id?: string;\n  readonly ref?: string;\n\n  // Common properties\n  readonly type?: JsonSchemaType | JsonSchemaType[];\n  readonly title?: string;\n  readonly description?: string;\n  readonly 'enum'?: any[];\n  /**\n   * The default value if you use an enum.\n   *\n   * @default - not set\n   */\n  readonly default?: any;\n  readonly format?: string;\n  readonly definitions?: { [name: string]: JsonSchema };\n\n  // Number or Integer\n  readonly multipleOf?: number;\n  readonly maximum?: number;\n  readonly exclusiveMaximum?: boolean;\n  readonly minimum?: number;\n  readonly exclusiveMinimum?: boolean;\n\n  // String\n  readonly maxLength?: number;\n  readonly minLength?: number;\n  readonly pattern?: string;\n\n  // Array\n  readonly items?: JsonSchema | JsonSchema[];\n  readonly additionalItems?: JsonSchema[];\n  readonly maxItems?: number;\n  readonly minItems?: number;\n  readonly uniqueItems?: boolean;\n  readonly contains?: JsonSchema | JsonSchema[];\n\n  // Object\n  readonly maxProperties?: number;\n  readonly minProperties?: number;\n  readonly required?: string[];\n  readonly properties?: { [name: string]: JsonSchema };\n  readonly additionalProperties?: JsonSchema | boolean;\n  readonly patternProperties?: { [name: string]: JsonSchema };\n  readonly dependencies?: { [name: string]: JsonSchema | string[] };\n  readonly propertyNames?: JsonSchema;\n\n  // Conditional\n  readonly allOf?: JsonSchema[];\n  readonly anyOf?: JsonSchema[];\n  readonly oneOf?: JsonSchema[];\n  readonly not?: JsonSchema;\n}\n"],
  "mappings": "4HAAA,GAAY,mBAAZ,AAAA,UAAY,mBAAiB,CAK3B,mBAAA,OAAA,0CACA,mBAAA,OAAA,yCACF,GAPY,kBAAA,QAAA,mBAAA,SAAA,kBAAiB,CAAA,EAAA,EAS7B,GAAY,gBAAZ,AAAA,UAAY,gBAAc,CACxB,gBAAA,KAAA,OACA,gBAAA,QAAA,UACA,gBAAA,OAAA,SACA,gBAAA,MAAA,QACA,gBAAA,OAAA,SACA,gBAAA,QAAA,UACA,gBAAA,OAAA,QACF,GARY,eAAA,QAAA,gBAAA,SAAA,eAAc,CAAA,EAAA",
  "names": []
}
