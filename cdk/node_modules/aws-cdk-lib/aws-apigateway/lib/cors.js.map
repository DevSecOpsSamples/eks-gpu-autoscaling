{
  "version": 3,
  "sources": ["cors.ts"],
  "sourcesContent": ["import { Duration } from '../../core';\nimport { ALL_METHODS } from './util';\n\nexport interface CorsOptions {\n  /**\n   * Specifies the response status code returned from the OPTIONS method.\n   *\n   * @default 204\n   */\n  readonly statusCode?: number;\n\n  /**\n   * Specifies the list of origins that are allowed to make requests to this\n   * resource. If you wish to allow all origins, specify `Cors.ALL_ORIGINS` or\n   * `[ * ]`.\n   *\n   * Responses will include the `Access-Control-Allow-Origin` response header.\n   * If `Cors.ALL_ORIGINS` is specified, the `Vary: Origin` response header will\n   * also be included.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin\n   */\n  readonly allowOrigins: string[];\n\n  /**\n   * The Access-Control-Allow-Headers response header is used in response to a\n   * preflight request which includes the Access-Control-Request-Headers to\n   * indicate which HTTP headers can be used during the actual request.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Headers\n   * @default Cors.DEFAULT_HEADERS\n   */\n  readonly allowHeaders?: string[];\n\n  /**\n   * The Access-Control-Allow-Methods response header specifies the method or\n   * methods allowed when accessing the resource in response to a preflight request.\n   *\n   * If `ANY` is specified, it will be expanded to `Cors.ALL_METHODS`.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Methods\n   * @default Cors.ALL_METHODS\n   */\n  readonly allowMethods?: string[];\n\n  /**\n   * The Access-Control-Allow-Credentials response header tells browsers whether\n   * to expose the response to frontend JavaScript code when the request's\n   * credentials mode (Request.credentials) is \"include\".\n   *\n   * When a request's credentials mode (Request.credentials) is \"include\",\n   * browsers will only expose the response to frontend JavaScript code if the\n   * Access-Control-Allow-Credentials value is true.\n   *\n   * Credentials are cookies, authorization headers or TLS client certificates.\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials\n   * @default false\n   */\n  readonly allowCredentials?: boolean;\n\n  /**\n   * The Access-Control-Max-Age response header indicates how long the results of\n   * a preflight request (that is the information contained in the\n   * Access-Control-Allow-Methods and Access-Control-Allow-Headers headers)\n   * can be cached.\n   *\n   * To disable caching altogether use `disableCache: true`.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Max-Age\n   * @default - browser-specific (see reference)\n   */\n  readonly maxAge?: Duration;\n\n  /**\n   * Sets Access-Control-Max-Age to -1, which means that caching is disabled.\n   * This option cannot be used with `maxAge`.\n   *\n   * @default - cache is enabled\n   */\n  readonly disableCache?: boolean;\n\n  /**\n   * The Access-Control-Expose-Headers response header indicates which headers\n   * can be exposed as part of the response by listing their names.\n   *\n   * If you want clients to be able to access other headers, you have to list\n   * them using the Access-Control-Expose-Headers header.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Expose-Headers\n   *\n   * @default - only the 6 CORS-safelisted response headers are exposed:\n   * Cache-Control, Content-Language, Content-Type, Expires, Last-Modified,\n   * Pragma\n   */\n  readonly exposeHeaders?: string[];\n}\n\nexport class Cors {\n  /**\n   * All HTTP methods.\n   */\n  public static readonly ALL_METHODS = ALL_METHODS;\n\n  /**\n   * All origins.\n   */\n  public static readonly ALL_ORIGINS = ['*'];\n\n  /**\n   * The set of default headers allowed for CORS and useful for API Gateway.\n   */\n  public static readonly DEFAULT_HEADERS = ['Content-Type', 'X-Amz-Date', 'Authorization', 'X-Api-Key', 'X-Amz-Security-Token', 'X-Amz-User-Agent'];\n\n  // utility class\n  private constructor() { }\n}\n"],
  "mappings": "gJACA,OAAA,QAAA,QAAA,EAgGA,MAAa,IAAI,CAiBf,aAAA,CAAA,EAjBF,QAAA,KAAA,6FAIyB,KAAA,YAAc,OAAA,YAKd,KAAA,YAAc,CAAC,GAAG,EAKlB,KAAA,gBAAkB,CAAC,eAAgB,aAAc,gBAAiB,YAAa,uBAAwB,kBAAkB",
  "names": []
}
