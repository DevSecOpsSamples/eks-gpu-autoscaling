{
  "version": 3,
  "sources": ["base-path-mapping.ts"],
  "sourcesContent": ["import { Resource, Token } from '../../core';\nimport { Construct } from 'constructs';\nimport { CfnBasePathMapping } from './apigateway.generated';\nimport { IDomainName } from './domain-name';\nimport { IRestApi, RestApiBase } from './restapi';\nimport { Stage } from './stage';\n\nexport interface BasePathMappingOptions {\n  /**\n   * The base path name that callers of the API must provide in the URL after\n   * the domain name (e.g. `example.com/base-path`). If you specify this\n   * property, it can't be an empty string.\n   *\n   * @default - map requests from the domain root (e.g. `example.com`). If this\n   * is undefined, no additional mappings will be allowed on this domain name.\n   */\n  readonly basePath?: string;\n\n  /**\n   * The Deployment stage of API\n   * [disable-awslint:ref-via-interface]\n   * @default - map to deploymentStage of restApi otherwise stage needs to pass in URL\n   */\n  readonly stage?: Stage;\n}\n\nexport interface BasePathMappingProps extends BasePathMappingOptions {\n  /**\n   * The DomainName to associate with this base path mapping.\n   */\n  readonly domainName: IDomainName;\n\n  /**\n   * The RestApi resource to target.\n   */\n  readonly restApi: IRestApi;\n}\n\n/**\n * This resource creates a base path that clients who call your API must use in\n * the invocation URL.\n *\n * Unless you're importing a domain with `DomainName.fromDomainNameAttributes()`,\n * you can use `DomainName.addBasePathMapping()` to define mappings.\n */\nexport class BasePathMapping extends Resource {\n  constructor(scope: Construct, id: string, props: BasePathMappingProps) {\n    super(scope, id);\n\n    if (props.basePath && !Token.isUnresolved(props.basePath)) {\n      if (!props.basePath.match(/^[a-zA-Z0-9$_.+!*'()-]+$/)) {\n        throw new Error(`A base path may only contain letters, numbers, and one of \"$-_.+!*'()\", received: ${props.basePath}`);\n      }\n    }\n\n    // if restApi is an owned API and it has a deployment stage, map all requests\n    // to that stage. otherwise, the stage will have to be specified in the URL.\n    const stage = props.stage ?? (props.restApi instanceof RestApiBase\n      ? props.restApi.deploymentStage\n      : undefined);\n\n    new CfnBasePathMapping(this, 'Resource', {\n      basePath: props.basePath,\n      domainName: props.domainName.domainName,\n      restApiId: props.restApi.restApiId,\n      stage: stage && stage.stageName,\n    });\n  }\n}\n"],
  "mappings": "sNAAA,OAAA,QAAA,YAAA,EAEA,uBAAA,QAAA,wBAAA,EAEA,UAAA,QAAA,WAAA,EAyCA,MAAa,uBAAwB,QAAA,QAAQ,CAC3C,YAAY,MAAkB,GAAY,MAA2B,QACnE,MAAM,MAAO,EAAE,EAEf,kFAAI,MAAM,UAAY,CAAC,OAAA,MAAM,aAAa,MAAM,QAAQ,GAClD,CAAC,MAAM,SAAS,MAAM,0BAA0B,EAClD,KAAM,IAAI,OAAM,qFAAqF,MAAM,UAAU,EAMzH,KAAM,OAAK,IAAG,MAAM,SAAK,MAAA,KAAA,OAAA,GAAK,MAAM,kBAAmB,WAAA,YACnD,MAAM,QAAQ,gBACd,OAEJ,GAAI,wBAAA,mBAAmB,KAAM,WAAY,CACvC,SAAU,MAAM,SAChB,WAAY,MAAM,WAAW,WAC7B,UAAW,MAAM,QAAQ,UACzB,MAAO,OAAS,MAAM,UACvB,GArBL,QAAA,gBAAA",
  "names": []
}
