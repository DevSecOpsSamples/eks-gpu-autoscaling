"use strict";var _a,_b,_c,_d;Object.defineProperty(exports,"__esModule",{value:!0}),exports.AssetApiDefinition=exports.InlineApiDefinition=exports.S3ApiDefinition=exports.ApiDefinition=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),s3_assets=require("../../aws-s3-assets"),cxapi=require("../../cx-api"),constructs_1=require("constructs");class ApiDefinition{static fromBucket(bucket,key,objectVersion){return jsiiDeprecationWarnings.aws_cdk_lib_aws_s3_IBucket(bucket),new S3ApiDefinition(bucket,key,objectVersion)}static fromInline(definition){return new InlineApiDefinition(definition)}static fromAsset(file,options){return jsiiDeprecationWarnings.aws_cdk_lib_aws_s3_assets_AssetOptions(options),new AssetApiDefinition(file,options)}bindAfterCreate(_scope,_restApi){jsiiDeprecationWarnings.aws_cdk_lib_aws_apigateway_IRestApi(_restApi)}}exports.ApiDefinition=ApiDefinition,_a=JSII_RTTI_SYMBOL_1,ApiDefinition[_a]={fqn:"aws-cdk-lib.aws_apigateway.ApiDefinition",version:"2.20.0"};class S3ApiDefinition extends ApiDefinition{constructor(bucket,key,objectVersion){super();if(this.key=key,this.objectVersion=objectVersion,jsiiDeprecationWarnings.aws_cdk_lib_aws_s3_IBucket(bucket),!bucket.bucketName)throw new Error("bucketName is undefined for the provided bucket");this.bucketName=bucket.bucketName}bind(_scope){return{s3Location:{bucket:this.bucketName,key:this.key,version:this.objectVersion}}}}exports.S3ApiDefinition=S3ApiDefinition,_b=JSII_RTTI_SYMBOL_1,S3ApiDefinition[_b]={fqn:"aws-cdk-lib.aws_apigateway.S3ApiDefinition",version:"2.20.0"};class InlineApiDefinition extends ApiDefinition{constructor(definition){super();if(this.definition=definition,typeof definition!="object")throw new Error("definition should be of type object");if(Object.keys(definition).length===0)throw new Error("JSON definition cannot be empty")}bind(_scope){return{inlineDefinition:this.definition}}}exports.InlineApiDefinition=InlineApiDefinition,_c=JSII_RTTI_SYMBOL_1,InlineApiDefinition[_c]={fqn:"aws-cdk-lib.aws_apigateway.InlineApiDefinition",version:"2.20.0"};class AssetApiDefinition extends ApiDefinition{constructor(path,options={}){super();this.path=path,this.options=options,jsiiDeprecationWarnings.aws_cdk_lib_aws_s3_assets_AssetOptions(options)}bind(scope){if(this.asset===void 0&&(this.asset=new s3_assets.Asset(scope,"APIDefinition",{path:this.path,...this.options})),this.asset.isZipArchive)throw new Error(`Asset cannot be a .zip file or a directory (${this.path})`);return{s3Location:{bucket:this.asset.s3BucketName,key:this.asset.s3ObjectKey}}}bindAfterCreate(scope,restApi){if(jsiiDeprecationWarnings.aws_cdk_lib_aws_apigateway_IRestApi(restApi),!scope.node.tryGetContext(cxapi.ASSET_RESOURCE_METADATA_ENABLED_CONTEXT))return;if(!this.asset)throw new Error("bindToResource() must be called after bind()");const child=constructs_1.Node.of(restApi).defaultChild;child.addMetadata(cxapi.ASSET_RESOURCE_METADATA_PATH_KEY,this.asset.assetPath),child.addMetadata(cxapi.ASSET_RESOURCE_METADATA_PROPERTY_KEY,"BodyS3Location")}}exports.AssetApiDefinition=AssetApiDefinition,_d=JSII_RTTI_SYMBOL_1,AssetApiDefinition[_d]={fqn:"aws-cdk-lib.aws_apigateway.AssetApiDefinition",version:"2.20.0"};
//# sourceMappingURL=api-definition.js.map
