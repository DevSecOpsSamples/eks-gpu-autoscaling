import { Construct } from "constructs";
import { ClusterInfo } from '../../spi';
import { HelmAddOn, HelmAddOnUserProps } from '../helm-addon';
/**
 * Configuration options for the add-on
 */
interface KarpenterAddOnProps extends HelmAddOnUserProps {
    /**
     * Specs for a Provisioner (Optional) - If not provided, the add-on will
     * deploy a Provisioner with default values.
     */
    provisionerSpecs?: {
        'node.kubernetes.io/instance-type'?: string[];
        'topology.kubernetes.io/zone'?: string[];
        'kubernetes.io/arch'?: string[];
        'karpenter.sh/capacity-type'?: string[];
    };
    /**
     * Tags needed for subnets - Subnet tags and security group tags are required for the provisioner to be created
     */
    subnetTags?: {
        [key: string]: string;
    };
    /**
     * Tags needed for security groups - Subnet tags and security group tags are required for the provisioner to be created
     */
    securityGroupTags?: {
        [key: string]: string;
    };
}
/**
 * Implementation of the Karpenter add-on
 */
export declare class KarpenterAddOn extends HelmAddOn {
    readonly options: KarpenterAddOnProps;
    constructor(props?: KarpenterAddOnProps);
    deploy(clusterInfo: ClusterInfo): Promise<Construct>;
    /**
     * Helper function to convert a key-pair values of provisioner spec configurations
     * To appropriate json format for addManifest function
     * @param specs
     * @returns
     * */
    protected convertToSpec(specs: {
        [key: string]: string[];
    }): any[];
}
export {};
