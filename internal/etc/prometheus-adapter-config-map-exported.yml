{
	"config.yaml": "rules:
    - seriesQuery: '{uuid!=\"\"}'
      resources:
        overrides:
          node_name: {resource: \"node\"}
          pod_name: {resource: \"pod\"}
          namespace_name: {resource: \"namespace\"}
      name:
        matches: ^DCGM_FI_DEV_GPU__(.*)$
        as: \"${1}_AVG\"
      metricsQuery: ceil(avg_over_time(<<.Series>>{<<.LabelMatchers>>}[15s]))
		- seriesQuery: '{__name__=~\"^container_.*\",container!=\"POD\",namespace!=\"\",pod!=\"\"}'
		  seriesFilters: []
		  resources:
		    overrides:
		      namespace:
		        resource: namespace
		      pod:
		        resource: pod
		  name:
		    matches: ^container_(.*)_seconds_total$
		    as: \"\"
		  metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>,container!=\"POD\"}[5m]))
		    by (<<.GroupBy>>)
		- seriesQuery: '{__name__=~\"^container_.*\",container!=\"POD\",namespace!=\"\",pod!=\"\"}'
		  seriesFilters:
		  - isNot: ^container_.*_seconds_total$
		  resources:
		    overrides:
		      namespace:
		        resource: namespace
		      pod:
		        resource: pod
		  name:
		    matches: ^container_(.*)_total$
		    as: \"\"
		  metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>,container!=\"POD\"}[5m]))
		    by (<<.GroupBy>>)
		- seriesQuery: '{__name__=~\"^container_.*\",container!=\"POD\",namespace!=\"\",pod!=\"\"}'
		  seriesFilters:
		  - isNot: ^container_.*_total$
		  resources:
		    overrides:
		      namespace:
		        resource: namespace
		      pod:
		        resource: pod
		  name:
		    matches: ^container_(.*)$
		    as: \"\"
		  metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>,container!=\"POD\"}) by (<<.GroupBy>>)
		- seriesQuery: '{namespace!=\"\",__name__!~\"^container_.*\"}'
		  seriesFilters:
		  - isNot: .*_total$
		  resources:
		    template: <<.Resource>>
		  name:
		    matches: \"\"
		    as: \"\"
		  metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>}) by (<<.GroupBy>>)
		- seriesQuery: '{namespace!=\"\",__name__!~\"^container_.*\"}'
		  seriesFilters:
		  - isNot: .*_seconds_total
		  resources:
		    template: <<.Resource>>
		  name:
		    matches: ^(.*)_total$
		    as: \"\"
		  metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>}[5m])) by (<<.GroupBy>>)
		- seriesQuery: '{namespace!=\"\",__name__!~\"^container_.*\"}'
		  seriesFilters: []
		  resources:
		    template: <<.Resource>>
		  name:
		    matches: ^(.*)_seconds_total$
		    as: \"\"
		  metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>}[5m])) by (<<.GroupBy>>)
		"
}